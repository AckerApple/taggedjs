{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./src/array.test.ts","webpack:///./src/basic.test.ts","webpack:///./src/child.test.ts","webpack:///./src/content.test.ts","webpack:///./src/counters.test.ts","webpack:///./src/elmSelectors.ts","webpack:///./src/expect.html.ts","webpack:///./src/expect.ts","webpack:///./src/funInProps.test.ts","webpack:///./src/last.test.ts","webpack:///./src/mirror.test.ts","webpack:///./src/oneRender.test.ts","webpack:///./src/props.test.ts","webpack:///./src/providers.test.ts","webpack:///./src/start.test.ts","webpack:///./src/tagSwitch.test.ts","webpack:///./src/todos.test.ts","webpack:///./src/watch.test.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./node_modules/taggedjs/js/tag/ValueTypes.enum.js","webpack:///./node_modules/taggedjs/js/isInstance.js","webpack:///./node_modules/taggedjs/js/subject/combineLatest.function.js","webpack:///./node_modules/taggedjs/js/subject/subject.utils.js","webpack:///./node_modules/taggedjs/js/subject/Subject.class.js","webpack:///./node_modules/taggedjs/js/subject/ValueSubject.js","webpack:///./node_modules/taggedjs/js/tag/getSupportInCycle.function.js","webpack:///./node_modules/taggedjs/js/state/setUse.function.js","webpack:///./node_modules/taggedjs/js/errors.js","webpack:///./node_modules/taggedjs/js/state/state.utils.js","webpack:///./node_modules/taggedjs/js/state/syncStates.function.js","webpack:///./node_modules/taggedjs/js/state/state.function.js","webpack:///./node_modules/taggedjs/js/state/watch.function.js","webpack:///./node_modules/taggedjs/js/state/subject.function.js","webpack:///./node_modules/taggedjs/js/state/letState.function.js","webpack:///./node_modules/taggedjs/js/deepFunctions.js","webpack:///./node_modules/taggedjs/js/state/providers.js","webpack:///./node_modules/taggedjs/js/tag/isLikeTags.function.js","webpack:///./node_modules/taggedjs/js/tag/tagRunner.js","webpack:///./node_modules/taggedjs/js/tag/render/renderTagOnly.function.js","webpack:///./node_modules/taggedjs/js/tag/Tag.class.js","webpack:///./node_modules/taggedjs/js/tag/destroyTag.function.js","webpack:///./node_modules/taggedjs/js/tag/checkDestroyPrevious.function.js","webpack:///./node_modules/taggedjs/js/tag/getValueType.function.js","webpack:///./node_modules/taggedjs/js/tag/cloneValueArray.function.js","webpack:///./node_modules/taggedjs/js/tag/destroy.support.js","webpack:///./node_modules/taggedjs/js/tag/TemplaterResult.class.js","webpack:///./node_modules/taggedjs/js/tag/kidsToTagArraySubject.function.js","webpack:///./node_modules/taggedjs/js/tag/update/TagJsSubject.class.js","webpack:///./node_modules/taggedjs/js/tag/update/processNewValue.function.js","webpack:///./node_modules/taggedjs/js/interpolations/specialAttribute.js","webpack:///./node_modules/taggedjs/js/tag/hasPropChanges.function.js","webpack:///./node_modules/taggedjs/js/tag/update/processTagResult.function.js","webpack:///./node_modules/taggedjs/js/tag/update/processTag.function.js","webpack:///./node_modules/taggedjs/js/tag/update/processSubjectComponent.function.js","webpack:///./node_modules/taggedjs/js/tag/render/renderSubjectComponent.function.js","webpack:///./node_modules/taggedjs/js/alterProp.function.js","webpack:///./node_modules/taggedjs/js/tag/update/updateExistingTagComponent.function.js","webpack:///./node_modules/taggedjs/js/tag/hasSupportChanged.function.js","webpack:///./node_modules/taggedjs/js/interpolations/bindSubjectCallback.function.js","webpack:///./node_modules/taggedjs/js/interpolations/processAttribute.function.js","webpack:///./node_modules/taggedjs/js/interpolations/interpolateAttributes.js","webpack:///./node_modules/taggedjs/js/interpolations/scanTextAreaValue.function.js","webpack:///./node_modules/taggedjs/js/tag/update/processTagArray.js","webpack:///./node_modules/taggedjs/js/updateBeforeTemplate.function.js","webpack:///./node_modules/taggedjs/js/tag/update/processRegularValue.function.js","webpack:///./node_modules/taggedjs/js/tag/update/processFirstSubjectValue.function.js","webpack:///./node_modules/taggedjs/js/tag/update/oneRenderToSupport.function.js","webpack:///./node_modules/taggedjs/js/tag/setTagPlaceholder.function.js","webpack:///./node_modules/taggedjs/js/tag/update/updateExistingValue.function.js","webpack:///./node_modules/taggedjs/js/interpolations/interpolateTemplate.js","webpack:///./node_modules/taggedjs/js/interpolations/subscribeToTemplate.function.js","webpack:///./node_modules/taggedjs/js/interpolations/elementInitCheck.js","webpack:///./node_modules/taggedjs/js/interpolations/interpolateContentTemplates.js","webpack:///./node_modules/taggedjs/js/interpolations/interpolateElement.js","webpack:///./node_modules/taggedjs/js/interpolations/interpolations.js","webpack:///./node_modules/taggedjs/js/tag/Support.class.js","webpack:///./node_modules/taggedjs/js/interpolations/afterInterpolateElement.function.js","webpack:///./node_modules/taggedjs/js/buildClones.function.js","webpack:///./node_modules/taggedjs/js/tag/update/updateContextItem.function.js","webpack:///./node_modules/taggedjs/js/tag/elementDestroyCheck.function.js","webpack:///./node_modules/taggedjs/js/tag/render/softDestroySupport.function.js","webpack:///./node_modules/taggedjs/js/tag/render/renderWithSupport.function.js","webpack:///./node_modules/taggedjs/js/tag/render/destroyUnlikeTags.function.js","webpack:///./node_modules/taggedjs/js/state/handleProviderChanges.function.js","webpack:///./node_modules/taggedjs/js/tag/render/renderExistingTag.function.js","webpack:///./node_modules/taggedjs/js/state/providersChangeCheck.function.js","webpack:///./node_modules/taggedjs/js/tag/render/renderSupport.function.js","webpack:///./node_modules/taggedjs/js/state/callbackStateUpdate.function.js","webpack:///./node_modules/taggedjs/js/state/callbackMaker.function.js","webpack:///./node_modules/taggedjs/js/state/onInit.js","webpack:///./node_modules/taggedjs/js/state/onDestroy.js","webpack:///./node_modules/taggedjs/js/state/children.js","webpack:///./node_modules/taggedjs/js/tag/tag.utils.js","webpack:///./node_modules/taggedjs/js/tag/html.js","webpack:///./node_modules/taggedjs/js/tag/getTagWrap.function.js","webpack:///./node_modules/taggedjs/js/tag/tag.js","webpack:///./node_modules/taggedjs/js/tag/tagElement.js","webpack:///./node_modules/taggedjs/js/index.js","webpack:///./src/attributeDebug.component.ts","webpack:///./src/ContentDebug.component.ts","webpack:///./node_modules/taggedjs/js/subject/will.functions.js","webpack:///./src/tableDebug.component.ts","webpack:///./src/intervalDebug.ts","webpack:///./node_modules/taggedjs-animate-css/js/createFx.function.js","webpack:///./node_modules/taggedjs-animate-css/js/index.js","webpack:///./src/tagJsDebug.ts","webpack:///./src/renderCount.component.ts","webpack:///./src/tagSwitchDebug.component.ts","webpack:///./src/mirroring.tag.tsx","webpack:///./src/innerHtmlTests.ts","webpack:///./src/childTests.ts","webpack:///./src/mouseover.tag.ts","webpack:///./src/countersDebug.ts","webpack:///./src/providerDebug.ts","webpack:///./src/watchTesting.tag.ts","webpack:///./src/oneRender.tag.ts","webpack:///./src/funInProps.tag.ts","webpack:///./src/todo/components/input.ts","webpack:///./src/todo/constants.ts","webpack:///./src/todo/components/item.ts","webpack:///./src/todo/components/main.ts","webpack:///./src/todo/components/footer.ts","webpack:///./src/todo/reducer.ts","webpack:///./src/todo/app.ts","webpack:///./src/todo/components/header.ts","webpack:///./src/PropsDebug.tag.ts","webpack:///./node_modules/taggedjs/js/state/letProp.function.js","webpack:///./src/arrayTests.ts","webpack:///./src/app.tag.ts","webpack:///./src/tests.ts","webpack:///./src/isolatedApp.ts","webpack:///./src/isolatedApp.test.ts","webpack:///./src/app.function.ts"],"sourcesContent":["import { byId, elmCount } from \"./elmSelectors\";\nimport { describe, expect, it } from \"./expect\";\ndescribe('array testing', () => {\n    it('array basics', () => {\n        expect(elmCount('#array-test-push-item')).toBe(1);\n        const insideCount = elmCount('#score-data-0-1-inside-button');\n        expect(insideCount).toBe(0);\n        expect(elmCount('#score-data-0-1-outside-button')).toBe(0);\n        byId('array-test-push-item').click();\n        expect(elmCount('#score-data-0-1-inside-button')).toBe(1);\n        expect(elmCount('#score-data-0-1-outside-button')).toBe(1);\n        const insideElm = byId('score-data-0-1-inside-button');\n        const insideDisplay = byId('score-data-0-1-inside-display');\n        let indexValue = insideDisplay.innerText;\n        const outsideElm = byId('score-data-0-1-outside-button');\n        const outsideDisplay = byId('score-data-0-1-outside-display');\n        const outsideValue = outsideDisplay.innerText;\n        expect(indexValue).toBe(outsideValue);\n        insideElm.click();\n        expect(insideDisplay.innerText).toBe(outsideDisplay.innerText);\n        expect(indexValue).toBe((Number(insideDisplay.innerText) - 1).toString());\n        expect(indexValue).toBe((Number(outsideDisplay.innerText) - 1).toString());\n        outsideElm.click();\n        expect(insideDisplay.innerText).toBe(outsideDisplay.innerText);\n        expect(indexValue).toBe((Number(insideDisplay.innerText) - 2).toString());\n        expect(indexValue).toBe((Number(outsideDisplay.innerText) - 2).toString());\n    });\n    it('🗑️ deletes', async () => {\n        expect(elmCount('#player-remove-promise-btn-0')).toBe(0);\n        expect(elmCount('#player-edit-btn-0')).toBe(1);\n        await byId('player-edit-btn-0').onclick();\n        expect(elmCount('#player-remove-promise-btn-0')).toBe(1);\n        const result = await byId('player-remove-promise-btn-0').onclick();\n        expect(result).toBe('promise-no-data-ever');\n        await delay(1000); // animation\n        expect(elmCount('#player-remove-promise-btn-0')).toBe(0);\n        expect(elmCount('#player-edit-btn-0')).toBe(0);\n    });\n});\nfunction delay(time) {\n    return new Promise((res) => setTimeout(res, time));\n}\n","import { byId } from \"./elmSelectors\";\nimport { expect, it } from \"./expect\";\nit('elements exists', () => {\n    expect(byId('h1-app')).toBeDefined();\n    const toggleTest = byId('toggle-test');\n    expect(toggleTest).toBeDefined();\n    expect(toggleTest.innerText).toBe('toggle test');\n});\nit('toggle test', () => {\n    const toggleTest = byId('toggle-test');\n    toggleTest.click();\n    expect(toggleTest.innerText).toBe('toggle test true');\n    toggleTest.click();\n    expect(toggleTest.innerText).toBe('toggle test');\n    const propsTextarea = byId('props-debug-textarea');\n    expect(propsTextarea.value.replace(/\\s/g, '')).toBe(`{\"test\":33,\"x\":\"y\"}`);\n});\n","import { it } from \"./expect\";\nimport { testCounterElements, testDuelCounterElements } from \"./expect.html\";\nit('child tests', () => {\n    testCounterElements('#innerHtmlPropsTest-button', '#innerHtmlPropsTest-display');\n    testCounterElements('#innerHtmlTest-counter-button', '#innerHtmlTest-counter-display');\n    testDuelCounterElements(['#childTests-button', '#childTests-display'], ['#child-as-prop-test-button', '#child-as-prop-test-display'], ['#innerHtmlPropsTest-childTests-button', '#innerHtmlPropsTest-childTests-display']);\n    testDuelCounterElements(['#childTests-button', '#childTests-display'], ['#innerHtmlTest-childTests-button', '#innerHtmlTest-childTests-display']);\n});\n","import { describe, it } from \"./expect\";\nimport { expectMatchedHtml } from \"./expect.html\";\ndescribe('content', () => {\n    it('basic', () => {\n        expectMatchedHtml('#content-subject-pipe-display0', '#content-subject-pipe-display1');\n        expectMatchedHtml('#content-combineLatest-pipe-display0', '#content-combineLatest-pipe-display1');\n    });\n    it('html', () => {\n        expectMatchedHtml('#content-combineLatest-pipeHtml-display0', '#content-combineLatest-pipeHtml-display1');\n    });\n});\n","import { byId, click, html } from \"./elmSelectors\";\nimport { describe, expect, it } from \"./expect\";\nimport { expectElmCount, testCounterElements } from \"./expect.html\";\ndescribe('counters', () => {\n    const slowCount = html('#🍄-slowChangeCount');\n    // tests can be run multiple times. Only the first time will this expect below work\n    const firstRun = slowCount === '0';\n    it('basics', () => {\n        const counterInput = byId('set-main-counter-input');\n        expect(counterInput).toBeDefined();\n        counterInput.value = '0';\n        counterInput.onkeyup({ target: counterInput });\n        const beforeRenderCount = Number(html('#counters_render_count'));\n        const beforeInnerRenderCount = Number(html('#inner_counters_render_count'));\n        expectElmCount('#conditional-counter', 0);\n        testCounterElements('#❤️-increase-counter', '#❤️-counter-display');\n        expect(html('#counters_render_count')).toBe((beforeRenderCount + 2).toString());\n        // the parent changed a value passed to child as a prop\n        expect(html('#inner_counters_render_count')).toBe((beforeInnerRenderCount + 2).toString());\n        testCounterElements('#❤️-inner-counter', '#❤️-inner-display');\n        expect(html('#counters_render_count')).toBe((beforeRenderCount + 4).toString());\n        // the child changed a value passed from parent as a prop\n        expect(html('#inner_counters_render_count')).toBe((beforeInnerRenderCount + 4).toString());\n        testCounterElements('#standalone-counter', '#standalone-display');\n        expect(html('#counters_render_count')).toBe((beforeRenderCount + (firstRun ? 6 : 6)).toString(), 'render count check failed');\n        // the child was not rendered again because props did not change so value should be less\n        expect(html('#inner_counters_render_count')).toBe((beforeInnerRenderCount + 4).toString());\n        expectElmCount('#conditional-counter', 1);\n        expectElmCount('#conditional-display', 1);\n        if (firstRun) {\n            expect(html('#conditional-display')).toBe('2');\n        }\n        testCounterElements('#conditional-counter', '#conditional-display');\n        // test again after higher elements have had reruns\n        testCounterElements('#❤️-inner-counter', '#❤️-inner-display');\n        if (firstRun) {\n            expect(html('#🪈-pipedSubject')).toBe('');\n            expect(html('#🪈-pipedSubject-2')).toBe('');\n        }\n        click('#🥦-subject-increase-counter');\n        const pipedSubDisplay = html('#🪈-pipedSubject');\n        const subjectCountDisplay = html('#🥦-subject-counter-display');\n        expect(pipedSubDisplay).toBe(subjectCountDisplay, `Expected #🪈-pipedSubject value(${pipedSubDisplay}) to match #🥦-subject-counter-display value(${subjectCountDisplay})`);\n        expect(html('#🪈-pipedSubject-2')).toBe(html('#🥦-subject-counter-display'));\n    });\n});\n","export function elmCount(selector) {\n    return document.querySelectorAll(selector).length;\n}\nexport function query(query) {\n    return document.querySelectorAll(query);\n}\nexport function focus(q) {\n    return query(q).forEach(elm => elm.focus());\n}\nexport function click(q) {\n    return [...query(q)].map(elm => elm.click());\n}\nexport function clickOne(q, index = 0) {\n    const element = query(q)[index];\n    return element.click();\n}\nexport function html(q) {\n    let html = '';\n    query(q).forEach(elm => html = html + elm.innerHTML);\n    return html;\n}\nexport function byId(id) {\n    return document.getElementById(id);\n}\nexport function htmlById(id) {\n    return document.getElementById(id).innerHTML;\n}\nexport function lastById(id) {\n    const elms = document.querySelectorAll('#' + id);\n    return elms[elms.length - 1];\n}\n","import { expect } from \"./expect\";\n/* all elements in each query must have the same html */\nexport function expectMatchedHtml(...queries) {\n    const elements = queries.reduce((all, query) => {\n        const elements = document.querySelectorAll(query);\n        all.push(...elements);\n        return all;\n    }, []);\n    expect(elements.length).toBeGreaterThan(0, 'Expected elements to be present in expectMatchedHtml() query but found none');\n    const lastElm = elements.pop();\n    const lastHtml = lastElm.innerHTML;\n    elements.every(elm => expect(lastHtml).toBe(elm.innerHTML, () => `expectMatchedHtml unmatched html - queries: ${queries.join(' - ')}`));\n}\nexport function expectHTML(query, innerHTML) {\n    const elements = document.querySelectorAll(query);\n    elements.forEach(element => expect(element.innerHTML).toBe(innerHTML, () => `Expected element ${query} innerHTML to be -->${innerHTML}<-- but it was -->${element.innerHTML}<--`));\n}\nexport function expectElmCount(query, count, message) {\n    const elements = document.querySelectorAll(query);\n    const found = elements.length;\n    message = message || `Expected ${count} elements to match query ${query} but found ${found}`;\n    expect(found).toBe(count, message);\n    return elements;\n}\nexport function testDuelCounterElements(...sets\n// [button0, display0]: [string, string], // button, display\n// [button1, display1]: [string, string], // button, display\n) {\n    const [button0, display0] = sets.shift();\n    let query = expectElmCount(display0, 1);\n    let buttonQuery = expectElmCount(button0, 1);\n    const display0Element = query[0];\n    const ip0 = display0Element.innerText;\n    testCounterSelectedElements(buttonQuery, query, { elementCountExpected: 1 }, button0, display0);\n    let increase = 2;\n    sets.forEach(([button1, display1]) => {\n        query = expectElmCount(display1, 1);\n        buttonQuery = expectElmCount(button1, 1);\n        let display1Element = query[0];\n        let ip1Check = display1Element.innerText;\n        const value = (Number(ip0) + increase).toString();\n        expect(ip1Check).toBe(value, () => `Expected second increase provider to be increased to ${ip0} but got ${ip1Check}`);\n        testCounterSelectedElements(buttonQuery, query, { elementCountExpected: 1 }, button0, display0);\n        display1Element = query[0];\n        ip1Check = display1Element.innerText;\n        const secondIncrease = increase + 2;\n        expect(ip1Check).toBe((Number(ip0) + secondIncrease).toString(), () => `Expected ${display1} innerText to be ${Number(ip0) + secondIncrease} but instead it is ${ip1Check}`);\n        increase = increase + 2;\n    });\n}\nfunction testCounterSelectedElements(counterButtons, counterDisplays, { elementCountExpected } = {\n    elementCountExpected: 1\n}, counterButtonSelect, counterDisplaySelect) {\n    expect(counterButtons.length).toBe(elementCountExpected, () => `Expected ${counterButtonSelect} to be ${elementCountExpected} elements but is instead ${counterButtons.length}`);\n    expect(counterDisplays.length).toBe(elementCountExpected, () => `Expected ${counterDisplaySelect} to be ${elementCountExpected} elements but is instead ${counterDisplays.length}`);\n    counterButtons.forEach((increaseCounter, index) => {\n        const counterDisplay = document.querySelectorAll(counterDisplaySelect)[index]; // counterDisplays[index]\n        expect(document.body.contains(counterDisplay)).toBe(true, `The selected element ${counterDisplaySelect} is no longer an element on the document body before clicking ${counterButtonSelect}`);\n        let counterValue = Number(counterDisplay?.innerText);\n        increaseCounter.click();\n        expect(counterDisplay).toBeDefined();\n        expect(document.body.contains(counterDisplay)).toBe(true, `The selected element ${counterDisplaySelect} is no longer an element on the document body after clicking ${counterButtonSelect}`);\n        let oldCounterValue = counterValue + 1;\n        counterValue = Number(counterDisplay.innerText);\n        expect(document.body.contains(counterDisplay)).toBe(true);\n        expect(oldCounterValue).toBe(counterValue, () => `Counter test 1 of 2 expected ${counterDisplaySelect} to be value ${oldCounterValue} but it is ${counterValue}`);\n        increaseCounter.click();\n        counterValue = Number(counterDisplay?.innerText);\n        ++oldCounterValue;\n        expect(oldCounterValue).toBe(counterValue, () => `Counter test 2 of 2 expected ${counterDisplaySelect} to increase value to ${oldCounterValue} but it is ${counterValue}`);\n    });\n}\n/** increases counter by two */\nexport function testCounterElements(counterButtonSelect, counterDisplaySelect, { elementCountExpected } = {\n    elementCountExpected: 1\n}) {\n    const increaseCounters = document.querySelectorAll(counterButtonSelect);\n    const counterDisplays = document.querySelectorAll(counterDisplaySelect);\n    return testCounterSelectedElements(increaseCounters, counterDisplays, { elementCountExpected }, counterButtonSelect, counterDisplaySelect);\n}\n","const onlyTests = [];\nlet tests = [];\nlet tab = 0;\nexport function describe(label, run) {\n    tests.push(async () => {\n        const oldTests = tests;\n        tests = [];\n        try {\n            console.debug('  '.repeat(tab) + '↘ ' + label);\n            ++tab;\n            await run();\n            await runTests(tests);\n            --tab;\n        }\n        catch (error) {\n            --tab;\n            // console.debug(' '.repeat(tab) + '❌ ' + label)\n            throw error;\n        }\n        finally {\n            tests = oldTests;\n        }\n    });\n}\ndescribe.skip = (label, run) => {\n    console.debug('⏭️ Skipped ' + label);\n};\ndescribe.only = (label, run) => {\n    onlyTests.push(async () => {\n        const oldTests = tests;\n        tests = [];\n        try {\n            console.debug('  '.repeat(tab) + '↘ ' + label);\n            ++tab;\n            await run();\n            await runTests(tests);\n            --tab;\n        }\n        catch (error) {\n            --tab;\n            // console.debug(' '.repeat(tab) + '❌ ' + label)\n            throw error;\n        }\n        finally {\n            tests = oldTests;\n        }\n    });\n};\nexport function it(label, run) {\n    tests.push(async () => {\n        try {\n            const start = Date.now();\n            await run();\n            const time = Date.now() - start;\n            console.debug(' '.repeat(tab) + `✅ ${label} - ${time}ms`);\n        }\n        catch (error) {\n            console.debug(' '.repeat(tab) + '❌ ' + label);\n            throw error;\n        }\n    });\n}\nit.only = (label, run) => {\n    onlyTests.push(async () => {\n        try {\n            const start = Date.now();\n            await run();\n            const time = Date.now() - start;\n            console.debug(`✅ ${label} - ${time}ms`);\n        }\n        catch (error) {\n            console.debug('❌ ' + label);\n            throw error;\n        }\n    });\n};\nit.skip = (label, run) => {\n    console.debug('⏭️ Skipped ' + label);\n};\nfunction clearTests() {\n    onlyTests.length = 0;\n    tests.length = 0;\n}\nexport async function execute() {\n    if (onlyTests.length) {\n        return runTests(onlyTests);\n    }\n    return runTests(tests);\n}\nasync function runTests(tests) {\n    for (const test of tests) {\n        try {\n            await test();\n        }\n        catch (err) {\n            console.error(`Error testing ${test.name}`);\n            clearTests();\n            throw err;\n        }\n    }\n    clearTests();\n}\nexport function expect(expected) {\n    return {\n        toBeDefined: (customMessage) => {\n            if (expected !== undefined && expected !== null) {\n                return;\n            }\n            if (customMessage instanceof Function) {\n                customMessage = customMessage();\n            }\n            const message = customMessage || `Expected ${JSON.stringify(expected)} to be defined`;\n            console.error(message, { expected });\n            throw new Error(message);\n        },\n        toBe: (received, customMessage) => {\n            if (expected === received) {\n                return;\n            }\n            if (customMessage instanceof Function) {\n                customMessage = customMessage();\n            }\n            const message = customMessage || `Expected ${typeof (expected)} ${JSON.stringify(expected)} to be ${typeof (received)} ${JSON.stringify(received)}`;\n            console.error(message, { received, expected });\n            throw new Error(message);\n        },\n        toBeGreaterThan: (amount, customMessage) => {\n            const expectNum = expected;\n            if (!isNaN(expectNum) && expectNum > amount) {\n                return;\n            }\n            const message = customMessage || `Expected ${typeof (expected)} ${JSON.stringify(expected)} to be greater than amount`;\n            console.error(message, { amount, expected });\n            throw new Error(message);\n        },\n        toBeLessThan: (amount, customMessage) => {\n            const expectNum = expected;\n            if (!isNaN(expectNum) && expectNum < amount) {\n                return;\n            }\n            const message = customMessage || `Expected ${typeof (expected)} ${JSON.stringify(expected)} to be less than amount`;\n            console.error(message, { amount, expected });\n            throw new Error(message);\n        }\n    };\n}\n","import { click, html } from \"./elmSelectors\";\nimport { expect, it } from \"./expect\";\nimport { testCounterElements } from \"./expect.html\";\nit('function in props', () => {\n    testCounterElements('#fun_in_prop1', '#fun_in_prop_display');\n    testCounterElements('#fun_in_prop2', '#fun_in_prop_display');\n    testCounterElements('#fun_in_prop3', '#fun_in_prop_display');\n    expect(html('#main_wrap_state')).toBe('taggjedjs-wrapped');\n    click('#toggle-fun-in-child');\n    click('#fun-parent-button');\n    expect(html('#main_wrap_state')).toBe('nowrap');\n    click('#toggle-fun-in-child');\n    click('#fun-parent-button');\n    expect(html('#main_wrap_state')).toBe('taggjedjs-wrapped');\n});\n","import { expect, it } from \"./expect\";\nit('has no templates', () => {\n    expect(document.getElementsByTagName('template').length).toBe(0, 'expected no templates on document');\n});\n","import { byId, htmlById } from \"./elmSelectors\";\nimport { expect, it } from \"./expect\";\nimport { expectElmCount, expectMatchedHtml } from \"./expect.html\";\nit('🪞 mirror testing', () => {\n    expectElmCount('#mirror-counter-display', 2);\n    expectElmCount('#mirror-counter-button', 2);\n    const counter = Number(htmlById('mirror-counter-display'));\n    byId('mirror-counter-button').click();\n    expect(counter + 1).toBe(Number(htmlById('mirror-counter-display')));\n    expectElmCount('#mirror-counter-display', 2);\n    expectMatchedHtml('#mirror-counter-display');\n});\n","import { html } from \"./elmSelectors\";\nimport { expect, it } from \"./expect\";\nimport { testCounterElements } from \"./expect.html\";\nit('oneRender', () => {\n    expect(html('#oneRender_tag_ts_render_count')).toBe('1');\n    testCounterElements('#👍-counter-button', '#👍-counter-display');\n    testCounterElements('#👍🔨-counter-button', '#👍🔨-counter-display');\n    testCounterElements('#👍🔨-counter-button', '#👍🔨-counter-subject-display');\n    expect(html('#oneRender_tag_ts_render_count')).toBe('1');\n});\n","import { byId, html, htmlById, query } from \"./elmSelectors\";\nimport { describe, expect, it } from \"./expect\";\nimport { expectHTML, expectMatchedHtml, testCounterElements, testDuelCounterElements } from \"./expect.html\";\ndescribe('props', () => {\n    it('test duels', () => {\n        testDuelCounterElements(['#propsDebug-🥩-0-button', '#propsDebug-🥩-0-display'], ['#propsDebug-🥩-1-button', '#propsDebug-🥩-1-display']);\n    });\n    it('child prop communications', () => {\n        testDuelCounterElements(['#propsDebug-🥩-1-button', '#propsDebug-🥩-1-display'], ['#propsOneLevelFunUpdate-🥩-button', '#propsOneLevelFunUpdate-🥩-display']);\n    });\n    it('letProp', () => {\n        // local and outside currently match\n        expectMatchedHtml('#propsDebug-🥩-0-display', '#propsDebug-🥩-2-display');\n        const propCounter = Number(html('#propsDebug-🥩-0-display'));\n        const result = query('#propsDebug-🥩-2-button')[0].onclick();\n        expect(result).toBe('no-data-ever');\n        // outer should not have changed\n        expect(html('#propsDebug-🥩-0-display')).toBe(propCounter.toString());\n        expect(html('#propsDebug-🥩-2-display')).toBe((propCounter + 1).toString());\n    });\n    it('basics', () => {\n        // the number of times the watch counted a change happens to match that increase counter\n        const funUpdateValue = byId('propsOneLevelFunUpdate-🥩-display').innerHTML;\n        const changed = html('#propsDebug-🥩-change-display');\n        // test that watch runs onInit\n        expect(changed).toBe((Number(funUpdateValue) + 1).toString());\n        const ownerHTML = byId('propsDebug-🥩-0-display').innerHTML;\n        const parentHTML = byId('propsDebug-🥩-1-display').innerHTML;\n        const childHTML = byId('propsOneLevelFunUpdate-🥩-display').innerHTML;\n        const ownerNum = Number(ownerHTML);\n        const parentNum = Number(parentHTML);\n        const childNum = Number(childHTML);\n        expect(parentNum).toBe(childNum);\n        expect(ownerNum + 2).toBe(parentNum); // testing of setProp() doesn't change owner\n        byId('propsDebug-🥩-1-button').click();\n    });\n    it('props as functions', () => {\n        const syncCounter = Number(htmlById('sync-prop-number-display'));\n        // const syncCounter = Number( htmlById('sync-prop-child-display') )\n        expectMatchedHtml('#sync-prop-number-display', '#sync-prop-child-display');\n        byId('sync-prop-child-button').click();\n        expectHTML('#sync-prop-number-display', (syncCounter + 2).toString());\n        testCounterElements('#nothing-prop-counter-button', '#nothing-prop-counter-display');\n        expectHTML('#sync-prop-number-display', (syncCounter + 2).toString());\n        expectMatchedHtml('#sync-prop-counter-display', '#nothing-prop-counter-display');\n    });\n});\n","import { describe, it } from \"./expect\";\nimport { testDuelCounterElements } from \"./expect.html\";\ndescribe('providers', () => {\n    it('basics', () => {\n        testDuelCounterElements(['#increase-provider-🍌-0-button', '#increase-provider-🍌-0-display'], ['#increase-provider-🍌-1-button', '#increase-provider-🍌-1-display']);\n        testDuelCounterElements(['#increase-provider-upper-🌹-0-button', '#increase-provider-upper-🌹-0-display'], ['#increase-provider-upper-🌹-1-button', '#increase-provider-upper-🌹-1-display']);\n        testDuelCounterElements(['#increase-provider-🍀-0-button', '#increase-provider-🍀-0-display'], ['#increase-provider-🍀-1-button', '#increase-provider-🍀-1-display']);\n    });\n    it('inner outer debug', () => {\n        testDuelCounterElements(['#increase-prop-🐷-0-button', '#increase-prop-🐷-0-display'], ['#increase-prop-🐷-1-button', '#increase-prop-🐷-1-display']);\n        // change a counter in the parent element\n        testDuelCounterElements(['#increase-provider-🍀-0-button', '#increase-provider-🍀-0-display'], ['#increase-provider-🍀-1-button', '#increase-provider-🍀-1-display']);\n        // now ensure that this inner tag still operates correctly even though parent just rendered but i did not from that change\n        testDuelCounterElements(['#increase-prop-🐷-0-button', '#increase-prop-🐷-0-display'], ['#increase-prop-🐷-1-button', '#increase-prop-🐷-1-display']);\n    });\n});\n","import { expect, it } from \"./expect\";\nit('no template tags', () => {\n    const templateTags = document.getElementsByTagName('template');\n    expect(templateTags.length).toBe(0, 'Expected no templates to be on document');\n});\n","import { byId, elmCount } from \"./elmSelectors\";\nimport { describe, expect, it } from \"./expect\";\nimport { expectElmCount } from \"./expect.html\";\ndescribe('tagSwitching', () => {\n    it('0', () => {\n        expect(elmCount('#select-tag-above')).toBe(1, 'Expected select-tag-above element to be defined');\n        expect(elmCount('#tag-switch-dropdown')).toBe(1, 'Expected one #tag-switch-dropdown');\n        expect(elmCount('#tagSwitch-1-hello')).toBe(2, 'Expected two #tagSwitch-1-hello elements');\n        expect(elmCount('#tagSwitch-2-hello')).toBe(0);\n        expect(elmCount('#tagSwitch-3-hello')).toBe(0);\n    });\n    it('1', () => {\n        const dropdown = byId('tag-switch-dropdown');\n        dropdown.value = \"1\";\n        dropdown.onchange({ target: dropdown });\n        expectElmCount('#tagSwitch-1-hello', 5);\n        expect(elmCount('#tagSwitch-2-hello')).toBe(0);\n        expect(elmCount('#tagSwitch-3-hello')).toBe(0);\n        expect(elmCount('#select-tag-above')).toBe(0);\n    });\n    it('2', () => {\n        const dropdown = byId('tag-switch-dropdown');\n        dropdown.value = \"2\";\n        dropdown.onchange({ target: dropdown });\n        expectElmCount('#tagSwitch-1-hello', 2);\n        expectElmCount('#tagSwitch-2-hello', 4);\n        expect(elmCount('#tagSwitch-3-hello')).toBe(0);\n        expect(elmCount('#select-tag-above')).toBe(0);\n    });\n    it('3', () => {\n        const dropdown = byId('tag-switch-dropdown');\n        dropdown.value = \"3\";\n        dropdown.onchange({ target: dropdown });\n        expect(elmCount('#tagSwitch-1-hello')).toBe(0, 'Expected no hello 1s');\n        expect(elmCount('#tagSwitch-2-hello')).toBe(0);\n        expectElmCount('#tagSwitch-3-hello', 7);\n        expect(elmCount('#select-tag-above')).toBe(0);\n    });\n    it('4', () => {\n        const dropdown = byId('tag-switch-dropdown');\n        dropdown.value = \"\";\n        dropdown.onchange({ target: dropdown });\n        expectElmCount('#select-tag-above', 1);\n        expectElmCount('#tag-switch-dropdown', 1);\n        expectElmCount('#tagSwitch-1-hello', 2);\n        expectElmCount('#tagSwitch-2-hello', 0);\n        expectElmCount('#tagSwitch-3-hello', 0);\n    });\n});\n","import { byId, click, clickOne, focus, query } from \"./elmSelectors\";\nimport { describe, expect, it } from \"./expect\";\ndescribe('todos', () => {\n    const todoInput = byId('todo-input');\n    it('add one remove one', () => {\n        expect(query('button[data-testid=\"todo-item-button\"]').length).toBe(0);\n        todoInput.value = 'one';\n        todoInput.onkeydown({ key: 'Enter', target: todoInput });\n        expect(query('button[data-testid=\"todo-item-button\"]').length).toBe(1);\n        // delete it\n        click('button[data-testid=\"todo-item-button\"]');\n        expect(query('button[data-testid=\"todo-item-button\"]').length).toBe(0);\n    });\n    it('basic', () => {\n        todoInput.value = 'one';\n        todoInput.onkeydown({ key: 'Enter', target: todoInput });\n        // checkbox toggle\n        click('input[data-testid=\"todo-item-toggle\"]');\n        // delete it\n        click('button[data-testid=\"todo-item-button\"]');\n        expect(query('button[data-testid=\"todo-item-button\"]').length).toBe(0);\n        todoInput.value = 'one';\n        todoInput.onkeydown({ key: 'Enter', target: todoInput });\n        todoInput.value = 'two';\n        todoInput.onkeydown({ key: 'Enter', target: todoInput });\n        const todoToggle2 = query('input[data-testid=\"todo-item-toggle\"]')[1];\n        todoToggle2.click();\n        expect(todoToggle2.checked).toBe(true);\n        todoInput.value = 'three';\n        todoInput.onkeydown({ key: 'Enter', target: todoInput });\n        expect(query('input[data-testid=\"todo-item-toggle\"]').length).toBe(3);\n        // delete 0\n        clickOne('button[data-testid=\"todo-item-button\"]');\n        expect(query('input[data-testid=\"todo-item-toggle\"]').length).toBe(2);\n        // delete 0\n        clickOne('button[data-testid=\"todo-item-button\"]');\n        expect(query('input[data-testid=\"todo-item-toggle\"]').length).toBe(1);\n        // delete 0\n        clickOne('button[data-testid=\"todo-item-button\"]');\n        expect(query('input[data-testid=\"todo-item-toggle\"]').length).toBe(0);\n    });\n    it('editing', () => {\n        // create todo\n        todoInput.value = 'one';\n        todoInput.onkeydown({ key: 'Enter', target: todoInput });\n        // prepare to make new todo become editable\n        let event = new MouseEvent('dblclick', {\n            bubbles: true, // Event will bubble up through the DOM\n            cancelable: true, // Event can be cancelled\n            view: window // Default view (window)\n        });\n        // Dispatch the event on the specified element\n        query('label[data-testid=\"todo-item-label\"]')[0].dispatchEvent(event);\n        focus('input[data-testid=\"text-input\"]');\n        const editInput = query('input[data-testid=\"text-input\"]')[1];\n        editInput.value = 'two';\n        editInput.onkeydown({ key: 'Enter', target: editInput }); // cause save\n        expect(query('input[data-testid=\"text-input\"]').length).toBe(1);\n        // delete 0\n        clickOne('button[data-testid=\"todo-item-button\"]');\n        expect(query('label[data-testid=\"todo-item-label\"]').length).toBe(0);\n    });\n});\n","import { click, html, htmlById } from \"./elmSelectors\";\nimport { describe, expect, it } from \"./expect\";\nimport { expectMatchedHtml } from \"./expect.html\";\ndescribe('⌚️ watch tests', () => {\n    const slowCount = html('#🍄-slowChangeCount');\n    // tests can be run multiple times. Only the first time will this expect below work\n    const firstRun = slowCount === '0';\n    it('basic', () => {\n        const startCount = Number(htmlById('watch-testing-num-display'));\n        expectMatchedHtml('#watch-testing-num-display', '#🍄-slowChangeCount');\n        // always starts at \"false\"\n        expect(html('#🦷-truthChange')).toBe('false');\n        if (firstRun) {\n            expect(html('#🍄-watchPropNumSlow')).toBe('');\n            expect(html('#🦷-watchTruth')).toBe('false');\n            expect(html('#🦷-watchTruthAsSub')).toBe('undefined');\n        }\n        else {\n            expect(html('#🍄-watchPropNumSlow')).toBe(slowCount);\n            expect(Number(html('#🦷-watchTruth'))).toBeGreaterThan(Number(slowCount));\n            expect(html('#🦷-watchTruthAsSub')).toBe(html('#🦷-truthSubChangeCount'));\n        }\n        click('#watch-testing-num-button');\n        expectMatchedHtml('#watch-testing-num-display', '#🍄-slowChangeCount');\n        expectMatchedHtml('#🍄-watchPropNumSlow', '#🍄-slowChangeCount');\n        expect(html('#🍄‍🟫-subjectChangeCount')).toBe((startCount + 2).toString());\n        expectMatchedHtml('#🍄‍🟫-subjectChangeCount', '#🍄‍🟫-watchPropNumSubject');\n        const truthStartCount = Number(html('#🦷-truthChangeCount'));\n        click('#🦷-truthChange-button');\n        let newCount = (truthStartCount + 1).toString();\n        // its been changed to \"true\", that causes a change watch count increase\n        expect(html('#🦷-truthChange')).toBe('true');\n        expect(html('#🦷-watchTruth')).toBe(newCount);\n        expect(html('#🦷-truthChangeCount')).toBe(newCount);\n        click('#🦷-truthChange-button');\n        newCount = (truthStartCount + 1).toString();\n        // its been changed to back to \"false\", that does NOT cause a change watch count increase\n        expect(html('#🦷-truthChange')).toBe('false');\n        expect(html('#🦷-watchTruth')).toBe(newCount);\n        expect(html('#🦷-truthChangeCount')).toBe(newCount);\n        click('#🦷-truthChange-button');\n        // its been changed to \"true\", that causes a change watch count increase\n        newCount = (truthStartCount + 2).toString();\n        expect(html('#🦷-truthChange')).toBe('true');\n        expect(html('#🦷-watchTruth')).toBe(newCount);\n        expect(html('#🦷-truthChangeCount')).toBe(newCount);\n        click('#🦷-truthChange-button'); // reset so tests can pass every time\n        click('#🦷-reset-button'); // reset so tests can pass every time\n        expect(html('#🦷-watchTruthAsSub')).toBe(html('#🦷-watchTruth'));\n    });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const empty = '';\nexport const textNode = document.createTextNode(empty);\nexport var ValueTypes;\n(function (ValueTypes) {\n    ValueTypes[\"unknown\"] = \"unknown\";\n    ValueTypes[\"tag\"] = \"tag\";\n    ValueTypes[\"templater\"] = \"templater\";\n    ValueTypes[\"tagComponent\"] = \"tag-component\";\n    ValueTypes[\"object\"] = \"object\";\n    ValueTypes[\"tagArray\"] = \"tag-array\";\n    ValueTypes[\"subject\"] = \"subject\";\n    ValueTypes[\"tagJsSubject\"] = \"tagJsSubject\";\n    ValueTypes[\"oneRender\"] = \"oneRender\";\n    ValueTypes[\"date\"] = \"date\";\n    ValueTypes[\"string\"] = \"string\";\n    ValueTypes[\"number\"] = \"number\";\n    ValueTypes[\"boolean\"] = \"boolean\";\n    ValueTypes[\"function\"] = \"function\";\n    ValueTypes[\"undefined\"] = \"undefined\";\n})(ValueTypes || (ValueTypes = {}));\n//# sourceMappingURL=ValueTypes.enum.js.map","import { ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isStaticTag(value) {\n    return [\n        ValueTypes.tag,\n        ValueTypes.templater,\n    ].includes(value?.tagJsType);\n}\nexport function isTagTemplater(value) {\n    return value?.tagJsType === ValueTypes.templater;\n}\n// TODO: whats the difference between isTagClass and isTagComponent\nexport function isTagComponent(value) {\n    return value?.tagJsType === ValueTypes.tagComponent;\n}\nexport function isTagClass(value) {\n    return value?.tagJsType === ValueTypes.tag;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return (subject?.isSubject === true || subject?.subscribe) ? true : false; // subject?.isSubject === true || \n}\nexport function isTagArray(value) {\n    return value instanceof Array && value.every(x => [\n        ValueTypes.tag, ValueTypes.templater, ValueTypes.tag, ValueTypes.tagComponent\n    ].includes(x?.tagJsType));\n}\n//# sourceMappingURL=isInstance.js.map","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (let index = valuesSeen.length - 1; index >= 0; --index) {\n                if (!valuesSeen[index]) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => subject.subscribe(x => setValue(x, index + 1)));\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n//# sourceMappingURL=combineLatest.function.js.map","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject._value + 1);\n    const subscription = () => {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = () => {\n        removeSubFromArray(subscribers, callback); // each will be called when update comes in\n        // removeSubFromArray(Subject.globalSubs, callback) // 🔬 testing\n        Subject.globalSubCount$.next(countSubject._value - 1);\n        // any double unsubscribes will be ignored\n        subscription.unsubscribe = () => subscription;\n        // unsubscribe from any combined subjects\n        const subscriptions = subscription.subscriptions;\n        for (let index = subscriptions.length - 1; index >= 0; --index) {\n            subscriptions[index].unsubscribe();\n        }\n        return subscription;\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\n//# sourceMappingURL=subject.utils.js.map","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    _value;\n    constructor(value, \n    // private?\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    set = this.next;\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        const subs = [...this.subscribers]; // subs may change as we call callbacks\n        const length = subs.length;\n        for (let index = 0; index < length; ++index) {\n            const sub = subs[index];\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster */\n    toCallback(callback) {\n        const subscription = this.subscribe((x, _subscription) => {\n            subscription.unsubscribe();\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this._value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n}\n//# sourceMappingURL=Subject.class.js.map","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        defineValueOn(this);\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n//# sourceMappingURL=ValueSubject.js.map","import { setUse } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUse.memory.stateConfig.support;\n}\n//# sourceMappingURL=getSupportInCycle.function.js.map","const tagUse = [];\nexport function setUse(use) {\n    // must provide defaults\n    const useMe = {\n        beforeRender: use.beforeRender || (() => undefined),\n        beforeRedraw: use.beforeRedraw || (() => undefined),\n        afterRender: use.afterRender || (() => undefined),\n        beforeDestroy: use.beforeDestroy || (() => undefined),\n    };\n    setUse.tagUse.push(useMe);\n}\nsetUse.tagUse = tagUse;\nsetUse.memory = {};\n//# sourceMappingURL=setUse.function.js.map","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n//# sourceMappingURL=errors.js.map","import { StateMismatchError } from '../errors.js';\nimport { setUse } from './setUse.function.js';\nconst badLetState = 'letState function incorrectly used. Second item in array is not setting expected value.\\n\\n' +\n    'For \"let\" state use `let name = state(default)(x => [name, name = x])`\\n\\n' +\n    'For \"const\" state use `const name = state(default)()`\\n\\n' +\n    'Problem state:\\n';\nsetUse.memory.stateConfig = {\n    array: [], // state memory on the first render\n    // rearray: [] as State,\n};\nconst beforeRender = (support) => initState(support);\nsetUse({\n    beforeRender,\n    beforeRedraw: beforeRender,\n    afterRender: (support) => {\n        const state = support.state;\n        const config = setUse.memory.stateConfig;\n        const rearray = config.rearray;\n        if (rearray.length) {\n            if (rearray.length !== config.array.length) {\n                const message = `States lengths have changed ${rearray.length} !== ${config.array.length}. State tracking requires the same amount of function calls every render. Typically this errors is thrown when a state like function call occurs only for certain conditions or when a function is intended to be wrapped with a tag() call`;\n                const wrapper = support.templater?.wrapper;\n                const details = {\n                    oldStates: config.array,\n                    newStates: config.rearray,\n                    tagFunction: wrapper.parentWrap.original,\n                };\n                const error = new StateMismatchError(message, details);\n                console.warn(message, details);\n                throw error;\n            }\n        }\n        delete config.rearray; // clean up any previous runs\n        delete config.support;\n        state.length = 0;\n        state.push(...config.array);\n        for (let index = state.length - 1; index >= 0; --index) {\n            const item = state[index];\n            item.lastValue = getStateValue(item); // set last values\n        }\n        config.array = [];\n    }\n});\nexport function getStateValue(state) {\n    const callback = state.callback;\n    if (!callback) {\n        return state.defaultValue;\n    }\n    const [value, checkValue] = getCallbackValue(callback);\n    if (checkValue !== StateEchoBack) {\n        const message = badLetState + (callback ? callback.toString() : JSON.stringify(state)) + '\\n';\n        console.error(message, { state, callback, value, checkValue });\n        throw new Error(message);\n    }\n    return value;\n}\nexport class StateEchoBack {\n}\nfunction initState(support) {\n    const state = support.state;\n    const config = setUse.memory.stateConfig;\n    config.rearray = [];\n    const stateLength = state?.length;\n    if (stateLength) {\n        for (let index = 0; index < stateLength; ++index) {\n            getStateValue(state[index]);\n        }\n        config.rearray.push(...state);\n    }\n    config.support = support;\n}\nexport function getCallbackValue(callback) {\n    const oldState = callback(StateEchoBack); // get value and set to undefined\n    const [value] = oldState;\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n//# sourceMappingURL=state.utils.js.map","export function syncStates(stateFrom, stateTo) {\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const state = stateFrom[index];\n        const fromValue = state.get();\n        const callback = stateTo[index].callback;\n        if (callback) {\n            callback(fromValue); // set the value\n        }\n        stateTo[index].lastValue = fromValue; // record the value\n    }\n}\n//# sourceMappingURL=syncStates.function.js.map","import { setUse } from './setUse.function.js';\nimport { getStateValue } from './state.utils.js';\nimport { syncStates } from './syncStates.function.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    const config = setUse.memory.stateConfig;\n    let getSetMethod;\n    const rearray = config.rearray;\n    const restate = rearray[config.array.length];\n    if (restate) {\n        let oldValue = getStateValue(restate);\n        getSetMethod = ((x) => [oldValue, oldValue = x]);\n        const push = {\n            get: () => getStateValue(push),\n            callback: getSetMethod,\n            lastValue: oldValue,\n            defaultValue: restate.defaultValue,\n        };\n        config.array.push(push);\n        return oldValue;\n    }\n    // State first time run\n    const defaultFn = defaultValue instanceof Function ? defaultValue : () => defaultValue;\n    let initValue = defaultFn();\n    // the state is actually intended to be a function\n    if (initValue instanceof Function) {\n        const oldState = config.array;\n        const support = config.support;\n        const original = initValue;\n        initValue = ((...args) => {\n            const global = support.subject.global;\n            const newest = global.newest;\n            const newState = newest.state;\n            syncStates(newState, oldState);\n            const result = original(...args);\n            syncStates(oldState, newState);\n            return result;\n        });\n        initValue.original = original;\n    }\n    getSetMethod = ((x) => [initValue, initValue = x]);\n    const push = {\n        get: () => getStateValue(push),\n        callback: getSetMethod,\n        lastValue: initValue,\n        defaultValue: initValue,\n    };\n    config.array.push(push);\n    return initValue;\n}\n//# sourceMappingURL=state.function.js.map","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUse } from './setUse.function.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered. Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before = () => true, final = defaultFinally, } = {}) => {\n    let previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (!before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (!before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const firstSupport = state(() => getSupportInCycle());\n            const subject = state(() => new ValueSubject(undefined));\n            const method = (currentValues, callback) => {\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowSupport !== firstSupport) {\n                        const newestState = setUse.memory.stateConfig.array;\n                        syncStates(newestState, firstSupport.state);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n//# sourceMappingURL=watch.function.js.map","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUse } from './setUse.function.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(value, onSubscription) {\n    const oldestState = state(() => setUse.memory.stateConfig.array);\n    const nowSupport = getSupportInCycle();\n    return state(() => {\n        const subject = new Subject(value, onSubscription).pipe(x => {\n            syncStates(nowSupport.state, oldestState);\n            return x;\n        });\n        return subject;\n    });\n}\nsubject._value = (value) => {\n    const oldestState = state(() => setUse.memory.stateConfig.array);\n    const nowSupport = getSupportInCycle();\n    return state(() => {\n        const subject = new ValueSubject(value).pipe(x => {\n            syncStates(nowSupport.state, oldestState);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => setUse.memory.stateConfig.array);\n    const nowSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        syncStates(nowSupport.state, oldestState);\n        return x;\n    });\n}\nsubject.all = all;\n//# sourceMappingURL=subject.function.js.map","import { getStateValue } from './state.utils.js';\nimport { setUse } from './setUse.function.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function letState(defaultValue) {\n    const config = setUse.memory.stateConfig;\n    const rearray = config.rearray;\n    let getSetMethod;\n    const restate = rearray[config.array.length];\n    if (restate) {\n        let oldValue = getStateValue(restate);\n        getSetMethod = ((x) => [oldValue, oldValue = x]);\n        const push = {\n            get: () => getStateValue(push),\n            callback: getSetMethod,\n            lastValue: oldValue,\n            defaultValue: restate.defaultValue,\n        };\n        config.array.push(push);\n        return makeStateResult(oldValue, push);\n    }\n    // State first time run\n    const defaultFn = defaultValue instanceof Function ? defaultValue : () => defaultValue;\n    let initValue = defaultFn();\n    getSetMethod = ((x) => [initValue, initValue = x]);\n    const push = {\n        get: () => getStateValue(push),\n        callback: getSetMethod,\n        lastValue: initValue,\n        defaultValue: initValue,\n    };\n    config.array.push(push);\n    return makeStateResult(initValue, push);\n}\nfunction makeStateResult(initValue, push) {\n    // return initValue\n    const result = (y) => {\n        push.callback = y || (x => [initValue, initValue = x]);\n        return initValue;\n    };\n    return result;\n}\n//# sourceMappingURL=letState.function.js.map","import { ValueTypes } from './tag/ValueTypes.enum.js';\nexport function deepClone(obj) {\n    return makeDeepClone(obj, new WeakMap());\n}\nfunction makeDeepClone(obj, visited) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== ValueTypes.object) {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    if (visited.has(obj)) {\n        return visited.get(obj);\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = Array.isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Register the cloned object to avoid cyclic references\n    visited.set(obj, clone);\n    // Clone each property or element of the object or array\n    if (Array.isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], visited);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                clone[key] = makeDeepClone(obj[key], visited);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2) {\n    return isDeepEqual(obj1, obj2, new WeakMap());\n}\nfunction isDeepEqual(obj1, obj2, visited) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    if (visited.has(obj1)) {\n        return true;\n    }\n    if (typeof obj1 === ValueTypes.object && typeof obj2 === ValueTypes.object) {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        visited.set(obj1, 0);\n        // Check if obj1 and obj2 are both arrays\n        if (Array.isArray(obj1) && Array.isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, visited);\n        }\n        else if (Array.isArray(obj1) || Array.isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        return isObjectDeepEqual(obj1, obj2, visited);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, visited) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], visited)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, visited) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], visited)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = fn0 instanceof Function && fn1 instanceof Function;\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n//# sourceMappingURL=deepFunctions.js.map","import { deepClone } from '../deepFunctions.js';\nimport { setUse } from './setUse.function.js';\nimport { state } from './state.function.js';\nexport const providers = {\n    create: (constructMethod) => {\n        const stateDiffMemory = state(() => ({ stateDiff: 0, provider: undefined }));\n        // mimic how many states were called the first time\n        if (stateDiffMemory.stateDiff) {\n            for (let x = stateDiffMemory.stateDiff; x > 0; --x) {\n                state(undefined);\n            }\n            const result = state(undefined);\n            return result;\n        }\n        const result = state(() => {\n            const memory = setUse.memory;\n            const stateConfig = memory.stateConfig;\n            const oldStateCount = stateConfig.array.length;\n            // Providers with provider requirements just need to use providers.create() and providers.inject()\n            const instance = 'prototype' in constructMethod ? new constructMethod() : constructMethod();\n            const support = stateConfig.support;\n            const stateDiff = stateConfig.array.length - oldStateCount;\n            const provider = {\n                constructMethod,\n                instance,\n                clone: deepClone(instance),\n                stateDiff,\n                owner: support,\n                children: [],\n            };\n            stateDiffMemory.provider = provider;\n            support.subject.global.providers.push(provider);\n            stateDiffMemory.stateDiff = stateDiff;\n            return instance;\n        });\n        const cm = constructMethod;\n        // const compareTo = cm.compareTo = cm.compareTo || cm.toString()\n        const compareTo = cm.compareTo = cm.toString();\n        stateDiffMemory.provider.constructMethod.compareTo = compareTo;\n        return result;\n    },\n    /**\n     * @template T\n     * @param {(new (...args: any[]) => T) | () => T} constructor\n     * @returns {T}\n     */\n    inject: (constructor) => {\n        // find once, return same every time after\n        return state(() => {\n            const memory = setUse.memory;\n            const cm = constructor;\n            const compareTo = cm.compareTo = cm.compareTo || constructor.toString();\n            const support = memory.stateConfig.support;\n            const providers = [];\n            let owner = {\n                ownerSupport: support.ownerSupport\n            };\n            while (owner.ownerSupport) {\n                const ownerProviders = owner.ownerSupport.subject.global.providers;\n                const provider = ownerProviders.find(provider => {\n                    providers.push(provider);\n                    const constructorMatch = provider.constructMethod.compareTo === compareTo;\n                    if (constructorMatch) {\n                        return true;\n                    }\n                });\n                if (provider) {\n                    provider.clone = deepClone(provider.instance); // keep a copy of the latest before any change occur\n                    const support = memory.stateConfig.support;\n                    support.subject.global.providers.push(provider);\n                    provider.children.push(support);\n                    return provider.instance;\n                }\n                owner = owner.ownerSupport; // cause reloop checking next parent\n            }\n            const msg = `Could not inject provider: ${constructor.name} ${constructor}`;\n            console.warn(`${msg}. Available providers`, providers);\n            throw new Error(msg);\n        });\n    }\n};\n//# sourceMappingURL=providers.js.map","export function isLikeTags(support0, // new\nsupport1) {\n    const templater0 = support0.templater;\n    const templater1 = support1.templater;\n    const tag0 = templater0?.tag || support0;\n    const tag1 = templater1.tag;\n    const strings0 = tag0.strings;\n    const strings1 = tag1.strings || support1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index].length === string.length // performance, just compare length of strings // TODO: Document this\n    // strings1[index] === string // slower\n    );\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = support0.values || tag0.values;\n    const values1 = support1.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = value instanceof Function && compareTo instanceof Function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true; // deepEqual(value, compareTo)\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=isLikeTags.function.js.map","import { setUse } from '../state/index.js';\nimport { Subject } from '../subject/index.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\n// Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering\nsetUse.memory.tagClosed$ = new Subject(undefined, subscription => {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n// Life cycle 1\nexport function runBeforeRender(support, ownerSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].beforeRender(support, ownerSupport);\n    }\n}\n// Life cycle 2\nexport function runAfterRender(support, ownerSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].afterRender(support, ownerSupport);\n    }\n    setUse.memory.tagClosed$.next(ownerSupport);\n}\n// Life cycle 3\nexport function runBeforeRedraw(support, ownerSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].beforeRedraw(support, ownerSupport);\n    }\n}\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(support, ownerSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].beforeDestroy(support, ownerSupport);\n    }\n    support.subject.global.deleted = true;\n    support.hasLiveElements = false;\n    // remove me from my parents\n    if (ownerSupport) {\n        ownerSupport.subject.global.childTags = ownerSupport.subject.global.childTags.filter(child => child !== support.subject.global.oldest);\n        const global = support.subject.global;\n        global.providers.forEach(provider => provider.children.forEach((child, index) => {\n            if (child.subject.global === global) {\n                provider.children.splice(index, 1);\n            }\n        }));\n    }\n}\n//# sourceMappingURL=tagRunner.js.map","import { runBeforeRedraw, runBeforeRender } from '../tagRunner.js';\nimport { runAfterRender } from '../tagRunner.js';\nexport function renderTagOnly(newSupport, prevSupport, subject, ownerSupport) {\n    const oldRenderCount = subject.global.renderCount;\n    beforeWithRender(newSupport, ownerSupport, prevSupport);\n    const templater = newSupport.templater;\n    // NEW TAG CREATED HERE\n    const wrapper = templater.wrapper;\n    let reSupport = wrapper(newSupport, subject);\n    /* AFTER */\n    runAfterRender(newSupport, ownerSupport);\n    subject.global.newest = reSupport;\n    if (!prevSupport && ownerSupport) {\n        ownerSupport.subject.global.childTags.push(reSupport);\n    }\n    // When we rendered, only 1 render should have taken place OTHERWISE rendering caused another render and that is the latest instead\n    if (subject.global.renderCount > oldRenderCount + 1) {\n        return subject.global.newest;\n    }\n    return reSupport;\n}\nfunction beforeWithRender(support, // new\nparentSupport, prevSupport) {\n    const lastOwnerSupport = prevSupport?.ownerSupport;\n    const runtimeOwnerSupport = lastOwnerSupport || parentSupport;\n    if (prevSupport) {\n        if (prevSupport !== support) {\n            const lastState = prevSupport.state;\n            support.subject.global = prevSupport.subject.global;\n            support.state.length = 0;\n            support.state.push(...lastState);\n        }\n        return runBeforeRedraw(support, prevSupport);\n    }\n    // first time render\n    return runBeforeRender(support, runtimeOwnerSupport);\n}\n//# sourceMappingURL=renderTagOnly.function.js.map","import { ValueTypes } from './ValueTypes.enum.js';\nexport const variablePrefix = '__tagvar';\nexport const escapeVariable = '--' + variablePrefix + '--';\nexport const escapeSearch = new RegExp(escapeVariable, 'g');\nexport class Tag {\n    strings;\n    values;\n    tagJsType = ValueTypes.tag;\n    // present only when an array. Populated by Tag.key()\n    memory = {};\n    templater;\n    constructor(strings, values) {\n        this.strings = strings;\n        this.values = values;\n    }\n    /** Used for array, such as array.map(), calls aka array.map(x => html``.key(x)) */\n    key(arrayValue) {\n        this.memory.arrayValue = arrayValue;\n        return this;\n    }\n    children;\n    html(strings, ...values) {\n        this.children = { strings, values };\n        return this;\n    }\n}\n//# sourceMappingURL=Tag.class.js.map","export function destroyTagMemory(oldSupport) {\n    // must destroy oldest which is tag with elements on stage\n    const oldest = oldSupport.subject.global.oldest;\n    oldest.destroy();\n    oldSupport.subject.global.context = {};\n}\n//# sourceMappingURL=destroyTag.function.js.map","import { isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { destroyTagMemory } from './destroyTag.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nexport function checkDestroyPrevious(subject, // existing.value is the old value\nnewValue, insertBefore, valueType) {\n    const displaySubject = subject;\n    const hasLastValue = 'lastValue' in displaySubject;\n    const lastValue = displaySubject.lastValue; // TODO: we maybe able to use displaySubject.value and remove concept of lastValue\n    // was simple value but now something bigger\n    if (hasLastValue && lastValue !== newValue) {\n        // below is faster than using getValueType\n        const newType = typeof (newValue);\n        if (isSimpleType(newType) && typeof (lastValue) === newType) {\n            return false;\n        }\n        if (newValue instanceof Function && lastValue instanceof Function) {\n            return false;\n        }\n        destroySimpleValue(displaySubject);\n        return 'changed-simple-value';\n    }\n    const arraySubject = subject;\n    const wasArray = arraySubject.lastArray;\n    // no longer an array\n    if (wasArray && valueType !== ValueTypes.tagArray) {\n        delete arraySubject.lastArray;\n        for (let index = wasArray.array.length - 1; index >= 0; --index) {\n            const { support } = wasArray.array[index];\n            destroyArrayTag(support, { added: 0, removed: 0 });\n        }\n        return 'array';\n    }\n    const tagSubject = subject;\n    const lastSupport = tagSubject.support;\n    // no longer tag or component?\n    if (lastSupport) {\n        const isValueTag = isStaticTag(newValue);\n        const isSubjectTag = isStaticTag(subject._value);\n        const newTag = newValue;\n        if (isSubjectTag && isValueTag) {\n            // its a different tag now\n            if (!isLikeTags(newTag, lastSupport)) {\n                // put template back down\n                destroyTagMemory(lastSupport);\n                return 2;\n            }\n            return false;\n        }\n        if (valueType === ValueTypes.tagComponent) {\n            return false; // its still a tag component\n        }\n        if (newValue && newValue.oneRender) {\n            return false;\n        }\n        // destroy old component, value is not a component\n        destroyTagMemory(lastSupport);\n        // delete lastSupport.global.deleted // ???\n        return 'different-tag';\n    }\n    return false;\n}\nexport function isSimpleType(value) {\n    return ['string', 'number', 'boolean'].includes(value);\n}\nexport function destroyArrayTag(support, counts) {\n    support.destroy({\n        stagger: counts.removed++,\n    });\n}\nfunction destroySimpleValue(subject) {\n    delete subject.lastValue;\n}\n//# sourceMappingURL=checkDestroyPrevious.function.js.map","import { isSimpleType } from './checkDestroyPrevious.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isSubjectInstance, isTagArray } from '../isInstance.js';\nexport function getValueType(value) {\n    if (value === undefined || value === null) {\n        return ValueTypes.undefined;\n    }\n    const type = typeof (value);\n    if (value instanceof Function) {\n        return ValueTypes.function;\n    }\n    if (type === ValueTypes.object) {\n        if (value instanceof Date) {\n            return ValueTypes.date;\n        }\n        if (isSimpleType(type)) {\n            return type;\n        }\n        const tagJsType = value.tagJsType;\n        if (tagJsType) {\n            const included = [\n                ValueTypes.tagComponent,\n                ValueTypes.templater,\n                ValueTypes.tag,\n            ].includes(tagJsType);\n            if (included) {\n                return tagJsType;\n            }\n        }\n        if (isTagArray(value)) {\n            return ValueTypes.tagArray;\n        }\n        if (isSubjectInstance(value)) {\n            return ValueTypes.subject;\n        }\n    }\n    return ValueTypes.unknown;\n}\n//# sourceMappingURL=getValueType.function.js.map","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getValueType } from './getValueType.function.js';\nexport function cloneValueArray(values) {\n    return values.map((value) => {\n        const tag = value;\n        switch (getValueType(value)) {\n            case ValueTypes.tagComponent:\n                const tagComponent = value;\n                return deepClone(tagComponent.props);\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n            case ValueTypes.tagArray:\n                return cloneValueArray(tag);\n        }\n        return deepClone(value);\n    });\n}\n//# sourceMappingURL=cloneValueArray.function.js.map","export function getChildTagsToDestroy(childTags, allTags = []) {\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const cTag = childTags[index];\n        allTags.push(cTag);\n        getChildTagsToDestroy(cTag.subject.global.childTags, allTags);\n    }\n    return allTags;\n}\n//# sourceMappingURL=destroy.support.js.map","import { Tag } from './Tag.class.js';\nimport { ValueSubject } from '../subject/index.js';\nimport { kidsToTagArraySubject } from './kidsToTagArraySubject.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nexport class TemplaterResult {\n    props;\n    tagJsType = ValueTypes.templater;\n    tagged;\n    wrapper;\n    madeChildIntoSubject;\n    tag;\n    children = new ValueSubject([]);\n    arrayValue; // used for tag components used in arrays\n    constructor(props) {\n        this.props = props;\n    }\n    key(arrayValue) {\n        this.arrayValue = arrayValue;\n        return this;\n    }\n    html(strings, ...values) {\n        const children = new Tag(strings, values);\n        const childSubject = kidsToTagArraySubject(children, this);\n        this.children = childSubject;\n        return this;\n    }\n}\n//# sourceMappingURL=TemplaterResult.class.js.map","import { isSubjectInstance, isTagArray } from '../isInstance.js';\nimport { ValueSubject } from '../subject/ValueSubject.js';\nexport function kidsToTagArraySubject(children, templaterResult) {\n    if (isSubjectInstance(children)) {\n        return children;\n    }\n    const kidArray = children;\n    if (isTagArray(kidArray)) {\n        templaterResult.madeChildIntoSubject = true; // was converted into a subject\n        return new ValueSubject(children);\n    }\n    const kid = children;\n    if (kid) {\n        templaterResult.madeChildIntoSubject = true; // was converted into a subject\n        kid.memory.arrayValue = 0;\n        return new ValueSubject([kid]);\n    }\n    templaterResult.madeChildIntoSubject = true; // was converted into a subject\n    return new ValueSubject([]);\n}\n//# sourceMappingURL=kidsToTagArraySubject.function.js.map","import { Subject } from '../../subject/Subject.class.js';\nimport { ValueSubject } from '../../subject/ValueSubject.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nexport class TagJsSubject extends ValueSubject {\n    tagJsType = ValueTypes.tagJsSubject;\n    // travels with all rerenderings\n    global = getNewGlobal();\n    lastRun;\n}\nexport function getNewGlobal() {\n    return {\n        destroy$: new Subject(),\n        context: {}, // populated after reading interpolated.values array converted to an object {variable0, variable:1}\n        providers: [],\n        /** Indicator of re-rending. Saves from double rending something already rendered */\n        renderCount: 0,\n        subscriptions: [],\n        oldest: undefined, // TODO: This needs to addressed\n        blocked: [], // renders that did not occur because an event was processing\n        childTags: [], // tags on me\n        clones: [], // elements on document. Needed at destroy process to know what to destroy\n    };\n}\n//# sourceMappingURL=TagJsSubject.class.js.map","import { TemplaterResult } from '../TemplaterResult.class.js';\nimport { Support } from '../Support.class.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getValueType } from '../getValueType.function.js';\nimport { TagJsSubject, getNewGlobal } from './TagJsSubject.class.js';\nexport function processNewValue(value, ownerSupport) {\n    const valueType = getValueType(value);\n    switch (valueType) {\n        case ValueTypes.tagComponent:\n            return new TagJsSubject(value); // ownerSupport.global.value\n        case ValueTypes.templater:\n            const templater = value;\n            const tag = templater.tag;\n            return processNewTag(tag, ownerSupport);\n        case ValueTypes.tag:\n            return processNewTag(value, ownerSupport);\n        case ValueTypes.subject:\n            value.global = getNewGlobal();\n            return value;\n    }\n    return new TagJsSubject(value);\n}\nfunction processNewTag(value, ownerSupport) {\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = new TemplaterResult([]);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const subject = new TagJsSubject(templater);\n    subject.support = new Support(templater, ownerSupport, subject);\n    subject.global.oldest = subject.support;\n    ownerSupport.subject.global.childTags.push(subject.support);\n    return subject;\n}\n//# sourceMappingURL=processNewValue.function.js.map","const style = 'style';\nconst classS = 'class';\nexport function specialAttribute(name, value, element) {\n    const names = name.split('.');\n    // style.position = \"absolute\"\n    if (names[0] === style) {\n        element.style[names[1]] = value;\n    }\n    // Example: class.width-full = \"true\"\n    if (names[0] === classS) {\n        names.shift();\n        if (value) {\n            for (let index = 0; index < names.length; ++index) {\n                element.classList.add(names[index]);\n            }\n        }\n        else {\n            for (let index = 0; index < names.length; ++index) {\n                element.classList.remove(names[index]);\n            }\n        }\n    }\n}\n//# sourceMappingURL=specialAttribute.js.map","import { deepEqual } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nexport function hasPropChanges(props, // natural props\npastCloneProps) {\n    /*\n    const isCommonEqual = props === undefined && props === compareToProps\n    if(isCommonEqual) {\n      return false\n    }\n    */\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    // check all prop functions match\n    if (typeof (props) === ValueTypes.object) {\n        if (!pastCloneProps) {\n            return 3;\n        }\n        castedProps = [...props];\n        castedPastProps = [...(pastCloneProps || [])];\n        const allFunctionsMatch = castedProps.every((value, index) => {\n            let compare = castedPastProps[index];\n            if (value && typeof (value) === ValueTypes.object) {\n                const subCastedProps = { ...value };\n                const subCompareProps = { ...compare || {} };\n                const matched = Object.entries(subCastedProps).every(([key, value]) => compareProps(value, subCompareProps[key], () => {\n                    delete subCastedProps[key]; // its a function and not needed to be compared\n                    delete subCompareProps[key]; // its a function and not needed to be compared\n                }));\n                return matched;\n            }\n            return compareProps(value, compare, () => {\n                castedProps.splice(index, 1);\n                castedPastProps.splice(index, 1);\n            });\n        });\n        if (!allFunctionsMatch) {\n            return 6; // a change has been detected by function comparisons\n        }\n    }\n    // const isEqual = deepEqual(castedPastProps, castedProps)\n    // return isEqual ? false : 7 // if equal then no changes\n    return false;\n}\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(value instanceof Function)) {\n        return deepEqual(value, compare) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(compareFn instanceof Function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 3; // both are function the same\n    }\n    onDelete();\n    return 5;\n}\n//# sourceMappingURL=hasPropChanges.function.js.map","/** checks if previous support exists on subject or as a last global support. If first render, calls builder. Otherwise calls support.updateBy() */\nexport function processTagResult(support, subject, // used for recording past and current value\n{ counts, }, fragment) {\n    // *if appears we already have seen\n    const subjectTag = subject;\n    const lastSupport = subjectTag.support;\n    const prevSupport = lastSupport?.subject.global.oldest || undefined;\n    const justUpdate = prevSupport;\n    if (prevSupport && justUpdate) {\n        return processTagResultUpdate(support, subjectTag, prevSupport);\n    }\n    const newFragment = support.buildBeforeElement(fragment, { counts });\n    //if(fragment) {\n    //  fragment.appendChild(newFragment)\n    //} else {\n    const placeholder = subject.global.placeholder;\n    const parentNode = placeholder.parentNode;\n    parentNode.insertBefore(newFragment, placeholder);\n    //}\n    return support;\n}\nfunction processTagResultUpdate(support, subject, // used for recording past and current value\nprevSupport) {\n    // components\n    if (subject instanceof Function) {\n        const newSupport = subject(prevSupport);\n        prevSupport.updateBy(newSupport);\n        subject.support = newSupport;\n        return newSupport;\n    }\n    prevSupport.updateBy(support);\n    subject.support = support;\n    return support;\n}\n//# sourceMappingURL=processTagResult.function.js.map","import { Support } from '../Support.class.js';\nimport { ValueSubject } from '../../subject/index.js';\n/** When first time render, adds to owner childTags */\nexport function processTag(templater, ownerSupport, // owner\nsubject, // could be tag via result.tag\nfragment) {\n    let support = subject.support;\n    // first time seeing this tag?\n    if (!support) {\n        support = newSupportByTemplater(templater, ownerSupport, subject);\n    }\n    subject.support = support;\n    support.ownerSupport = ownerSupport;\n    const newFragment = support.buildBeforeElement(undefined, { counts: { added: 0, removed: 0 } });\n    if (fragment) {\n        fragment.appendChild(newFragment);\n    }\n    else {\n        const placeholder = subject.global.placeholder;\n        const parentNode = placeholder.parentNode;\n        parentNode.insertBefore(newFragment, placeholder);\n    }\n    return support;\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        children: new ValueSubject([]), // no children\n        // props: {} as Props,\n        props: [],\n        isTag: true,\n        tagJsType: 'templater',\n        tagged: false,\n        html: () => fake,\n        key: () => fake,\n    };\n    return fake;\n}\n/** Create Support for a tag component */\nexport function newSupportByTemplater(templater, ownerSupport, subject) {\n    const support = new Support(templater, ownerSupport, subject);\n    setupNewSupport(support, ownerSupport, subject);\n    ownerSupport.subject.global.childTags.push(support);\n    return support;\n}\nexport function setupNewSupport(support, ownerSupport, subject) {\n    support.subject = subject;\n    subject.global.oldest = support;\n    subject.global.newest = support;\n    // asking me to render will cause my parent to render\n    support.ownerSupport = ownerSupport;\n}\n//# sourceMappingURL=processTag.function.js.map","import { processTagResult } from './processTagResult.function.js';\nimport { Support } from '../Support.class.js';\nimport { renderSubjectComponent } from '../render/renderSubjectComponent.function.js';\nimport { setupNewSupport } from './processTag.function.js';\n/** create new support, connects globals to old support if one, and  */\nexport function processSubjectComponent(templater, subject, insertBefore, ownerSupport, options, fragment) {\n    // Check if function component is wrapped in a tag() call\n    // TODO: This below check not needed in production mode\n    if (templater.tagged !== true) {\n        const wrapper = templater.wrapper;\n        const original = wrapper.parentWrap.original;\n        let name = original.name || original.constructor?.name;\n        if (name === 'Function') {\n            name = undefined;\n        }\n        const label = name || original.toString().substring(0, 120);\n        const error = new Error(`Not a tag component. Wrap your function with tag(). Example tag(props => html\\`\\`) on component:\\n\\n${label}\\n\\n`);\n        throw error;\n    }\n    const support = new Support(templater, ownerSupport, subject);\n    let reSupport = subject.support;\n    setupNewSupport(support, ownerSupport, subject);\n    const global = support.subject.global = reSupport?.subject.global || support.subject.global;\n    global.oldest = support;\n    global.insertBefore = insertBefore;\n    const isRender = !reSupport;\n    if (isRender) {\n        const mySupport = reSupport || support;\n        reSupport = renderSubjectComponent(subject, mySupport, ownerSupport);\n    }\n    const newSupport = processTagResult(reSupport, subject, // The element set here will be removed from document. Also result.tag will be added in here\n    options, fragment);\n    // subject.support = newSupport\n    ownerSupport.subject.global.childTags.push(newSupport);\n    return reSupport;\n}\n//# sourceMappingURL=processSubjectComponent.function.js.map","import { renderWithSupport } from './renderWithSupport.function.js';\nexport function renderSubjectComponent(subject, reSupport, ownerSupport) {\n    const ownGlobal = ownerSupport.subject.global;\n    const preClones = ownGlobal.clones.map(clone => clone);\n    reSupport = renderWithSupport(reSupport, subject.support, // existing tag\n    subject, ownerSupport);\n    const reGlobal = reSupport.subject.global;\n    if (ownGlobal.clones.length > preClones.length) {\n        const myClones = ownGlobal.clones.filter(fClone => !preClones.find(clone => clone === fClone));\n        reGlobal.clones.push(...myClones);\n    }\n    return reSupport;\n}\n//# sourceMappingURL=renderSubjectComponent.function.js.map","import { deepClone, deepEqual } from './deepFunctions.js';\nimport { isStaticTag } from './isInstance.js';\nimport { renderSupport } from './tag/render/renderSupport.function.js';\nimport { setUse } from './state/index.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nexport function castProps(props, newSupport, stateArray) {\n    return props.map(prop => alterProp(prop, newSupport.ownerSupport, stateArray, newSupport));\n}\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, stateArray, newSupport) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, stateArray, newSupport);\n}\nexport function checkProp(value, ownerSupport, stateArray, newSupport, index, newProp, seen = []) {\n    if (value instanceof Function) {\n        return getPropWrap(value, ownerSupport, stateArray, newSupport, index, newProp);\n    }\n    if (seen.includes(value)) {\n        return value;\n    }\n    seen.push(value);\n    if (typeof (value) !== 'object' || !value) {\n        return value; // no children to crawl through\n    }\n    if (value instanceof Array) {\n        for (let index = value.length - 1; index >= 0; --index) {\n            const subValue = value[index];\n            value[index] = checkProp(subValue, ownerSupport, stateArray, newSupport, index, value, seen);\n            if (subValue instanceof Function) {\n                if (subValue.toCall) {\n                    continue;\n                }\n                afterCheckProp(index, subValue, value, newSupport);\n            }\n        }\n        return value;\n    }\n    for (const name in value) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, stateArray, newSupport, name, value, seen);\n        const hasSetter = Object.getOwnPropertyDescriptor(value, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n        if (result instanceof Function) {\n            if (subValue.toCall) {\n                continue;\n            }\n            afterCheckProp(name, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction afterCheckProp(index, pastValue, newProp, newSupport) {\n    if (pastValue?.toCall) {\n        return; // already been done\n    }\n    // restore object to have original function on destroy\n    newSupport.subject.global.destroy$.toCallback(() => newProp[index] = pastValue);\n}\nexport function getPropWrap(value, ownerSupport, stateArray, newSupport, name, newProp) {\n    const toCall = value.toCall;\n    // already previously converted by a parent?\n    if (toCall) {\n        return value;\n    }\n    const wrap = (...args) => wrap.toCall(...args); // what gets called can switch over parent state changes\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = (...args) => {\n        return callbackPropOwner(wrap.prop, args, ownerSupport);\n    };\n    wrap.original = value;\n    wrap.prop = value;\n    wrap.stateArray = stateArray;\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport) {\n    const newest = ownerSupport.subject.global.newest;\n    const noCycle = getSupportInCycle() === undefined;\n    const result = toCall(...callWith);\n    const run = () => {\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            // appears a prop function was called sync/immediately so lets see if owner changed state\n            const allMatched = newest.state.every(state => {\n                const lastValue = state.lastValue;\n                const get = state.get();\n                const equal = deepEqual(deepClone(lastValue), get);\n                return equal;\n            });\n            if (allMatched) {\n                return result; // owner did not change\n            }\n        }\n        renderSupport(newest, true);\n        return result;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUse.memory.tagClosed$.toCallback(run);\n    return result;\n}\n//# sourceMappingURL=alterProp.function.js.map","import { hasSupportChanged } from '../hasSupportChanged.function.js';\nimport { processSubjectComponent } from './processSubjectComponent.function.js';\nimport { destroyTagMemory } from '../destroyTag.function.js';\nimport { renderSupport } from '../render/renderSupport.function.js';\nimport { castProps } from '../../alterProp.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { softDestroySupport } from '../render/softDestroySupport.function.js';\nexport function updateExistingTagComponent(ownerSupport, support, // lastest\nsubject, insertBefore, renderUp = false) {\n    let lastSupport = subject.global.newest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = support.templater.wrapper;\n    let isSameTag = false;\n    if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.parentWrap.original;\n        const newFunction = newWrapper.parentWrap.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = support.templater;\n    if (!isSameTag) {\n        const oldestSupport = subject.global.oldest;\n        destroyTagMemory(oldestSupport);\n        const newSupport = processSubjectComponent(templater, subject, insertBefore, ownerSupport, {\n            counts: { added: 0, removed: 0 },\n        });\n        return newSupport;\n    }\n    else {\n        const hasChanged = hasSupportChanged(lastSupport, support, templater);\n        // everyhing has matched, no display needs updating.\n        if (!hasChanged) {\n            const newProps = templater.props;\n            // update function refs to use latest references\n            const castedProps = syncFunctionProps(support, lastSupport, ownerSupport, newProps);\n            // When new support actually makes call to real function, use these pre casted props\n            support.propsConfig.castProps = castedProps;\n            // update support to think it has different cloned props\n            lastSupport.propsConfig.latestCloned = support.propsConfig.latestCloned;\n            lastSupport.propsConfig.lastClonedKidValues = support.propsConfig.lastClonedKidValues;\n            return lastSupport; // its the same tag component\n        }\n    }\n    const oldest = subject.global.oldest;\n    if (subject.global.locked) {\n        subject.global.blocked.push(support);\n        return support;\n    }\n    const previous = subject.global.newest;\n    const newSupport = renderSupport(support, renderUp);\n    return afterTagRender(subject, oldest, templater, previous, newSupport, isSameTag);\n}\nfunction afterTagRender(subject, oldest, templater, previous, newSupport, isSameTag) {\n    let lastSupport = subject.support;\n    // const oldest = newSupport.global.oldest\n    /*\n    const hasOldest = oldest ? true : false\n    if(!hasOldest) {\n      return buildNewTag(\n        newSupport,\n        insertBefore,\n        lastSupport,\n        subject\n      )\n    }\n    */\n    if (oldest && templater.children._value.length) {\n        const oldKidsSub = oldest.templater.children;\n        oldKidsSub.next(templater.children._value);\n    }\n    // detect if both the function is the same and the return is the same\n    const isLikeTag = isSameTag && isLikeTags(previous, newSupport);\n    if (isLikeTag) {\n        const oldestTag = subject.global.oldest;\n        subject.support = newSupport;\n        oldestTag.updateBy(newSupport);\n        return newSupport;\n    }\n    // Although function looked the same it returned a different html result\n    if (isSameTag && lastSupport) {\n        const preGlobal = previous.subject.global;\n        if (!preGlobal.deleted) {\n            // destroyTagMemory(previous)\n            softDestroySupport(previous);\n        }\n        subject.global.context = {}; // do not share previous outputs\n    }\n    return buildNewTag(newSupport, subject);\n}\nfunction buildNewTag(newSupport, subject) {\n    const fragment = newSupport.buildBeforeElement(undefined, {\n        counts: { added: 0, removed: 0 },\n    });\n    // ??? new\n    const placeholder = subject.global.placeholder;\n    const parentNode = placeholder.parentNode;\n    parentNode.insertBefore(fragment, placeholder);\n    subject.global.oldest = newSupport;\n    subject.global.newest = newSupport;\n    subject.global.oldest = newSupport;\n    subject.global.newest = newSupport;\n    subject.support = newSupport;\n    newSupport.ownerSupport.subject.global.childTags.push(newSupport);\n    return newSupport;\n}\nfunction syncFunctionProps(newSupport, lastSupport, ownerSupport, newPropsArray) {\n    const newest = lastSupport.subject.global.newest;\n    if (!newest) {\n        const state = ownerSupport.state;\n        newPropsArray.length = 0;\n        const castedProps = castProps(newPropsArray, newSupport, state);\n        newPropsArray.push(...castedProps);\n        newSupport.propsConfig.castProps = castedProps;\n        return newPropsArray;\n    }\n    lastSupport = newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.castProps;\n    const newArray = [];\n    for (let index = newPropsArray.length - 1; index >= 0; --index) {\n        const prop = newPropsArray[index];\n        const priorProp = priorPropsArray[index];\n        const newValue = syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport);\n        newArray.push(newValue);\n    }\n    newSupport.propsConfig.castProps = newArray;\n    return newArray;\n}\nfunction syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, seen = []) {\n    if (priorProp instanceof Function) {\n        // the prop i am receiving, is already being monitored/controlled by another parent\n        if (prop.toCall) {\n            priorProp.toCall = prop.toCall;\n            return prop;\n        }\n        const ownerGlobal = ownerSupport.subject.global;\n        const oldOwnerState = ownerGlobal.newest.state;\n        priorProp.prop = prop;\n        priorProp.stateArray = oldOwnerState;\n        return priorProp;\n    }\n    // prevent infinite recursion\n    if (seen.includes(prop)) {\n        return prop;\n    }\n    seen.push(prop);\n    if (typeof (prop) !== 'object' || !prop) {\n        return prop; // no children to crawl through\n    }\n    if (prop instanceof Array) {\n        for (let index = prop.length - 1; index >= 0; --index) {\n            const x = prop[index];\n            prop[index] = syncPriorPropFunction(priorProp[index], x, newSupport, ownerSupport, seen);\n        }\n        return prop;\n    }\n    if (priorProp === undefined) {\n        return prop;\n    }\n    for (const name in prop) {\n        const subValue = prop[name];\n        const result = syncPriorPropFunction(priorProp[name], subValue, newSupport, ownerSupport, seen);\n        const hasSetter = Object.getOwnPropertyDescriptor(prop, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        prop[name] = result;\n    }\n    return prop;\n}\nexport function moveProviders(lastSupport, newSupport) {\n    const global = lastSupport.subject.global;\n    global.providers.forEach(provider => {\n        provider.children.forEach((child, index) => {\n            const wasSameGlobals = global.destroy$ === child.subject.global.destroy$;\n            if (wasSameGlobals) {\n                provider.children.splice(index, 1);\n                provider.children.push(newSupport);\n                return;\n            }\n        });\n    });\n}\n//# sourceMappingURL=updateExistingTagComponent.function.js.map","import { hasPropChanges } from './hasPropChanges.function.js';\nexport function hasSupportChanged(lastSupport, newSupport, newTemplater) {\n    const latestProps = newTemplater.props; // newSupport.propsConfig.latest\n    const pastCloneProps = lastSupport.propsConfig.latestCloned;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps);\n    // if no changes detected, no need to continue to rendering further tags\n    if (propsChanged) {\n        return propsChanged;\n    }\n    const propsChanged2 = hasPropChanges(lastSupport.propsConfig.latestCloned, newSupport.propsConfig.latestCloned);\n    if (propsChanged2) {\n        return propsChanged2;\n    }\n    const kidsChanged = hasKidsChanged(lastSupport, newSupport);\n    // we already know props didn't change and if kids didn't either, than don't render\n    return kidsChanged;\n}\nexport function hasKidsChanged(oldSupport, newSupport) {\n    const oldCloneKidValues = oldSupport.propsConfig.lastClonedKidValues;\n    const newClonedKidValues = newSupport.propsConfig.lastClonedKidValues;\n    const everySame = oldCloneKidValues.every((set, index) => {\n        const x = newClonedKidValues[index];\n        return set.every((item, index) => item === x[index]);\n    });\n    return everySame ? false : 9;\n}\n//# sourceMappingURL=hasSupportChanged.function.js.map","/** File largely responsible for reacting to element events, such as onclick */\nimport { setUse } from '../state/setUse.function.js';\nimport { ValueTypes } from '../tag/ValueTypes.enum.js';\nimport { renderSupport } from '../tag/render/renderSupport.function.js';\nimport { updateExistingTagComponent } from '../tag/update/updateExistingTagComponent.function.js';\nconst useLocks = true;\nexport function bindSubjectCallback(value, support) {\n    // Is this children? No override needed\n    if (value.isChildOverride) {\n        return value;\n    }\n    const state = setUse.memory.stateConfig;\n    const subjectFunction = (element, args) => runTagCallback(value, support, element, args);\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    return subjectFunction;\n}\nexport function runTagCallback(value, support, bindTo, args) {\n    const tag = findTagToCallback(support);\n    const method = value.bind(bindTo);\n    tag.subject.global.locked = useLocks; // prevent another render from re-rendering this tag\n    const callbackResult = method(...args);\n    return afterTagCallback(tag, callbackResult);\n}\nfunction afterTagCallback(tag, callbackResult) {\n    delete tag.subject.global.locked;\n    if (tag.subject.global.blocked.length) {\n        let lastResult;\n        tag.subject.global.blocked.forEach(blocked => {\n            const block = blocked;\n            lastResult = updateExistingTagComponent(block.ownerSupport, block, block.subject, block.subject.global.insertBefore, true);\n            tag.subject.global.newest = lastResult;\n            tag.subject.global.blocked.splice(0, 1);\n        });\n        tag.subject.global.blocked.length = 0;\n        // return lastResult\n        return checkAfterCallbackPromise(callbackResult, lastResult, lastResult.subject.global);\n    }\n    const result = renderCallbackSupport(tag.subject.global.newest, callbackResult, tag.subject.global);\n    return result;\n}\nfunction findTagToCallback(support) {\n    // If we are NOT a component than we need to render my owner instead\n    if (support.templater.tagJsType === ValueTypes.templater) {\n        const owner = support.ownerSupport;\n        return findTagToCallback(owner);\n    }\n    return support;\n}\nfunction renderCallbackSupport(last, callbackResult, global) {\n    if (global.deleted) {\n        return 'no-data-ever'; // || last.global.deleted\n    }\n    renderSupport(last, true);\n    return checkAfterCallbackPromise(callbackResult, last, global);\n}\nfunction checkAfterCallbackPromise(callbackResult, last, global) {\n    if (callbackResult instanceof Promise) {\n        last.subject.global.locked = useLocks;\n        return callbackResult.then(() => {\n            delete last.subject.global.locked;\n            if (global.deleted) {\n                return 'promise-no-data-ever'; // tag was deleted during event processing\n            }\n            delete last.subject.global.locked;\n            renderSupport(global.newest, true);\n            return 'promise-no-data-ever';\n        });\n    }\n    return 'no-data-ever';\n}\n//# sourceMappingURL=bindSubjectCallback.function.js.map","import { specialAttribute } from './specialAttribute.js';\nimport { isSubjectInstance } from '../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nimport { ValueTypes, empty } from '../tag/ValueTypes.enum.js';\nconst startRegX = /^\\s*{__tagvar/;\nconst endRegX = /}\\s*$/;\nconst ondoubleclick = 'ondoubleclick';\nfunction isTagVar(value) {\n    return value && value.search(startRegX) >= 0 && value.search(endRegX) >= 0;\n}\nexport function processAttribute(attrName, value, // current attribute value by using .getAttribute\nchild, scope, ownerSupport, howToSet) {\n    if (isTagVar(value)) {\n        return processScopedNameValueAttr(attrName, value, child, scope, ownerSupport, howToSet);\n    }\n    if (isTagVar(attrName)) {\n        const contextValueSubject = getContextValueByVarString(scope, attrName);\n        let lastValue;\n        // the above callback gets called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe((value) => {\n            if (value === lastValue) {\n                return; // value did not change\n            }\n            processNameOnlyAttr(value, lastValue, child, ownerSupport, howToSet);\n            lastValue = value;\n        });\n        ownerSupport.subject.global.subscriptions.push(sub); // this is where unsubscribe is picked up\n        child.removeAttribute(attrName);\n        return;\n    }\n    // Non dynamic\n    const isSpecial = isSpecialAttr(attrName);\n    if (isSpecial) {\n        return specialAttribute(attrName, value, child);\n    }\n}\nfunction processScopedNameValueAttr(attrName, value, // {__tagVarN}\nchild, scope, ownerSupport, howToSet) {\n    // get the code inside the brackets like \"variable0\" or \"{variable0}\"\n    const result = getContextValueByVarString(scope, value);\n    return processNameValueAttr(attrName, result, child, ownerSupport, howToSet);\n}\nfunction getContextValueByVarString(scope, value) {\n    const code = value.replace('{', empty).split(empty).reverse().join(empty).replace('}', empty).split(empty).reverse().join(empty);\n    return scope[code];\n}\nfunction processNameOnlyAttr(attrValue, lastValue, child, ownerSupport, howToSet) {\n    if (lastValue && lastValue != attrValue) {\n        if (typeof (lastValue) === ValueTypes.string) {\n            child.removeAttribute(lastValue);\n        }\n        else if (lastValue instanceof Object) {\n            for (const name in lastValue) {\n                child.removeAttribute(name);\n            }\n        }\n    }\n    if (typeof (attrValue) === ValueTypes.string) {\n        if (!attrValue.length) {\n            return;\n        }\n        processNameValueAttr(attrValue, empty, child, ownerSupport, howToSet);\n        return;\n    }\n    if (attrValue instanceof Object) {\n        for (const name in attrValue) {\n            processNameValueAttr(name, attrValue[name], child, ownerSupport, howToSet);\n        }\n    }\n}\nfunction processNameValueAttr(attrName, result, child, ownerSupport, howToSet) {\n    const isSpecial = isSpecialAttr(attrName);\n    if (result instanceof Function) {\n        const action = function (...args) {\n            const result2 = result(child, args);\n            return result2;\n        };\n        child[attrName].action = action;\n    }\n    // Most every variable comes in here since everything is made a ValueSubject\n    if (isSubjectInstance(result)) {\n        child.removeAttribute(attrName);\n        let lastValue;\n        const callback = (newAttrValue) => {\n            // should the function be wrapped so every time its called we re-render?\n            if (newAttrValue instanceof Function) {\n                return callbackFun(ownerSupport, newAttrValue, child, attrName, isSpecial, howToSet);\n            }\n            // TODO: we maybe able to block higher before instance of check\n            if (lastValue === newAttrValue) {\n                return lastValue;\n            }\n            lastValue = newAttrValue;\n            return processAttributeSubjectValue(newAttrValue, child, attrName, isSpecial, howToSet);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = result.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        ownerSupport.subject.global.subscriptions.push(sub);\n        return;\n    }\n    howToSet(child, attrName, result);\n    // child.setAttribute(attrName, result.value)\n    return;\n}\nfunction processAttributeSubjectValue(newAttrValue, child, attrName, isSpecial, howToSet) {\n    if (newAttrValue instanceof Function) {\n        const fun = function (...args) {\n            return newAttrValue(child, args);\n        };\n        // access to original function\n        fun.tagFunction = newAttrValue;\n        if (attrName === ondoubleclick) {\n            attrName = 'ondblclick';\n        }\n        ;\n        child[attrName] = fun;\n        return;\n    }\n    if (isSpecial) {\n        specialAttribute(attrName, newAttrValue, child);\n        return;\n    }\n    if (newAttrValue) {\n        howToSet(child, attrName, newAttrValue);\n        return;\n    }\n    const isDeadValue = [undefined, false, null].includes(newAttrValue);\n    if (isDeadValue) {\n        child.removeAttribute(attrName);\n        return;\n    }\n    // value is 0\n    howToSet(child, attrName, newAttrValue);\n}\n/** Looking for (class | style) followed by a period */\nfunction isSpecialAttr(attrName) {\n    return attrName.search(/^(class|style)(\\.)/) >= 0;\n}\nfunction callbackFun(ownerSupport, newAttrValue, child, attrName, isSpecial, howToSet) {\n    const wrapper = ownerSupport.templater.wrapper;\n    const parentWrap = wrapper?.parentWrap;\n    const oneRender = parentWrap?.oneRender;\n    if (!oneRender) {\n        newAttrValue = bindSubjectCallback(newAttrValue, ownerSupport);\n    }\n    return processAttributeSubjectValue(newAttrValue, child, attrName, isSpecial, howToSet);\n}\n//# sourceMappingURL=processAttribute.function.js.map","import { processAttribute } from './processAttribute.function.js';\nfunction howToSetAttribute(element, name, value) {\n    element.setAttribute(name, value);\n}\nfunction howToSetInputValue(element, name, value) {\n    element[name] = value;\n}\nconst INPUT = 'INPUT';\nconst valueS = 'value';\nexport function interpolateAttributes(child, scope, ownerSupport) {\n    const attrNames = child.getAttributeNames();\n    let howToSet = howToSetAttribute;\n    for (let index = 0; index < attrNames.length; ++index) {\n        const attrName = attrNames[index];\n        if (child.nodeName === INPUT && attrName === valueS) {\n            howToSet = howToSetInputValue;\n        }\n        const value = child.getAttribute(attrName);\n        processAttribute(attrName, value, child, scope, ownerSupport, howToSet);\n        howToSet = howToSetAttribute; // put back\n    }\n}\n//# sourceMappingURL=interpolateAttributes.js.map","import { processAttribute } from './processAttribute.function.js';\nimport { empty } from '../tag/ValueTypes.enum.js';\nconst search = new RegExp('\\\\s*<template interpolate end id=\"__tagvar(\\\\d{1,4})\"([^>]*)></template>(\\\\s*)');\nconst underTagVarMatch = /__tagvar(\\d{1,4})/;\nexport function scanTextAreaValue(textarea, context, ownerSupport) {\n    const value = textarea.value;\n    if (value.search(search) >= 0) {\n        const match = value.match(underTagVarMatch);\n        const token = match ? match[0] : empty;\n        const dynamic = '{' + token + '}';\n        textarea.value = empty;\n        textarea.setAttribute('text-var-value', dynamic);\n        const howToSet = (_elm, _name, value) => textarea.value = value;\n        processAttribute('text-var-value', dynamic, // realValue, // context[token].value,\n        textarea, context, ownerSupport, howToSet);\n    }\n}\n//# sourceMappingURL=scanTextAreaValue.function.js.map","import { ArrayNoKeyError } from '../../errors.js';\nimport { destroyArrayTag } from '../checkDestroyPrevious.function.js';\nimport { newSupportByTemplater, setupNewSupport, tagFakeTemplater } from './processTag.function.js';\nimport { Support } from '../Support.class.js';\nimport { isTagClass } from '../../isInstance.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { TagJsSubject } from './TagJsSubject.class.js';\nimport { textNode } from '../ValueTypes.enum.js';\nexport function processTagArray(subject, value, // arry of Tag classes\ninsertBefore, // <template end interpolate />\nownerSupport, options, fragment) {\n    const clones = ownerSupport.subject.global.clones; // []\n    let lastArray = subject.lastArray = subject.lastArray || { array: [] };\n    if (!subject.global.placeholder) {\n        setPlaceholderElm(insertBefore, subject);\n    }\n    const runtimeInsertBefore = subject.global.placeholder;\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    lastArray.array = lastArray.array.filter((item, index) => {\n        const newLength = value.length - 1;\n        const at = index - removed;\n        const lessLength = newLength < at;\n        if (lessLength) {\n            destroyArrayItem(lastArray.array, index, options);\n            ++removed;\n            return false;\n        }\n        const subTag = value[index - removed];\n        const tagClass = isTagClass(subTag);\n        let tag = subTag;\n        let templater = subTag.templater;\n        let prevArrayValue;\n        if (tagClass) {\n            prevArrayValue = tag.memory.arrayValue;\n        }\n        else {\n            templater = subTag;\n            tag = templater.tag;\n            prevArrayValue = templater.arrayValue;\n        }\n        // const tag = subTag?.templater.tag as Tag\n        const lastTag = item.support.templater.tag;\n        const lastArrayValue = lastTag.memory.arrayValue;\n        const destroyItem = !areLikeValues(prevArrayValue, lastArrayValue);\n        if (destroyItem) {\n            destroyArrayItem(lastArray.array, index, options);\n            ++removed;\n            return false;\n        }\n        return true;\n    });\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const item = value[index];\n        const previous = lastArray.array[index];\n        const previousSupport = previous?.support;\n        const subTag = item;\n        const tagClass = isTagClass(subTag);\n        const itemSubject = new TagJsSubject(\n        // runtimeInsertBefore,\n        undefined);\n        itemSubject.lastRun = lastArray.lastRun;\n        let templater = subTag.templater;\n        let support;\n        if (tagClass) {\n            if (!templater) {\n                templater = tagFakeTemplater(subTag);\n            }\n            support = new Support(templater, ownerSupport, itemSubject);\n        }\n        else {\n            templater = subTag;\n            support = setupNewTemplater(templater, ownerSupport, itemSubject);\n        }\n        // share global between old and new\n        if (previousSupport) {\n            const prevSubject = previousSupport.subject;\n            const global = prevSubject.global;\n            setupNewSupport(support, ownerSupport, prevSubject);\n            support.subject.global = global;\n            global.newest = support;\n        }\n        else {\n            setupNewSupport(support, ownerSupport, itemSubject);\n        }\n        // check for html``.key()\n        const tag = templater.tag || subTag;\n        const keySet = 'arrayValue' in tag.memory;\n        if (!keySet) {\n            const details = {\n                template: support.getTemplate().string,\n                array: value,\n            };\n            const message = 'Use html`...`.key(item) instead of html`...` to template an Array';\n            console.error(message, details);\n            const err = new ArrayNoKeyError(message, details);\n            throw err;\n        }\n        const couldBeSame = lastArray.array.length > index;\n        if (couldBeSame) {\n            const prevSupport = previous.support;\n            const prevGlobal = prevSupport.subject.global;\n            const oldest = prevGlobal.oldest;\n            oldest.updateBy(support);\n            continue;\n        }\n        processAddTagArrayItem(runtimeInsertBefore, support, index, options, lastArray.array, fragment);\n        lastArray.lastRun = support.subject.lastRun;\n        ownerSupport.subject.global.childTags.push(support);\n    }\n    return clones;\n}\nfunction setPlaceholderElm(insertBefore, subject) {\n    const placeholder = subject.global.placeholder = textNode.cloneNode(false);\n    const parentNode = insertBefore.parentNode;\n    parentNode.insertBefore(placeholder, insertBefore);\n    parentNode.removeChild(insertBefore);\n}\nfunction processAddTagArrayItem(before, support, index, options, lastArray, fragment) {\n    const lastValue = {\n        support, index\n    };\n    // Added to previous array\n    lastArray.push(lastValue);\n    const counts = {\n        added: options.counts.added + index,\n        removed: options.counts.removed,\n    };\n    // TODO: This might be causing double clones delete issues because all array items share same placeholder\n    support.subject.global.placeholder = before; // newTempElm\n    const newFragment = support.buildBeforeElement(undefined, { counts });\n    if (fragment) {\n        fragment.appendChild(newFragment);\n    }\n    else {\n        const placeholder = before; // subject.global.placeholder as Text\n        const parentNode = placeholder.parentNode;\n        parentNode.insertBefore(newFragment, placeholder);\n    }\n}\n/** compare two values. If both values are arrays then the items will be compared */\nfunction areLikeValues(valueA, valueB) {\n    if (valueA === valueB) {\n        return true;\n    }\n    const bothArrays = valueA instanceof Array && valueB instanceof Array;\n    const matchLengths = bothArrays && valueA.length == valueB.length;\n    if (matchLengths) {\n        return valueA.every((item, index) => item === valueB[index]);\n    }\n    return false;\n}\nfunction setupNewTemplater(templater, ownerSupport, itemSubject) {\n    const support = newSupportByTemplater(templater, ownerSupport, itemSubject);\n    renderTagOnly(support, support, itemSubject, ownerSupport);\n    return support;\n}\nfunction destroyArrayItem(lastArray, index, options) {\n    const last = lastArray[index];\n    const support = last.support;\n    destroyArrayTag(support, options.counts);\n    last.deleted = true;\n    ++options.counts.removed;\n}\n//# sourceMappingURL=processTagArray.js.map","import { empty } from './tag/ValueTypes.enum.js';\n// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const parent = lastFirstChild.parentNode;\n    // Insert the new value (never use innerHTML here)\n    const textNode = document.createTextNode(value); // never innerHTML\n    parent.insertBefore(textNode, lastFirstChild);\n    /* remove existing nodes */\n    parent.removeChild(lastFirstChild);\n    return textNode;\n}\nexport function castTextValue(value) {\n    // mimic React skipping to display EXCEPT for true does display on page\n    if ([undefined, false, null].includes(value)) { // || value === true\n        return empty;\n    }\n    return value;\n}\n//# sourceMappingURL=updateBeforeTemplate.function.js.map","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nexport function processRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    subject.global.insertBefore = insertBefore;\n    const before = subject.global.placeholder || insertBefore; // Either the template is on the doc OR its the first element we last put on doc\n    // matches but also was defined at some point\n    if (subject.lastValue === value && 'lastValue' in subject) {\n        return; // no need to update display, its the same\n    }\n    subject.lastValue = value;\n    const castedValue = castTextValue(value);\n    // replace existing string?\n    const oldClone = subject.global.placeholder;\n    if (oldClone) {\n        oldClone.textContent = castedValue;\n        return;\n    }\n    // Processing of regular values\n    const clone = updateBeforeTemplate(castedValue, before);\n    subject.global.placeholder = clone; // remember single element put down, for future updates\n}\nexport function processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore, // <template end interpolate /> (will be removed)\nownerSupport) {\n    subject.lastValue = value;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    subject.global.placeholder = clone; // remember single element put down, for future updates \n}\n//# sourceMappingURL=processRegularValue.function.js.map","import { processSubjectComponent } from './processSubjectComponent.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processFirstRegularValue } from './processRegularValue.function.js';\nimport { processTag, tagFakeTemplater } from './processTag.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { oneRenderToSupport } from './oneRenderToSupport.function.js';\nimport { getValueType } from '../getValueType.function.js';\nexport function processFirstSubjectValue(value, subject, // could be tag via result.tag\ninsertBefore, // <template end interpolate /> (will be removed)\nownerSupport, // owner\noptions, // {added:0, removed:0}\nfragment) {\n    const valueType = getValueType(value);\n    switch (valueType) {\n        case ValueTypes.templater:\n            processTag(value, ownerSupport, subject, fragment);\n            return;\n        case ValueTypes.tag:\n            const tag = value;\n            let templater = tag.templater;\n            if (!templater) {\n                templater = tagFakeTemplater(tag);\n            }\n            processTag(templater, ownerSupport, subject, fragment);\n            return;\n        case ValueTypes.tagArray:\n            return processTagArray(subject, value, insertBefore, ownerSupport, options, fragment);\n        case ValueTypes.tagComponent:\n            const newSupport = processSubjectComponent(value, subject, insertBefore, ownerSupport, options, fragment);\n            return newSupport;\n        case ValueTypes.function:\n            const v = value;\n            if (v.oneRender) {\n                const support = oneRenderToSupport(v, subject, ownerSupport);\n                renderTagOnly(support, support, subject, ownerSupport);\n                processTag(support.templater, ownerSupport, subject, fragment);\n                return;\n            }\n            break;\n    }\n    processFirstRegularValue(value, subject, subject.global.placeholder || insertBefore, ownerSupport);\n}\n//# sourceMappingURL=processFirstSubjectValue.function.js.map","import { TemplaterResult } from '../TemplaterResult.class.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nexport function oneRenderToSupport(wrapper, subject, ownerSupport) {\n    const templater = new TemplaterResult([]);\n    templater.tagJsType = ValueTypes.oneRender;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    const wrap = () => {\n        templater.tag = tag || (wrapper());\n        return support;\n    };\n    templater.wrapper = wrap;\n    wrap.parentWrap = wrap;\n    wrap.oneRender = true;\n    wrap.parentWrap.original = wrapper;\n    return support;\n}\n//# sourceMappingURL=oneRenderToSupport.function.js.map","import { textNode } from './ValueTypes.enum.js';\nexport function setTagPlaceholder(global) {\n    const insertBefore = global.insertBefore;\n    return global.placeholder = swapInsertBefore(insertBefore);\n}\nexport function swapInsertBefore(insertBefore) {\n    const placeholder = textNode.cloneNode(false);\n    const parentNode = insertBefore.parentNode;\n    parentNode.insertBefore(placeholder, insertBefore);\n    parentNode.removeChild(insertBefore);\n    return placeholder;\n}\n//# sourceMappingURL=setTagPlaceholder.function.js.map","import { Support } from '../Support.class.js';\nimport { TemplaterResult } from '../TemplaterResult.class.js';\nimport { isTagClass, isTagTemplater } from '../../isInstance.js';\nimport { processTagArray } from './processTagArray.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { processRegularValue } from './processRegularValue.function.js';\nimport { checkDestroyPrevious } from '../checkDestroyPrevious.function.js';\nimport { processSubjectComponent } from './processSubjectComponent.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { getFakeTemplater, processTag, setupNewSupport } from './processTag.function.js';\nimport { swapInsertBefore } from '../setTagPlaceholder.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getValueType } from '../getValueType.function.js';\nexport function updateExistingValue(subject, value, ownerSupport, insertBefore) {\n    const valueType = getValueType(value);\n    checkDestroyPrevious(subject, value, insertBefore, valueType);\n    // handle already seen tag components\n    if (valueType === ValueTypes.tagComponent) {\n        return prepareUpdateToComponent(value, subject, insertBefore, ownerSupport);\n    }\n    // was component but no longer\n    const support = subject.support;\n    if (support) {\n        if (valueType === ValueTypes.function) {\n            return subject; // its a oneRender tag\n        }\n        handleStillTag(subject, value, ownerSupport);\n        return subject;\n    }\n    switch (valueType) {\n        case ValueTypes.tagArray:\n            processTagArray(subject, value, insertBefore, // oldInsertBefore as InsertBefore,\n            ownerSupport, { counts: {\n                    added: 0,\n                    removed: 0,\n                } });\n            return subject;\n        case ValueTypes.templater:\n            processTag(value, ownerSupport, subject);\n            return subject;\n        case ValueTypes.tag:\n            const tag = value;\n            let templater = tag.templater;\n            if (!templater) {\n                templater = getFakeTemplater();\n                tag.templater = templater;\n                templater.tag = tag;\n            }\n            processTag(templater, ownerSupport, subject);\n            return subject;\n        case ValueTypes.subject:\n            return value;\n        // now its a useless function (we don't automatically call functions)\n        case ValueTypes.function:\n            if (!subject.global.placeholder) {\n                subject.global.placeholder = swapInsertBefore(insertBefore);\n            }\n            return subject;\n    }\n    // This will cause all other values to render\n    processRegularValue(value, subject, insertBefore);\n    return subject;\n}\nfunction handleStillTag(subject, value, ownerSupport) {\n    const lastSupport = subject.support;\n    let templater = value;\n    const isClass = isTagClass(value);\n    if (isClass) {\n        const tag = value;\n        templater = tag.templater;\n        if (!templater) {\n            templater = new TemplaterResult([]);\n            templater.tag = tag;\n            tag.templater = templater;\n        }\n    }\n    const valueSupport = new Support(templater, ownerSupport, subject);\n    const isSameTag = value && isLikeTags(lastSupport, valueSupport);\n    if (isTagTemplater(value)) {\n        setupNewSupport(valueSupport, ownerSupport, subject);\n    }\n    /*\n    if(valueSupport.templater.wrapper?.parentWrap.original.toString().includes('🌹-1')) {\n      // console.log('isSameTag', isSameTag)\n    }\n    */\n    if (isSameTag) {\n        lastSupport.updateBy(valueSupport);\n        return;\n    }\n    if (isSameTag) {\n        return processTag(templater, ownerSupport, subject);\n    }\n    return processRegularValue(value, subject, subject.global.insertBefore);\n}\nfunction prepareUpdateToComponent(templater, subjectTag, insertBefore, ownerSupport) {\n    // When last value was not a component\n    if (!subjectTag.support) {\n        processSubjectComponent(templater, subjectTag, insertBefore, ownerSupport, {\n            counts: { added: 0, removed: 0 },\n        });\n        return subjectTag;\n    }\n    const support = new Support(templater, ownerSupport, subjectTag);\n    const subjectSup = subjectTag.support;\n    const prevSupport = subjectSup.subject.global.newest;\n    if (prevSupport) {\n        const newestState = prevSupport.state;\n        support.state.length = 0;\n        support.state.push(...newestState);\n    }\n    else {\n        processSubjectComponent(templater, subjectTag, insertBefore, ownerSupport, { counts: { added: 0, removed: 0 } });\n        return subjectTag;\n    }\n    subjectTag.global = subjectSup.subject.global;\n    subjectTag.support = support;\n    updateExistingTagComponent(ownerSupport, support, // latest value\n    subjectTag, insertBefore);\n    return subjectTag;\n}\n//# sourceMappingURL=updateExistingValue.function.js.map","import { elementInitCheck } from './elementInitCheck.js';\nimport { scanTextAreaValue } from './scanTextAreaValue.function.js';\nimport { subscribeToTemplate } from './subscribeToTemplate.function.js';\nexport function interpolateTemplate(fragment, insertBefore, // <template end interpolate /> (will be removed)\ncontext, // variable scope of {`__tagvar${index}`:'x'}\nownerSupport, // Tag class\ncounts) {\n    if (!insertBefore.hasAttribute('end')) {\n        return; // only care about <template end>\n    }\n    const variableName = insertBefore.getAttribute('id');\n    const subject = context[variableName];\n    subject.global.insertBefore = insertBefore;\n    // process dynamics later\n    /*\n    ??? newly removed\n    \n    const isDynamic = isTagComponent(subject._value) || isTagArray(subject.value)\n    if(isDynamic) {\n      return {\n        variableName,\n        ownerSupport,\n        subject,\n        insertBefore\n      }\n    }\n    */\n    subscribeToTemplate(fragment, insertBefore, subject, ownerSupport, counts);\n    return;\n}\n/** This is the function that enhances elements such as [class.something] and [style.color] OR it fixes elements that alter innerHTML */\nexport function afterElmBuild(elm, options, context, ownerSupport) {\n    if (!elm.getAttribute) {\n        return;\n    }\n    // Elements that alter innerHTML\n    const tagName = elm.nodeName; // elm.tagName\n    if (tagName === 'TEXTAREA') {\n        scanTextAreaValue(elm, context, ownerSupport);\n    }\n    let diff = options.counts.added;\n    diff = elementInitCheck(elm, options.counts) - diff;\n    const hasFocusFun = elm.focus;\n    if (hasFocusFun) {\n        if (elm.hasAttribute('autofocus')) {\n            elm.focus();\n        }\n        if (elm.hasAttribute('autoselect')) {\n            elm.select();\n        }\n    }\n    const children = elm.children;\n    if (children) {\n        for (let index = children.length - 1; index >= 0; --index) {\n            const child = children[index];\n            const subOptions = {\n                ...options,\n                counts: options.counts,\n            };\n            afterElmBuild(child, subOptions, context, ownerSupport);\n        }\n    }\n}\n//# sourceMappingURL=interpolateTemplate.js.map","import { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { swapInsertBefore } from '../tag/setTagPlaceholder.function.js';\nexport function subscribeToTemplate(fragment, insertBefore, subject, ownerSupport, counts) {\n    let called = false;\n    const onValue = (value) => {\n        if (called) {\n            updateExistingValue(subject, value, ownerSupport, insertBefore);\n            return;\n        }\n        const templater = value;\n        processFirstSubjectValue(templater, subject, insertBefore, ownerSupport, {\n            counts: { ...counts },\n        }, syncRun ? fragment : undefined);\n        called = true;\n    };\n    // leave no template tag\n    if (!subject.global.placeholder) {\n        subject.global.placeholder = swapInsertBefore(insertBefore);\n    }\n    let mutatingCallback = onValue;\n    const callback = (value) => mutatingCallback(value);\n    let syncRun = true;\n    const sub = subject.subscribe(callback);\n    syncRun = false;\n    ownerSupport.subject.global.subscriptions.push(sub);\n}\n//# sourceMappingURL=subscribeToTemplate.function.js.map","export function elementInitCheck(nextSibling, counts) {\n    const onInitDoubleWrap = nextSibling.oninit;\n    if (!onInitDoubleWrap) {\n        return counts.added;\n    }\n    const onInitWrap = onInitDoubleWrap.tagFunction;\n    if (!onInitWrap) {\n        return counts.added;\n    }\n    const onInit = onInitWrap.tagFunction;\n    if (!onInit) {\n        return counts.added;\n    }\n    const event = { target: nextSibling, stagger: counts.added };\n    onInit(event);\n    return ++counts.added;\n}\n//# sourceMappingURL=elementInitCheck.js.map","import { interpolateTemplate } from './interpolateTemplate.js';\nexport function interpolateContentTemplates(context, support, options, children, fragment) {\n    // counting for animation stagger computing\n    const counts = options.counts;\n    const tagComponents = [];\n    const childLength = children.length;\n    for (let index = childLength - 1; index >= 0; --index) {\n        const child = children[index];\n        // const tagComponent =\n        interpolateTemplate(fragment, child, context, support, counts);\n        // clones.push(...nextClones)\n        /*\n        if(tagComponent) {\n          tagComponents.push(tagComponent)\n          continue\n        }\n        */\n        if (child.children) {\n            for (let index = child.children.length - 1; index >= 0; --index) {\n                const subChild = child.children[index];\n                // IF <template end /> its a variable to be processed\n                if (isRenderEndTemplate(subChild)) {\n                    // const tagComponent =\n                    interpolateTemplate(fragment, subChild, context, support, counts);\n                    /*\n                    if(tagComponent) {\n                      tagComponents.push(tagComponent)\n                    }\n                    */\n                }\n                const nextTagComponent = interpolateContentTemplates(context, support, options, subChild.children, fragment);\n                tagComponents.push(...nextTagComponent);\n            }\n        }\n    }\n    return tagComponents;\n}\nfunction isRenderEndTemplate(child) {\n    const isTemplate = child.tagName === 'TEMPLATE';\n    return isTemplate &&\n        child.getAttribute('interpolate') !== undefined &&\n        child.getAttribute('end') !== undefined;\n}\n//# sourceMappingURL=interpolateContentTemplates.js.map","import { interpolateAttributes } from './interpolateAttributes.js';\nimport { interpolateContentTemplates } from './interpolateContentTemplates.js';\n/** Review elements within an element */\nexport function interpolateElement(fragment, template, // element containing innerHTML to review interpolations\ncontext, // variables used to evaluate\ninterpolatedTemplates, ownerSupport, options) {\n    const tagComponents = [];\n    const result = interpolatedTemplates.interpolation;\n    // const template = container.children[0] as HTMLTemplateElement\n    const children = template.content.children;\n    if (result.keys.length) {\n        const nextTagComponents = interpolateContentTemplates(context, ownerSupport, options, children, fragment);\n        tagComponents.push(...nextTagComponents);\n    }\n    interpolateAttributes(template, context, ownerSupport);\n    processChildrenAttributes(children, context, ownerSupport);\n    return tagComponents;\n}\nfunction processChildrenAttributes(children, context, ownerSupport) {\n    for (let index = children.length - 1; index >= 0; --index) {\n        const child = children[index];\n        interpolateAttributes(child, context, ownerSupport);\n        if (child.children) {\n            processChildrenAttributes(child.children, context, ownerSupport);\n        }\n    }\n}\n//# sourceMappingURL=interpolateElement.js.map","import { escapeSearch, variablePrefix } from '../tag/Tag.class.js';\n// support arrow functions in attributes\nexport const interpolateReplace = /(?:<[^>]*?(?:(?:\\s+\\w+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^>\\s]+)))*\\s*)\\/?>)|({__tagvar[^}]+})/g;\nexport function interpolateString(string) {\n    const result = interpolateToTemplates(string);\n    result.string = result.string.replace(escapeSearch, variablePrefix);\n    return result;\n}\nconst templateStart = '<template interpolate end id=\"';\nconst templateEnd = '\"></template>';\n/** replaces ${x} with <template id=\"x-start\"></template><template id=\"x-end\"></template> */\nfunction interpolateToTemplates(template) {\n    const keys = [];\n    const string = template.replace(interpolateReplace, (match, expression) => {\n        // If the match is an HTML tag, don't replace\n        if (match.startsWith('<')) {\n            return match; // this is an attribute\n        }\n        const noBraces = expression.substring(1, expression.length - 1);\n        const id = noBraces;\n        keys.push(id);\n        return templateStart + id + templateEnd;\n    });\n    return { string, keys };\n}\n//# sourceMappingURL=interpolations.js.map","import { escapeVariable, variablePrefix } from './Tag.class.js';\nimport { deepClone } from '../deepFunctions.js';\nimport { isTagComponent } from '../isInstance.js';\nimport { cloneValueArray } from './cloneValueArray.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nimport { getChildTagsToDestroy } from './destroy.support.js';\nimport { elementDestroyCheck } from './elementDestroyCheck.function.js';\nimport { updateContextItem } from './update/updateContextItem.function.js';\nimport { processNewValue } from './update/processNewValue.function.js';\nimport { interpolateElement } from '../interpolations/interpolateElement.js';\nimport { afterInterpolateElement } from '../interpolations/afterInterpolateElement.function.js';\nimport { empty } from './ValueTypes.enum.js';\nimport { interpolateString } from '../interpolations/interpolations.js';\nconst prefixSearch = new RegExp(variablePrefix, 'g');\n/** used only for apps, otherwise use Support */\n// TODO: We need to split Support and simple tag support apart\nexport class BaseSupport {\n    templater;\n    subject;\n    isApp = true;\n    appElement; // only seen on this.getAppSupport().appElement\n    strings;\n    values;\n    propsConfig;\n    // stays with current render\n    state = [];\n    hasLiveElements = false;\n    constructor(templater, subject, castedProps) {\n        this.templater = templater;\n        this.subject = subject;\n        const props = templater.props; // natural props\n        this.propsConfig = this.clonePropsBy(props, castedProps);\n    }\n    clonePropsBy(props, castedProps) {\n        const children = this.templater.children; // children tags passed in as arguments\n        const kidValue = children.value;\n        const latestCloned = props.map(props => deepClone(props));\n        return this.propsConfig = {\n            latest: props,\n            latestCloned, // assume its HTML children and then detect\n            castProps: castedProps,\n            lastClonedKidValues: kidValue.map(kid => {\n                const cloneValues = cloneValueArray(kid.values);\n                return cloneValues;\n            })\n        };\n    }\n    /** Function that kicks off actually putting tags down as HTML elements */\n    buildBeforeElement(fragment = document.createDocumentFragment(), options = {\n        counts: { added: 0, removed: 0 },\n    }) {\n        const subject = this.subject;\n        const global = this.subject.global;\n        global.oldest = this;\n        global.newest = this;\n        subject.support = this;\n        this.hasLiveElements = true;\n        const context = this.update();\n        const template = this.getTemplate();\n        const tempDraw = document.createElement('template'); // put down a first element we can expect to always be there\n        tempDraw.innerHTML = template.string;\n        // Search/replace innerHTML variables but don't interpolate tag components just yet\n        // const tagComponents = \n        interpolateElement(fragment, tempDraw, context, template, this, // ownerSupport,\n        {\n            counts: options.counts\n        });\n        afterInterpolateElement(fragment, tempDraw, this, // ownerSupport\n        context, options);\n        return fragment;\n    }\n    getTemplate() {\n        const thisTag = this.templater.tag;\n        const strings = this.strings || thisTag.strings;\n        const values = this.values || thisTag.values;\n        const lastRun = this.subject.lastRun;\n        if (lastRun) {\n            if (lastRun.strings.length === strings.length) {\n                const stringsMatch = lastRun.strings.every((string, index) => \n                // string.length === strings[index].length\n                string === strings[index]);\n                if (stringsMatch && lastRun.values.length === values.length) {\n                    return lastRun; // performance savings using the last time this component was rendered\n                }\n            }\n        }\n        const string = strings.map((string, index) => {\n            const safeString = string.replace(prefixSearch, escapeVariable);\n            const endString = safeString + (values.length > index ? '{' + variablePrefix + index.toString() + '}' : empty);\n            // ??? new removed\n            //const trimString = endString.replace(/>\\s*/g,'>').replace(/\\s*</g,'<')\n            //return trimString\n            return endString;\n        }).join(empty);\n        const interpolation = interpolateString(string);\n        const run = {\n            interpolation,\n            string: interpolation.string,\n            strings,\n            values,\n        };\n        this.subject.lastRun = run;\n        return run;\n    }\n    update() {\n        return this.updateContext(this.subject.global.context);\n    }\n    updateContext(context) {\n        const thisTag = this.templater.tag;\n        const strings = this.strings || thisTag.strings;\n        const values = this.values || thisTag.values;\n        strings.forEach((_string, index) => updateContext(values, index, context, this));\n        return context;\n    }\n    updateBy(support) {\n        const tempTag = support.templater.tag;\n        this.updateConfig(tempTag.strings, tempTag.values);\n    }\n    updateConfig(strings, values) {\n        this.strings = strings;\n        this.updateValues(values);\n    }\n    updateValues(values) {\n        this.values = values;\n        return this.updateContext(this.subject.global.context);\n    }\n    destroy(options = {\n        stagger: 0,\n    }) {\n        const global = this.subject.global;\n        const childTags = options.byParent ? [] : getChildTagsToDestroy(this.subject.global.childTags); // .toReversed()\n        if (isTagComponent(this.templater)) {\n            global.destroy$.next();\n            runBeforeDestroy(this, this);\n        }\n        this.destroySubscriptions();\n        // signify immediately child has been deleted (looked for during event processing)\n        for (let index = childTags.length - 1; index >= 0; --index) {\n            const child = childTags[index];\n            const subGlobal = child.subject.global;\n            delete subGlobal.newest;\n            subGlobal.deleted = true;\n            if (isTagComponent(child.templater)) {\n                runBeforeDestroy(child, child);\n            }\n            child.destroySubscriptions();\n            // resetSupport(this)\n        }\n        resetSupport(this);\n        // let mainPromise: Promise<number | (number | void | undefined)[]> | undefined    \n        // first paint\n        const { stagger, promises } = this.smartRemoveKids(options);\n        options.stagger = stagger;\n        if (promises.length) {\n            return Promise.all(promises).then(() => options.stagger);\n        }\n        return options.stagger;\n    }\n    smartRemoveKids(options = {\n        stagger: 0,\n    }) {\n        const startStagger = options.stagger;\n        const promises = [];\n        const myClones = this.subject.global.clones;\n        this.subject.global.childTags.forEach(childTag => {\n            const clones = childTag.subject.global.clones;\n            let cloneOne = clones[0];\n            if (cloneOne === undefined) {\n                const { stagger, promises: newPromises } = childTag.smartRemoveKids(options);\n                options.stagger = options.stagger + stagger;\n                promises.push(...newPromises);\n                return;\n            }\n            let count = 0;\n            // let deleted = false\n            while (cloneOne.parentNode && count < 5) {\n                if (myClones.includes(cloneOne)) {\n                    return; // no need to delete, they live within me\n                }\n                cloneOne = cloneOne.parentNode;\n                ++count;\n            }\n            // recurse\n            const { stagger, promises: newPromises } = childTag.smartRemoveKids(options);\n            options.stagger = options.stagger + stagger;\n            promises.push(...newPromises);\n        });\n        const promise = this.destroyClones({ stagger: startStagger }).promise;\n        this.subject.global.clones.length = 0;\n        this.subject.global.childTags.length = 0;\n        if (promise) {\n            promises.unshift(promise);\n        }\n        return { promises, stagger: options.stagger };\n    }\n    destroyClones(options = {\n        stagger: 0,\n    }) {\n        const oldClones = this.subject.global.clones; // .toReversed()\n        // check subjects that may have clones attached to them\n        const promises = oldClones.map(clone => this.checkCloneRemoval(clone, options.stagger)).filter(x => x); // only return promises\n        if (promises.length) {\n            return { promise: Promise.all(promises), stagger: options.stagger };\n        }\n        return { stagger: options.stagger };\n    }\n    /** Reviews elements for the presences of ondestroy */\n    checkCloneRemoval(clone, stagger) {\n        let promise;\n        const customElm = clone;\n        if (customElm.ondestroy) {\n            promise = elementDestroyCheck(customElm, stagger);\n        }\n        if (promise instanceof Promise) {\n            return promise.then(() => {\n                const parentNode = clone.parentNode;\n                // TODO: we need to remove this IF\n                if (parentNode) {\n                    parentNode.removeChild(clone);\n                }\n            });\n        }\n        const parentNode = clone.parentNode;\n        if (parentNode) {\n            parentNode.removeChild(clone);\n        }\n        const ownerSupport = this.ownerSupport;\n        if (ownerSupport) {\n            const clones = ownerSupport.subject.global.clones;\n            const index = clones.indexOf(clone);\n            if (index >= 0) {\n                clones.splice(index, 1);\n            }\n        }\n        return promise;\n    }\n    destroySubscriptions() {\n        const subs = this.subject.global.subscriptions;\n        for (let index = subs.length - 1; index >= 0; --index) {\n            subs[index].unsubscribe();\n        }\n        subs.length = 0;\n    }\n}\nexport class Support extends BaseSupport {\n    templater;\n    ownerSupport;\n    subject;\n    version;\n    isApp = false;\n    constructor(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\n    ownerSupport, subject, castedProps, version = 0) {\n        super(templater, subject, castedProps);\n        this.templater = templater;\n        this.ownerSupport = ownerSupport;\n        this.subject = subject;\n        this.version = version;\n    }\n    getAppSupport() {\n        let tag = this;\n        while (tag.ownerSupport) {\n            tag = tag.ownerSupport;\n        }\n        return tag;\n    }\n}\nexport function resetSupport(support) {\n    const global = support.subject.global;\n    global.context = {};\n    delete global.oldest; // may not be needed\n    delete global.newest;\n    const subject = support.subject;\n    delete subject.support;\n}\nfunction updateContext(values, index, context, support) {\n    const hasValue = values.length > index;\n    if (!hasValue) {\n        return;\n    }\n    const variableName = variablePrefix + index;\n    const value = values[index];\n    // is something already there?\n    const exists = variableName in context;\n    if (exists) {\n        if (support.subject.global.deleted) {\n            const valueSupport = (value && value.support);\n            if (valueSupport) {\n                valueSupport.destroy();\n                return context; // item was deleted, no need to emit\n            }\n        }\n        return updateContextItem(context, variableName, value);\n    }\n    // 🆕 First time values below\n    context[variableName] = processNewValue(value, support);\n}\n//# sourceMappingURL=Support.class.js.map","import { buildClones } from '../buildClones.function.js';\nimport { afterElmBuild } from './interpolateTemplate.js';\nexport function afterInterpolateElement(container, template, support, context, options) {\n    const clones = buildClones(container, template);\n    if (!clones.length) {\n        return clones;\n    }\n    const global = support.subject.global;\n    for (let index = clones.length - 1; index >= 0; --index) {\n        const clone = clones[index];\n        afterElmBuild(clone, options, context, support);\n    }\n    global.clones.push(...clones);\n    return clones;\n}\n//# sourceMappingURL=afterInterpolateElement.function.js.map","export function buildClones(fragment, template) {\n    const clones = [];\n    let nextSibling = template.content.firstChild;\n    while (nextSibling) {\n        const nextNextSibling = nextSibling.nextSibling;\n        fragment.appendChild(nextSibling);\n        clones.push(nextSibling);\n        nextSibling = nextNextSibling;\n    }\n    return clones;\n}\n//# sourceMappingURL=buildClones.function.js.map","import { isSubjectInstance } from '../../isInstance.js';\nexport function updateContextItem(context, variableName, value) {\n    const subject = context[variableName];\n    if (isSubjectInstance(value)) {\n        return; // emits on its own\n    }\n    // listeners will evaluate updated values to possibly update display(s)\n    subject.next(value);\n    return;\n}\n//# sourceMappingURL=updateContextItem.function.js.map","export function elementDestroyCheck(nextSibling, stagger) {\n    const onDestroyDoubleWrap = nextSibling.ondestroy;\n    if (!onDestroyDoubleWrap) {\n        return;\n    }\n    const onDestroyWrap = onDestroyDoubleWrap.tagFunction;\n    if (!onDestroyWrap) {\n        return;\n    }\n    const onDestroy = onDestroyWrap.tagFunction;\n    if (!onDestroy) {\n        return;\n    }\n    const event = { target: nextSibling, stagger };\n    return onDestroy(event);\n}\n//# sourceMappingURL=elementDestroyCheck.function.js.map","import { resetSupport } from '../Support.class.js';\nimport { getChildTagsToDestroy } from '../destroy.support.js';\n/** used when a tag swaps content returned */\nexport function softDestroySupport(lastSupport, options = { byParent: false, stagger: 0 }) {\n    const global = lastSupport.subject.global;\n    global.deleted = true;\n    global.context = {};\n    const childTags = getChildTagsToDestroy(global.childTags);\n    lastSupport.destroySubscriptions();\n    childTags.forEach(child => {\n        const subGlobal = child.subject.global;\n        delete subGlobal.newest;\n        subGlobal.deleted = true;\n    });\n    lastSupport.smartRemoveKids();\n    lastSupport.subject.global.clones.length = 0; // tag maybe used for something else\n    lastSupport.subject.global.childTags.length = 0; // tag maybe used for something else\n    resetSupport(lastSupport);\n    childTags.forEach(child => softDestroySupport(child, { byParent: true, stagger: 0 }));\n}\n//# sourceMappingURL=softDestroySupport.function.js.map","import { isLikeTags } from '../isLikeTags.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nimport { destroyUnlikeTags } from './destroyUnlikeTags.function.js';\nimport { softDestroySupport } from './softDestroySupport.function.js';\nexport function renderWithSupport(newSupport, lastSupport, // previous\nsubject, // events & memory\nownerSupport) {\n    const lastTemplater = lastSupport?.templater;\n    const lastStrings = lastTemplater?.tag?.strings;\n    const reSupport = renderTagOnly(newSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        destroyUnlikeTags(lastSupport, reSupport, subject);\n    }\n    else if (lastSupport) {\n        const oldLength = lastStrings?.length;\n        const newLength = reSupport.templater.tag?.strings.length;\n        if (oldLength !== newLength) {\n            softDestroySupport(lastSupport);\n        }\n    }\n    const lastOwnerSupport = lastSupport?.ownerSupport;\n    reSupport.ownerSupport = (ownerSupport || lastOwnerSupport);\n    return reSupport;\n}\n//# sourceMappingURL=renderWithSupport.function.js.map","import { softDestroySupport } from './softDestroySupport.function.js';\nimport { moveProviders } from '../update/updateExistingTagComponent.function.js';\nexport function destroyUnlikeTags(lastSupport, // old\nreSupport, // new\nsubject) {\n    // when a tag is destroyed, disconnect the globals\n    const global = reSupport.subject.global; // = {...oldGlobal} // break memory references\n    moveProviders(lastSupport, reSupport);\n    softDestroySupport(lastSupport);\n    delete global.deleted;\n    global.oldest = reSupport;\n    global.newest = reSupport;\n    subject.support = reSupport;\n}\n//# sourceMappingURL=destroyUnlikeTags.function.js.map","import { deepClone } from '../deepFunctions.js';\nimport { renderSupport } from '../tag/render/renderSupport.function.js';\nexport function handleProviderChanges(appSupport, provider) {\n    let hadChanged = false;\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    for (let index = tagsWithProvider.length - 1; index >= 0; --index) {\n        const { support, renderCount, provider } = tagsWithProvider[index];\n        if (support.subject.global.deleted) {\n            continue; // i was deleted after another tag processed\n        }\n        const notRendered = renderCount === support.subject.global.renderCount;\n        if (notRendered) {\n            hadChanged = true;\n            provider.clone = deepClone(provider.instance);\n            renderSupport(support.subject.global.newest, // support, // support.subject.global.newest as Support,\n            false);\n            continue;\n        }\n    }\n    return hadChanged;\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(support, provider, memory = []) {\n    memory.push({\n        support,\n        renderCount: support.subject.global.renderCount,\n        provider,\n    });\n    const childTags = provider.children;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        memory.push({\n            support: childTags[index],\n            renderCount: childTags[index].subject.global.renderCount,\n            provider,\n        });\n    }\n    return memory;\n}\n//# sourceMappingURL=handleProviderChanges.function.js.map","import { isLikeTags } from '../isLikeTags.function.js';\nimport { renderWithSupport } from './renderWithSupport.function.js';\nimport { providersChangeCheck } from '../../state/providersChangeCheck.function.js';\n/** Returns true when rendering owner is not needed. Returns false when rendering owner should occur */\nexport function renderExistingTag(oldestSupport, // oldest with elements on html\nnewSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const lastSupport = subject.support;\n    const global = lastSupport.subject.global;\n    // share point between renders\n    newSupport.subject.global = global;\n    const preRenderCount = global.renderCount;\n    providersChangeCheck(oldestSupport);\n    // When the providers were checked, a render to myself occurred and I do not need to re-render again\n    const prevSupport = global.newest;\n    const justUpdate = preRenderCount !== global.renderCount;\n    if (justUpdate) {\n        oldestSupport.subject.global.oldest.updateBy(prevSupport);\n        return prevSupport; // already rendered during triggered events\n    }\n    const toRedrawTag = prevSupport || lastSupport || global.oldest;\n    const reSupport = renderWithSupport(newSupport, toRedrawTag, subject, ownerSupport);\n    const oldest = global.oldest || oldestSupport;\n    if (isLikeTags(prevSupport, reSupport)) {\n        subject.support = reSupport;\n        oldest.updateBy(reSupport);\n    }\n    return reSupport;\n}\n//# sourceMappingURL=renderExistingTag.function.js.map","import { deepClone, deepEqual } from '../deepFunctions.js';\nimport { handleProviderChanges } from './handleProviderChanges.function.js';\nexport function providersChangeCheck(support) {\n    const global = support.subject.global;\n    const providersWithChanges = global.providers.filter(provider => !deepEqual(provider.instance, provider.clone));\n    let hadChanged = false;\n    // reset clones\n    for (let index = providersWithChanges.length - 1; index >= 0; --index) {\n        const provider = providersWithChanges[index];\n        const owner = provider.owner;\n        if (handleProviderChanges(owner, provider)) {\n            hadChanged = true;\n        }\n        provider.clone = deepClone(provider.instance);\n    }\n    return hadChanged;\n}\n//# sourceMappingURL=providersChangeCheck.function.js.map","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingTag } from './renderExistingTag.function.js';\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderSupport(support, // must be latest/newest state render\nrenderUp) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    // is it just a vanilla tag, not component?\n    if (!templater.wrapper) { // || isTagTemplater(templater) \n        const ownerTag = support.ownerSupport;\n        ++global.renderCount;\n        if (ownerTag.subject.global.deleted) {\n            return support;\n        }\n        return renderSupport(ownerTag.subject.global.newest, true);\n    }\n    if (support.subject.global.locked) {\n        support.subject.global.blocked.push(support);\n        return support;\n    }\n    const subject = support.subject;\n    const oldest = support.subject.global.oldest;\n    let ownerSupport;\n    let selfPropChange = false;\n    const shouldRenderUp = renderUp && support;\n    if (shouldRenderUp) {\n        ownerSupport = support.ownerSupport;\n        if (ownerSupport) {\n            const nowProps = templater.props;\n            const latestProps = support.propsConfig.latestCloned;\n            selfPropChange = !deepEqual(nowProps, latestProps);\n        }\n    }\n    const tag = renderExistingTag(oldest, support, ownerSupport, // useSupport,\n    subject);\n    if (ownerSupport && selfPropChange) {\n        const myOwnerSupport = ownerSupport.subject.global.newest;\n        renderSupport(myOwnerSupport, true);\n        return tag;\n    }\n    return tag;\n}\n//# sourceMappingURL=renderSupport.function.js.map","import { renderSupport } from '../tag/render/renderSupport.function.js';\nimport { syncStates } from './syncStates.function.js';\nexport default function callbackStateUpdate(support, callback, oldState, ...args) {\n    const state = support.state;\n    // ensure that the oldest has the latest values first\n    syncStates(state, oldState);\n    // run the callback\n    const maybePromise = callback(...args);\n    // send the oldest state changes into the newest\n    syncStates(oldState, state);\n    renderSupport(support, // support.global.newest as Support,\n    false);\n    if (maybePromise instanceof Promise) {\n        maybePromise.finally(() => {\n            // send the oldest state changes into the newest\n            syncStates(oldState, state);\n            renderSupport(support, // support.global.newest as Support,\n            false);\n        });\n    }\n    // return undefined as T\n    return maybePromise;\n}\n//# sourceMappingURL=callbackStateUpdate.function.js.map","import { setUse } from './setUse.function.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport callbackStateUpdate from './callbackStateUpdate.function.js';\nlet innerCallback = (callback) => (a, b, c, d, e, f) => {\n    throw new SyncCallbackError('Callback function was called immediately in sync and must instead be call async');\n};\nexport const callbackMaker = () => innerCallback;\nconst originalGetter = innerCallback; // callbackMaker\nsetUse({\n    beforeRender: support => initMemory(support),\n    beforeRedraw: support => initMemory(support),\n    afterRender: support => {\n        support.subject.global.callbackMaker = true;\n        innerCallback = originalGetter; // prevent crossing callbacks with another tag\n    },\n});\nconst syncError = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n/** Wrap a function that will be called back. After the wrapper and function are called, a rendering cycle will update display */\nexport function callback(callback) {\n    const support = getSupportInCycle();\n    if (!support) {\n        throw syncError;\n    }\n    const oldState = setUse.memory.stateConfig.array;\n    const trigger = (...args) => {\n        const callbackMaker = support.subject.global.callbackMaker;\n        if (callbackMaker) {\n            return callbackStateUpdate(support, callback, oldState, ...args);\n        }\n        return callback(...args);\n    };\n    return trigger;\n}\nfunction initMemory(support) {\n    const oldState = setUse.memory.stateConfig.array;\n    innerCallback = (callback) => {\n        const trigger = (...args) => {\n            const callbackMaker = support.subject.global.callbackMaker;\n            if (callbackMaker) {\n                return callbackStateUpdate(support, callback, oldState, ...args);\n            }\n            return callback(...args);\n        };\n        return trigger;\n    };\n}\n//# sourceMappingURL=callbackMaker.function.js.map","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n//# sourceMappingURL=onInit.js.map","import { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { state } from \"./state.function.js\";\nexport function onDestroy(callback) {\n    state(() => {\n        const support = getSupportInCycle();\n        support?.subject.global.destroy$.toCallback(callback);\n    });\n}\n//# sourceMappingURL=onDestroy.js.map","import { setUse } from './setUse.function.js';\nfunction setCurrentSupport(support) {\n    setUse.memory.childrenCurrentSupport = support;\n}\nexport function children() {\n    const support = setUse.memory.childrenCurrentSupport;\n    const children = support.templater.children;\n    return children;\n}\nsetUse({\n    beforeRender: support => setCurrentSupport(support),\n    beforeRedraw: support => setCurrentSupport(support),\n});\n//# sourceMappingURL=children.js.map","export const tags = [];\n//# sourceMappingURL=tag.utils.js.map","import { Tag } from './Tag.class.js';\nexport function html(strings, ...values) {\n    return new Tag(strings, values);\n}\n//# sourceMappingURL=html.js.map","import { runTagCallback } from '../interpolations/bindSubjectCallback.function.js';\nimport { Support } from './Support.class.js';\nimport { castProps } from '../alterProp.function.js';\nimport { setUse } from '../state/setUse.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { html } from './html.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    const stateArray = setUse.memory.stateConfig.array;\n    // this function gets called by taggedjs\n    const wrapper = (lastSupport, subject) => executeWrap(stateArray, templater, result, lastSupport, subject);\n    return wrapper;\n}\nfunction executeWrap(stateArray, templater, result, lastSupport, subject) {\n    const global = lastSupport.subject.global;\n    ++global.renderCount;\n    const childSubject = templater.children;\n    const lastArray = global.oldest?.templater.children.lastArray;\n    if (lastArray) {\n        childSubject.lastArray = lastArray;\n    }\n    // result.original\n    const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n    let props = templater.props;\n    // When defined, this must be an update where my new props have already been made for me\n    const preCastedProps = lastSupport.propsConfig.castProps;\n    const castedProps = preCastedProps || castProps(props, lastSupport, stateArray);\n    // const latestCloned = props.map(props => deepClone(props)) // castedProps\n    // CALL ORIGINAL COMPONENT FUNCTION\n    let tag = originalFunction(...castedProps);\n    if (tag instanceof Function) {\n        tag = tag();\n    }\n    if (!tag || tag.tagJsType !== ValueTypes.tag) {\n        tag = html `${tag}`; // component returned a non-component value\n    }\n    tag.templater = templater;\n    templater.tag = tag;\n    tag.memory.arrayValue = templater.arrayValue; // tag component could have been used in array.map\n    const support = new Support(templater, lastSupport.ownerSupport, subject, castedProps, global.renderCount);\n    support.subject.global = global;\n    // ??? this should be set by outside?\n    global.oldest = global.oldest || support;\n    const nowState = setUse.memory.stateConfig.array;\n    support.state.push(...nowState);\n    if (templater.madeChildIntoSubject) {\n        const value = childSubject.value;\n        for (let index = value.length - 1; index >= 0; --index) {\n            const kid = value[index];\n            const values = kid.values;\n            for (let index = values.length - 1; index >= 0; --index) {\n                const value = values[index];\n                if (!(value instanceof Function)) {\n                    continue;\n                }\n                const valuesValue = kid.values[index];\n                if (valuesValue.isChildOverride) {\n                    continue; // already overwritten\n                }\n                // all functions need to report to me\n                kid.values[index] = function (...args) {\n                    return runTagCallback(value, // callback\n                    support.ownerSupport, this, // bindTo\n                    args);\n                };\n                valuesValue.isChildOverride = true;\n            }\n        }\n    }\n    return support;\n}\n//# sourceMappingURL=getTagWrap.function.js.map","import { setUse } from '../state/index.js';\nimport { TemplaterResult } from './TemplaterResult.class.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nlet tagCount = 0;\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent) {\n    /** function developer triggers */\n    const parentWrap = (function tagWrapper(...props) {\n        const templater = new TemplaterResult(props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        if (!innerTagWrap.parentWrap) {\n            innerTagWrap.parentWrap = parentWrap;\n        }\n        templater.tagged = true;\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }) // we override the function provided and pretend original is what's returned\n    ;\n    parentWrap.original = tagComponent;\n    parentWrap.compareTo = tagComponent.toString();\n    const tag = tagComponent;\n    parentWrap.isTag = true;\n    parentWrap.original = tag;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUse;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\n/** Used to create a tag component that renders once and has no addition rendering cycles */\ntag.oneRender = (...props) => {\n    throw new Error('Do not call function tag.oneRender but instead set it as: `(props) => tag.oneRender = (state) => html`` `');\n};\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\ntag.route = (routeProps) => {\n    throw new Error('Do not call function tag.route but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\ntag.app = (routeTag) => {\n    throw new Error('Do not call function tag.route but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\nObject.defineProperty(tag, 'oneRender', {\n    set(oneRenderFunction) {\n        oneRenderFunction.oneRender = true;\n    },\n});\n//# sourceMappingURL=tag.js.map","import { BaseSupport } from './Support.class.js';\nimport { runAfterRender, runBeforeRender } from './tagRunner.js';\nimport { TagJsSubject } from './update/TagJsSubject.class.js';\nimport { textNode } from './ValueTypes.enum.js';\nconst appElements = [];\n/**\n *\n * @param app taggedjs tag\n * @param element HTMLElement\n * @param props object\n * @returns\n */\nexport function tagElement(app, // (...args: unknown[]) => TemplaterResult,\nelement, props) {\n    const appElmIndex = appElements.findIndex(appElm => appElm.element === element);\n    if (appElmIndex >= 0) {\n        appElements[appElmIndex].support.destroy();\n        appElements.splice(appElmIndex, 1);\n        // an element already had an app on it\n        console.warn('Found and destroyed app element already rendered to element', { element });\n    }\n    // Create the app which returns [props, runOneTimeFunction]\n    const wrapper = app(props);\n    // const fragment = document.createDocumentFragment()\n    const template = document.createElement('template');\n    const placeholder = textNode.cloneNode(false);\n    const support = runWrapper(wrapper, template, placeholder);\n    const global = support.subject.global;\n    support.appElement = element;\n    support.isApp = true;\n    global.isApp = true;\n    element.destroy = () => {\n        support.destroy(); // never return anything here\n    };\n    global.insertBefore = placeholder // template\n    ;\n    global.placeholder = placeholder;\n    const newFragment = support.buildBeforeElement(undefined);\n    support.subject.global.oldest = support;\n    support.subject.global.newest = support;\n    element.setUse = app.original.setUse;\n    appElements.push({ element, support });\n    element.appendChild(newFragment);\n    return {\n        support,\n        tags: app.original.tags,\n    };\n}\nexport function runWrapper(templater, insertBefore, placeholder) {\n    let newSupport = {};\n    // TODO: A fake subject may become a problem\n    const subject = new TagJsSubject(newSupport);\n    newSupport = new BaseSupport(templater, subject);\n    subject.global.insertBefore = insertBefore;\n    subject.global.placeholder = placeholder;\n    subject.global.oldest = subject.global.oldest || newSupport;\n    subject.next(templater);\n    subject.support = newSupport;\n    runBeforeRender(newSupport, undefined);\n    // Call the apps function for our tag templater\n    const wrapper = templater.wrapper;\n    const support = wrapper(newSupport, subject);\n    runAfterRender(newSupport, support);\n    return support;\n}\n//# sourceMappingURL=tagElement.js.map","export * from './tag/index.js';\nexport * from './errors.js';\nexport * from './subject.types.js';\nexport * from './isInstance.js';\nexport * from './state/index.js';\nexport * from './subject/index.js';\nexport * from './tag/Support.class.js';\nexport * from './interpolations/ElementTargetEvent.interface.js';\nexport * from './interpolations/interpolateElement.js';\nexport * from './interpolations/InsertBefore.type.js';\nexport { tagElement } from './tag/tagElement.js';\nexport { Tag, variablePrefix } from './tag/Tag.class.js';\nexport { runBeforeRender } from './tag/tagRunner.js';\nexport { renderSupport } from './tag/render/renderSupport.function.js';\nexport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nexport { isLikeValueSets } from './tag/isLikeTags.function.js';\nimport { renderTagOnly } from './tag/render/renderTagOnly.function.js';\nimport { renderSupport } from './tag/render/renderSupport.function.js';\nimport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nimport { tagElement } from './tag/tagElement.js';\nexport const hmr = {\n    tagElement, renderWithSupport, renderSupport,\n    renderTagOnly,\n};\n//# sourceMappingURL=index.js.map","import { html, letState, tag } from \"taggedjs\";\nexport const attributeDebug = tag(() => {\n    let selected = letState('a')(x => [selected, selected = x]);\n    let isOrange = letState(true)(x => [isOrange, isOrange = x]);\n    return html `\n    <input onchange=${(event) => selected = event.target.value} placeholder=\"a b or c\" />\n    <select id=\"select-sample-drop-down\">\n      ${['a', 'b', 'c'].map(item => html `\n        <option value=${item} ${item == selected ? 'selected' : ''}>${item} - ${item == selected ? 'true' : 'false'}</option>\n      `.key(item))}\n    </select>\n    <hr />\n    <h3>Special Attributes</h3>\n    <div>\n      <input type=\"checkbox\" onchange=${(event) => isOrange = event.target.checked} ${isOrange && 'checked'} /> - ${isOrange ? 'true' : 'false'}\n    </div>\n    <div style=\"display: flex;flex-wrap:wrap;gap:1em\">      \n      <div\n        style.background-color=${isOrange ? 'orange' : ''}\n        style.color=${isOrange ? 'black' : ''}\n      >style.background-color=&dollar;{'orange'}</div>\n      \n      <div\n        class.background-orange=${isOrange ? true : false}\n        class.text-black=${isOrange ? true : false}\n      >class.background-orange=&dollar;{true}</div>\n      \n      <div class=${isOrange ? 'background-orange text-black' : ''}\n      >class=&dollar;{'background-orange text-black'}</div>\n      \n      <div ${{ class: 'text-white' + (isOrange ? ' background-orange' : '') }}\n      >class=&dollar;{'background-orange'} but always white</div>\n    </div>\n    <style>\n      .background-orange {background-color:orange}\n      .text-black {color:black}\n      .text-white {color:white}\n    </style>\n  `;\n});\n","import { html, tag, letState, ValueSubject, state, combineLatest, willPromise } from \"taggedjs\";\nexport const contentDebug = tag(() => {\n    const vs0 = state(() => new ValueSubject(0));\n    const vs1 = state(() => new ValueSubject(1));\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    ++renderCount;\n    return html `\n    <div style=\"font-size:0.8em\">You should see \"0\" here => \"${0}\"</div>\n    <!--proof you cannot see false values -->\n    <div style=\"font-size:0.8em\">\n      <fieldset>\n        <legend>false test</legend>\n        You should see \"\" here => \"${false}\"\n      </fieldset>\n    </div>\n    <div style=\"font-size:0.8em\">\n      <fieldset>\n        <legend>null test</legend>\n        You should see \"\" here => \"${null}\"\n      </fieldset>\n    </div>\n    <div style=\"font-size:0.8em\">\n      <fieldset>\n        <legend>undefined test</legend>\n        You should see \"\" here => \"${undefined}\"\n      </fieldset>\n    </div>\n    <!--proof you can see true booleans -->\n    <div style=\"font-size:0.8em\">\n      <fieldset>\n        <legend>true test</legend>\n        You should see \"true\" here => \"${true}\"\n      </fieldset>\n    </div>\n    <!--proof you can try to use the tagVar syntax -->\n    <div style=\"font-size:0.8em\">You should see \"${'{'}22${'}'}\" here => \"{22}\"</div>\n    <div style=\"font-size:0.8em\">You should see \"${'{'}__tagVar0${'}'}\" here => \"{__tagVar0}\"</div>\n    <div style=\"font-size:0.8em\">should be a safe string no html \"&lt;div&gt;hello&lt;/div&gt;\" here => \"${'<div>hello</div>'}\"</div>\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      <fieldset style=\"flex:1\">\n        <legend>value subject</legend>\n        0 === ${vs0}\n      </fieldset>\n      \n      <fieldset style=\"flex:1\">\n        <legend>piped subject</legend>        \n        <span id=\"content-subject-pipe-display0\">55</span> ===\n        <span id=\"content-subject-pipe-display1\">${vs0.pipe(() => 55)}</span>\n      </fieldset>\n      \n      <fieldset style=\"flex:1\">\n        <legend>combineLatest</legend>\n        <span id=\"content-combineLatest-pipe-display0\">1</span> ===\n        <span id=\"content-combineLatest-pipe-display1\">${combineLatest([vs0, vs1]).pipe(x => x[1])}</span>\n      </fieldset>\n      \n      <fieldset style=\"flex:1\">\n        <legend>combineLatest piped html</legend>\n        <span id=\"content-combineLatest-pipeHtml-display0\"><b>bold 77</b></span> ===\n        <span id=\"content-combineLatest-pipeHtml-display1\">${combineLatest([vs0, vs1]).pipe(willPromise(x => Promise.resolve(html `<b>bold 77</b>`)))}</span>\n      </fieldset>\n    </div>\n    (render count ${renderCount})\n  `;\n});\n","export function willCallback(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        });\n        callback(lastValue, utils.next);\n    });\n}\n/** .pipe( promise((x) => Promise.resolve(44)) ) */\nexport function willPromise(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        result.then(x => utils.next(x));\n    });\n}\n/** .pipe( willSubscribe((x) => new ValueSubject(44)) ) */\nexport const willSubscribe = (callback) => {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        const subscription = result.subscribe(x => {\n            subscription.unsubscribe();\n            utils.next(x);\n        });\n    });\n};\n//# sourceMappingURL=will.functions.js.map","import { html, tag, letState } from \"taggedjs\";\nexport const tableDebug = tag(() => {\n    let showCell = letState(true)(x => [showCell, showCell = x]);\n    return html `\n    <div style=\"max-height: 800px;overflow-y: scroll;\">\n      <table cellPadding=${5} cellSpacing=${5} border=\"1\">\n        <thead style=\"position: sticky;top: 0;\">\n          <tr>\n            <th>hello</th>\n            <th>hello</th>\n            ${showCell && html `\n              <td>hello 2 thead cell</td>\n            `}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>world</td>\n            <td>world</td>\n            ${showCell && html `\n              <td>world 2 tbody cell</td>\n            `}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  `;\n});\n","import { letState, html, tag, onInit, callbackMaker, onDestroy } from \"taggedjs\";\nconst test0interval = 3000;\nconst test1interval = 6000;\nexport const intervalTester0 = tag(() => {\n    let intervalCount = letState(0)(x => [intervalCount, intervalCount = x]);\n    let intervalId = letState(undefined)(x => [intervalId, intervalId = x]);\n    let intervalId2 = letState(undefined)(x => [intervalId2, intervalId2 = x]);\n    let renderCounter = letState(0)(x => [renderCounter, renderCounter = x]);\n    let currentTime = letState(0)(x => [currentTime, currentTime = x]);\n    const callback = callbackMaker();\n    const increase = () => ++intervalCount;\n    const startInterval = () => {\n        console.info('🟢 interval test 0 started...');\n        trackTime();\n        intervalId = setInterval(callback(() => {\n            increase();\n        }), test0interval);\n    };\n    const stopInterval = () => {\n        clearInterval(intervalId);\n        clearInterval(intervalId2);\n        intervalId = undefined;\n        intervalId2 = undefined;\n        console.info('🛑 interval test 0 stopped');\n    };\n    function trackTime() {\n        currentTime = 0;\n        intervalId2 = setInterval(callback(() => {\n            currentTime = currentTime + 500;\n            if (currentTime >= test0interval) {\n                currentTime = 0;\n            }\n        }), 500);\n        console.info('▶️ interval started');\n    }\n    const toggle = () => {\n        if (intervalId || intervalId2) {\n            stopInterval();\n            return;\n        }\n        startInterval();\n    };\n    const delayIncrease = () => setTimeout(callback(() => {\n        currentTime = currentTime + 200;\n    }), 1000);\n    onInit(startInterval);\n    onDestroy(stopInterval);\n    ++renderCounter;\n    return html `<!--intervalDebug.js-->\n    <div>interval type 1 at ${test0interval}ms</div>\n    intervalId: ${intervalId}\n    <button type=\"button\" onclick=${increase}>${intervalCount}:${renderCounter}</button>\n    <input type=\"range\" min=\"0\" max=${test0interval} step=\"1\" value=${currentTime} />\n    <div>\n      --${currentTime}--\n    </div>\n    <button type=\"button\" onclick=${toggle}\n      style.background-color=${intervalId || intervalId2 ? 'red' : 'green'}\n    >start/stop</button>\n    <button type=\"button\" onclick=${delayIncrease}>delay increase currentTime</button>\n  `;\n});\nexport const intervalTester1 = tag(() => {\n    let intervalCount = letState(0)(x => [intervalCount, intervalCount = x]);\n    let intervalId = letState(undefined)(x => [intervalId, intervalId = x]);\n    let intervalId2 = letState(undefined)(x => [intervalId2, intervalId2 = x]);\n    let renderCounter = letState(0)(x => [renderCounter, renderCounter = x]);\n    let currentTime = letState(0)(x => [currentTime, currentTime = x]);\n    const callback = callbackMaker();\n    const increase = () => ++intervalCount;\n    function trackTime() {\n        currentTime = 0;\n        intervalId2 = setInterval(callback(() => {\n            currentTime = currentTime + 500;\n            if (currentTime >= test1interval) {\n                currentTime = 0;\n            }\n        }), 500);\n    }\n    const destroy = () => {\n        clearInterval(intervalId);\n        clearInterval(intervalId2);\n        intervalId = undefined;\n        intervalId2 = undefined;\n        console.info('🔴 interval 1 stopped');\n    };\n    function toggleInterval() {\n        if (intervalId) {\n            return destroy();\n        }\n        console.info('🟢 interval test 1 started...');\n        trackTime();\n        intervalId = setInterval(callback(() => {\n            increase();\n            console.info('slow interval ran');\n        }), test1interval);\n    }\n    onInit(toggleInterval);\n    onDestroy(destroy);\n    ++renderCounter;\n    return html `\n    <div>interval type 2 with ${test1interval}ms</div>\n    intervalId: ${intervalId}\n    <button type=\"button\" onclick=${increase}>${intervalCount}:${renderCounter}</button>\n    <input type=\"range\" min=\"0\" max=${test1interval} step=\"1\" value=${currentTime} />\n    <div>\n      --${currentTime}--\n    </div>\n    <button type=\"button\" onclick=${toggleInterval}\n      style.background-color=${intervalId ? 'red' : 'green'}\n    >start/stop</button>\n  `;\n});\n","export function createFx({ fxIn, fxOut, staggerBy = 300, }) {\n    return {\n        in: (input) => animateInit({ fxName: fxIn, staggerBy, ...input }),\n        out: (input) => animateDestroy({ fxName: fxOut, staggerBy, capturePosition: true, ...input }),\n    };\n}\nconst animateInit = async ({ target, stagger, staggerBy, fxName = 'fadeInDown' }) => {\n    target.style.opacity = '0';\n    if (stagger) {\n        await wait(stagger * staggerBy);\n    }\n    target.style.opacity = '1';\n    target.classList.add('animate__animated', 'animate__' + fxName);\n};\nconst animateDestroy = async ({ target, stagger, capturePosition = true, fxName = 'fadeOutUp', staggerBy }) => {\n    if (capturePosition) {\n        captureElementPosition(target);\n    }\n    if (stagger) {\n        await wait(stagger * staggerBy);\n    }\n    target.classList.add('animate__animated', 'animate__' + fxName);\n    await wait(1000); // don't allow remove from stage until animation completed\n    target.classList.remove('animate__animated', 'animate__' + fxName);\n};\n// absolute\nexport function captureElementPosition(element) {\n    element.style.zIndex = element.style.zIndex || 1;\n    const toTop = element.offsetTop + 'px';\n    const toLeft = element.offsetLeft + 'px';\n    const toWidth = (element.clientWidth + (element.offsetWidth - element.clientWidth) + 1) + 'px';\n    const toHeight = (element.clientHeight + (element.offsetHeight - element.clientHeight) + 1) + 'px';\n    const fix = () => {\n        element.style.top = toTop;\n        element.style.left = toLeft;\n        element.style.width = toWidth;\n        element.style.height = toHeight;\n        element.style.position = 'absolute';\n    };\n    // element.style.position = 'fixed'\n    // allow other elements that are being removed to have a moment to figure out where they currently sit\n    setTimeout(fix, 0);\n}\nfunction wait(time) {\n    return new Promise((res) => {\n        setTimeout(res, time);\n    });\n}\n//# sourceMappingURL=createFx.function.js.map","import { createFx } from \"./createFx.function.js\";\nexport const { in: fadeInDown, out: fadeOutUp } = createFx({ fxIn: 'fadeInDown', fxOut: 'fadeOutUp' });\n//# sourceMappingURL=index.js.map","import { intervalTester0, intervalTester1 } from \"./intervalDebug\";\nimport { html, tag, letState } from \"taggedjs\";\nimport { fadeInDown, fadeOutUp } from \"./animations\";\nexport const tagDebug = tag(() => {\n    let _firstState = letState('tagJsDebug.js')(x => [_firstState, _firstState = x]);\n    let showIntervals = letState(false)(x => [showIntervals, showIntervals = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    ++renderCount;\n    return html `<!-- tagDebug.js -->\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">    \n      <fieldset id=\"debug-intervals\" style=\"flex:2 2 20em\">\n        <legend>\n          Interval Testing\n        </legend>\n\n        <button\n          onclick=${() => showIntervals = !showIntervals}\n        >hide/show</button>\n\n        ${showIntervals && html `\n          <div oninit=${fadeInDown} ondestroy=${fadeOutUp}>\n            <div>${intervalTester0()}</div>\n            <hr />\n            <div>${intervalTester1()}</div>\n          </div>\n        `}\n      </fieldset>\n    </div>\n  `;\n});\n","import { tag, html } from \"taggedjs\";\nexport const renderCountDiv = tag(({ renderCount, name }) => html `<div><small>(${name} render count <span id=${name + '_render_count'}>${renderCount}</span>)</small></div>`);\n","import { html, tag, letState } from \"taggedjs\";\nimport { renderCountDiv } from \"./renderCount.component.js\";\nexport const tagSwitchDebug = tag((_t = 'tagSwitchDebug') => {\n    let selectedTag = letState(null)(x => [selectedTag, selectedTag = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    function changeSelectedTag(event) {\n        selectedTag = event.target.value;\n        if (selectedTag === 'undefined') {\n            selectedTag = undefined;\n        }\n        if (selectedTag === 'null') {\n            selectedTag = null;\n        }\n    }\n    let tagOutput = 'select tag below';\n    switch (selectedTag) {\n        case null:\n            tagOutput = 'null, select tag below';\n            break;\n        case \"\":\n            tagOutput = html `<div id=\"empty-string-1\"></div>`;\n            break;\n        case '1':\n            tagOutput = tag1({ title: 'value switch' });\n            break;\n        case '2':\n            tagOutput = tag2({ title: 'value switch' });\n            break;\n        case '3':\n            tagOutput = tag3({ title: 'value switch' });\n            break;\n    }\n    let tagOutput2 = html `<div id=\"select-tag-above\">select tag above</div>`;\n    switch (selectedTag) {\n        case null:\n            tagOutput2 = html `<div id=\"select-tag-above\">null, select tag above</div>`;\n            break;\n        case \"\":\n            tagOutput2 = html `<div id=\"select-tag-above\">empty-string, select tag above</div>`;\n            break;\n        case '1':\n            tagOutput2 = tag1({ title: 'tag switch' });\n            break;\n        case '2':\n            tagOutput2 = tag2({ title: 'tag switch' });\n            break;\n        case '3':\n            tagOutput2 = tag3({ title: 'tag switch' });\n            break;\n    }\n    ++renderCount;\n    return html `\n    <div id=\"selectTag-wrap\">\n      selectedTag: |${selectedTag === null && 'null' ||\n        selectedTag === undefined && 'undefined' ||\n        selectedTag === '' && 'empty-string' ||\n        selectedTag}|\n    </div>\n    \n    <select id=\"tag-switch-dropdown\" onchange=${changeSelectedTag}>\n\t    <option></option>\n      <!-- TODO: implement selected attribute --->\n\t    <option value=\"\" ${typeof (selectedTag) === 'string' && !selectedTag.length ? { selected: true } : {}}>empty-string</option>\n\t    <option value=\"undefined\" ${selectedTag === undefined ? { selected: true } : {}}>undefined</option>\n\t    <option value=\"null\" ${selectedTag === null ? { selected: true } : {}}>null</option>\n\t    <option value=\"1\" ${selectedTag === '1' ? { selected: true } : {}}>tag 1</option>\n\t    <option value=\"2\" ${selectedTag === '2' ? { selected: true } : {}}>tag 2</option>\n\t    <option value=\"3\" ${selectedTag === '3' ? { selected: true } : {}}>tag 3</option>\n    </select>\n\n    <div id=\"switch-tests-wrap\" style=\"display:flex;flex-wrap:wrap;gap:1em;\">\n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 1 - string | Tag</h3>\n        <div>${tagOutput}</div>\n      </div>\n      \n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 2 - Tag</h3>\n        <div>${tagOutput2}</div>\n      </div>\n      \n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 3 - ternary (only 1 or 3 shows)</h3>\n        <div>${selectedTag === '3' ? tag3({ title: 'ternary simple' }) : tag1({ title: 'ternary simple' })}</div>\n      </div>\n\n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 3.2 - ternary via prop (only 1 or 3 shows)</h3>\n        <div>${ternaryPropTest({ selectedTag })}</div>\n      </div>\n\n      <div id=\"arraySwitching-test-wrap\" style=\"border:1px solid red;flex-grow:1\">\n        <h3>Test 4 - arraySwitching</h3>\n        <div id=\"arraySwitching-wrap\">${arraySwitching({ selectedTag })}</div>\n      </div>\n    </div>\n    ${renderCountDiv({ renderCount, name: 'tagSwitchDebug' })}\n  `;\n});\nexport const ternaryPropTest = tag(({ selectedTag }) => {\n    const outTag = selectedTag === '3' ? tag3({ title: 'ternaryPropTest' }) : tag1({ title: 'ternaryPropTest' });\n    return html `\n    <div id=\"ternaryPropTest-wrap\">\n      ${selectedTag}:${outTag}\n    </div>\n  `;\n});\nexport const tag1 = tag(({ title }) => {\n    let counter = letState(0)(x => [counter, counter = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    ++renderCount;\n    return html `\n    <div id=\"tag1\" style=\"border:1px solid orange;\">\n      <div id=\"tagSwitch-1-hello\">Hello 1 ${title} World</div>\n      <button onclick=${() => ++counter}>increase ${counter}</button>\n      ${renderCountDiv({ renderCount, name: 'tag1' })}\n    </div>\n  `;\n});\nexport const tag2 = tag(({ title }) => {\n    let counter = letState(0)(x => [counter, counter = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    ++renderCount;\n    return html `\n    <div id=\"tag2\" style=\"border:1px solid orange;\">\n      <div id=\"tagSwitch-2-hello\">Hello 2 ${title} World</div>\n      <button onclick=${() => ++counter}>increase ${counter}</button>\n      ${renderCountDiv({ renderCount, name: 'tag1' })}\n    </div>\n  `;\n});\nexport const tag3 = tag(({ title }) => {\n    let counter = letState(0)(x => [counter, counter = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    ++renderCount;\n    return html `\n    <div  id=\"tag3\" style=\"border:1px solid orange;\">\n      <div id=\"tagSwitch-3-hello\">Hello 3 ${title} World</div>\n      <button onclick=${() => ++counter}>increase ${counter}</button>\n      ${renderCountDiv({ renderCount, name: 'tag1' })}\n    </div>\n  `;\n});\nexport const arraySwitching = tag(({ selectedTag }) => {\n    switch (selectedTag) {\n        case undefined:\n            return html `its an undefined value`;\n        case null:\n            return html `its a null value`;\n        case '':\n            return html ``; // tests how .previousSibling works\n        case '1':\n            // return html`${['a'].map(x => html`${tag1({title: `array ${selectedTag} ${x}`})}`.key(x))}`\n            return html `${tag1({ title: `tag ${selectedTag}` })}`;\n        case '2':\n            return html `${['b', 'c'].map(x => html `${tag2({ title: `array ${selectedTag} ${x}` })}`.key(x))}`;\n        case '3':\n            return html `${['d', 'e', 'f'].map(x => html `${tag3({ title: `array ${selectedTag} ${x}` })}`.key(x))}`;\n    }\n    return html `nothing to show for in arrays`;\n});\n","import { html, tag, letState } from \"taggedjs\";\nexport const mirroring = tag(() => {\n    const tag = tagCounter();\n    return html `\n    <fieldset>\n      <legend>counter0</legend>\n      ${tag}\n    </fieldset>\n    <fieldset>\n      <legend>counter1</legend>\n      ${tag}\n    </fieldset>\n  `;\n});\nconst tagCounter = () => {\n    let counter = letState(0)(x => [counter, counter = x]);\n    return html `\n    counter:<span>🪞<span id=\"mirror-counter-display\">${counter}</span></span>\n    <button id=\"mirror-counter-button\" onclick=${() => ++counter}>${counter}</button>\n  `;\n};\n","import { html, letState, tag, isSubjectInstance, isTagArray, children } from \"taggedjs\";\nimport { renderCountDiv } from \"./renderCount.component\";\nexport const innerHtmlTest = tag((_props, b) => {\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    let counter = letState(0)(x => [counter, counter = x]);\n    ++renderCount;\n    return html `<!--innerHtmlTests.js-->\n    <fieldset id=\"innerHtmlTests-1\">\n      <legend>no props test</legend>\n      <div style=\"border:2px solid purple;\">${children()}</div>\n      <div>isSubjectInstance:${isSubjectInstance(children())}</div>\n      <div>isSubjectTagArray:${isTagArray(children().value)}</div>\n      <button id=\"innerHtmlTest-counter-button\"\n      onclick=${() => ++counter}>increase innerHtmlTest ${counter}</button>\n      <span id=\"innerHtmlTest-counter-display\">${counter}</span>\n      ${renderCountDiv({ renderCount, name: 'innerHtmlTest' })}\n    </fieldset>\n  `;\n});\nexport const innerHtmlPropsTest = tag((x) => {\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    let counter = letState(0)(x => [counter, counter = x]);\n    ++renderCount;\n    return html `<!--innerHtmlTests.js-->\n    <fieldset id=\"innerHtmlTests-2\">\n      <legend>innerHTML Props: ${x}</legend>\n      ${children()}\n      <button id=\"innerHtmlPropsTest-button\" onclick=${() => ++counter}\n      >increase innerHtmlPropsTest ${counter}</button>\n      <span id=\"innerHtmlPropsTest-display\">${counter}</span>\n      ${ /*renderCountDiv(renderCount)*/false}\n    </fieldset>\n  `;\n});\n","import { children, html, letState, tag } from \"taggedjs\";\nimport { innerHtmlPropsTest, innerHtmlTest } from \"./innerHtmlTests.js\";\nimport { renderCountDiv } from \"./renderCount.component.js\";\nconst test22 = tag((a, b) => html `\n  <fieldset>\n    <legend>xxxxx</legend>  \n    <div>hello other world ${a} - ${b}</div>\n    <div style=\"border:2px solid red;\">***${children()}***</div>\n  </fieldset>\n`);\nexport const childTests = tag((_ = 'childTests') => (renderCount = letState(0)(x => [renderCount, renderCount = x]), counter = letState(0)(x => [counter, counter = x])) => html `\n  <fieldset id=\"children-test\" style=\"flex:2 2 20em\">\n    <legend>childTests</legend>\n\n    <hr />\n    <hr />\n    <hr />\n    ${test22(1, 2).\n    html `\n      <div><hr />abc-123-${Date.now()}<hr /></div>\n    `}\n    <hr />\n    <hr />\n    <hr />\n    \n    ${innerHtmlTest({}, 2).\n    html `\n      <b>Field set body A</b>\n      <hr />\n      <button id=\"innerHtmlTest-childTests-button\"\n        onclick=${() => ++counter}\n      >🐮 (A) increase childTests inside ${counter}:${renderCount}</button>\n      <span id=\"innerHtmlTest-childTests-display\">${counter}</span>\n      ${renderCountDiv({ renderCount, name: 'childTests-innerHtmlTest' })}\n    `}\n\n    ${innerHtmlPropsTest(22).\n    html `\n      <b>Field set body B</b>\n      <hr />\n      <button id=\"innerHtmlPropsTest-childTests-button\"\n        onclick=${() => ++counter}\n      >🐮 (B) increase childTests inside ${counter}</button>\n      <span id=\"innerHtmlPropsTest-childTests-display\">${counter}</span>\n      ${renderCountDiv({ renderCount, name: 'innerHtmlPropsTest child' })}\n    `}\n\n    ${childAsPropTest({ child: html `\n      hello child as prop test\n      <button id=\"child-as-prop-test-button\"\n        onclick=${() => ++counter}\n      >🐮 child as prop ${counter}</button>\n      <span id=\"child-as-prop-test-display\">${counter}</span>\n    ` })}\n    \n    <hr />\n    \n    <button id=\"childTests-button\"\n      onclick=${() => ++counter}\n    >🐮 increase childTests outside ${counter} - ${renderCount}</button>\n    <span id=\"childTests-display\">${counter}</span>\n    ${renderCountDiv({ renderCount, name: 'childTests' })}\n  </fieldset>\n`);\nfunction childAsPropTest({ child }) {\n    return html `\n    <fieldset>\n      <legend>child as prop</legend>\n      ${child}\n    </fieldset>\n  `;\n}\n","import { html, letState, tag } from 'taggedjs';\nexport const mouseOverTag = tag(({ label, memory, }) => {\n    let mouseOverEditShow = letState(false)(x => [mouseOverEditShow, mouseOverEditShow = x]);\n    let edit = letState(false)(x => [edit, edit = x]);\n    return html `\n    <div style=\"background-color:purple;padding:.2em;flex:1\"\n      onmouseover=${() => mouseOverEditShow = true}\n      onmouseout=${() => mouseOverEditShow = false}\n    >\n      mouseover - ${label}:${memory.counter}:${mouseOverEditShow || 'false'}\n      <button onclick=${() => ++memory.counter}>++counter</button>\n      <a style.visibility=${(edit || mouseOverEditShow) ? 'visible' : 'hidden'}\n        onclick=${() => edit = !edit}\n      >⚙️&nbsp;</a>\n    </div>\n  `;\n});\n","import { mouseOverTag } from \"./mouseover.tag.js\";\nimport { renderCountDiv } from \"./renderCount.component.js\";\nimport { html, tag, Subject, onInit, letState, callbackMaker, state, ValueSubject, callback, subject } from \"taggedjs\";\nconst loadStartTime = Date.now();\nexport const counters = tag(({ appCounterSubject }) => (readStartTime = state(() => Date.now())) => {\n    state('countersDebug state');\n    let counter = letState(0)(x => [counter, counter = x]);\n    let propCounter = letState(0)(x => [propCounter, propCounter = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    let initCounter = letState(0)(x => [initCounter, initCounter = x]);\n    let memory = state(() => ({ counter: 0 }));\n    const callbacks = callbackMaker();\n    const callbackTestSub = state(() => new Subject(counter));\n    const pipedSubject0 = state(() => new ValueSubject('222'));\n    const pipedSubject1 = Subject.all([pipedSubject0, callbackTestSub]).pipe(callback(x => counter));\n    const pipedSubject2 = subject.all([pipedSubject0, callbackTestSub]).pipe(x => counter);\n    onInit(() => {\n        ++initCounter;\n        console.info('countersDebug.ts: 👉 i should only ever run once');\n        callbackTestSub.subscribe(callbacks(y => counter = y));\n    });\n    // State as a callback only needed so pipedSubject1 has the latest value\n    const increaseCounter = () => {\n        ++counter;\n        pipedSubject0.next('333-' + counter);\n    };\n    const increasePropCounter = () => ++propCounter;\n    ++renderCount; // for debugging\n    const sharedMemory = true;\n    const testInnerCounters = true;\n    const displayRenderCounters = true;\n    const testBasics = true;\n    return html `<!--counters-->\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      ${testBasics && html `\n        <div>👉 Subscriptions:${Subject.globalSubCount$}</div>\n        <button onclick=${() => console.info('subs', Subject.globalSubs)}>log subs</button>\n        <div>initCounter:${initCounter}</div>\n    \n        <div>\n          <button id=\"app-counter-subject-button\"\n            onclick=${() => appCounterSubject.next((appCounterSubject.value || 0) + 1)}\n          >🍒 ++app subject</button>\n          <span>\n            🍒 <span id=\"app-counter-subject-display\">${appCounterSubject.value}</span>\n          </span>\n        </div>\n\n        <div>\n          <button id=\"standalone-counter\"\n            onclick=${increaseCounter}\n          >stand alone counters:${counter}</button>\n          <span>\n            🥦 <span id=\"standalone-display\">${counter}</span>\n          </span>\n        </div>\n    \n        ${counter > 1 && html `\n          <div>\n            <button id=\"conditional-counter\"\n              onclick=${increaseCounter}\n            >conditional counter:${counter}</button>\n            <span>\n              🥦 <span id=\"conditional-display\">${counter}</span>\n            </span>\n          </div>\n        `}\n\n        <input id=\"set-main-counter-input\"\n          onkeyup=${e => (counter = Number(e.target.value) || 0)}\n        />\n\n        <div>\n          <button id=\"❤️-increase-counter\"\n            onclick=${increasePropCounter}\n          >❤️ propCounter:${propCounter}</button>\n          <span>\n            ❤️ <span id=\"❤️-counter-display\">${propCounter}</span>\n            </span>\n        </div>\n\n        ${ /*\n      <div>\n        <button id=\"🥦-subject-increase-counter\"\n          onclick=${() => callbackTestSub.next(counter + 1)}\n        >subject increase:</button>\n        <span>\n          🥦 <span id=\"🥦-subject-counter-display\">${counter}</span>\n          🥦 <span id=\"subject-counter-subject-display\">${callbackTestSub}</span>\n        </span>\n      </div>\n    */false}\n      `}\n    </div>\n\n    ${ /*\n    <fieldset>\n      <legend>🪈 pipedSubject 1</legend>\n      <div>\n        <small>\n          <span id=\"🪈-pipedSubject\">${pipedSubject1}</span>\n        </small>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <legend>🪈 pipedSubject 2</legend>\n      <div>\n        <small>\n          <span id=\"🪈-pipedSubject-2\">${pipedSubject2}</span>\n        </small>\n      </div>\n    </fieldset>\n    */false}\n\n    ${sharedMemory && html `\n      <fieldset>\n        <legend>shared memory</legend>\n        <div class.bold.text-blue=${true} style=\"display:flex;flex-wrap:wrap;gap:.5em\">\n          ${mouseOverTag({ label: 'a-a-😻', memory })}\n          ${mouseOverTag({ label: 'b-b-😻', memory })}\n        </div>\n        memory.counter:😻${memory.counter}\n        <button onclick=${() => ++memory.counter}>increase 😻</button>\n      </fieldset>\n    `}\n    \n    ${testInnerCounters && html `\n      <fieldset>\n        <legend>inner counter</legend>\n        ${innerCounters({ propCounter, increasePropCounter })}\n      </fieldset>\n    `}\n    ${displayRenderCounters && renderCountDiv({ renderCount, name: 'counters' })}\n    <div style=\"font-size:0.8em;opacity:0.8\">\n      ⌚️ page load to display in&nbsp;<span oninit=${event => event.target.innerText = (Date.now() - loadStartTime).toString()}>-</span>ms\n    </div>\n    <div style=\"font-size:0.8em;opacity:0.8\">\n      ⌚️ read in&nbsp;<span oninit=${event => event.target.innerText = (Date.now() - readStartTime).toString()}>-</span>ms\n    </div>\n  `;\n});\nconst innerCounters = tag(({ propCounter, increasePropCounter, }) => {\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    ++renderCount; // for debugging\n    return html `\n    <button id=\"❤️-inner-counter\" onclick=${increasePropCounter}\n    >❤️ propCounter:${propCounter}</button>\n    <span>\n      ❤️ <span id=\"❤️-inner-display\">${propCounter}</span>\n    </span>\n    <div>renderCount:${renderCount}</div>\n    ${renderCountDiv({ renderCount, name: 'inner_counters' })}\n  `;\n});\n","import { fadeInDown, fadeOutUp } from \"./animations.js\";\nimport { renderCountDiv } from \"./renderCount.component.js\";\nimport { letState, html, tag, providers, state, callbackMaker, Subject, onInit } from \"taggedjs\";\nexport class TagDebugProvider {\n    constructor() {\n        this.tagDebug = 0;\n        this.showDialog = false;\n    }\n}\nconst ProviderFunc = () => ({ counter: 0 });\nexport function tagDebugProvider() {\n    const upper = providers.create(upperTagDebugProvider);\n    return {\n        upper,\n        test: 0\n    };\n}\nexport function upperTagDebugProvider() {\n    return {\n        name: 'upperTagDebugProvider',\n        test: 0\n    };\n}\nexport const providerDebugBase = tag((_x = 'providerDebugBase') => {\n    // providerDebugBase, has provider\n    providers.create(ProviderFunc); // test that an arrow function can be a provider\n    const providerClass = providers.create(TagDebugProvider);\n    const provider = providers.create(tagDebugProvider);\n    const test = letState('props debug base');\n    let propCounter = letState(0)(x => [propCounter, propCounter = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    if (providerClass.showDialog) {\n        document.getElementById('provider_debug_dialog').showModal();\n    }\n    ++renderCount;\n    return html `\n    <div>\n      <strong>provider.test sugar-daddy-77</strong>:${provider.test}\n    </div>\n    <div>\n      <strong>provider.upper?.test</strong>:${provider.upper?.test || '?'}\n    </div>\n    <div>\n      <strong>providerClass.tagDebug</strong>:${providerClass.tagDebug || '?'}\n    </div>\n\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      <div>\n        <button id=\"increase-provider-🍌-0-button\"\n          onclick=${() => ++provider.test}\n        >🍌 increase provider.test ${provider.test}</button>\n        <span>\n          🍌 <span id=\"increase-provider-🍌-0-display\">${provider.test}</span>\n        </span>\n      </div>\n      \n      <div>\n        <button id=\"increase-provider-upper-🌹-0-button\" onclick=${() => ++provider.upper.test}\n        >🌹 increase upper.provider.test ${provider.upper.test}</button>\n        <span>\n          🌹 <span id=\"increase-provider-upper-🌹-0-display\">${provider.upper.test}</span>\n        </span>\n      </div>\n      \n      <div>\n        <button id=\"increase-provider-🍀-0-button\" onclick=${() => ++providerClass.tagDebug}\n        >🍀 increase provider class ${providerClass.tagDebug}</button>\n        <span>\n          🍀 <span id=\"increase-provider-🍀-0-display\">${providerClass.tagDebug}</span>\n        </span>\n      </div>\n\n      <div>\n        <button id=\"increase-prop-🐷-0-button\" onclick=${() => ++propCounter}\n        >🐷 increase propCounter ${propCounter}</button>\n        <span>\n          🐷 <span id=\"increase-prop-🐷-0-display\">${propCounter}</span>\n        </span>\n      </div>\n\n      <button onclick=${() => providerClass.showDialog = true}\n      >💬 toggle dialog ${providerClass.showDialog}</button>\n    </div>\n\n    <hr />\n\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      ${providerDebug({\n        propCounter,\n        propCounterChange: x => {\n            propCounter = x;\n        }\n    })}\n    </div>\n\n    <hr />\n    renderCount outer:<span name=\"render_count_outer\">${renderCount}</span>\n    ${renderCountDiv({ renderCount, name: 'providerDebugBase' })}\n\n    ${dialog(providerClass)}\n\n    TODOTODOTODOTODO\n    ${ /*tagSwitchingWithProvider()*/false}\n  `;\n});\nconst tagSwitchingWithProvider = tag(() => (upperProvider = providers.inject(upperTagDebugProvider)) => html `\n  <div>\n    <button id=\"increase-provider-switch-🌹-0-button\" onclick=${() => ++upperProvider.test}\n    >🌹 increase switch.provider.test ${upperProvider.test}</button>\n    <span>\n      🌹<span id=\"increase-provider-switch-🌹-0-display\">${upperProvider.test}</span>\n    </span>\n  </div>\n  <hr />\n  <div>statue:${upperProvider.test % 2 == 0 ? 'off' : 'on'}</div>\n  ${tagSwitchingProChild1()}\n  <hr />\n  ${upperProvider.test % 2 == 0 ? null : tagSwitchingProChild2()}\n`);\nconst tagSwitchingProChild1 = tag(() => (upperProvider = providers.inject(upperTagDebugProvider)) => upperProvider.test % 2 == 0 ? null : html `\n  <div>\n    <button id=\"increase-provider-switch-🌹-1-button\" onclick=${() => ++upperProvider.test}\n    >🌹 increase switch.provider.test ${upperProvider.test}</button>\n    <span>\n      🌹<span id=\"increase-provider-switch-🌹-1-display\">${upperProvider.test}</span>\n    </span>\n  </div>\n`);\nconst tagSwitchingProChild2 = tag(() => (upperProvider = providers.inject(upperTagDebugProvider)) => html `\n  <div>\n    <button id=\"increase-provider-switch-🌹-2-button\" onclick=${() => ++upperProvider.test}\n    >🌹 increase switch.provider.test ${upperProvider.test}</button>\n    <span>\n      🌹<span id=\"increase-provider-switch-🌹-2-display\">${upperProvider.test}</span>\n    </span>\n  </div>\n`);\nconst dialog = tag((providerClass) => html `\n  <dialog id=\"provider_debug_dialog\" style=\"padding:0\"\n    onmousedown=\"var r = this.getBoundingClientRect();(r.top<=event.clientY&&event.clientY<=r.top+r.height&&r.left<=event.clientX&&event.clientX<=r.left+r.width) || this.close()\"\n    ondragstart=\"const {e,dt,t} = {t:this,e:event,dt:event.dataTransfer};const d=t.drag=t.drag||{x:0,y:0};d.initX=d.x;d.startX=event.clientX-t.offsetLeft;d.startY=event.clientY-t.offsetTop;t.ondragover=e.target.ondragover=(e)=>e.preventDefault();dt.effectAllowed='move';dt.dropEffect='move'\"\n    ondrag=\"const {t,e,dt,d}={e:event,dt:event.dataTransfer,d:this.drag}; if(e.clientX===0) return;d.x = d.x + e.offsetX - d.startX; d.y = d.y + e.offsetY - d.startY; this.style.left = d.x + 'px'; this.style.top = d.y+'px';\"\n    ondragend=\"const {t,e,d}={t:this,e:event,d:this.drag};if (d.initX === d.x) {d.x=d.x+e.offsetX-(d.startX-d.x);d.y=d.y+e.offsetY-(d.startY-d.y);this.style.transform=translate3d(d.x+'px', d.y+'px', 0)};this.draggable=false\"\n    onclose=${() => providerClass.showDialog = false}\n  >\n    <div style=\"padding:.25em\" onmousedown=\"this.parentNode.draggable=true\"\n    >dialog title</div>\n    ${providerClass.showDialog ? html `\n      <textarea wrap=\"off\">${JSON.stringify(providerClass, null, 2)}</textarea>\n    ` : 'no dialog'}\n    <div style=\"padding:.25em\">\n      <button type=\"button\" onclick=\"provider_debug_dialog.close()\">🅧 close</button>\n    </div>\n  </dialog>\n`);\nconst providerDebug = tag(({ propCounter, propCounterChange, }) => {\n    const funcProvider = providers.inject(ProviderFunc); // test that an arrow function can be a provider\n    const provider = providers.inject(tagDebugProvider);\n    const providerClass = providers.inject(TagDebugProvider);\n    const upperProvider = providers.inject(upperTagDebugProvider);\n    let showProProps = letState(false)(x => [showProProps, showProProps = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    // let propCounter: number = letState(0)(x => [propCounter, propCounter = x])\n    const callbacks = callbackMaker();\n    const callbackTestSub = state(() => new Subject());\n    onInit(() => {\n        console.info('providerDebug.ts: 👉 👉 i should only ever run once');\n        callbackTestSub.subscribe(x => {\n            callbacks((y) => {\n                provider.test = x;\n            })();\n        });\n    });\n    ++renderCount;\n    return html `<!--providerDebug.js-->\n    <div>\n      <button id=\"increase-provider-🍌-1-button\" onclick=${() => ++provider.test}\n      >🍌 increase provider.test ${provider.test}</button>\n      <span>\n        🍌 <span id=\"increase-provider-🍌-1-display\">${provider.test}</span>\n      </span>\n    </div>\n    \n    <div>\n      <button id=\"increase-provider-upper-🌹-1-button\" onclick=${() => ++upperProvider.test}\n      >🌹 increase upper.provider.test ${upperProvider.test}</button>\n      <span>\n        🌹<span id=\"increase-provider-upper-🌹-1-display\">${upperProvider.test}</span>\n      </span>\n    </div>\n\n    <div>\n      <button id=\"increase-arrow-provider-⚡️-1-button\" onclick=${() => ++funcProvider.counter}\n      >⚡️ increase upper.provider.test ${funcProvider.counter}</button>\n      <span>\n      ⚡️<span id=\"increase-arrow-provider-⚡️-1-display\">${funcProvider.counter}</span>\n      </span>\n    </div>\n\n    <div>\n      <button id=\"subject-increase-counter\"\n        onclick=${() => callbackTestSub.next(provider.test + 1)}\n      >🍌 subject increase:</button>\n      <span>\n        🍌 <span id=\"subject-counter-display\">${provider.test}</span>\n      </span>\n    </div>\n    \n    <div>\n      <button id=\"increase-provider-🍀-1-button\" onclick=${() => ++providerClass.tagDebug}\n      >🍀 increase provider class ${providerClass.tagDebug}</button>\n      <span>\n        🍀 <span id=\"increase-provider-🍀-1-display\">${providerClass.tagDebug}</span>\n      </span>\n    </div>\n\n    <div>\n      <button id=\"increase-prop-🐷-1-button\" onclick=${() => propCounterChange(++propCounter)}\n      >🐷 increase propCounter ${propCounter}</button>\n      <span>\n        🐷 <span id=\"increase-prop-🐷-1-display\">${propCounter}</span>\n      </span>\n    </div>\n\n    <button onclick=${() => providerClass.showDialog = true}\n      >💬 toggle dialog ${providerClass.showDialog}</button>\n\n    <button onclick=${() => showProProps = !showProProps}\n    >${showProProps ? 'hide' : 'show'} provider as props</button>\n    \n    ${showProProps && html `\n      <div oninit=${fadeInDown} ondestroy=${fadeOutUp}>\n        <hr />\n        <h3>Provider as Props</h3>\n        ${testProviderAsProps(providerClass)}\n      </div>\n    `}\n\n    <div>\n      renderCount inner:${renderCount}\n      ${renderCountDiv({ renderCount, name: 'providerDebugInner' })}\n    </div>\n  `;\n});\nconst testProviderAsProps = tag((providerClass) => {\n    return html `<!--providerDebug.js@TestProviderAsProps-->\n    <textarea wrap=\"off\" rows=\"20\" style=\"width:100%;font-size:0.6em\">${JSON.stringify(providerClass, null, 2)}</textarea>\n  `;\n});\n","import { watch, letState, html, tag } from \"taggedjs\";\nexport const watchTesting = tag(() => (stateNum = letState(0)(x => [stateNum, stateNum = x]), stateNumChangeCount = letState(0)(x => [stateNumChangeCount, stateNumChangeCount = x]), _ = watch([stateNum], () => ++stateNumChangeCount), slowChangeCount = letState(0)(x => [slowChangeCount, slowChangeCount = x]), watchPropNumSlow = watch.noInit([stateNum], () => ++slowChangeCount), subjectChangeCount = letState(0)(x => [subjectChangeCount, subjectChangeCount = x]), watchPropNumSubject = watch.asSubject([stateNum], () => {\n    return ++subjectChangeCount;\n}), truthChange = letState(false)(x => [truthChange, truthChange = x]), truthChangeCount = letState(0)(x => [truthChangeCount, truthChangeCount = x]), watchTruth = watch.truthy([truthChange], () => ++truthChangeCount), truthSubChangeCount = letState(0)(x => [truthSubChangeCount, truthSubChangeCount = x]), watchTruthAsSub = watch.truthy.asSubject([truthChange], () => {\n    ++truthSubChangeCount;\n    return truthChange;\n}).pipe(x => {\n    if (x === undefined) {\n        return 'undefined';\n    }\n    return x ? truthSubChangeCount : truthSubChangeCount;\n})) => html `\n  stateNum:<span id=\"watch-testing-num-display\">${stateNum}</span>\n  <button id=\"watch-testing-num-button\" type=\"button\"\n    onclick=${() => ++stateNum}\n  >++ stateNum</button>\n  <div>\n    <small>stateNumChangeCount:<span id=\"stateNumChangeCount\">${stateNumChangeCount}</span></small>\n  </div>\n  <fieldset>\n    <legend>🍄 slowChangeCount</legend> \n    <div>\n      <small>\n        <span id=\"🍄-slowChangeCount\">${slowChangeCount}</span>\n      </small>\n    </div>\n    <div>\n      <small>\n        watchPropNumSlow:<span id=\"🍄-watchPropNumSlow\">${watchPropNumSlow}</span>\n      </small>\n    </div>\n  </fieldset>\n\n  <fieldset>\n    <legend>🍄‍🟫 subjectChangeCount</legend>    \n    <div>\n      <small>\n        <span id=\"🍄‍🟫-subjectChangeCount\">${subjectChangeCount}</span>\n      </small>\n    </div>\n    <div>\n      <small>\n        (watchPropNumSubject:<span id=\"🍄‍🟫-watchPropNumSubject\">${watchPropNumSubject}</span>)\n      </small>\n    </div>\n  </fieldset>\n\n  <fieldset>\n    <legend>🦷 truthChange</legend>\n    <div>\n      <small>\n        <span id=\"🦷-truthChange\">${truthChange ? 'true' : 'false'}</span>\n      </small>\n    </div>\n    <fieldset>\n      <legend>simple truth</legend>      \n      <div>\n        <small>\n          watchTruth:<span id=\"🦷-watchTruth\">${watchTruth || 'false'}</span>\n        </small>\n      </div>\n      <div>\n        <small>\n          (truthChangeCount:<span id=\"🦷-truthChangeCount\">${truthChangeCount}</span>)\n        </small>\n      </div>\n    </fieldset>\n    <fieldset>\n      <legend>truth subject</legend>      \n      <div>\n        <small>\n        watchTruthAsSub:<span id=\"🦷-watchTruthAsSub\">${watchTruthAsSub}</span>\n        </small>\n      </div>\n      <div>\n        <small>\n          (truthSubChangeCount:<span id=\"🦷-truthSubChangeCount\">${truthSubChangeCount}</span>)\n        </small>\n      </div>\n    </fieldset>\n\n    <button id=\"🦷-truthChange-button\" type=\"button\"\n      onclick=${() => truthChange = !truthChange}\n    >toggle to ${truthChange ? 'true' : 'false'}</button>\n  </fieldset>`);\n","import { html, letState, Subject, subject, tag, ValueSubject } from \"taggedjs\";\nimport { renderCountDiv } from \"./renderCount.component.js\";\n/** this tag renders only once */\nexport const oneRender = () => tag.oneRender = (counter = new ValueSubject(0), renderCount = letState(0)(x => [renderCount, renderCount = x])) => {\n    ++renderCount;\n    const x = Subject.all([0, 'all', 4]);\n    return html `\n    ${x.pipe(x => JSON.stringify(x))}elias\n    <span>👍<span id=\"👍-counter-display\">${counter}</span></span>\n    <button type=\"button\" id=\"👍-counter-button\"\n      onclick=${() => ++counter.value}\n    >++👍</button>\n    ${renderCountDiv({ renderCount, name: 'oneRender_tag_ts' })}\n    <hr />\n    ${insideMultiRender()}\n  `;\n};\n/** this tag renders on every event but should not cause parent to re-render */\nconst insideMultiRender = tag(() => (counter = letState(0)(x => [counter, counter = x]), counter$ = subject(0), renderCount = letState(0)(x => [renderCount, renderCount = x])) => {\n    ++renderCount;\n    return html `\n  <span>👍🔨 sub counter-subject-display:<span id=\"👍🔨-counter-subject-display\">${counter$}</span></span>\n  <br />\n  <span>👍🔨 sub counter<span id=\"👍🔨-counter-display\">${counter}</span></span>\n  <br />\n  <button type=\"button\" id=\"👍🔨-counter-button\"\n    onclick=${() => {\n        counter$.next(++counter);\n    }}\n  >++👍👍</button>\n  ${renderCountDiv({ renderCount, name: 'insideMultiRender' })}\n`;\n});\n","import { html, letState, tag } from \"taggedjs\";\nimport { renderCountDiv } from \"./renderCount.component\";\nconst main = {\n    function: () => ++main.count,\n    count: 0,\n};\nexport default tag(() => (array = letState([])(x => [array, array = x]), counter = letState(0)(x => [counter, counter = x]), myFunction = () => ++counter, renderCount = letState(0)(x => [renderCount, renderCount = x]), showChild = letState(true)(x => [showChild, showChild = x]), somethingElse = letState('a')(x => [somethingElse, somethingElse = x]), _ = ++renderCount, addArrayItem = (x) => { array = array.map(x => x); array.push(typeof (x) === 'string' ? x : 'push' + array.length); }, deleteItem = (item) => array = array.filter(x => x !== item)) => html `\n  <button id=\"fun-parent-button\" onclick=${myFunction}>++parent</button><span id=\"fun_in_prop_display\">${counter}</span>\n  ${renderCountDiv({ renderCount, name: 'funInProps_tag_parent' })}\n  <div>\n    <strong>main:</strong><span id=\"main_wrap_state\">${main.function.toCall ? 'taggjedjs-wrapped' : 'nowrap'}</span>:${main.count}\n  </div>\n  <button id=\"toggle-fun-in-child\" type=\"button\" onclick=${() => showChild = !showChild}>toggle child</button>\n  array length: ${array.length}\n  <button onclick=${addArrayItem}>reset add</button>\n  <hr />\n  ${showChild && funInPropsChild({\n    myFunction, array, addArrayItem, deleteItem,\n    child: { myChildFunction: myFunction }\n}, main, myFunction)}\n  ${addArrayComponent(addArrayItem)}\n`);\nconst addArrayComponent = tag((addArrayItem) => (renderCount = letState(0)(x => [renderCount, renderCount = x]), _ = ++renderCount, handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n        const value = e.target.value.trim();\n        addArrayItem(value);\n        e.target.value = \"\";\n    }\n}) => html `\n  <input type=\"text\" onkeydown=${handleKeyDown} onchange=${e => { addArrayItem(e.target.value); e.target.value = ''; }} />\n  <button type=\"button\" onclick=${addArrayItem}>add by outside</button>\n  ${renderCountDiv({ renderCount, name: 'addArrayComponent' })}\n`);\nconst funInPropsChild = tag(({ addArrayItem, myFunction, deleteItem, child, array }, mainProp, myFunction3) => (other = letState('other')(x => [other, other = x]), counter = letState(0)(x => [counter, counter = x]), renderCount = letState(0)(x => [renderCount, renderCount = x]), _ = ++renderCount) => html `\n  <div>\n    <strong>mainFunction:</strong>${mainProp.function.toCall ? 'taggjedjs-wrapped' : 'nowrap'}:\n    <span>${mainProp.count}</span>\n  </div>\n  <div>\n    <strong>childFunction:</strong>${child.myChildFunction.toCall ? 'taggjedjs-wrapped' : 'nowrap'}\n  </div>\n  <div>\n    <strong>myFunction:</strong>${myFunction.toCall ? 'taggjedjs-wrapped' : 'nowrap'}\n  </div>\n\n  <button id=\"fun_in_prop1\" onclick=${myFunction}>++object argument</button>\n  <button id=\"fun_in_prop2\" onclick=${child.myChildFunction}>++child.myChildFunction</button>\n  <button id=\"fun_in_prop3\" onclick=${myFunction3}>++argument</button>\n  <button onclick=${main.function}>++main</button>\n  <button onclick=${() => ++counter}>++me</button>\n  \n  <div>\n    child array length: ${array.length}\n    ${array.map(item => arrayFunTag(item, deleteItem).key(item))}\n    <button onclick=${addArrayItem}>addArrayItem</button>\n  </div>\n  \n  <div>\n    counter:<span>${counter}</span>\n  </div>\n  ${renderCountDiv({ renderCount, name: 'funInProps_tag_child' })}\n`);\nconst arrayFunTag = tag((item, deleteItem) => html `\n  <div style=\"border:1px solid black;\">\n    ${item}<button type=\"button\" onclick=${() => deleteItem(item)}>delete</button>\n  </div>\n`);\n","import { html } from \"taggedjs\";\nconst hasValidMin = (value, min) => {\n    return value.length >= min;\n};\nexport function Input({ onSubmit, placeholder, label, defaultValue, onBlur }) {\n    const handleBlur = () => {\n        if (onBlur)\n            onBlur();\n    };\n    const handleKeyDown = (e) => {\n        if (e.key === \"Enter\") {\n            const value = e.target.value.trim();\n            if (!hasValidMin(value, 2))\n                return;\n            onSubmit(value);\n            e.target.value = \"\";\n        }\n    };\n    return html `\n        <div class=\"input-container\">\n            <input class=\"new-todo\" id=\"todo-input\" type=\"text\" data-testid=\"text-input\" placeholder=${placeholder} value=${defaultValue} onblur=${handleBlur} onKeyDown=${handleKeyDown} />\n            <label htmlFor=\"todo-input\" style=\"visibility:hidden\">\n                ${label}\n            </label>\n        </div>\n    `;\n}\n","export const ADD_ITEM = \"ADD_ITEM\";\nexport const UPDATE_ITEM = \"UPDATE_ITEM\";\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\nexport const TOGGLE_ITEM = \"TOGGLE_ITEM\";\nexport const REMOVE_ALL_ITEMS = \"REMOVE_ALL_ITEMS\";\nexport const TOGGLE_ALL = \"TOGGLE_ALL\";\nexport const REMOVE_COMPLETED_ITEMS = \"REMOVE_COMPLETED_ITEMS\";\n","const classnames = (x) => '';\nimport { Input } from \"./input\";\nimport { TOGGLE_ITEM, REMOVE_ITEM, UPDATE_ITEM } from \"../constants\";\nimport { html, letState, state, tag } from \"taggedjs\";\nexport const Item = tag((todo, dispatch, index) => {\n    state('item'); // helpful when debugging states\n    let isWritable = letState(false)(x => [isWritable, isWritable = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    const { title, completed, id } = todo;\n    const toggleItem = () => dispatch({ type: TOGGLE_ITEM, payload: { id } });\n    const removeItem = () => dispatch({ type: REMOVE_ITEM, payload: { id } });\n    const updateItem = (id, title) => dispatch({ type: UPDATE_ITEM, payload: { id, title } });\n    const handleDoubleClick = () => {\n        isWritable = true;\n    };\n    const handleBlur = () => isWritable = false;\n    const handleUpdate = (title) => {\n        if (title.length === 0)\n            removeItem();\n        else\n            updateItem(id, title);\n        isWritable = false;\n        return '44s';\n    };\n    ++renderCount;\n    return html `\n        <li class=${classnames({ completed: todo.completed })} data-testid=\"todo-item\">\n            <div class=\"view\">\n                ${isWritable ?\n        html `${Input({ onSubmit: handleUpdate, label: \"Edit Todo Input\", defaultValue: title, onBlur: handleBlur })} - ${title}` : html `\n                    completed:${completed}\n                    <input class=\"toggle\" type=\"checkbox\" data-testid=\"todo-item-toggle\" checked=${completed} onChange=${toggleItem} />\n                    <label data-testid=\"todo-item-label\" onDblClick=${handleDoubleClick}>\n                        ${title}\n                    </label>\n                    <button class=\"destroy\" data-testid=\"todo-item-button\" onClick=${removeItem}>delete</button>\n                `}\n            </div>\n            item render count: ${renderCount}\n        </li>\n    `;\n});\n","import { Item } from \"./item\";\nimport { TOGGLE_ALL } from \"../constants\";\nimport { html, letState, tag, watch } from \"taggedjs\";\nconst route = ''; // active or completed\nexport const Main = tag(({ todos, dispatch }) => {\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    const toggleAll = (e) => dispatch({ type: TOGGLE_ALL, payload: { completed: e.target.checked } });\n    ++renderCount;\n    const visibleTodos = watch([todos, route], () => {\n        return todos.filter((todo) => {\n            if (route === \"/active\")\n                return !todo.completed;\n            if (route === \"/completed\")\n                return todo.completed;\n            return todo;\n        });\n    });\n    return html `\n        <main class=\"main\" data-testid=\"main\">\n            main renderCount: ${renderCount} array:${visibleTodos.length} of ${todos.length}\n            <hr />\n            ${JSON.stringify(todos)}\n            <hr />\n            ${visibleTodos.length > 0 && html `\n                <div class=\"toggle-all-container\">\n                    <input class=\"toggle-all\" type=\"checkbox\" data-testid=\"toggle-all\" checked=${visibleTodos.every((todo) => todo.completed)} onChange=${toggleAll} />\n                    <label class=\"toggle-all-label\" htmlFor=\"toggle-all\">\n                        Toggle All Input\n                    </label>\n                </div>\n            `}\n            <ul class=\"todo-list\" data-testid=\"todo-list\">\n                ${visibleTodos.map((todo, index) => html `\n                    ${Item(todo, dispatch, index)}\n                `.key(todo.id))}\n            </ul>\n        </main>\n    `;\n});\n","const classnames = (x) => '';\nimport { REMOVE_COMPLETED_ITEMS } from \"../constants\";\nimport { html, tag } from \"taggedjs\";\nconst route = ''; // TODO\n// const { pathname: route } = useLocation();\n// prettier-ignore\n// TODO: we should be able to do null here instead of html``\nexport const Footer = tag((todos, dispatch) => (activeTodos = todos.filter((todo) => !todo.completed), removeCompleted = () => dispatch({ type: REMOVE_COMPLETED_ITEMS })) => todos.length === 0 ? null : html `\n    <footer class=\"footer\" data-testid=\"footer\">\n        <span class=\"todo-count\">${activeTodos.length} of ${todos.length} ${activeTodos.length === 1 ? \"item\" : \"items\"} left!</span>\n        <ul class=\"filters\" data-testid=\"footer-navigation\">\n            <li>\n                <a class=${classnames({ selected: route === \"/\" })} href=\"#/\">\n                    All\n                </a>\n            </li>\n            <li>\n                <a class=${classnames({ selected: route === \"/active\" })} href=\"#/active\">\n                    Active\n                </a>\n            </li>\n            <li>\n                <a class=${classnames({ selected: route === \"/completed\" })} href=\"#/completed\">\n                    Completed\n                </a>\n            </li>\n        </ul>\n        <button class=\"clear-completed\" disabled=${activeTodos.length === todos.length} onClick=${removeCompleted}>\n            Clear completed\n        </button>\n    </footer>\n`);\n","import { ADD_ITEM, UPDATE_ITEM, REMOVE_ITEM, TOGGLE_ITEM, REMOVE_ALL_ITEMS, TOGGLE_ALL, REMOVE_COMPLETED_ITEMS } from \"./constants\";\n/* Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\n\nThe MIT License (MIT)\n\nCopyright 2017 Andrey Sitnik <andrey@sitnik.ru>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */\n// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// References to the same file (works both for gzip and brotli):\n// `'use`, `andom`, and `rict'`\n// References to the brotli default dictionary:\n// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\nlet urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nfunction nanoid(size = 21) {\n    let id = \"\";\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size;\n    while (i--) {\n        // `| 0` is more compact and faster than `Math.floor()`.\n        id += urlAlphabet[(Math.random() * 64) | 0];\n    }\n    return id;\n}\nexport const todoReducer = (state, action) => {\n    switch (action.type) {\n        case ADD_ITEM:\n            return state.concat({ id: nanoid(), title: action.payload.title, completed: false });\n        case UPDATE_ITEM:\n            return state.map((todo) => (todo.id === action.payload.id ? { ...todo, title: action.payload.title } : todo));\n        case REMOVE_ITEM:\n            return state.filter((todo) => todo.id !== action.payload.id);\n        case TOGGLE_ITEM:\n            return state.map((todo) => (todo.id === action.payload.id ? { ...todo, completed: !todo.completed } : todo));\n        case REMOVE_ALL_ITEMS:\n            return [];\n        case TOGGLE_ALL:\n            return state.map((todo) => (todo.completed !== action.payload.completed ? { ...todo, completed: action.payload.completed } : todo));\n        case REMOVE_COMPLETED_ITEMS:\n            return state.filter((todo) => !todo.completed);\n    }\n    throw Error(`Unknown action: ${action.type}`);\n};\n","import { Header } from \"./components/header\";\nimport { Main } from \"./components/main\";\nimport { Footer } from \"./components/footer\";\nimport { todoReducer } from \"./reducer\";\nimport { letState, html, tag } from \"taggedjs\";\nexport const App = tag(function App() {\n    return (todos = letState([])(x => [todos, todos = x]), dispatch = (payload) => {\n        todos = todoReducer(todos, payload);\n    }) => html `\n        ${Header(dispatch)}\n        ${Main({ todos, dispatch })}\n        ${Footer(todos, dispatch)}\n    `;\n});\n","import { Input } from \"./input\";\nimport { ADD_ITEM } from \"../constants\";\nimport { html } from \"taggedjs\";\nexport function Header(dispatch) {\n    const addItem = (title) => dispatch({ type: ADD_ITEM, payload: { title } });\n    return html `\n        <header class=\"header\" data-testid=\"header\">\n            <h1>todos</h1>\n            ${Input({ onSubmit: addItem, label: \"New Todo Input\", placeholder: \"What needs to be done?\" })}\n        </header>\n    `;\n}\n","import { watch, letState, html, tag, letProp, state } from \"taggedjs\";\nimport { renderCountDiv } from \"./renderCount.component.js\";\nexport const propsDebugMain = tag((_ = 'propsDebugMain') => (syncPropNumber = letState(0)(x => [syncPropNumber, syncPropNumber = x]), propNumber = letState(0)(x => [propNumber, propNumber = x]), renderCount = letState(0)(x => [renderCount, renderCount = x]), propsJson = letState({ test: 33, x: 'y' })(x => [propsJson, propsJson = x]), date = letState(() => new Date())(x => [date, date = x]), json = JSON.stringify(propsJson, null, 2)) => html `\n  <div style=\"display:flex;flex-wrap:wrap\" id=\"textareawrap\">\n    <textarea id=\"props-debug-textarea\" wrap=\"off\"\n      onchange=${event => propsJson = JSON.parse(event.target.value)}\n      style=\"height:200px;font-size:0.6em;width:100%;max-width:400px\"\n    >${json}</textarea>\n    \n    <pre>${json}</pre>\n  </div>\n  <div><small>(renderCount:${++renderCount})</small></div>\n  \n  <div>\n    <button id=\"propsDebug-🥩-0-button\"\n      onclick=${() => ++propNumber}\n    >🥩 propNumber ${propNumber}</button>\n    <span id=\"propsDebug-🥩-0-display\">${propNumber}</span>\n  </div>\n  \n  <fieldset>\n    <legend>child</legend>\n    ${propsDebug({\n    propNumber,\n    propsJson,\n    propNumberChange: x => {\n        propNumber = x;\n    }\n})}\n  </fieldset>\n\n  <fieldset>\n    <legend>sync props callback</legend>\n    🥡 syncPropNumber: <span id=\"sync-prop-number-display\">${syncPropNumber}</span>\n    <button onclick=${() => ++syncPropNumber}>🥡 ++</button>\n    ${renderCountDiv({ renderCount, name: 'sync_props_callback' })}\n    <hr />\n    ${syncPropDebug({\n    syncPropNumber,\n    propNumberChange: x => syncPropNumber = x,\n    parentTest: x => x\n})}\n  </fieldset>\n\n  <fieldset>\n    <legend>date prop</legend>\n    date:${date}\n    <input type=\"date\" value=${timestampToValues(date).date} onchange=${event => {\n    const newDateString = event.target.value;\n    date = new Date(newDateString);\n}} />\n    <hr />\n    ${propDateDebug({ date })}\n  </fieldset>\n`);\nconst propDateDebug = tag(({ date }) => html `date:${date}`);\n/** Tests calling a property that is a function immediately which should cause rendering */\nconst syncPropDebug = tag(({ syncPropNumber, propNumberChange, parentTest, }) => {\n    state('string forced');\n    let counter = letState(0)(x => [counter, counter = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    ++renderCount;\n    if (syncPropNumber % 2 === 1) {\n        propNumberChange(syncPropNumber = syncPropNumber + 1);\n    }\n    return html `<!--syncPropDebug-->\n    <div>\n      🥡 child syncPropNumber:<span id=\"sync-prop-child-display\">${syncPropNumber}</span>\n      <button id=\"sync-prop-child-button\" onclick=${() => propNumberChange(++syncPropNumber)}>🥡 ++</button>\n    </div>\n    <div>\n      <div>\n        counter:<span id=\"sync-prop-counter-display\">${counter}</span>\n      </div>\n      parentTest<span id=\"nothing-prop-counter-display\">${parentTest(counter)}</span>\n      <button id=\"nothing-prop-counter-button\" onclick=${() => parentTest(++counter)}>++</button>\n    </div>\n    ${renderCountDiv({ renderCount, name: 'child_sync_props_callback' })}\n  `;\n});\nconst propsDebug = tag(({ propNumber, propsJson, propNumberChange, }) => (renderCount = letState(0)(x => [renderCount, renderCount = x]), propNumberChangeCount = letState(0)(x => [propNumberChangeCount, propNumberChangeCount = x]), \n// poor way to update an argument\nmyPropNumber = letState(propNumber)(x => [myPropNumber, myPropNumber = x]), _ = watch([propNumber], () => myPropNumber = propNumber), watchResults = watch([myPropNumber], () => ++propNumberChangeCount), \n// simple way to locally only update an argument\n__ = letProp(propNumber)(x => [propNumber, propNumber = x])) => html `<!--propsDebug.js-->\n  <h3>Props Json</h3>\n  <textarea style=\"font-size:0.6em;height:200px;width:100%;;max-width:400px\" wrap=\"off\"\n    onchange=${event => {\n    const value = JSON.parse(event.target.value);\n    Object.assign(propsJson, value);\n}}\n  >${JSON.stringify(propsJson, null, 2)}</textarea>\n  <pre>${JSON.stringify(propsJson, null, 2)}</pre>\n  <!--\n  <div style=\"display:flex;flex-wrap:wrap\">\n  </div>\n  -->\n  <hr />\n  \n  <h3>Props Number</h3>\n  <textarea style=\"font-size:0.6em;height:200px;width:100%;color:white;\" wrap=\"off\" disabled\n  >${JSON.stringify(watchResults, null, 2)}</textarea>\n  \n  <div>\n    <button id=\"propsDebug-🥩-1-button\" onclick=${() => propNumberChange(++myPropNumber)}\n    >🐄 🥩 propNumber ${myPropNumber}</button>\n    <span id=\"propsDebug-🥩-1-display\">${myPropNumber}</span>\n  </div>\n\n  <div>\n    <button id=\"propsDebug-🥩-2-button\" onclick=${() => ++propNumber}\n    >🐄 🥩 local set propNumber ${propNumber}</button>\n    <span id=\"propsDebug-🥩-2-display\">${propNumber}</span>\n  </div>\n\n  <button\n    title=\"test of increasing render count and nothing else\"\n    onclick=${() => ++renderCount}\n  >renderCount ${++renderCount}</button>\n  \n  <button onclick=${() => ++myPropNumber}\n    title=\"only changes number locally but if change by parent than that is the number\"\n  >🐄 🥩 local set myPropNumber ${myPropNumber}</button>\n  \n  <div>\n    <small>\n      (propNumberChangeCount:<span id=\"propsDebug-🥩-change-display\">${propNumberChangeCount}</span>)\n    </small>\n  </div>\n  \n  <hr />\n\n  <h3>Fn update test</h3>\n  ${propFnUpdateTest({\n    propNumber: myPropNumber,\n    callback: () => ++myPropNumber\n})}    \n`);\nconst propFnUpdateTest = tag(({ propNumber, callback, }) => {\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    ++renderCount;\n    return html `\n    <button id=\"propsOneLevelFunUpdate-🥩-button\"\n      onclick=${callback}\n    >🐄 🥩 local & 1-parent increase ${propNumber}</button>\n    <span id=\"propsOneLevelFunUpdate-🥩-display\">${propNumber}</span>\n    ${renderCountDiv({ renderCount, name: 'propFnUpdateTest' })}\n    <small style=\"opacity:.5\">the count here and within parent increases but not in parent parent</small>\n  `;\n});\nfunction timestampToValues(timestamp) {\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    return {\n        date: `${year}-${month}-${day}`,\n        time: `${hours}:${minutes}`\n    };\n}\n","import { letState } from './letState.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(prop) {\n    return getSetProp => {\n        let myProp = letState(prop)(getSetProp);\n        watch([prop], () => getSetProp(myProp = prop));\n        getSetProp(myProp); // always reset to my value and right await so that the old prop value never slips through\n        return myProp;\n    };\n}\n//# sourceMappingURL=letProp.function.js.map","import { fadeInDown, fadeOutUp } from './animations.js';\nimport { renderCountDiv } from './renderCount.component.js';\nimport { html, state, letState, tag } from 'taggedjs';\nconst frameCount = 4;\nexport const arrayTests = tag(function ArrayTests() {\n    const players = state([]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    const getNewPlayer = () => ({\n        name: 'Person ' + players.length,\n        scores: '0,'.repeat(/*frameCount*/ 0).split(',').map((_v, index) => ({\n            frame: index + 1,\n            score: Math.floor(Math.random() * 4) + 1\n        }))\n    });\n    ++renderCount;\n    return html `<!--arrayTests.js-->\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      ${playersDisplay({ players, getNewPlayer })}\n    </div>\n\n    <button id=\"array-test-push-item\" onclick=${() => {\n        players.push(getNewPlayer());\n    }}>push item ${players.length + 1}</button>\n\n    <button onclick=${() => {\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n    }}>push 3 items</button>\n\n    <button onclick=${() => {\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n        players.push(getNewPlayer());\n    }}>push 9 items</button>\n\n    ${players.length > 0 && html `\n      <button oninit=${fadeInDown} ondestroy=${fadeOutUp}\n        style=\"--animate-duration: .1s;\"\n        onclick=${() => players.length = 0}\n      >remove all</button>\n    `}\n\n    ${renderCountDiv({ renderCount, name: 'arrayTests.ts' })}\n  `;\n});\nconst scoreData = tag(({ score, playerIndex }) => {\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    ++renderCount;\n    return html `\n    frame:${score.frame}:\n    <button\n      id=${`score-data-${playerIndex}-${score.frame}-inside-button`}\n      onclick=${() => ++score.score}\n    >inner score button ++${score.score}</button>\n    <span id=${`score-data-${playerIndex}-${score.frame}-inside-display`}\n    >${score.score}</span>\n    <button onclick=${() => ++renderCount}>increase renderCount</button>\n    ${renderCountDiv({ renderCount, name: 'scoreData' + score.frame })}\n  `;\n});\nconst playersDisplay = tag(({ players, getNewPlayer, }) => {\n    const playersContent = players.map((player, index) => html `\n    <div oninit=${fadeInDown} ondestroy=${fadeOutUp}\n      style=\"background-color:black;--animate-duration: .1s;\"\n    >\n      <div>\n        name:${player.name}\n      </div>\n      <div>\n        index:${index}\n      </div>\n      \n      <div style=\"background-color:purple;padding:.5em\">\n        scores:${player.scores.map((score, playerIndex) => html `\n        <div style=\"border:1px solid white;--animate-duration: .1s;\"\n          oninit=${fadeInDown} ondestroy=${fadeOutUp}\n        >\n          <fieldset>\n            <legend>\n              <button id=${`score-data-${playerIndex}-${score.frame}-outside-button`}\n                onclick=${() => ++score.score}\n              >outer score button ++${score.score}</button>\n              <span id=${`score-data-${playerIndex}-${score.frame}-outside-display`}\n              >${score.score}</span>\n            </legend>\n            ${scoreData({ score, playerIndex })}\n          </fieldset>\n        </div>\n      `.key(score))}</div>\n      \n      ${player.edit && html `\n        <button onclick=${() => {\n        players.splice(index, 1);\n        player.edit = !player.edit;\n    }}>remove</button>\n      `}\n      ${player.edit && html `\n        <button id=${'player-remove-promise-btn-' + index} onclick=${async () => {\n        player.edit = !player.edit;\n        players.splice(index, 1);\n    }}>remove by promise</button>\n      `}\n      <button id=${'player-edit-btn-' + index} onclick=${() => player.edit = !player.edit}>edit</button>\n      <button onclick=${() => {\n        players.splice(index, 0, getNewPlayer());\n    }}>add before</button>\n    </div>\n  `.key(player));\n    return html `\n    <!-- playersLoop.js -->\n    ${playersContent}\n    <!-- end:playersLoop.js -->\n  `;\n});\n","import { attributeDebug } from \"./attributeDebug.component\";\nimport { contentDebug } from \"./ContentDebug.component\";\nimport { tableDebug } from \"./tableDebug.component\";\nimport { html, tag, letState, onInit, state, Subject, callbackMaker, onDestroy } from \"taggedjs\";\nimport { tagDebug } from \"./tagJsDebug\";\nimport { tagSwitchDebug } from \"./tagSwitchDebug.component\";\nimport { mirroring } from \"./mirroring.tag\";\nimport { childTests } from \"./childTests\";\nimport { runTests } from \"./tests\";\nimport { renderCountDiv } from \"./renderCount.component\";\nimport { counters } from \"./countersDebug\";\nimport { providerDebugBase } from \"./providerDebug\";\nimport { watchTesting } from \"./watchTesting.tag\";\nimport { oneRender } from \"./oneRender.tag\";\nimport funInPropsTag from \"./funInProps.tag\";\nimport { App as todo } from \"./todo/app\";\nimport { propsDebugMain } from \"./PropsDebug.tag\";\nimport { arrayTests } from \"./arrayTests\";\nexport const App = tag(() => {\n    let _firstState = letState('app first state')(x => [_firstState, _firstState = x]);\n    let toggleValue = letState(false)(x => [toggleValue, toggleValue = x]);\n    let appCounter = letState(0)(x => [appCounter, appCounter = x]);\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    let testTimeout = letState(null)(x => [testTimeout, testTimeout = x]);\n    const toggle = () => {\n        toggleValue = !toggleValue;\n    };\n    // if I am destroyed before my test runs, prevent test from running\n    onDestroy(() => {\n        clearTimeout(testTimeout);\n        testTimeout = null;\n    });\n    function runTesting(manual = true) {\n        const waitFor = 2000;\n        testTimeout = setTimeout(async () => {\n            console.debug('🏃 Running tests...');\n            const result = await runTests();\n            if (!manual) {\n                return;\n            }\n            if (result) {\n                alert('✅ all app tests passed');\n                return;\n            }\n            alert('❌ tests failed. See console for more details');\n        }, waitFor); // cause delay to be separate from renders\n    }\n    ++renderCount;\n    const callbacks = callbackMaker();\n    const appCounterSubject = state(() => new Subject(appCounter));\n    onInit(() => {\n        console.info('1️⃣ app init should only run once');\n        runTesting(false);\n        appCounterSubject.subscribe(callbacks(y => appCounter = y));\n    });\n    const content = html `<!--app.js-->\n    <h1 id=\"h1-app\">🏷️ TaggedJs - ${2 + 2}</h1>\n\n    <button id=\"toggle-test\" onclick=${toggle}>toggle test ${toggleValue}</button>\n    <button onclick=${runTesting}>run test</button>\n\n    <div>\n      <button id=\"app-counter-subject-button\"\n        onclick=${() => appCounterSubject.next(appCounter + 1)}\n      >🍒 ++app subject</button>\n      <span>\n        🍒 <span id=\"app-counter-subject-display\">${appCounter}</span>\n      </span>\n    </div>\n\n    ${renderCountDiv({ name: 'app', renderCount })}\n\n    <div id=\"tagDebug-fx-wrap\">\n      <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n        <fieldset id=\"counters\" style=\"flex:2 2 20em\">\n          <legend>counters</legend>\n          ${counters({ appCounterSubject })}\n        </fieldset>\n\n        <fieldset id=\"counters\" style=\"flex:2 2 20em\">\n          <legend>⌚️ watch testing</legend>\n          ${watchTesting()}\n        </fieldset>\n\n        <fieldset id=\"provider-debug\" style=\"flex:2 2 20em\">\n          <legend>Provider Debug</legend>\n          ${providerDebugBase(undefined)}\n        </fieldset>\n\n        <fieldset id=\"props-debug\" style=\"flex:2 2 20em\">\n          <legend>Props Debug</legend>\n          ${propsDebugMain(undefined)}\n        </fieldset>\n\n        ${childTests(undefined)}\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Attribute Tests</legend>\n          ${attributeDebug()}\n        </fieldset>\n\n        <fieldset id=\"content-debug\" style=\"flex:2 2 20em\">\n          <legend>Content Debug</legend>\n          ${contentDebug()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Tag Switching</legend>\n          ${tagSwitchDebug(undefined)}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>arrays</legend>\n          ${arrayTests()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Tag Mirroring</legend>\n          ${mirroring()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Table Tests</legend>\n          ${tableDebug()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>oneRender</legend>\n          ${oneRender()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>functions in props</legend>\n          ${funInPropsTag()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>todo</legend>\n          ${todo()}\n        </fieldset>\n      </div>\n\n      ${tagDebug()}\n    </div>\n  `;\n    return content;\n});\n","import { execute } from \"./expect\";\nexport async function runTests() {\n    await import('./start.test');\n    await import('./basic.test');\n    await import('./content.test');\n    await import('./counters.test');\n    await import('./props.test');\n    await import('./providers.test');\n    await import('./tagSwitch.test');\n    await import('./child.test');\n    await import('./array.test');\n    await import('./mirror.test');\n    await import('./watch.test');\n    await import('./oneRender.test');\n    await import('./funInProps.test');\n    await import('./todos.test');\n    await import('./last.test');\n    try {\n        const start = Date.now(); //performance.now()\n        await execute();\n        const time = Date.now() - start; // performance.now() - start\n        console.info(`✅ all tests passed in ${time}ms`);\n        return true;\n    }\n    catch (error) {\n        console.error('❌ tests failed: ' + error.message, error);\n        return false;\n    }\n}\n","import { childTests } from \"./childTests\";\nimport { Subject, callbackMaker, html, onInit, letState, tag, state } from \"taggedjs\";\nimport { arrayTests } from \"./arrayTests\";\nimport { tagSwitchDebug } from \"./tagSwitchDebug.component\";\nimport { mirroring } from \"./mirroring.tag\";\nimport { propsDebugMain } from \"./PropsDebug.tag\";\nimport { providerDebugBase } from \"./providerDebug\";\nimport { counters } from \"./countersDebug\";\nimport { tableDebug } from \"./tableDebug.component\";\nimport { contentDebug } from \"./ContentDebug.component\";\nimport { watchTesting } from \"./watchTesting.tag\";\nimport { oneRender } from \"./oneRender.tag\";\nimport { renderCountDiv } from \"./renderCount.component\";\nimport funInPropsTag from \"./funInProps.tag\";\nimport { App as todo } from \"./todo/app\";\nimport { runTests } from \"./isolatedApp.test\";\nexport var ViewTypes;\n(function (ViewTypes) {\n    ViewTypes[\"Todo\"] = \"todo\";\n    ViewTypes[\"FunInPropsTag\"] = \"funInPropsTag\";\n    ViewTypes[\"OneRender\"] = \"oneRender\";\n    ViewTypes[\"WatchTesting\"] = \"watchTesting\";\n    ViewTypes[\"Mirroring\"] = \"mirroring\";\n    ViewTypes[\"Content\"] = \"content\";\n    ViewTypes[\"Arrays\"] = \"arrays\";\n    ViewTypes[\"Counters\"] = \"counters\";\n    ViewTypes[\"TableDebug\"] = \"tableDebug\";\n    ViewTypes[\"Props\"] = \"props\";\n    ViewTypes[\"Child\"] = \"child\";\n    ViewTypes[\"TagSwitchDebug\"] = \"tagSwitchDebug\";\n    ViewTypes[\"ProviderDebug\"] = \"providerDebug\";\n})(ViewTypes || (ViewTypes = {}));\nconst viewTypes = Object.values(ViewTypes);\nconst storage = getScopedStorage();\nfunction getScopedStorage() {\n    const string = localStorage.taggedjs || JSON.stringify({ autoTest: true, views: [] });\n    return JSON.parse(string);\n}\nfunction saveScopedStorage() {\n    localStorage.taggedjs = JSON.stringify(storage);\n}\nexport default tag(() => {\n    state('isolated app state');\n    let renderCount = letState(0)(x => [renderCount, renderCount = x]);\n    let appCounter = letState(0)(x => [appCounter, appCounter = x]);\n    let testTimeout = letState(null)(x => [testTimeout, testTimeout = x]);\n    const appCounterSubject = state(() => new Subject(appCounter));\n    const callback = callbackMaker();\n    function runTesting(manual = true) {\n        const waitFor = 2000;\n        testTimeout = setTimeout(async () => {\n            console.debug('🏃 Running tests...');\n            const result = await runTests(storage.views);\n            if (!manual) {\n                return;\n            }\n            if (result) {\n                alert('✅ all app tests passed');\n                return;\n            }\n            alert('❌ tests failed. See console for more details');\n        }, waitFor); // cause delay to be separate from renders\n    }\n    onInit(() => {\n        console.info('1️⃣ app init should only run once');\n        appCounterSubject.subscribe(callback(x => {\n            appCounter = x;\n        }));\n        if (storage.autoTest) {\n            runTesting(false);\n        }\n    });\n    function toggleViewType(type) {\n        if (storage.views.includes(type)) {\n            (storage.views = storage.views.filter(x => x !== type));\n        }\n        else {\n            storage.views.push(type);\n            if (storage.autoTest) {\n                runTesting();\n            }\n        }\n        saveScopedStorage();\n    }\n    function toggleAutoTesting() {\n        storage.autoTest = storage.autoTest = !storage.autoTest;\n        saveScopedStorage();\n    }\n    ++renderCount;\n    return html `<!--isolatedApp.js-->\n    <h1 id=\"app\">🏷️ TaggedJs - isolated</h1>\n\n    <div>\n      <button id=\"app-counter-subject-button\"\n        onclick=${() => appCounterSubject.next(appCounter + 1)}\n      >🍒 ++app subject</button>\n      <span>\n        🍒 <span id=\"app-counter-subject-display\">${appCounter}</span>\n      </span>\n      auto testing <input type=\"checkbox\" ${storage.autoTest ? 'checked' : null} onchange=${toggleAutoTesting} />\n      <button type=\"button\" onclick=${() => runTesting(true)}>run tests</button>\n    </div>\n\n    <div>\n      <h3>Sections</h3>\n      <div style=\"display:flex;gap:1em;flex-wrap:wrap;margin:1em;\">\n        ${viewTypes.map(type => html `\n          <div>\n            <input type=\"checkbox\"\n              id=${'view-type-' + type} name=${'view-type-' + type}\n              ${storage.views.includes(type) && 'checked'}\n              onclick=${() => toggleViewType(type)}\n            />\n            <label for=${'view-type-' + type}>&nbsp;${type}</label>\n          </div>\n        `.key(type))}\n      </div>\n    </div>\n\n    <div id=\"tagDebug-fx-wrap\">\n      <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n        ${storage.views.includes(ViewTypes.OneRender) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>oneRender</legend>\n            ${oneRender()}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.Props) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>propsDebugMain</legend>\n            ${propsDebugMain(undefined)}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.WatchTesting) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>watchTesting</legend>\n            ${watchTesting()}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.TableDebug) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>tableDebug</legend>\n            ${tableDebug()}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.ProviderDebug) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>providerDebugBase</legend>\n            ${providerDebugBase(undefined)}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.TagSwitchDebug) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>tagSwitchDebug</legend>\n            ${tagSwitchDebug(undefined)}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.Mirroring) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>mirroring</legend>\n            ${mirroring()}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.Arrays) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>arrays</legend>\n            ${arrayTests()}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.Counters) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>counters</legend>\n            ${counters({ appCounterSubject })}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.Content) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>content</legend>\n            ${contentDebug()}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.Child) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>Children Tests</legend>\n            ${childTests(undefined)}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.FunInPropsTag) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>funInPropsTag</legend>\n            ${funInPropsTag()}\n          </fieldset>\n        `}\n\n        ${storage.views.includes(ViewTypes.Todo) && html `\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>todo</legend>\n            ${todo()}\n          </fieldset>\n        `}\n\n        ${ /*\n      <textarea style=\"font-size:0.6em;min-width:50vw;height:400px\">${ template.string }</textarea>\n      <textarea style=\"font-size:0.6em;min-width:50vw;height:400px\">${ JSON.stringify(template, null, 2) }</textarea>\n      */false}\n      </div>\n      ${renderCountDiv({ renderCount, name: 'isolatedApp' })}\n    </div>\n  `;\n});\n","import { execute } from \"./expect\";\nimport { ViewTypes } from \"./isolatedApp\";\nexport async function runTests(views) {\n    await import('./start.test');\n    if (views.includes(ViewTypes.Content)) {\n        await import('./content.test');\n    }\n    if (views.includes(ViewTypes.Counters)) {\n        await import('./counters.test');\n    }\n    if (views.includes(ViewTypes.Props)) {\n        await import('./props.test');\n    }\n    if (views.includes(ViewTypes.ProviderDebug)) {\n        await import('./providers.test');\n    }\n    if (views.includes(ViewTypes.TagSwitchDebug)) {\n        await import('./tagSwitch.test');\n    }\n    if (views.includes(ViewTypes.Child)) {\n        await import('./child.test');\n    }\n    if (views.includes(ViewTypes.Arrays)) {\n        await import('./array.test');\n    }\n    if (views.includes(ViewTypes.Mirroring)) {\n        await import('./mirror.test');\n    }\n    if (views.includes(ViewTypes.WatchTesting)) {\n        await import('./watch.test');\n    }\n    if (views.includes(ViewTypes.FunInPropsTag)) {\n        await import('./funInProps.test');\n    }\n    if (views.includes(ViewTypes.OneRender)) {\n        await import('./oneRender.test');\n    }\n    if (views.includes(ViewTypes.Todo)) {\n        await import('./todos.test');\n    }\n    await import('./last.test');\n    try {\n        const start = Date.now(); //performance.now()\n        await execute();\n        const time = Date.now() - start; // performance.now() - start\n        console.info(`✅ isolated tests passed in ${time}ms`);\n        return true;\n    }\n    catch (error) {\n        console.error('❌ isolated tests failed: ' + error.message, error);\n        return false;\n    }\n}\n","import { tagElement } from \"taggedjs\";\nimport { App } from \"./app.tag\";\nimport IsolatedApp from \"./isolatedApp\";\nexport const app = () => {\n    console.info('attaching app to element...');\n    const element = document.getElementsByTagName('app')[0];\n    const pathname = window.location.pathname;\n    const locationSplit = pathname.split('/').filter(x => x);\n    const location = locationSplit[0]?.toLowerCase();\n    if (location && ['isolated.html', 'index-static.html'].includes(location)) {\n        const start = Date.now();\n        tagElement(IsolatedApp, element, { test: 1 });\n        const end = Date.now() - start;\n        console.info(`⏱️ isolated render in ${end}ms`);\n        return;\n    }\n    const start = Date.now();\n    tagElement(App, element, { test: 1 });\n    const end = Date.now() - start;\n    console.info(`⏱️ rendered in ${end}ms`);\n};\n"],"names":["it","toBe","insideCount","click","insideElm","insideDisplay","indexValue","innerText","outsideElm","outsideDisplay","outsideValue","Number","toString","async","onclick","result","time","Promise","res","setTimeout","toBeDefined","toggleTest","propsTextarea","value","replace","firstRun","counterInput","onkeyup","target","beforeRenderCount","beforeInnerRenderCount","pipedSubDisplay","subjectCountDisplay","elmCount","selector","document","querySelectorAll","length","query","focus","q","forEach","elm","map","clickOne","index","html","innerHTML","byId","id","getElementById","htmlById","expectMatchedHtml","queries","elements","reduce","all","push","toBeGreaterThan","lastHtml","pop","every","join","expectHTML","element","expectElmCount","count","message","found","testDuelCounterElements","sets","button0","display0","shift","buttonQuery","ip0","testCounterSelectedElements","elementCountExpected","increase","button1","display1","display1Element","ip1Check","secondIncrease","counterButtons","counterDisplays","counterButtonSelect","counterDisplaySelect","increaseCounter","counterDisplay","body","contains","counterValue","oldCounterValue","testCounterElements","onlyTests","tests","tab","describe","label","run","oldTests","console","debug","repeat","runTests","error","start","Date","now","clearTests","execute","test","err","name","expect","expected","customMessage","Function","JSON","stringify","Error","received","amount","expectNum","isNaN","toBeLessThan","skip","only","getElementsByTagName","counter","propCounter","funUpdateValue","changed","ownerHTML","parentHTML","childHTML","ownerNum","parentNum","childNum","syncCounter","templateTags","dropdown","onchange","todoInput","onkeydown","key","todoToggle2","checked","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","editInput","slowCount","startCount","truthStartCount","newCount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","empty","textNode","createTextNode","ValueTypes","isStaticTag","tag","templater","includes","tagJsType","isTagComponent","tagComponent","isTagClass","isSubjectInstance","subject","isSubject","subscribe","isTagArray","Array","x","combineLatest","subjects","output","Subject","subscribeWith","callback","valuesSeen","values","setValue","subscription","clones","subscriptions","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","next","newValue","handler","methodResponse","setHandler","onSubscription","subscribers","_value","constructor","this","defineValueOn","countSubject","globalSubCount$","unsubscribe","findIndex","sub","splice","removeSubFromArray","add","getSubscription","orgCallback","lastValue","emit","set","subs","toPromise","toCallback","_subscription","pipe","operations","setMethods","args","arg","static","ValueSubject","super","getSupportInCycle","setUse","memory","stateConfig","support","use","useMe","beforeRender","beforeRedraw","afterRender","beforeDestroy","tagUse","TagError","details","errorCode","ArrayNoKeyError","StateMismatchError","SyncCallbackError","badLetState","array","state","config","rearray","stateLength","getStateValue","initState","defaultValue","checkValue","oldState","StateEchoBack","getCallbackValue","wrapper","oldStates","newStates","tagFunction","parentWrap","original","warn","item","syncStates","stateFrom","stateTo","fromValue","getSetMethod","restate","oldValue","initValue","newState","global","newest","watch","currentValues","setupWatch","defaultFinally","init","before","final","previous","pastResult","previousValues","defineOnMethod","getWatch","attachTo","setup","oldWatch","firstSupport","method","nowSupport","setTo","oldestState","letState","makeStateResult","y","deepClone","makeDeepClone","WeakMap","visited","object","has","RegExp","clone","isArray","create","getPrototypeOf","i","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","getTime","isArrayDeepEqual","keys1","keys","keys2","isObjectDeepEqual","newWatch","providers","constructMethod","stateDiffMemory","stateDiff","provider","oldStateCount","instance","owner","children","cm","compareTo","ownerSupport","find","msg","isLikeTags","support0","support1","templater0","templater1","tag0","tag1","strings0","strings","strings1","string","values0","values1","valuesLengthsMatch","allVarsMatch","isLikeValueSets","runBeforeRender","runAfterRender","tagClosed$","runBeforeDestroy","deleted","hasLiveElements","childTags","filter","child","oldest","renderTagOnly","newSupport","prevSupport","oldRenderCount","renderCount","parentSupport","lastOwnerSupport","runtimeOwnerSupport","lastState","runBeforeRedraw","beforeWithRender","reSupport","variablePrefix","escapeVariable","escapeSearch","Tag","arrayValue","destroyTagMemory","oldSupport","destroy","context","isSimpleType","destroyArrayTag","counts","stagger","removed","getValueType","type","function","date","tagArray","unknown","cloneValueArray","props","getChildTagsToDestroy","allTags","cTag","TemplaterResult","tagged","madeChildIntoSubject","childSubject","templaterResult","kid","kidsToTagArraySubject","TagJsSubject","tagJsSubject","getNewGlobal","lastRun","destroy$","blocked","processNewTag","Support","style","classS","specialAttribute","names","split","classList","remove","hasPropChanges","pastCloneProps","castedProps","castedPastProps","compare","subCastedProps","subCompareProps","matched","entries","compareProps","onDelete","compareOriginal","processTagResult","fragment","subjectTag","lastSupport","updateBy","processTagResultUpdate","newFragment","buildBeforeElement","placeholder","parentNode","insertBefore","processTag","newSupportByTemplater","added","appendChild","tagFakeTemplater","getFakeTemplater","fake","isTag","setupNewSupport","processSubjectComponent","options","substring","ownGlobal","preClones","reGlobal","renderWithSupport","myClones","fClone","renderSubjectComponent","castProps","stateArray","checkProp","alterProp","newProp","seen","toCall","wrap","callWith","noCycle","allMatched","renderSupport","callbackPropOwner","assign","getPropWrap","subValue","afterCheckProp","hasSetter","getOwnPropertyDescriptor","pastValue","updateExistingTagComponent","renderUp","oldWrapper","newWrapper","isSameTag","hasChanged","newTemplater","propsChanged","propsConfig","latestCloned","propsChanged2","kidsChanged","oldCloneKidValues","lastClonedKidValues","newClonedKidValues","hasKidsChanged","hasSupportChanged","newPropsArray","priorPropConfig","priorPropsArray","newArray","syncPriorPropFunction","syncFunctionProps","locked","isLikeTag","oldestTag","softDestroySupport","buildNewTag","afterTagRender","priorProp","oldOwnerState","useLocks","runTagCallback","bindTo","findTagToCallback","bind","callbackResult","lastResult","block","checkAfterCallbackPromise","last","renderCallbackSupport","afterTagCallback","then","startRegX","endRegX","ondoubleclick","isTagVar","search","processAttribute","attrName","scope","howToSet","getContextValueByVarString","processNameValueAttr","processScopedNameValueAttr","attrValue","removeAttribute","processNameOnlyAttr","isSpecialAttr","reverse","isSpecial","action","newAttrValue","oneRender","isChildOverride","subjectFunction","bindSubjectCallback","processAttributeSubjectValue","callbackFun","fun","howToSetAttribute","setAttribute","howToSetInputValue","INPUT","valueS","interpolateAttributes","attrNames","getAttributeNames","nodeName","getAttribute","underTagVarMatch","processTagArray","lastArray","cloneNode","removeChild","setPlaceholderElm","runtimeInsertBefore","destroyArrayItem","subTag","tagClass","prevArrayValue","destroyItem","valueA","valueB","areLikeValues","previousSupport","itemSubject","setupNewTemplater","prevSubject","template","getTemplate","processAddTagArrayItem","updateBeforeTemplate","lastFirstChild","parent","castTextValue","processRegularValue","castedValue","oldClone","textContent","processFirstSubjectValue","v","oneRenderToSupport","processFirstRegularValue","swapInsertBefore","updateExistingValue","valueType","displaySubject","hasLastValue","newType","destroySimpleValue","arraySubject","wasArray","isValueTag","checkDestroyPrevious","subjectSup","newestState","prepareUpdateToComponent","isClass","valueSupport","isTagTemplater","handleStillTag","interpolateTemplate","hasAttribute","called","mutatingCallback","syncRun","subscribeToTemplate","afterElmBuild","textarea","match","dynamic","_elm","_name","scanTextAreaValue","diff","nextSibling","onInitDoubleWrap","oninit","onInitWrap","onInit","elementInitCheck","select","interpolateContentTemplates","tagComponents","subChild","isRenderEndTemplate","nextTagComponent","tagName","interpolateElement","interpolatedTemplates","interpolation","content","nextTagComponents","processChildrenAttributes","interpolateReplace","interpolateString","expression","startsWith","templateStart","templateEnd","interpolateToTemplates","prefixSearch","BaseSupport","isApp","appElement","clonePropsBy","kidValue","latest","createDocumentFragment","update","tempDraw","createElement","container","firstChild","nextNextSibling","buildClones","afterInterpolateElement","thisTag","stringsMatch","updateContext","_string","hasValue","variableName","exists","updateContextItem","processNewValue","tempTag","updateConfig","updateValues","byParent","destroySubscriptions","subGlobal","resetSupport","promises","smartRemoveKids","startStagger","childTag","cloneOne","newPromises","promise","destroyClones","unshift","checkCloneRemoval","customElm","ondestroy","onDestroyDoubleWrap","onDestroyWrap","onDestroy","elementDestroyCheck","indexOf","version","getAppSupport","lastTemplater","lastStrings","oldLength","newLength","moveProviders","destroyUnlikeTags","handleProviderChanges","appSupport","hadChanged","tagsWithProvider","getTagsWithProvider","renderExistingTag","oldestSupport","preRenderCount","providersWithChanges","providersChangeCheck","ownerTag","selfPropChange","callbackStateUpdate","maybePromise","finally","innerCallback","a","b","c","e","f","callbackMaker","originalGetter","initMemory","syncError","setCurrentSupport","childrenCurrentSupport","tags","getTagWrap","originalFunction","preCastedProps","nowState","valuesValue","executeWrap","tagCount","innerTagWrap","tagIndex","route","routeProps","app","routeTag","oneRenderFunction","appElements","tagElement","appElmIndex","appElm","runWrapper","hmr","attributeDebug","selected","isOrange","class","contentDebug","vs0","vs1","utils","willPromise","resolve","tableDebug","showCell","test0interval","test1interval","intervalTester0","intervalCount","intervalId","intervalId2","renderCounter","currentTime","startInterval","info","setInterval","stopInterval","clearInterval","intervalTester1","toggleInterval","animateInit","staggerBy","fxName","opacity","wait","animateDestroy","capturePosition","zIndex","toTop","offsetTop","toLeft","offsetLeft","toWidth","clientWidth","offsetWidth","toHeight","clientHeight","offsetHeight","top","left","width","height","position","captureElementPosition","in","fadeInDown","out","fadeOutUp","fxIn","fxOut","input","createFx","tagDebug","_firstState","showIntervals","renderCountDiv","tagSwitchDebug","_t","selectedTag","tagOutput","title","tag2","tag3","tagOutput2","ternaryPropTest","arraySwitching","mirroring","tagCounter","innerHtmlTest","_props","innerHtmlPropsTest","test22","childTests","_","childAsPropTest","mouseOverTag","mouseOverEditShow","edit","loadStartTime","counters","appCounterSubject","readStartTime","initCounter","callbacks","callbackTestSub","pipedSubject0","increasePropCounter","globalSubs","innerCounters","TagDebugProvider","showDialog","ProviderFunc","tagDebugProvider","upper","upperTagDebugProvider","providerDebugBase","_x","providerClass","showModal","providerDebug","propCounterChange","dialog","tagSwitchingProChild1","upperProvider","tagSwitchingProChild2","funcProvider","showProProps","testProviderAsProps","watchTesting","stateNum","stateNumChangeCount","slowChangeCount","watchPropNumSlow","noInit","subjectChangeCount","watchPropNumSubject","asSubject","truthChange","truthChangeCount","watchTruth","truthy","truthSubChangeCount","watchTruthAsSub","insideMultiRender","counter$","main","myFunction","showChild","somethingElse","addArrayItem","deleteItem","funInPropsChild","myChildFunction","addArrayComponent","handleKeyDown","trim","mainProp","myFunction3","other","arrayFunTag","hasValidMin","min","Input","onSubmit","onBlur","ADD_ITEM","UPDATE_ITEM","REMOVE_ITEM","TOGGLE_ITEM","TOGGLE_ALL","REMOVE_COMPLETED_ITEMS","Item","todo","dispatch","isWritable","completed","removeItem","payload","updateItem","Main","todos","visibleTodos","Footer","activeTodos","removeCompleted","nanoid","size","Math","random","App","concat","todoReducer","Header","propsDebugMain","syncPropNumber","propNumber","propsJson","json","parse","propsDebug","propNumberChange","syncPropDebug","parentTest","timestamp","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","timestampToValues","newDateString","propDateDebug","propNumberChangeCount","myPropNumber","watchResults","__","getSetProp","myProp","letProp","propFnUpdateTest","arrayTests","players","getNewPlayer","scores","_v","frame","score","floor","playersDisplay","scoreData","playerIndex","player","toggleValue","appCounter","testTimeout","runTesting","manual","alert","clearTimeout","ViewTypes","viewTypes","storage","localStorage","taggedjs","autoTest","views","getScopedStorage","saveScopedStorage","Content","Counters","Props","ProviderDebug","TagSwitchDebug","Child","Arrays","Mirroring","WatchTesting","FunInPropsTag","OneRender","Todo","toggleViewType","TableDebug","locationSplit","location","pathname","toLowerCase","end"],"sourceRoot":""}