{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///../dist/js/tag/ValueTypes.enum.js","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../dist/js/isInstance.js","webpack:///../dist/js/subject/combineLatest.function.js","webpack:///../dist/js/subject/subject.utils.js","webpack:///../dist/js/subject/Subject.class.js","webpack:///../dist/js/subject/ValueSubject.js","webpack:///../dist/js/tag/getSupportInCycle.function.js","webpack:///../dist/js/state/setUse.function.js","webpack:///../dist/js/errors.js","webpack:///../dist/js/state/state.utils.js","webpack:///../dist/js/state/syncStates.function.js","webpack:///../dist/js/state/state.function.js","webpack:///../dist/js/state/watch.function.js","webpack:///../dist/js/state/subject.function.js","webpack:///../dist/js/state/letState.function.js","webpack:///../dist/js/deepFunctions.js","webpack:///../dist/js/state/providers.js","webpack:///../dist/js/state/provider.utils.js","webpack:///../dist/js/tag/isLikeTags.function.js","webpack:///../dist/js/tag/destroyTag.function.js","webpack:///../dist/js/tag/tagRunner.js","webpack:///../dist/js/tag/render/renderTagOnly.function.js","webpack:///../dist/js/tag/render/renderWithSupport.function.js","webpack:///../dist/js/tag/render/renderExistingTag.function.js","webpack:///../dist/js/tag/render/renderTagSupport.function.js","webpack:///../dist/js/state/callbackStateUpdate.function.js","webpack:///../dist/js/state/callbackMaker.function.js","webpack:///../dist/js/state/onInit.js","webpack:///../dist/js/state/onDestroy.js","webpack:///../dist/js/state/children.js","webpack:///../dist/js/tag/Tag.class.js","webpack:///../dist/js/tag/TemplaterResult.class.js","webpack:///../dist/js/tag/kidsToTagArraySubject.function.js","webpack:///../dist/js/tag/tag.utils.js","webpack:///../dist/js/interpolations/bindSubjectCallback.function.js","webpack:///../dist/js/insertAfter.function.js","webpack:///../dist/js/tag/checkDestroyPrevious.function.js","webpack:///../dist/js/tag/getValueType.function.js","webpack:///../dist/js/tag/cloneValueArray.function.js","webpack:///../dist/js/tag/destroy.support.js","webpack:///../dist/js/tag/update/processNewValue.function.js","webpack:///../dist/js/tag/setTagPlaceholder.function.js","webpack:///../dist/js/interpolations/inputAttribute.js","webpack:///../dist/js/interpolations/processAttribute.function.js","webpack:///../dist/js/interpolations/interpolateAttributes.js","webpack:///../dist/js/interpolations/interpolations.js","webpack:///../dist/js/tag/update/processTagResult.function.js","webpack:///../dist/js/tag/update/processSubjectComponent.function.js","webpack:///../dist/js/tag/render/renderSubjectComponent.function.js","webpack:///../dist/js/tag/update/processTag.function.js","webpack:///../dist/js/tag/update/processTagArray.js","webpack:///../dist/js/updateBeforeTemplate.function.js","webpack:///../dist/js/tag/update/processRegularValue.function.js","webpack:///../dist/js/tag/update/processFirstSubjectValue.function.js","webpack:///../dist/js/tag/update/oneRenderToTagSupport.function.js","webpack:///../dist/js/interpolations/scanTextAreaValue.function.js","webpack:///../dist/js/tag/hasPropChanges.function.js","webpack:///../dist/js/tag/hasTagSupportChanged.function.js","webpack:///../dist/js/alterProp.function.js","webpack:///../dist/js/tag/update/updateExistingTagComponent.function.js","webpack:///../dist/js/tag/update/updateExistingValue.function.js","webpack:///../dist/js/interpolations/interpolateTemplate.js","webpack:///../dist/js/interpolations/elementInitCheck.js","webpack:///../dist/js/interpolations/interpolateContentTemplates.js","webpack:///../dist/js/interpolations/interpolateElement.js","webpack:///../dist/js/interpolations/afterInterpolateElement.function.js","webpack:///../dist/js/render.js","webpack:///../dist/js/tag/TagSupport.class.js","webpack:///../dist/js/tag/update/updateContextItem.function.js","webpack:///../dist/js/tag/elementDestroyCheck.function.js","webpack:///../dist/js/tag/tag.js","webpack:///../dist/js/tag/getTagWrap.function.js","webpack:///../dist/js/tag/html.js","webpack:///../dist/js/tag/tagElement.js","webpack:///../dist/js/index.js","webpack:///./src/attributeDebug.component.ts","webpack:///./src/ContentDebug.component.ts","webpack:///../dist/js/subject/will.functions.js","webpack:///./src/tableDebug.component.ts","webpack:///./src/renderCount.component.ts","webpack:///./src/PropsDebug.tag.ts","webpack:///../dist/js/state/letProp.function.js","webpack:///./node_modules/taggedjs-animate-css/js/createFx.function.js","webpack:///./node_modules/taggedjs-animate-css/js/index.js","webpack:///./src/arrayTests.ts","webpack:///./src/intervalDebug.ts","webpack:///./src/tagJsDebug.ts","webpack:///./src/tagSwitchDebug.component.ts","webpack:///./src/mirroring.tag.ts","webpack:///./src/innerHtmlTests.ts","webpack:///./src/childTests.ts","webpack:///./src/elmSelectors.ts","webpack:///./src/expect.ts","webpack:///./src/expect.html.ts","webpack:///./src/tests.ts","webpack:///./src/mouseover.tag.ts","webpack:///./src/countersDebug.ts","webpack:///./src/providerDebug.ts","webpack:///./src/watchTesting.tag.ts","webpack:///./src/oneRender.tag.ts","webpack:///./src/funInProps.tag.ts","webpack:///./src/app.tag.ts","webpack:///./src/isolatedApp.ts","webpack:///./src/app.function.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export var ValueTypes;\n(function (ValueTypes) {\n    ValueTypes[\"unknown\"] = \"unknown\";\n    ValueTypes[\"tag\"] = \"tag\";\n    ValueTypes[\"templater\"] = \"templater\";\n    ValueTypes[\"tagComponent\"] = \"tag-component\";\n    ValueTypes[\"tagArray\"] = \"tag-array\";\n    ValueTypes[\"subject\"] = \"subject\";\n    ValueTypes[\"date\"] = \"date\";\n    ValueTypes[\"string\"] = \"string\";\n    ValueTypes[\"boolean\"] = \"boolean\";\n    ValueTypes[\"function\"] = \"function\";\n    ValueTypes[\"undefined\"] = \"undefined\";\n})(ValueTypes || (ValueTypes = {}));\n//# sourceMappingURL=ValueTypes.enum.js.map","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isStaticTag(value) {\n    return [\n        ValueTypes.tag,\n        ValueTypes.templater,\n    ].includes(value?.tagJsType);\n}\nexport function isTagTemplater(value) {\n    return value?.tagJsType === ValueTypes.templater;\n}\n// TODO: whats the difference between isTagClass and isTagComponent\nexport function isTagComponent(value) {\n    return value?.tagJsType === ValueTypes.tagComponent;\n}\nexport function isTagClass(value) {\n    return value?.tagJsType === ValueTypes.tag;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return (subject?.isSubject === true || subject?.subscribe) ? true : false; // subject?.isSubject === true || \n}\nexport function isTagArray(value) {\n    return value instanceof Array && value.every(x => [\n        ValueTypes.tag, ValueTypes.templater, ValueTypes.tag, ValueTypes.tagComponent\n    ].includes(x?.tagJsType));\n}\n//# sourceMappingURL=isInstance.js.map","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (let index = valuesSeen.length - 1; index >= 0; --index) {\n                if (!valuesSeen[index]) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => subject.subscribe(x => setValue(x, index + 1)));\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n//# sourceMappingURL=combineLatest.function.js.map","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject._value + 1);\n    const subscription = () => {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = () => {\n        removeSubFromArray(subscribers, callback); // each will be called when update comes in\n        // removeSubFromArray(Subject.globalSubs, callback) // 🔬 testing\n        Subject.globalSubCount$.next(countSubject._value - 1);\n        // any double unsubscribes will be ignored\n        subscription.unsubscribe = () => subscription;\n        // unsubscribe from any combined subjects\n        const subscriptions = subscription.subscriptions;\n        for (let index = subscriptions.length - 1; index >= 0; --index) {\n            subscriptions[index].unsubscribe();\n        }\n        return subscription;\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\n//# sourceMappingURL=subject.utils.js.map","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    _value;\n    // this is overwritten by constructor at runtime. However having it helps editors know of its existence\n    set; // `subject.set = x` equal to `subject.next(x)`\n    constructor(value, \n    // private?\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        // Subject.globalSubs.push(subscription) // 🔬 testing\n        const count = Subject.globalSubCount$.value;\n        Subject.globalSubCount$.next(count + 1); // 🔬 testing\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        const subs = [...this.subscribers]; // subs may change as we call callbacks\n        const length = subs.length;\n        for (let index = 0; index < length; ++index) {\n            const sub = subs[index];\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster */\n    toCallback(callback) {\n        this.subscribe((x, subscription) => {\n            subscription.unsubscribe();\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this._value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n    Object.defineProperty(subject, 'set', {\n        // supports subject.set = x\n        set: (value) => subject.next(value),\n        // supports subject.set(x)\n        get: () => (x) => subject.next(x),\n    });\n}\n//# sourceMappingURL=Subject.class.js.map","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        defineValueOn(this);\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n//# sourceMappingURL=ValueSubject.js.map","import { setUse } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUse.memory.stateConfig.tagSupport;\n}\n//# sourceMappingURL=getSupportInCycle.function.js.map","const tagUse = [];\nexport function setUse(use) {\n    // must provide defaults\n    const useMe = {\n        beforeRender: use.beforeRender || (() => undefined),\n        beforeRedraw: use.beforeRedraw || (() => undefined),\n        afterRender: use.afterRender || (() => undefined),\n        beforeDestroy: use.beforeDestroy || (() => undefined),\n    };\n    setUse.tagUse.push(useMe);\n}\nsetUse.tagUse = tagUse;\nsetUse.memory = {};\n//# sourceMappingURL=setUse.function.js.map","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n//# sourceMappingURL=errors.js.map","import { StateMismatchError } from '../errors.js';\nimport { setUse } from './setUse.function.js';\nsetUse.memory.stateConfig = {\n    array: [], // state memory on the first render\n    // rearray: [] as State,\n};\nconst beforeRender = (tagSupport) => initState(tagSupport);\nsetUse({\n    beforeRender,\n    beforeRedraw: beforeRender,\n    afterRender: (tagSupport) => {\n        const memory = tagSupport.memory;\n        const config = setUse.memory.stateConfig;\n        const rearray = config.rearray;\n        if (rearray.length) {\n            if (rearray.length !== config.array.length) {\n                const message = `States lengths have changed ${rearray.length} !== ${config.array.length}. State tracking requires the same amount of function calls every render. Typically this errors is thrown when a state like function call occurs only for certain conditions or when a function is intended to be wrapped with a tag() call`;\n                const wrapper = tagSupport.templater?.wrapper;\n                const details = {\n                    oldStates: config.array,\n                    newStates: config.rearray,\n                    tagFunction: wrapper.parentWrap.original,\n                };\n                const error = new StateMismatchError(message, details);\n                console.warn(message, details);\n                throw error;\n            }\n        }\n        delete config.rearray; // clean up any previous runs\n        delete config.tagSupport;\n        memory.state.length = 0;\n        memory.state.push(...config.array);\n        const state = memory.state;\n        for (let index = state.length - 1; index >= 0; --index) {\n            const item = state[index];\n            item.lastValue = getStateValue(item); // set last values\n        }\n        config.array = [];\n    }\n});\nexport function getStateValue(state) {\n    const callback = state.callback;\n    if (!callback) {\n        return state.defaultValue;\n    }\n    const [value, checkValue] = getCallbackValue(callback);\n    if (checkValue !== StateEchoBack) {\n        const message = 'letState function incorrectly used. Second item in array is not setting expected value.\\n\\n' +\n            'For \"let\" state use `let name = state(default)(x => [name, name = x])`\\n\\n' +\n            'For \"const\" state use `const name = state(default)()`\\n\\n' +\n            'Problem state:\\n' + (callback ? callback.toString() : JSON.stringify(state)) + '\\n';\n        console.error(message, { state, callback, value, checkValue });\n        throw new Error(message);\n    }\n    return value;\n}\nexport class StateEchoBack {\n}\nfunction initState(tagSupport) {\n    const memory = tagSupport.memory;\n    const state = memory.state;\n    const config = setUse.memory.stateConfig;\n    config.rearray = [];\n    const stateLength = state?.length;\n    if (stateLength) {\n        for (let index = 0; index < stateLength; ++index) {\n            getStateValue(state[index]);\n        }\n        config.rearray.push(...state);\n    }\n    config.tagSupport = tagSupport;\n}\nexport function getCallbackValue(callback) {\n    const oldState = callback(StateEchoBack); // get value and set to undefined\n    const [value] = oldState;\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n//# sourceMappingURL=state.utils.js.map","export function syncStates(stateFrom, stateTo) {\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const state = stateFrom[index];\n        const fromValue = state.get();\n        const callback = stateTo[index].callback;\n        if (callback) {\n            callback(fromValue); // set the value\n        }\n        stateTo[index].lastValue = fromValue; // record the value\n    }\n}\n//# sourceMappingURL=syncStates.function.js.map","import { setUse } from './setUse.function.js';\nimport { getStateValue } from './state.utils.js';\nimport { syncStates } from './syncStates.function.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    const config = setUse.memory.stateConfig;\n    let getSetMethod;\n    const rearray = config.rearray;\n    const restate = rearray[config.array.length];\n    if (restate) {\n        let oldValue = getStateValue(restate);\n        getSetMethod = ((x) => [oldValue, oldValue = x]);\n        const push = {\n            get: () => getStateValue(push),\n            callback: getSetMethod,\n            lastValue: oldValue,\n            defaultValue: restate.defaultValue,\n        };\n        config.array.push(push);\n        return oldValue;\n    }\n    // State first time run\n    const defaultFn = defaultValue instanceof Function ? defaultValue : () => defaultValue;\n    let initValue = defaultFn();\n    // the state is actually intended to be a function\n    if (initValue instanceof Function) {\n        const oldState = config.array;\n        const tagSupport = config.tagSupport;\n        const original = initValue;\n        initValue = ((...args) => {\n            const global = tagSupport.global;\n            const newest = global.newest;\n            const newState = newest.memory.state;\n            syncStates(newState, oldState);\n            const result = original(...args);\n            syncStates(oldState, newState);\n            return result;\n        });\n        initValue.original = original;\n    }\n    getSetMethod = ((x) => [initValue, initValue = x]);\n    const push = {\n        get: () => getStateValue(push),\n        callback: getSetMethod,\n        lastValue: initValue,\n        defaultValue: initValue,\n    };\n    config.array.push(push);\n    return initValue;\n}\n//# sourceMappingURL=state.function.js.map","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUse } from './setUse.function.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered. Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before = () => true, final = defaultFinally, } = {}) => {\n    let previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (!before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (!before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const method = (currentValues, callback) => {\n                const firstSupport = state(() => getSupportInCycle());\n                const subject = state(() => new ValueSubject(undefined));\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowTagSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowTagSupport !== firstSupport) {\n                        const newestState = setUse.memory.stateConfig.array;\n                        syncStates(newestState, firstSupport.memory.state);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n//# sourceMappingURL=watch.function.js.map","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUse } from './setUse.function.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(value, onSubscription) {\n    const oldestState = state(() => setUse.memory.stateConfig.array);\n    const nowTagSupport = getSupportInCycle();\n    return state(() => {\n        const subject = new Subject(value, onSubscription).pipe(x => {\n            syncStates(nowTagSupport.memory.state, oldestState);\n            return x;\n        });\n        return subject;\n    });\n}\nsubject._value = (value) => {\n    const oldestState = state(() => setUse.memory.stateConfig.array);\n    const nowTagSupport = getSupportInCycle();\n    return state(() => {\n        const subject = new ValueSubject(value).pipe(x => {\n            syncStates(nowTagSupport.memory.state, oldestState);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => setUse.memory.stateConfig.array);\n    const nowTagSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        syncStates(nowTagSupport.memory.state, oldestState);\n        return x;\n    });\n}\nsubject.all = all;\n//# sourceMappingURL=subject.function.js.map","import { getStateValue } from './state.utils.js';\nimport { setUse } from './setUse.function.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function letState(defaultValue) {\n    const config = setUse.memory.stateConfig;\n    const rearray = config.rearray;\n    let getSetMethod;\n    const restate = rearray[config.array.length];\n    if (restate) {\n        let oldValue = getStateValue(restate);\n        getSetMethod = ((x) => [oldValue, oldValue = x]);\n        const push = {\n            get: () => getStateValue(push),\n            callback: getSetMethod,\n            lastValue: oldValue,\n            defaultValue: restate.defaultValue,\n        };\n        config.array.push(push);\n        return makeStateResult(oldValue, push);\n    }\n    // State first time run\n    const defaultFn = defaultValue instanceof Function ? defaultValue : () => defaultValue;\n    let initValue = defaultFn();\n    getSetMethod = ((x) => [initValue, initValue = x]);\n    const push = {\n        get: () => getStateValue(push),\n        callback: getSetMethod,\n        lastValue: initValue,\n        defaultValue: initValue,\n    };\n    config.array.push(push);\n    return makeStateResult(initValue, push);\n}\nfunction makeStateResult(initValue, push) {\n    // return initValue\n    const result = (y) => {\n        push.callback = y || (x => [initValue, initValue = x]);\n        return initValue;\n    };\n    return result;\n}\n//# sourceMappingURL=letState.function.js.map","export function deepClone(obj) {\n    return makeDeepClone(obj, new WeakMap());\n}\nfunction makeDeepClone(obj, visited) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== 'object') {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    if (visited.has(obj)) {\n        return visited.get(obj);\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = Array.isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Register the cloned object to avoid cyclic references\n    visited.set(obj, clone);\n    // Clone each property or element of the object or array\n    if (Array.isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], visited);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                clone[key] = makeDeepClone(obj[key], visited);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2) {\n    return isDeepEqual(obj1, obj2, new WeakMap());\n}\nfunction isDeepEqual(obj1, obj2, visited) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    if (visited.has(obj1)) {\n        return true;\n    }\n    if (typeof obj1 === 'object' && typeof obj2 === 'object') {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        visited.set(obj1, 0);\n        // Check if obj1 and obj2 are both arrays\n        if (Array.isArray(obj1) && Array.isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, visited);\n        }\n        else if (Array.isArray(obj1) || Array.isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        return isObjectDeepEqual(obj1, obj2, visited);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, visited) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], visited)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, visited) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], visited)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = fn0 instanceof Function && fn1 instanceof Function;\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n//# sourceMappingURL=deepFunctions.js.map","import { deepClone } from '../deepFunctions.js';\nimport { setUse } from './setUse.function.js';\nimport { state } from './state.function.js';\nsetUse.memory.providerConfig = {\n    providers: [],\n    ownerSupport: undefined,\n};\nexport const providers = {\n    create: (constructMethod) => {\n        const stateDiffMemory = state(() => ({ stateDiff: 0, provider: undefined }));\n        // mimic how many states were called the first time\n        if (stateDiffMemory.stateDiff) {\n            for (let x = stateDiffMemory.stateDiff; x > 0; --x) {\n                state(undefined);\n            }\n            const result = state(undefined);\n            // stateDiffMemory.provider.constructMethod.compareTo = compareTo\n            return result;\n        }\n        const result = state(() => {\n            const memory = setUse.memory;\n            const stateConfig = memory.stateConfig;\n            const oldStateCount = stateConfig.array.length;\n            // Providers with provider requirements just need to use providers.create() and providers.inject()\n            const instance = 'prototype' in constructMethod ? new constructMethod() : constructMethod();\n            const stateDiff = stateConfig.array.length - oldStateCount;\n            const config = memory.providerConfig;\n            const provider = {\n                constructMethod,\n                instance,\n                clone: deepClone(instance),\n                stateDiff,\n            };\n            stateDiffMemory.provider = provider;\n            config.providers.push(provider);\n            stateDiffMemory.stateDiff = stateDiff;\n            return instance;\n        });\n        const cm = constructMethod;\n        // const compareTo = cm.compareTo = cm.compareTo || cm.toString()\n        const compareTo = cm.compareTo = cm.toString();\n        stateDiffMemory.provider.constructMethod.compareTo = compareTo;\n        return result;\n    },\n    /**\n     * @template T\n     * @param {(new (...args: any[]) => T) | () => T} constructor\n     * @returns {T}\n     */\n    inject: (constructor) => {\n        // find once, return same every time after\n        return state(() => {\n            const config = setUse.memory.providerConfig;\n            const cm = constructor;\n            const compareTo = cm.compareTo = cm.compareTo || constructor.toString();\n            let owner = {\n                ownerTagSupport: config.ownerSupport\n            };\n            while (owner.ownerTagSupport) {\n                const ownerProviders = owner.ownerTagSupport.global.providers;\n                const provider = ownerProviders.find(provider => {\n                    const constructorMatch = provider.constructMethod.compareTo === compareTo;\n                    if (constructorMatch) {\n                        return true;\n                    }\n                });\n                if (provider) {\n                    provider.clone = deepClone(provider.instance); // keep a copy of the latest before any change occur\n                    config.providers.push(provider);\n                    return provider.instance;\n                }\n                owner = owner.ownerTagSupport; // cause reloop checking next parent\n            }\n            const msg = `Could not inject provider: ${constructor.name} ${constructor}`;\n            console.warn(`${msg}. Available providers`, config.providers);\n            throw new Error(msg);\n        });\n    }\n};\nsetUse({\n    beforeRender: (tagSupport, ownerSupport) => {\n        run(tagSupport, ownerSupport);\n    },\n    beforeRedraw: (tagSupport, newTagSupport) => {\n        run(tagSupport, newTagSupport.ownerTagSupport);\n    },\n    afterRender: (tagSupport) => {\n        const config = setUse.memory.providerConfig;\n        tagSupport.global.providers = [...config.providers];\n        config.providers.length = 0;\n    }\n});\nfunction run(tagSupport, ownerSupport) {\n    const config = setUse.memory.providerConfig;\n    config.ownerSupport = ownerSupport;\n    if (tagSupport.global.providers.length) {\n        config.providers.length = 0;\n        config.providers.push(...tagSupport.global.providers);\n    }\n}\n//# sourceMappingURL=providers.js.map","import { deepClone, deepEqual } from '../deepFunctions.js';\nimport { renderTagSupport } from '../tag/render/renderTagSupport.function.js';\nexport function providersChangeCheck(tagSupport) {\n    const global = tagSupport.global;\n    const providersWithChanges = global.providers.filter(provider => !deepEqual(provider.instance, provider.clone));\n    // reset clones\n    for (let index = providersWithChanges.length - 1; index >= 0; --index) {\n        const provider = providersWithChanges[index];\n        const appSupport = tagSupport.getAppTagSupport();\n        handleProviderChanges(appSupport, provider);\n        provider.clone = deepClone(provider.instance);\n    }\n}\nfunction handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    for (let index = tagsWithProvider.length - 1; index >= 0; --index) {\n        const { tagSupport, renderCount, provider } = tagsWithProvider[index];\n        if (tagSupport.global.deleted) {\n            continue; // i was deleted after another tag processed\n        }\n        const notRendered = renderCount === tagSupport.global.renderCount;\n        if (notRendered) {\n            provider.clone = deepClone(provider.instance);\n            renderTagSupport(tagSupport, false);\n            continue;\n        }\n    }\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(tagSupport, provider, memory = []) {\n    const global = tagSupport.global;\n    const compare = global.providers;\n    const hasProvider = compare.find(xProvider => xProvider.constructMethod.compareTo === provider.constructMethod.compareTo);\n    if (hasProvider) {\n        memory.push({\n            tagSupport,\n            renderCount: global.renderCount,\n            provider: hasProvider,\n        });\n    }\n    const childTags = tagSupport.childTags;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        getTagsWithProvider(childTags[index], provider, memory);\n    }\n    return memory;\n}\n//# sourceMappingURL=provider.utils.js.map","export function isLikeTags(tagSupport0, // new\ntagSupport1) {\n    const templater0 = tagSupport0.templater;\n    const templater1 = tagSupport1.templater;\n    const tag0 = templater0?.tag || tagSupport0;\n    const tag1 = templater1.tag;\n    const strings0 = tag0.strings;\n    const strings1 = tagSupport1.strings || tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index] === string);\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = tagSupport0.values || tag0.values;\n    const values1 = tagSupport1.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = value instanceof Function && compareTo instanceof Function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true; // deepEqual(value, compareTo)\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=isLikeTags.function.js.map","export function destroyTagMemory(oldTagSupport) {\n    // must destroy oldest which is tag with elements on stage\n    const oldest = oldTagSupport.global.oldest;\n    oldest.destroy();\n    destroyTagSupportPast(oldTagSupport);\n    oldTagSupport.global.context = {};\n}\nexport function destroyTagSupportPast(oldTagSupport) {\n    delete oldTagSupport.global.oldest; // TODO: This appears redundant of oldest.destroy() which clears global already\n    delete oldTagSupport.global.newest;\n}\n//# sourceMappingURL=destroyTag.function.js.map","import { setUse } from '../state/index.js';\nimport { Subject } from '../subject/index.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\n// Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering\nsetUse.memory.tagClosed$ = new Subject(undefined, subscription => {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n// Life cycle 1\nexport function runBeforeRender(tagSupport, ownerSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].beforeRender(tagSupport, ownerSupport);\n    }\n}\n// Life cycle 2\nexport function runAfterRender(tagSupport, ownerTagSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        if (!tagSupport.global.oldest) {\n            throw new Error('stop here');\n        }\n        tagUse[index].afterRender(tagSupport, ownerTagSupport);\n    }\n    setUse.memory.tagClosed$.next(ownerTagSupport);\n}\n// Life cycle 3\nexport function runBeforeRedraw(tagSupport, ownerTagSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].beforeRedraw(tagSupport, ownerTagSupport);\n    }\n}\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(tagSupport, ownerTagSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].beforeDestroy(tagSupport, ownerTagSupport);\n    }\n}\n//# sourceMappingURL=tagRunner.js.map","import { runBeforeRedraw, runBeforeRender } from '../tagRunner.js';\nimport { setUse } from '../../state/index.js';\nimport { runAfterRender } from '../tagRunner.js';\nexport function renderTagOnly(newTagSupport, prevSupport, subject, ownerSupport) {\n    const oldRenderCount = newTagSupport.global.renderCount;\n    beforeWithRender(newTagSupport, ownerSupport, prevSupport);\n    const templater = newTagSupport.templater;\n    // NEW TAG CREATED HERE\n    const wrapper = templater.wrapper;\n    let reSupport = wrapper(newTagSupport, subject);\n    /* AFTER */\n    runAfterRender(newTagSupport, ownerSupport);\n    // When we rendered, only 1 render should have taken place OTHERWISE rendering caused another render and that is the latest instead\n    if (reSupport.global.renderCount > oldRenderCount + 1) {\n        return newTagSupport.global.newest;\n    }\n    newTagSupport.global.newest = reSupport;\n    return reSupport;\n}\nfunction beforeWithRender(tagSupport, // new\nparentSupport, prevSupport) {\n    const lastOwnerSupport = prevSupport?.ownerTagSupport;\n    const runtimeOwnerSupport = lastOwnerSupport || parentSupport;\n    if (prevSupport) {\n        if (prevSupport !== tagSupport) {\n            const lastState = prevSupport.memory.state;\n            const memory = tagSupport.memory;\n            tagSupport.global = prevSupport.global;\n            memory.state.length = 0;\n            memory.state.push(...lastState);\n        }\n        runBeforeRedraw(tagSupport, prevSupport);\n    }\n    else {\n        // first time render\n        runBeforeRender(tagSupport, runtimeOwnerSupport);\n        // TODO: Logic below most likely could live within providers.ts inside the runBeforeRender function\n        const providers = setUse.memory.providerConfig;\n        providers.ownerSupport = runtimeOwnerSupport;\n    }\n}\n//# sourceMappingURL=renderTagOnly.function.js.map","import { isLikeTags } from '../isLikeTags.function.js';\nimport { destroyTagMemory } from '../destroyTag.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nexport function renderWithSupport(newTagSupport, lastSupport, // previous\nsubject, // events & memory\nownerSupport) {\n    const reSupport = renderTagOnly(newTagSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        destroyUnlikeTags(lastSupport, reSupport, subject);\n    }\n    const lastOwnerSupport = lastSupport?.ownerTagSupport;\n    reSupport.ownerTagSupport = (ownerSupport || lastOwnerSupport);\n    return reSupport;\n}\nfunction destroyUnlikeTags(lastSupport, // old\nreSupport, // new\nsubject) {\n    const oldGlobal = lastSupport.global;\n    const insertBefore = oldGlobal.insertBefore;\n    destroyTagMemory(lastSupport);\n    // when a tag is destroyed, disconnect the globals\n    reSupport.global = { ...oldGlobal }; // break memory references\n    const global = reSupport.global;\n    global.insertBefore = insertBefore;\n    global.deleted = false;\n    delete global.oldest; // TODO, maybe set global oldest to replacement instead of destroying it?\n    delete global.newest;\n    delete subject.tagSupport;\n}\n//# sourceMappingURL=renderWithSupport.function.js.map","import { providersChangeCheck } from '../../state/provider.utils.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { renderWithSupport } from './renderWithSupport.function.js';\n/** Returns true when rendering owner is not needed. Returns false when rendering owner should occur */\nexport function renderExistingTag(oldestSupport, // oldest with elements on html\nnewSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const lastSupport = subject.tagSupport;\n    const global = lastSupport.global;\n    // share point between renders\n    newSupport.global = global;\n    const preRenderCount = global.renderCount;\n    providersChangeCheck(oldestSupport);\n    // When the providers were checked, a render to myself occurred and I do not need to re-render again\n    const prevSupport = global.newest;\n    if (preRenderCount !== global.renderCount) {\n        oldestSupport.updateBy(prevSupport);\n        return prevSupport; // already rendered during triggered events\n    }\n    const toRedrawTag = prevSupport || lastSupport || global.oldest;\n    const reSupport = renderWithSupport(newSupport, toRedrawTag, subject, ownerSupport);\n    const oldest = global.oldest || oldestSupport;\n    reSupport.global.oldest = oldest;\n    // TODO: renderWithSupport already does an isLikeTags compare\n    if (isLikeTags(prevSupport, reSupport)) {\n        subject.tagSupport = reSupport;\n        oldest.updateBy(reSupport);\n    }\n    return reSupport;\n}\n//# sourceMappingURL=renderExistingTag.function.js.map","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingTag } from './renderExistingTag.function.js';\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderTagSupport(tagSupport, // must be latest/newest state render\nrenderUp) {\n    const global = tagSupport.global;\n    const templater = tagSupport.templater;\n    // is it just a vanilla tag, not component?\n    if (!templater.wrapper) { // || isTagTemplater(templater) \n        const ownerTag = tagSupport.ownerTagSupport;\n        ++global.renderCount;\n        return renderTagSupport(ownerTag, true);\n    }\n    const subject = tagSupport.subject;\n    let ownerSupport;\n    let selfPropChange = false;\n    const shouldRenderUp = renderUp && tagSupport;\n    if (shouldRenderUp) {\n        ownerSupport = tagSupport.ownerTagSupport;\n        if (ownerSupport) {\n            const nowProps = templater.props;\n            const latestProps = tagSupport.propsConfig.latestCloned;\n            selfPropChange = !nowProps.every((props, index) => deepEqual(props, latestProps[index]));\n        }\n    }\n    const oldest = tagSupport.global.oldest;\n    const tag = renderExistingTag(oldest, tagSupport, ownerSupport, // useTagSupport,\n    subject);\n    const renderOwner = ownerSupport && selfPropChange;\n    if (renderOwner) {\n        const ownerTagSupport = ownerSupport;\n        renderTagSupport(ownerTagSupport, true);\n        return tag;\n    }\n    return tag;\n}\n//# sourceMappingURL=renderTagSupport.function.js.map","import { renderTagSupport } from '../tag/render/renderTagSupport.function.js';\nimport { syncStates } from './syncStates.function.js';\nexport default function callbackStateUpdate(tagSupport, callback, oldState, ...args) {\n    const state = tagSupport.memory.state;\n    // ensure that the oldest has the latest values first\n    syncStates(state, oldState);\n    // run the callback\n    const maybePromise = callback(...args);\n    // send the oldest state changes into the newest\n    syncStates(oldState, state);\n    renderTagSupport(tagSupport, false);\n    if (maybePromise instanceof Promise) {\n        maybePromise.finally(() => {\n            // send the oldest state changes into the newest\n            syncStates(oldState, state);\n            renderTagSupport(tagSupport, false);\n        });\n    }\n    // return undefined as T\n    return maybePromise;\n}\n//# sourceMappingURL=callbackStateUpdate.function.js.map","import { setUse } from './setUse.function.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport callbackStateUpdate from './callbackStateUpdate.function.js';\nlet innerCallback = (callback) => (a, b, c, d, e, f) => {\n    throw new SyncCallbackError('Callback function was called immediately in sync and must instead be call async');\n};\nexport const callbackMaker = () => innerCallback;\nconst originalGetter = innerCallback; // callbackMaker\nsetUse({\n    beforeRender: tagSupport => initMemory(tagSupport),\n    beforeRedraw: tagSupport => initMemory(tagSupport),\n    afterRender: tagSupport => {\n        ;\n        tagSupport.global.callbackMaker = true;\n        innerCallback = originalGetter; // prevent crossing callbacks with another tag\n    },\n});\nexport function callback(callback) {\n    const tagSupport = getSupportInCycle();\n    if (!tagSupport) {\n        const error = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n        throw error;\n    }\n    const oldState = setUse.memory.stateConfig.array;\n    const trigger = (...args) => {\n        const callbackMaker = tagSupport.global.callbackMaker;\n        if (callbackMaker) {\n            return callbackStateUpdate(tagSupport, callback, oldState, ...args);\n        }\n        return callback(...args);\n    };\n    return trigger;\n}\nfunction initMemory(tagSupport) {\n    const oldState = setUse.memory.stateConfig.array;\n    innerCallback = (callback) => {\n        const trigger = (...args) => {\n            const callbackMaker = tagSupport.global.callbackMaker;\n            if (callbackMaker) {\n                return callbackStateUpdate(tagSupport, callback, oldState, ...args);\n            }\n            return callback(...args);\n        };\n        return trigger;\n    };\n}\n//# sourceMappingURL=callbackMaker.function.js.map","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n//# sourceMappingURL=onInit.js.map","import { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { state } from \"./state.function.js\";\nexport function onDestroy(callback) {\n    state(() => {\n        const tagSupport = getSupportInCycle();\n        tagSupport?.global.destroy$.toCallback(callback);\n    });\n}\n//# sourceMappingURL=onDestroy.js.map","import { setUse } from './setUse.function.js';\nfunction setCurrentTagSupport(support) {\n    setUse.memory.childrenCurrentSupport = support;\n}\nexport function children() {\n    const tagSupport = setUse.memory.childrenCurrentSupport;\n    const children = tagSupport.templater.children;\n    return children;\n}\nsetUse({\n    beforeRender: tagSupport => setCurrentTagSupport(tagSupport),\n    beforeRedraw: tagSupport => setCurrentTagSupport(tagSupport),\n});\n//# sourceMappingURL=children.js.map","import { ValueTypes } from './ValueTypes.enum.js';\nexport const variablePrefix = '__tagvar';\nexport const escapeVariable = '--' + variablePrefix + '--';\nexport const escapeSearch = new RegExp(escapeVariable, 'g');\nexport class Tag {\n    strings;\n    values;\n    tagJsType = ValueTypes.tag;\n    // present only when an array. Populated by Tag.key()\n    memory = {};\n    templater;\n    constructor(strings, values) {\n        this.strings = strings;\n        this.values = values;\n    }\n    /** Used for array, such as array.map(), calls aka array.map(x => html``.key(x)) */\n    key(arrayValue) {\n        this.memory.arrayValue = arrayValue;\n        return this;\n    }\n    // TODO: Is this just a fake function that can be data typed?\n    children;\n    html(strings, ...values) {\n        this.children = { strings, values };\n        return this;\n    }\n}\n//# sourceMappingURL=Tag.class.js.map","import { Tag } from './Tag.class.js';\nimport { ValueSubject } from '../subject/index.js';\nimport { kidsToTagArraySubject } from './kidsToTagArraySubject.function.js';\nexport class TemplaterResult {\n    props;\n    tagJsType = 'templater';\n    tagged;\n    wrapper;\n    madeChildIntoSubject;\n    tag;\n    children = new ValueSubject([]);\n    constructor(props) {\n        this.props = props;\n    }\n    html(strings, ...values) {\n        const children = new Tag(strings, values);\n        const childSubject = kidsToTagArraySubject(children, this);\n        this.children = childSubject;\n        return this;\n    }\n}\n//# sourceMappingURL=TemplaterResult.class.js.map","import { isSubjectInstance, isTagArray } from '../isInstance.js';\nimport { ValueSubject } from '../subject/ValueSubject.js';\nexport function kidsToTagArraySubject(children, templaterResult) {\n    if (isSubjectInstance(children)) {\n        return children;\n    }\n    const kidArray = children;\n    if (isTagArray(kidArray)) {\n        templaterResult.madeChildIntoSubject = true; // was converted into a subject\n        return new ValueSubject(children);\n    }\n    const kid = children;\n    if (kid) {\n        templaterResult.madeChildIntoSubject = true; // was converted into a subject\n        kid.memory.arrayValue = 0;\n        return new ValueSubject([kid]);\n    }\n    templaterResult.madeChildIntoSubject = true; // was converted into a subject\n    return new ValueSubject([]);\n}\n//# sourceMappingURL=kidsToTagArraySubject.function.js.map","export const tags = [];\n//# sourceMappingURL=tag.utils.js.map","/** File largely responsible for reacting to element events, such as onclick */\nimport { renderTagSupport } from '../tag/render/renderTagSupport.function.js';\nexport function bindSubjectCallback(value, tagSupport) {\n    // Is this children? No override needed\n    if (value.isChildOverride) {\n        return value;\n    }\n    const subjectFunction = (element, args) => runTagCallback(value, tagSupport, element, args);\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    return subjectFunction;\n}\nexport function runTagCallback(value, tagSupport, bindTo, args) {\n    const myGlobal = tagSupport.global;\n    const renderCount = myGlobal.renderCount;\n    const method = value.bind(bindTo);\n    const callbackResult = method(...args);\n    const sameRenderCount = renderCount === myGlobal.renderCount;\n    const skipRender = !sameRenderCount || myGlobal.deleted;\n    // already rendered OR tag was deleted before event processing\n    if (skipRender) {\n        if (callbackResult instanceof Promise) {\n            return callbackResult.then(() => {\n                return 'promise-no-data-ever'; // tag was deleted during event processing\n            });\n        }\n        return 'no-data-ever'; // already rendered\n    }\n    const newest = renderTagSupport(myGlobal.newest, true);\n    myGlobal.newest = newest;\n    if (callbackResult instanceof Promise) {\n        return callbackResult.then(() => {\n            if (myGlobal.deleted) {\n                return 'promise-no-data-ever'; // tag was deleted during event processing\n            }\n            const newest = renderTagSupport(myGlobal.newest, true);\n            myGlobal.newest = newest;\n            return 'promise-no-data-ever';\n        });\n    }\n    // Caller always expects a Promise\n    return 'no-data-ever';\n}\n//# sourceMappingURL=bindSubjectCallback.function.js.map","// Function to insert element after reference element\nexport function insertAfter(newNode, referenceNode) {\n    const parentNode = referenceNode.parentNode;\n    parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n//# sourceMappingURL=insertAfter.function.js.map","import { isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { destroyTagMemory, destroyTagSupportPast } from './destroyTag.function.js';\nimport { insertAfter } from '../insertAfter.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nexport function checkDestroyPrevious(subject, // existing.value is the old value\nnewValue, insertBefore, valueType) {\n    const displaySubject = subject;\n    const hasLastValue = 'lastValue' in displaySubject;\n    const lastValue = displaySubject.lastValue; // TODO: we maybe able to use displaySubject.value and remove concept of lastValue\n    // was simple value but now something bigger\n    if (hasLastValue && lastValue !== newValue) {\n        // below is faster than using getValueType\n        const newType = typeof (newValue);\n        if (isSimpleType(newType) && typeof (lastValue) === newType) {\n            return false;\n        }\n        if (newValue instanceof Function && lastValue instanceof Function) {\n            return false;\n        }\n        destroySimpleValue(insertBefore, displaySubject);\n        return 'changed-simple-value';\n    }\n    const arraySubject = subject;\n    const wasArray = arraySubject.lastArray;\n    // no longer an array\n    if (wasArray && valueType !== ValueTypes.tagArray) {\n        const placeholderElm = arraySubject.placeholder;\n        delete arraySubject.lastArray;\n        delete arraySubject.placeholder;\n        insertAfter(insertBefore, placeholderElm);\n        for (let index = wasArray.length - 1; index >= 0; --index) {\n            const { tagSupport } = wasArray[index];\n            destroyArrayTag(tagSupport, { added: 0, removed: 0 });\n        }\n        return 'array';\n    }\n    const tagSubject = subject;\n    const lastSupport = tagSubject.tagSupport;\n    // no longer tag or component?\n    if (lastSupport) {\n        const isValueTag = isStaticTag(newValue);\n        const isSubjectTag = isStaticTag(subject._value);\n        if (isSubjectTag && isValueTag) {\n            const newTag = newValue;\n            // its a different tag now\n            if (!isLikeTags(newTag, lastSupport)) {\n                // put template back down\n                restoreTagMarker(lastSupport);\n                destroyTagMemory(lastSupport);\n                return 2;\n            }\n            return false;\n        }\n        if (valueType === ValueTypes.tagComponent) {\n            return false; // its still a tag component\n        }\n        if (newValue && newValue.oneRender) {\n            return false;\n        }\n        // put template back down\n        restoreTagMarker(lastSupport);\n        // destroy old component, value is not a component\n        destroyTagMemory(lastSupport);\n        return 'different-tag';\n    }\n    return false;\n}\nexport function isSimpleType(value) {\n    return ['string', 'number', 'boolean'].includes(value);\n}\nexport function destroyArrayTag(tagSupport, counts) {\n    destroyTagSupportPast(tagSupport);\n    tagSupport.destroy({\n        stagger: counts.removed++,\n    });\n    const insertBefore = tagSupport.global.insertBefore;\n    const parentNode = insertBefore.parentNode;\n    parentNode.removeChild(insertBefore);\n}\nfunction destroySimpleValue(insertBefore, // always a template tag\nsubject) {\n    const clone = subject.clone;\n    const parent = clone.parentNode;\n    // 1 put the template back down\n    parent.insertBefore(insertBefore, clone);\n    parent.removeChild(clone);\n    delete subject.clone;\n    delete subject.lastValue;\n}\nexport function restoreTagMarker(lastSupport) {\n    const insertBefore = lastSupport.global.insertBefore;\n    const global = lastSupport.global;\n    const placeholderElm = global.placeholder;\n    if (placeholderElm) {\n        insertAfter(insertBefore, placeholderElm);\n        delete global.placeholder;\n    }\n}\n//# sourceMappingURL=checkDestroyPrevious.function.js.map","import { isSimpleType } from './checkDestroyPrevious.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isSubjectInstance, isTagArray } from '../isInstance.js';\nexport function getValueType(value) {\n    if (value === undefined || value === null) {\n        return ValueTypes.undefined;\n    }\n    const type = typeof (value);\n    if (value instanceof Function) {\n        return ValueTypes.function;\n    }\n    if (type === 'object') {\n        if (value instanceof Date) {\n            return ValueTypes.date;\n        }\n        if (isSimpleType(type)) {\n            return type;\n        }\n        const tagJsType = value.tagJsType;\n        if (tagJsType) {\n            const included = [\n                ValueTypes.tagComponent,\n                ValueTypes.templater,\n                ValueTypes.tag,\n            ].includes(tagJsType);\n            if (included) {\n                return tagJsType;\n            }\n        }\n        if (isTagArray(value)) {\n            return ValueTypes.tagArray;\n        }\n        if (isSubjectInstance(value)) {\n            return ValueTypes.subject;\n        }\n    }\n    return ValueTypes.unknown;\n}\n//# sourceMappingURL=getValueType.function.js.map","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getValueType } from './getValueType.function.js';\nexport function cloneValueArray(values) {\n    return values.map((value) => {\n        const tag = value;\n        switch (getValueType(value)) {\n            case ValueTypes.tagComponent:\n                const tagComponent = value;\n                return deepClone(tagComponent.props);\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n            case ValueTypes.tagArray:\n                return cloneValueArray(tag);\n        }\n        return deepClone(value);\n    });\n}\n//# sourceMappingURL=cloneValueArray.function.js.map","export function getChildTagsToDestroy(childTags, allTags = []) {\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const cTag = childTags[index];\n        allTags.push(cTag);\n        childTags.splice(index, 1);\n        getChildTagsToDestroy(cTag.childTags, allTags);\n    }\n    return allTags;\n}\n//# sourceMappingURL=destroy.support.js.map","import { ValueSubject } from '../../subject/ValueSubject.js';\nimport { TemplaterResult } from '../TemplaterResult.class.js';\nimport { TagSupport } from '../TagSupport.class.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getValueType } from '../getValueType.function.js';\nexport function processNewValue(value, ownerSupport) {\n    const valueType = getValueType(value);\n    switch (valueType) {\n        case ValueTypes.tagComponent:\n            const tagSubject = new ValueSubject(value);\n            return tagSubject;\n        case ValueTypes.templater:\n            const templater = value;\n            const tag = templater.tag;\n            return processNewTag(tag, ownerSupport);\n        case ValueTypes.tag:\n            return processNewTag(value, ownerSupport);\n        case ValueTypes.subject:\n            return value;\n    }\n    return new ValueSubject(value);\n}\nfunction processNewTag(value, ownerSupport) {\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = new TemplaterResult([]);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const subject = new ValueSubject(templater);\n    subject.tagSupport = new TagSupport(templater, ownerSupport, subject);\n    return subject;\n}\n//# sourceMappingURL=processNewValue.function.js.map","export function setTagPlaceholder(global) {\n    const insertBefore = global.insertBefore;\n    return global.placeholder = swapInsertBefore(insertBefore);\n}\nexport function swapInsertBefore(insertBefore) {\n    const placeholder = document.createTextNode('');\n    const parentNode = insertBefore.parentNode;\n    parentNode.insertBefore(placeholder, insertBefore);\n    parentNode.removeChild(insertBefore);\n    return placeholder;\n}\n//# sourceMappingURL=setTagPlaceholder.function.js.map","export function inputAttribute(name, value, element) {\n    const names = name.split('.');\n    // style.position = \"absolute\"\n    if (names[0] === 'style') {\n        element.style[names[1]] = value;\n    }\n    // Example: class.width-full = \"true\"\n    if (names[0] === 'class') {\n        names.shift();\n        if (value) {\n            for (let index = 0; index < names.length; ++index) {\n                element.classList.add(names[index]);\n            }\n        }\n        else {\n            for (let index = 0; index < names.length; ++index) {\n                element.classList.remove(names[index]);\n            }\n        }\n    }\n}\n//# sourceMappingURL=inputAttribute.js.map","import { inputAttribute } from './inputAttribute.js';\nimport { isSubjectInstance } from '../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nconst startRegX = /^\\s*{__tagvar/;\nconst endRegX = /}\\s*$/;\nfunction isTagVar(value) {\n    return value && value.search(startRegX) >= 0 && value.search(endRegX) >= 0;\n}\nexport function processAttribute(attrName, value, child, scope, ownerSupport, howToSet) {\n    if (isTagVar(value)) {\n        return processScopedNameValueAttr(attrName, value, child, scope, ownerSupport, howToSet);\n    }\n    if (isTagVar(attrName)) {\n        const contextValueSubject = getContextValueByVarString(scope, attrName);\n        let lastValue;\n        // the above callback gets called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe((value) => {\n            processNameOnlyAttr(value, lastValue, child, ownerSupport, howToSet);\n            lastValue = value;\n        });\n        ownerSupport.global.subscriptions.push(sub); // this is where unsubscribe is picked up\n        child.removeAttribute(attrName);\n        return;\n    }\n    // Non dynamic\n    const isSpecial = isSpecialAttr(attrName);\n    if (isSpecial) {\n        return inputAttribute(attrName, value, child);\n    }\n}\nfunction processScopedNameValueAttr(attrName, value, // {__tagVarN}\nchild, scope, ownerSupport, howToSet) {\n    // get the code inside the brackets like \"variable0\" or \"{variable0}\"\n    const result = getContextValueByVarString(scope, value);\n    return processNameValueAttr(attrName, result, child, ownerSupport, howToSet);\n}\nfunction getContextValueByVarString(scope, value) {\n    const code = value.replace('{', '').split('').reverse().join('').replace('}', '').split('').reverse().join('');\n    return scope[code];\n}\nfunction processNameOnlyAttr(attrValue, lastValue, child, ownerSupport, howToSet) {\n    if (lastValue && lastValue != attrValue) {\n        if (typeof (lastValue) === 'string') {\n            child.removeAttribute(lastValue);\n        }\n        else if (lastValue instanceof Object) {\n            for (const name in lastValue) {\n                child.removeAttribute(name);\n            }\n        }\n    }\n    if (typeof (attrValue) === 'string') {\n        if (!attrValue.length) {\n            return;\n        }\n        processNameValueAttr(attrValue, '', child, ownerSupport, howToSet);\n        return;\n    }\n    if (attrValue instanceof Object) {\n        for (const name in attrValue) {\n            processNameValueAttr(name, attrValue[name], child, ownerSupport, howToSet);\n        }\n    }\n}\nfunction processNameValueAttr(attrName, result, child, ownerSupport, howToSet) {\n    const isSpecial = isSpecialAttr(attrName);\n    if (result instanceof Function) {\n        const action = function (...args) {\n            const result2 = result(child, args);\n            return result2;\n        };\n        child[attrName].action = action;\n    }\n    // Most every variable comes in here since everything is made a ValueSubject\n    if (isSubjectInstance(result)) {\n        child.removeAttribute(attrName);\n        const callback = (newAttrValue) => {\n            // should the function be wrapped so every time its called we re-render?\n            if (newAttrValue instanceof Function) {\n                const wrapper = ownerSupport.templater.wrapper;\n                const parentWrap = wrapper?.parentWrap;\n                const oneRender = parentWrap?.oneRender;\n                if (!oneRender) {\n                    newAttrValue = bindSubjectCallback(newAttrValue, ownerSupport);\n                }\n            }\n            return processAttributeSubjectValue(newAttrValue, child, attrName, isSpecial, howToSet);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = result.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        ownerSupport.global.subscriptions.push(sub);\n        return;\n    }\n    howToSet(child, attrName, result);\n    // child.setAttribute(attrName, result.value)\n    return;\n}\nfunction processAttributeSubjectValue(newAttrValue, child, attrName, isSpecial, howToSet) {\n    if (newAttrValue instanceof Function) {\n        const fun = function (...args) {\n            return newAttrValue(child, args);\n        };\n        // access to original function\n        fun.tagFunction = newAttrValue;\n        child[attrName] = fun;\n        return;\n    }\n    if (isSpecial) {\n        inputAttribute(attrName, newAttrValue, child);\n        return;\n    }\n    if (newAttrValue) {\n        howToSet(child, attrName, newAttrValue);\n        return;\n    }\n    const isDeadValue = [undefined, false, null].includes(newAttrValue);\n    if (isDeadValue) {\n        child.removeAttribute(attrName);\n        return;\n    }\n    // value is 0\n    howToSet(child, attrName, newAttrValue);\n}\n/** Looking for (class | style) followed by a period */\nfunction isSpecialAttr(attrName) {\n    return attrName.search(/^(class|style)(\\.)/) >= 0;\n}\n//# sourceMappingURL=processAttribute.function.js.map","import { processAttribute } from './processAttribute.function.js';\nfunction howToSetAttribute(element, name, value) {\n    element.setAttribute(name, value);\n}\nfunction howToSetInputValue(element, name, value) {\n    element[name] = value;\n}\nexport function interpolateAttributes(child, scope, ownerSupport) {\n    const attrNames = child.getAttributeNames();\n    let howToSet = howToSetAttribute;\n    for (let index = 0; index < attrNames.length; ++index) {\n        const attrName = attrNames[index];\n        if (child.nodeName === 'INPUT' && attrName === 'value') {\n            howToSet = howToSetInputValue;\n        }\n        const value = child.getAttribute(attrName);\n        processAttribute(attrName, value, child, scope, ownerSupport, howToSet);\n        howToSet = howToSetAttribute; // put back\n    }\n}\n//# sourceMappingURL=interpolateAttributes.js.map","// support arrow functions in attributes\nexport const interpolateReplace = /(?:<[^>]*?(?:(?:\\s+\\w+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^>\\s]+)))*\\s*)\\/?>)|({__tagvar[^}]+})/g;\n/** replaces ${x} with <template id=\"x-start\"></template><template id=\"x-end\"></template> */\nexport function interpolateToTemplates(template) {\n    const keys = [];\n    const string = template.replace(interpolateReplace, (match, expression) => {\n        if (match.startsWith('<')) {\n            // If the match is an HTML tag, don't replace\n            return match;\n        }\n        const noBraces = expression.substring(1, expression.length - 1);\n        const id = noBraces;\n        keys.push(id);\n        return `<template interpolate end id=\"${id}\"></template>`;\n    });\n    return { string, keys };\n}\n//# sourceMappingURL=interpolations.js.map","export function processTagResult(tagSupport, subject, // used for recording past and current value\ninsertBefore, // <template end interpolate />\n{ counts, }) {\n    // *if appears we already have seen\n    const subjectTag = subject;\n    const lastSupport = subjectTag.tagSupport;\n    const prevSupport = lastSupport?.global.oldest || undefined;\n    const justUpdate = prevSupport;\n    if (prevSupport && justUpdate) {\n        return processTagResultUpdate(tagSupport, subjectTag, prevSupport);\n    }\n    tagSupport.buildBeforeElement(insertBefore, {\n        counts,\n    });\n}\nfunction processTagResultUpdate(tagSupport, subject, // used for recording past and current value\nprevSupport) {\n    // components\n    if (subject instanceof Function) {\n        const newSupport = subject(prevSupport);\n        prevSupport.updateBy(newSupport);\n        subject.tagSupport = newSupport;\n        return;\n    }\n    prevSupport.updateBy(tagSupport);\n    subject.tagSupport = tagSupport;\n    return;\n}\n//# sourceMappingURL=processTagResult.function.js.map","import { setUse } from '../../state/index.js';\nimport { processTagResult } from './processTagResult.function.js';\nimport { TagSupport } from '../TagSupport.class.js';\nimport { renderSubjectComponent } from '../render/renderSubjectComponent.function.js';\nexport function processSubjectComponent(templater, subject, insertBefore, ownerSupport, options) {\n    // Check if function component is wrapped in a tag() call\n    // TODO: This below check not needed in production mode\n    if (templater.tagged !== true) {\n        const wrapper = templater.wrapper;\n        const original = wrapper.parentWrap.original;\n        let name = original.name || original.constructor?.name;\n        if (name === 'Function') {\n            name = undefined;\n        }\n        const label = name || original.toString().substring(0, 120);\n        const error = new Error(`Not a tag component. Wrap your function with tag(). Example tag(props => html\\`\\`) on component:\\n\\n${label}\\n\\n`);\n        throw error;\n    }\n    const tagSupport = new TagSupport(templater, ownerSupport, subject);\n    let reSupport = subject.tagSupport;\n    const global = tagSupport.global = reSupport?.global || tagSupport.global;\n    global.insertBefore = insertBefore;\n    const providers = setUse.memory.providerConfig;\n    providers.ownerSupport = ownerSupport;\n    const isRender = !reSupport;\n    if (isRender) {\n        const support = reSupport || tagSupport;\n        reSupport = renderSubjectComponent(subject, support, ownerSupport);\n    }\n    processTagResult(reSupport, subject, // The element set here will be removed from document. Also result.tag will be added in here\n    insertBefore, // <template end interpolate /> (will be removed)\n    options);\n    return reSupport;\n}\n//# sourceMappingURL=processSubjectComponent.function.js.map","import { renderWithSupport } from './renderWithSupport.function.js';\nexport function renderSubjectComponent(subject, reSupport, ownerSupport) {\n    const preClones = ownerSupport.clones.map(clone => clone);\n    reSupport = renderWithSupport(reSupport, subject.tagSupport, // existing tag\n    subject, ownerSupport);\n    reSupport.global.newest = reSupport;\n    if (ownerSupport.clones.length > preClones.length) {\n        const myClones = ownerSupport.clones.filter(fClone => !preClones.find(clone => clone === fClone));\n        reSupport.clones.push(...myClones);\n    }\n    ownerSupport.childTags.push(reSupport);\n    return reSupport;\n}\n//# sourceMappingURL=renderSubjectComponent.function.js.map","import { TagSupport } from '../TagSupport.class.js';\nimport { ValueSubject } from '../../subject/index.js';\n/** Could be a regular tag or a component. Both are Tag.class */\nexport function processTag(templater, insertBefore, ownerSupport, // owner\nsubject) {\n    let tagSupport = subject.tagSupport;\n    // first time seeing this tag?\n    if (!tagSupport) {\n        tagSupport = newTagSupportByTemplater(templater, ownerSupport, subject);\n    }\n    subject.tagSupport = tagSupport;\n    tagSupport.ownerTagSupport = ownerSupport;\n    tagSupport.buildBeforeElement(insertBefore, {\n        counts: { added: 0, removed: 0 },\n    });\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        children: new ValueSubject([]), // no children\n        // props: {} as Props,\n        props: [],\n        isTag: true,\n        tagJsType: 'templater',\n        tagged: false,\n        madeChildIntoSubject: false, // TODO this can be removed\n        html: () => fake\n    };\n    return fake;\n}\nexport function newTagSupportByTemplater(templater, ownerSupport, subject) {\n    const tagSupport = new TagSupport(templater, ownerSupport, subject);\n    setupNewTemplater(tagSupport, ownerSupport, subject);\n    ownerSupport.childTags.push(tagSupport);\n    return tagSupport;\n}\nexport function setupNewTemplater(tagSupport, ownerSupport, subject) {\n    tagSupport.global.oldest = tagSupport;\n    tagSupport.global.newest = tagSupport;\n    // asking me to render will cause my parent to render\n    tagSupport.ownerTagSupport = ownerSupport;\n    subject.tagSupport = tagSupport;\n}\n//# sourceMappingURL=processTag.function.js.map","import { ValueSubject } from '../../subject/ValueSubject.js';\nimport { ArrayNoKeyError } from '../../errors.js';\nimport { destroyArrayTag } from '../checkDestroyPrevious.function.js';\nimport { setupNewTemplater, tagFakeTemplater } from './processTag.function.js';\nimport { TagSupport } from '../TagSupport.class.js';\nimport { isTagClass } from '../../isInstance.js';\nexport function processTagArray(subject, value, // arry of Tag classes\ninsertBefore, // <template end interpolate />\nownerSupport, options) {\n    const clones = ownerSupport.clones; // []\n    let lastArray = subject.lastArray = subject.lastArray || [];\n    if (!subject.placeholder) {\n        setPlaceholderElm(insertBefore, subject);\n    }\n    const runtimeInsertBefore = subject.placeholder; // || insertBefore\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    lastArray = subject.lastArray = subject.lastArray.filter((item, index) => {\n        const newLength = value.length - 1;\n        const at = index - removed;\n        const lessLength = newLength < at;\n        const subValue = value[index - removed];\n        const subTag = subValue;\n        // const tag = subTag?.templater.tag as Tag\n        const lastTag = item.tagSupport.templater.tag;\n        const newArrayValue = subTag?.memory.arrayValue;\n        const lastArrayValue = lastTag.memory.arrayValue;\n        const destroyItem = lessLength || !areLikeValues(newArrayValue, lastArrayValue);\n        if (destroyItem) {\n            const last = lastArray[index];\n            const tagSupport = last.tagSupport;\n            destroyArrayTag(tagSupport, options.counts);\n            last.deleted = true;\n            ++removed;\n            ++options.counts.removed;\n            return false;\n        }\n        return true;\n    });\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const item = value[index];\n        const previous = lastArray[index];\n        const previousSupport = previous?.tagSupport;\n        const subTag = item;\n        if (isTagClass(subTag) && !subTag.templater) {\n            tagFakeTemplater(subTag);\n        }\n        const tagSupport = new TagSupport(subTag.templater, ownerSupport, new ValueSubject(undefined));\n        if (previousSupport) {\n            setupNewTemplater(tagSupport, ownerSupport, previousSupport.subject);\n            const global = previousSupport.global;\n            tagSupport.global = global;\n            global.newest = tagSupport;\n        }\n        // check for html``.key()\n        const keySet = 'arrayValue' in subTag.memory;\n        if (!keySet) {\n            const details = {\n                template: tagSupport.getTemplate().string,\n                array: value,\n            };\n            const message = 'Use html`...`.key(item) instead of html`...` to template an Array';\n            console.error(message, details);\n            const err = new ArrayNoKeyError(message, details);\n            throw err;\n        }\n        const couldBeSame = lastArray.length > index;\n        if (couldBeSame) {\n            const prevSupport = previous.tagSupport;\n            const prevGlobal = prevSupport.global;\n            // subTag.tagSupport = subTag.tagSupport || prevSupport\n            const oldest = prevGlobal.oldest;\n            oldest.updateBy(tagSupport);\n            // return []\n            continue;\n        }\n        processAddTagArrayItem(runtimeInsertBefore, tagSupport, index, options, lastArray);\n        ownerSupport.childTags.push(tagSupport);\n    }\n    return clones;\n}\nfunction setPlaceholderElm(insertBefore, subject) {\n    if (insertBefore.nodeName !== 'TEMPLATE') {\n        subject.placeholder = insertBefore;\n        return;\n    }\n    const placeholder = subject.placeholder = document.createTextNode('');\n    const parentNode = insertBefore.parentNode;\n    parentNode.insertBefore(placeholder, insertBefore);\n    parentNode.removeChild(insertBefore);\n}\nfunction processAddTagArrayItem(before, tagSupport, index, options, lastArray) {\n    const lastValue = {\n        tagSupport, index\n    };\n    // Added to previous array\n    lastArray.push(lastValue);\n    const counts = {\n        added: options.counts.added + index,\n        removed: options.counts.removed,\n    };\n    const fragment = document.createDocumentFragment();\n    const newTempElm = document.createElement('template');\n    fragment.appendChild(newTempElm);\n    tagSupport.buildBeforeElement(newTempElm, // before,\n    { counts });\n    const parent = before.parentNode;\n    parent.insertBefore(fragment, before);\n}\n/** compare two values. If both values are arrays then the items will be compared */\nfunction areLikeValues(valueA, valueB) {\n    if (valueA === valueB) {\n        return true;\n    }\n    const bothArrays = valueA instanceof Array && valueB instanceof Array;\n    const matchLengths = bothArrays && valueA.length == valueB.length;\n    if (matchLengths) {\n        return valueA.every((item, index) => item == valueB[index]);\n    }\n    return false;\n}\n//# sourceMappingURL=processTagArray.js.map","// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const parent = lastFirstChild.parentNode;\n    // Insert the new value (never use innerHTML here)\n    const textNode = document.createTextNode(value); // never innerHTML\n    parent.insertBefore(textNode, lastFirstChild);\n    /* remove existing nodes */\n    parent.removeChild(lastFirstChild);\n    return textNode;\n}\nexport function castTextValue(value) {\n    // mimic React skipping to display EXCEPT for true does display on page\n    if ([undefined, false, null].includes(value)) { // || value === true\n        return '';\n    }\n    return value;\n}\n//# sourceMappingURL=updateBeforeTemplate.function.js.map","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nexport function processRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    subject.insertBefore = insertBefore;\n    const before = subject.clone || insertBefore; // Either the template is on the doc OR its the first element we last put on doc\n    // matches but also was defined at some point\n    if (subject.lastValue === value && 'lastValue' in subject) {\n        return; // no need to update display, its the same\n    }\n    subject.lastValue = value;\n    const castedValue = castTextValue(value);\n    // replace existing string?\n    const oldClone = subject.clone;\n    if (oldClone) {\n        oldClone.textContent = castedValue;\n        return;\n    }\n    // Processing of regular values\n    const clone = updateBeforeTemplate(castedValue, before);\n    subject.clone = clone; // remember single element put down, for future updates\n}\nexport function processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    subject.lastValue = value;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    subject.clone = clone; // remember single element put down, for future updates \n}\n//# sourceMappingURL=processRegularValue.function.js.map","import { processSubjectComponent } from './processSubjectComponent.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processFirstRegularValue } from './processRegularValue.function.js';\nimport { processTag, tagFakeTemplater } from './processTag.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { oneRenderToTagSupport } from './oneRenderToTagSupport.function.js';\nimport { getValueType } from '../getValueType.function.js';\nexport function processFirstSubjectValue(value, subject, // could be tag via result.tag\ninsertBefore, // <template end interpolate /> (will be removed)\nownerSupport, // owner\noptions) {\n    const valueType = getValueType(value);\n    switch (valueType) {\n        case ValueTypes.templater:\n            processTag(value, insertBefore, ownerSupport, subject);\n            return;\n        case ValueTypes.tag:\n            const tag = value;\n            let templater = tag.templater;\n            if (!templater) {\n                templater = tagFakeTemplater(tag);\n            }\n            processTag(templater, insertBefore, ownerSupport, subject);\n            return;\n        case ValueTypes.tagArray:\n            return processTagArray(subject, value, insertBefore, ownerSupport, options);\n        case ValueTypes.tagComponent:\n            processSubjectComponent(value, subject, insertBefore, ownerSupport, options);\n            return;\n        case ValueTypes.function:\n            const v = value;\n            if (v.oneRender) {\n                const tagSupport = oneRenderToTagSupport(v, subject, ownerSupport);\n                renderTagOnly(tagSupport, tagSupport, subject, ownerSupport);\n                processTag(tagSupport.templater, insertBefore, ownerSupport, subject);\n                return;\n            }\n            break;\n    }\n    processFirstRegularValue(value, subject, insertBefore);\n}\n//# sourceMappingURL=processFirstSubjectValue.function.js.map","import { TemplaterResult } from '../TemplaterResult.class.js';\nimport { newTagSupportByTemplater } from './processTag.function.js';\nexport function oneRenderToTagSupport(wrapper, subject, ownerSupport) {\n    const templater = new TemplaterResult([]);\n    templater.tagJsType = 'oneRender';\n    const tagSupport = newTagSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    const wrap = () => {\n        templater.tag = tag || (wrapper());\n        return tagSupport;\n    };\n    templater.wrapper = wrap;\n    wrap.parentWrap = wrap;\n    wrap.oneRender = true;\n    wrap.parentWrap.original = wrapper;\n    return tagSupport;\n}\n//# sourceMappingURL=oneRenderToTagSupport.function.js.map","import { processAttribute } from './processAttribute.function.js';\nconst search = new RegExp('\\\\s*<template interpolate end id=\"__tagvar(\\\\d{1,4})\"([^>]*)></template>(\\\\s*)');\nexport function scanTextAreaValue(textarea, context, ownerSupport) {\n    const value = textarea.value;\n    if (value.search(search) >= 0) {\n        const match = value.match(/__tagvar(\\d{1,4})/);\n        const token = match ? match[0] : '';\n        const dynamic = '{' + token + '}';\n        textarea.value = '';\n        textarea.setAttribute('text-var-value', dynamic);\n        const howToSet = (_elm, _name, value) => textarea.value = value;\n        processAttribute('text-var-value', dynamic, // realValue, // context[token].value,\n        textarea, context, ownerSupport, howToSet);\n    }\n}\n//# sourceMappingURL=scanTextAreaValue.function.js.map","import { deepEqual } from '../deepFunctions.js';\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nexport function hasPropChanges(props, // natural props\npastCloneProps) {\n    /*\n    const isCommonEqual = props === undefined && props === compareToProps\n    if(isCommonEqual) {\n      return false\n    }\n    */\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    // check all prop functions match\n    if (typeof (props) === 'object') {\n        if (!pastCloneProps) {\n            return 3;\n        }\n        // castedProps = {...props}\n        castedProps = [...props];\n        // castedPastProps = {...(pastCloneProps || {})}\n        castedPastProps = [...(pastCloneProps || [])];\n        const allFunctionsMatch = castedProps.every((value, index) => {\n            let compare = castedPastProps[index];\n            if (value && typeof (value) === 'object') {\n                const subCastedProps = { ...value };\n                const subCompareProps = { ...compare || {} };\n                const matched = Object.entries(subCastedProps).every(([key, value]) => {\n                    return compareProps(value, subCompareProps[key], () => {\n                        delete subCastedProps[key]; // its a function and not needed to be compared\n                        delete subCompareProps[key]; // its a function and not needed to be compared\n                    });\n                });\n                return matched;\n            }\n            return compareProps(value, compare, () => {\n                castedProps.splice(index, 1);\n                castedPastProps.splice(index, 1);\n            });\n        });\n        if (!allFunctionsMatch) {\n            return 6; // a change has been detected by function comparisons\n        }\n    }\n    // const isEqual = deepEqual(castedPastProps, castedProps)\n    // return isEqual ? false : 7 // if equal then no changes\n    return false;\n}\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(value instanceof Function)) {\n        return deepEqual(value, compare) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(compareFn instanceof Function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 3; // both are function the same\n    }\n    onDelete();\n    return 5;\n}\n//# sourceMappingURL=hasPropChanges.function.js.map","import { hasPropChanges } from './hasPropChanges.function.js';\nexport function hasTagSupportChanged(oldTagSupport, newTagSupport, newTemplater) {\n    const latestProps = newTemplater.props; // newTagSupport.propsConfig.latest\n    const pastCloneProps = oldTagSupport.propsConfig.latestCloned;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps);\n    // if no changes detected, no need to continue to rendering further tags\n    if (propsChanged) {\n        return propsChanged;\n    }\n    const kidsChanged = hasKidsChanged(oldTagSupport, newTagSupport);\n    // we already know props didn't change and if kids didn't either, than don't render\n    return kidsChanged;\n}\nexport function hasKidsChanged(oldTagSupport, newTagSupport) {\n    const oldCloneKidValues = oldTagSupport.propsConfig.lastClonedKidValues;\n    const newClonedKidValues = newTagSupport.propsConfig.lastClonedKidValues;\n    const everySame = oldCloneKidValues.every((set, index) => {\n        const x = newClonedKidValues[index];\n        return set.every((item, index) => item === x[index]);\n    });\n    return everySame ? false : 9;\n}\n//# sourceMappingURL=hasTagSupportChanged.function.js.map","import { deepClone, deepEqual } from './deepFunctions.js';\nimport { isStaticTag } from './isInstance.js';\nimport { renderTagSupport } from './tag/render/renderTagSupport.function.js';\nimport { setUse } from './state/index.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nimport { syncStates } from './state/syncStates.function.js';\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, stateArray, newTagSupport) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, stateArray, newTagSupport);\n}\nfunction checkProp(value, ownerSupport, stateArray, newTagSupport, index, newProp, seen = []) {\n    if (value instanceof Function) {\n        return getPropWrap(value, ownerSupport, stateArray, newTagSupport, index, newProp);\n    }\n    if (seen.includes(value)) {\n        return value;\n    }\n    seen.push(value);\n    if (typeof (value) !== 'object' || !value) {\n        return value; // no children to crawl through\n    }\n    if (value instanceof Array) {\n        value.forEach((x, index) => value[index] = checkProp(x, ownerSupport, stateArray, newTagSupport, index, value, seen));\n        return value;\n    }\n    for (const name in value) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, stateArray, newTagSupport, name, value, seen);\n        const hasSetter = typeof (result) === 'object' || Object.getOwnPropertyDescriptor(value, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n    }\n    return value;\n}\nfunction getPropWrap(value, ownerSupport, stateArray, newTagSupport, name, newProp) {\n    const toCall = value.toCall;\n    if (toCall) {\n        return value; // already previously converted\n    }\n    const wrap = (...args) => wrap.toCall(...args); // what gets called can switch over parent state changes\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = (...args) => callbackPropOwner(value, args, ownerSupport, stateArray);\n    wrap.original = value;\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    if (name) {\n        // restore object to have original function on destroy\n        newTagSupport.global.destroy$.toCallback(() => newProp[name] = value);\n    }\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport, // <-- WHEN called from alterProp its owner OTHERWISE its previous\nstateArray) {\n    const newest = ownerSupport.global.newest;\n    const newState = newest.memory.state;\n    const noCycle = getSupportInCycle() === undefined;\n    const sync = noCycle && stateArray.length === newState.length;\n    if (sync) {\n        syncStates(newState, stateArray);\n    }\n    const result = toCall(...callWith);\n    if (sync) {\n        syncStates(stateArray, newState);\n    }\n    const run = () => {\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            // appears a prop function was called sync/immediately so lets see if owner changed state\n            const allMatched = newest.memory.state.every(state => {\n                const lastValue = state.lastValue;\n                const get = state.get();\n                const equal = deepEqual(deepClone(lastValue), get);\n                return equal;\n            });\n            if (allMatched) {\n                return result; // owner did not change\n            }\n        }\n        renderTagSupport(newest, true);\n        return result;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUse.memory.tagClosed$.toCallback(run);\n    return result;\n}\n//# sourceMappingURL=alterProp.function.js.map","import { hasTagSupportChanged } from '../hasTagSupportChanged.function.js';\nimport { processSubjectComponent } from './processSubjectComponent.function.js';\nimport { destroyTagMemory } from '../destroyTag.function.js';\nimport { renderTagSupport } from '../render/renderTagSupport.function.js';\nimport { callbackPropOwner } from '../../alterProp.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nexport function updateExistingTagComponent(ownerSupport, tagSupport, // lastest\nsubject, insertBefore) {\n    let lastSupport = subject.tagSupport?.global.newest; // || subject.tagSupport\n    let oldestTag = lastSupport.global.oldest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = tagSupport.templater.wrapper;\n    let isSameTag = false;\n    if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.parentWrap.original;\n        const newFunction = newWrapper.parentWrap.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = tagSupport.templater;\n    if (!isSameTag) {\n        const oldestSupport = lastSupport.global.oldest;\n        destroyTagMemory(oldestSupport);\n        return processSubjectComponent(templater, subject, insertBefore, ownerSupport, {\n            counts: { added: 0, removed: 0 },\n        });\n    }\n    else {\n        const hasChanged = hasTagSupportChanged(lastSupport, tagSupport, templater);\n        if (!hasChanged) {\n            // if the new props are an object then implicitly since no change, the old props are an object\n            const newProps = templater.props;\n            syncFunctionProps(lastSupport, ownerSupport, newProps);\n            return lastSupport; // its the same tag component\n        }\n    }\n    const previous = lastSupport.global.newest;\n    const newSupport = renderTagSupport(tagSupport, false);\n    lastSupport = subject.tagSupport;\n    const newOldest = newSupport.global.oldest;\n    const hasOldest = newOldest ? true : false;\n    if (!hasOldest) {\n        return buildNewTag(newSupport, insertBefore, lastSupport, subject);\n    }\n    if (newOldest && templater.children._value.length) {\n        const oldKidsSub = newOldest.templater.children;\n        oldKidsSub.next(templater.children._value);\n    }\n    // detect if both the function is the same and the return is the same\n    const isLikeTag = isSameTag && isLikeTags(previous, newSupport);\n    if (isLikeTag) {\n        subject.tagSupport = newSupport;\n        oldestTag.updateBy(newSupport); // the oldest tag has element references\n        return newSupport;\n    }\n    else {\n        // Although function looked the same it returned a different html result\n        if (isSameTag && lastSupport) {\n            destroyTagMemory(lastSupport);\n            newSupport.global.context = {}; // do not share previous outputs\n        }\n        oldestTag = undefined;\n    }\n    if (!oldestTag) {\n        lastSupport = newSupport;\n        buildNewTag(newSupport, lastSupport.global.insertBefore, lastSupport, subject);\n    }\n    lastSupport.global.newest = newSupport;\n    return newSupport;\n}\nfunction buildNewTag(newSupport, oldInsertBefore, oldTagSupport, subject) {\n    newSupport.buildBeforeElement(oldInsertBefore, {\n        counts: { added: 0, removed: 0 },\n    });\n    newSupport.global.oldest = newSupport;\n    newSupport.global.newest = newSupport;\n    oldTagSupport.global.oldest = newSupport;\n    oldTagSupport.global.newest = newSupport;\n    subject.tagSupport = newSupport;\n    return newSupport;\n}\nfunction syncFunctionProps(lastSupport, ownerSupport, newPropsArray) {\n    lastSupport = lastSupport.global.newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.latestCloned;\n    const prevSupport = ownerSupport.global.newest;\n    for (let index = newPropsArray.length - 1; index >= 0; --index) {\n        const argPosition = newPropsArray[index];\n        if (typeof (argPosition) !== 'object') {\n            return;\n        }\n        const priorProps = priorPropsArray[index];\n        if (typeof (priorProps) !== 'object') {\n            return;\n        }\n        for (const name in argPosition) {\n            const value = argPosition[name];\n            if (!(value instanceof Function)) {\n                continue;\n            }\n            const newCallback = argPosition[name]; // || value\n            const original = newCallback instanceof Function && newCallback.toCall;\n            if (original) {\n                continue; // already previously converted\n            }\n            // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n            priorProps[name].toCall = (...args) => {\n                return callbackPropOwner(newCallback, // value, // newOriginal,\n                args, prevSupport, // ??? <= ownerSupport\n                []);\n            };\n        }\n    }\n}\n//# sourceMappingURL=updateExistingTagComponent.function.js.map","import { TagSupport } from '../TagSupport.class.js';\nimport { TemplaterResult } from '../TemplaterResult.class.js';\nimport { isTagClass, isTagTemplater } from '../../isInstance.js';\nimport { processTagArray } from './processTagArray.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { processRegularValue } from './processRegularValue.function.js';\nimport { checkDestroyPrevious, restoreTagMarker } from '../checkDestroyPrevious.function.js';\nimport { processSubjectComponent } from './processSubjectComponent.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { setupNewTemplater, getFakeTemplater, processTag } from './processTag.function.js';\nimport { swapInsertBefore } from '../setTagPlaceholder.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getValueType } from '../getValueType.function.js';\nexport function updateExistingValue(subject, value, ownerSupport, insertBefore) {\n    const subjectTag = subject;\n    const valueType = getValueType(value);\n    checkDestroyPrevious(subject, value, insertBefore, valueType);\n    // handle already seen tag components\n    if (valueType === ValueTypes.tagComponent) {\n        return prepareUpdateToComponent(value, subjectTag, insertBefore, ownerSupport);\n    }\n    // was component but no longer\n    const tagSupport = subjectTag.tagSupport;\n    if (tagSupport) {\n        if (valueType === ValueTypes.function) {\n            return subjectTag; // its a oneRender tag\n        }\n        handleStillTag(subject, value, ownerSupport);\n        return subjectTag;\n    }\n    switch (valueType) {\n        case ValueTypes.tagArray:\n            processTagArray(subject, value, insertBefore, // oldInsertBefore as InsertBefore,\n            ownerSupport, { counts: {\n                    added: 0,\n                    removed: 0,\n                } });\n            return subject;\n        case ValueTypes.templater:\n            processTag(value, insertBefore, ownerSupport, subjectTag);\n            return subjectTag;\n        case ValueTypes.tag:\n            const tag = value;\n            let templater = tag.templater;\n            if (!templater) {\n                templater = getFakeTemplater();\n                tag.templater = templater;\n                templater.tag = tag;\n            }\n            processTag(templater, insertBefore, ownerSupport, subjectTag);\n            return subjectTag;\n        case ValueTypes.subject:\n            return value;\n        // now its a useless function (we don't automatically call functions)\n        case ValueTypes.function:\n            if (!subject.clone) {\n                subject.clone = swapInsertBefore(insertBefore);\n            }\n            return subject;\n    }\n    // This will cause all other values to render\n    processRegularValue(value, subject, insertBefore);\n    return subjectTag;\n}\nfunction handleStillTag(subject, value, ownerSupport) {\n    const lastSupport = subject.tagSupport;\n    let templater = value;\n    const isClass = isTagClass(value);\n    if (isClass) {\n        const tag = value;\n        templater = tag.templater;\n        if (!templater) {\n            templater = new TemplaterResult([]);\n            templater.tag = tag;\n            tag.templater = templater;\n        }\n    }\n    const valueSupport = new TagSupport(templater, ownerSupport, subject);\n    if (isClass) {\n        valueSupport.global = lastSupport.global;\n    }\n    const isSameTag = value && isLikeTags(lastSupport, valueSupport);\n    if (isTagTemplater(value)) {\n        setupNewTemplater(valueSupport, ownerSupport, subject);\n    }\n    if (isSameTag) {\n        lastSupport.updateBy(valueSupport);\n        return;\n    }\n    if (isSameTag) {\n        // const subjectTag = subject as TagSubject\n        const global = lastSupport.global;\n        const insertBefore = global.insertBefore;\n        return processTag(templater, insertBefore, ownerSupport, subject);\n    }\n    return processRegularValue(value, subject, subject.insertBefore);\n}\nfunction prepareUpdateToComponent(templater, subjectTag, insertBefore, ownerSupport) {\n    // When last value was not a component\n    if (!subjectTag.tagSupport) {\n        processSubjectComponent(templater, subjectTag, insertBefore, // oldInsertBefore as InsertBefore,\n        ownerSupport, {\n            counts: { added: 0, removed: 0 },\n        });\n        return subjectTag;\n    }\n    const tagSupport = new TagSupport(templater, ownerSupport, subjectTag);\n    const subjectSup = subjectTag.tagSupport;\n    const prevSupport = subjectSup.global.newest;\n    if (prevSupport) {\n        const newestState = prevSupport.memory.state;\n        tagSupport.memory.state.length = 0;\n        tagSupport.memory.state.push(...newestState);\n    }\n    else {\n        restoreTagMarker(subjectSup);\n        processSubjectComponent(templater, subjectTag, insertBefore, ownerSupport, {\n            counts: { added: 0, removed: 0 },\n        });\n        return subjectTag;\n    }\n    tagSupport.global = subjectSup.global;\n    subjectTag.tagSupport = tagSupport;\n    updateExistingTagComponent(ownerSupport, tagSupport, // latest value\n    subjectTag, insertBefore);\n    return subjectTag;\n}\n//# sourceMappingURL=updateExistingValue.function.js.map","import { variablePrefix } from '../tag/Tag.class.js';\nimport { elementInitCheck } from './elementInitCheck.js';\nimport { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { isTagArray, isTagComponent } from '../isInstance.js';\nimport { scanTextAreaValue } from './scanTextAreaValue.function.js';\nimport { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { swapInsertBefore } from '../tag/setTagPlaceholder.function.js';\nexport function interpolateTemplate(insertBefore, // <template end interpolate /> (will be removed)\ncontext, // variable scope of {`__tagvar${index}`:'x'}\nownerSupport, // Tag class\ncounts, // used for animation stagger computing\noptions) {\n    // TODO: THe clones array is useless here\n    const clones = [];\n    if (!insertBefore.hasAttribute('end')) {\n        return { clones }; // only care about <template end>\n    }\n    const variableName = insertBefore.getAttribute('id');\n    if (variableName?.substring(0, variablePrefix.length) !== variablePrefix) {\n        return { clones }; // ignore, not a tagVar\n    }\n    const existingSubject = context[variableName];\n    const isDynamic = isTagComponent(existingSubject._value) || isTagArray(existingSubject.value);\n    // process dynamics later\n    if (isDynamic) {\n        return {\n            clones,\n            tagComponent: {\n                variableName,\n                ownerSupport,\n                subject: existingSubject,\n                insertBefore\n            }\n        };\n    }\n    subscribeToTemplate(insertBefore, existingSubject, ownerSupport, counts);\n    return { clones };\n}\nexport function subscribeToTemplate(insertBefore, subject, ownerSupport, counts) {\n    let called = false;\n    const onValue = (value) => {\n        if (called) {\n            updateExistingValue(subject, value, ownerSupport, insertBefore);\n            return;\n        }\n        const templater = value;\n        processFirstSubjectValue(templater, subject, insertBefore, ownerSupport, {\n            counts: { ...counts },\n        });\n        called = true;\n    };\n    let mutatingCallback = onValue;\n    const callback = (value) => mutatingCallback(value);\n    const sub = subject.subscribe(callback);\n    // on subscribe, the Subject did NOT emit immediately. Lets pull the template off the document\n    if (insertBefore.parentNode) {\n        const clone = subject.clone = swapInsertBefore(insertBefore);\n        mutatingCallback = v => {\n            const parentNode = clone.parentNode;\n            parentNode.insertBefore(insertBefore, clone);\n            parentNode.removeChild(clone);\n            delete subject.clone;\n            mutatingCallback = onValue; // all future calls will just produce value\n            onValue(v); // calls for rending\n        };\n    }\n    ownerSupport.global.subscriptions.push(sub);\n}\nexport function afterElmBuild(elm, options, context, ownerSupport) {\n    if (!elm.getAttribute) {\n        return;\n    }\n    const tagName = elm.nodeName; // elm.tagName\n    if (tagName === 'TEXTAREA') {\n        scanTextAreaValue(elm, context, ownerSupport);\n    }\n    let diff = options.counts.added;\n    diff = elementInitCheck(elm, options.counts) - diff;\n    const children = elm.children;\n    if (children) {\n        for (let index = children.length - 1; index >= 0; --index) {\n            const child = children[index];\n            const subOptions = {\n                ...options,\n                counts: options.counts,\n            };\n            afterElmBuild(child, subOptions, context, ownerSupport);\n        }\n    }\n}\n//# sourceMappingURL=interpolateTemplate.js.map","export function elementInitCheck(nextSibling, counts) {\n    const onInitDoubleWrap = nextSibling.oninit;\n    if (!onInitDoubleWrap) {\n        return counts.added;\n    }\n    const onInitWrap = onInitDoubleWrap.tagFunction;\n    if (!onInitWrap) {\n        return counts.added;\n    }\n    const onInit = onInitWrap.tagFunction;\n    if (!onInit) {\n        return counts.added;\n    }\n    const event = { target: nextSibling, stagger: counts.added };\n    onInit(event);\n    return ++counts.added;\n}\n//# sourceMappingURL=elementInitCheck.js.map","import { interpolateTemplate } from './interpolateTemplate.js';\nexport function interpolateContentTemplates(context, tagSupport, options, children) {\n    // counting for animation stagger computing\n    const counts = options.counts;\n    const clones = [];\n    const tagComponents = [];\n    const childLength = children.length;\n    for (let index = childLength - 1; index >= 0; --index) {\n        const child = children[index];\n        const { clones: nextClones, tagComponent } = interpolateTemplate(child, context, tagSupport, counts, options);\n        clones.push(...nextClones);\n        if (tagComponent) {\n            tagComponents.push(tagComponent);\n            continue;\n        }\n        if (child.children) {\n            for (let index = child.children.length - 1; index >= 0; --index) {\n                const subChild = child.children[index];\n                // IF <template end /> its a variable to be processed\n                if (isRenderEndTemplate(subChild)) {\n                    const { tagComponent } = interpolateTemplate(subChild, context, tagSupport, counts, options);\n                    if (tagComponent) {\n                        tagComponents.push(tagComponent);\n                    }\n                }\n                const { clones: nextClones, tagComponents: nextTagComponent } = interpolateContentTemplates(context, tagSupport, options, subChild.children);\n                clones.push(...nextClones);\n                tagComponents.push(...nextTagComponent);\n            }\n        }\n    }\n    return { clones, tagComponents };\n}\nfunction isRenderEndTemplate(child) {\n    const isTemplate = child.tagName === 'TEMPLATE';\n    return isTemplate &&\n        child.getAttribute('interpolate') !== undefined &&\n        child.getAttribute('end') !== undefined;\n}\n//# sourceMappingURL=interpolateContentTemplates.js.map","import { interpolateAttributes } from './interpolateAttributes.js';\nimport { interpolateToTemplates } from './interpolations.js';\nimport { interpolateContentTemplates } from './interpolateContentTemplates.js';\nimport { escapeSearch, variablePrefix } from '../tag/Tag.class.js';\n/** Review elements within an element */\nexport function interpolateElement(container, // element containing innerHTML to review interpolations\ncontext, // variables used to evaluate\ninterpolatedTemplates, ownerSupport, options) {\n    const clones = [];\n    const tagComponents = [];\n    const result = interpolatedTemplates.interpolation;\n    const template = container.children[0];\n    const children = template.content.children;\n    if (result.keys.length) {\n        const { clones: nextClones, tagComponents: nextTagComponents } = interpolateContentTemplates(context, ownerSupport, options, children);\n        clones.push(...nextClones);\n        tagComponents.push(...nextTagComponents);\n    }\n    interpolateAttributes(template, context, ownerSupport);\n    processChildrenAttributes(children, context, ownerSupport);\n    return { clones, tagComponents };\n}\nfunction processChildrenAttributes(children, context, ownerSupport) {\n    for (let index = children.length - 1; index >= 0; --index) {\n        const child = children[index];\n        interpolateAttributes(child, context, ownerSupport);\n        if (child.children) {\n            processChildrenAttributes(child.children, context, ownerSupport);\n        }\n    }\n}\nexport function interpolateString(string) {\n    const result = interpolateToTemplates(string);\n    result.string = result.string.replace(escapeSearch, variablePrefix);\n    return result;\n}\n//# sourceMappingURL=interpolateElement.js.map","import { buildClones } from '../render.js';\nimport { afterElmBuild } from './interpolateTemplate.js';\nexport function afterInterpolateElement(container, insertBefore, tagSupport, context, options) {\n    const clones = buildClones(container, insertBefore);\n    if (!clones.length) {\n        return clones;\n    }\n    for (let index = clones.length - 1; index >= 0; --index) {\n        const clone = clones[index];\n        afterElmBuild(clone, options, context, tagSupport);\n        tagSupport.clones.push(clone);\n    }\n    return clones;\n}\n//# sourceMappingURL=afterInterpolateElement.function.js.map","export function buildClones(temporary, insertBefore) {\n    const clones = [];\n    const template = temporary.children[0];\n    let nextSibling = template.content.firstChild;\n    const fragment = document.createDocumentFragment();\n    while (nextSibling) {\n        const nextNextSibling = nextSibling.nextSibling;\n        clones.push(nextSibling);\n        fragment.appendChild(nextSibling);\n        nextSibling = nextNextSibling;\n    }\n    if (insertBefore.parentNode) {\n        const parentNode = insertBefore.parentNode;\n        parentNode.insertBefore(fragment, insertBefore);\n    }\n    return clones;\n}\n//# sourceMappingURL=render.js.map","import { escapeVariable, variablePrefix } from './Tag.class.js';\nimport { deepClone } from '../deepFunctions.js';\nimport { isTagComponent } from '../isInstance.js';\nimport { cloneValueArray } from './cloneValueArray.function.js';\nimport { restoreTagMarker } from './checkDestroyPrevious.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nimport { getChildTagsToDestroy } from './destroy.support.js';\nimport { elementDestroyCheck } from './elementDestroyCheck.function.js';\nimport { updateContextItem } from './update/updateContextItem.function.js';\nimport { processNewValue } from './update/processNewValue.function.js';\nimport { setTagPlaceholder } from './setTagPlaceholder.function.js';\nimport { interpolateElement, interpolateString } from '../interpolations/interpolateElement.js';\nimport { subscribeToTemplate } from '../interpolations/interpolateTemplate.js';\nimport { afterInterpolateElement } from '../interpolations/afterInterpolateElement.function.js';\nimport { Subject } from '../subject/Subject.class.js';\nconst prefixSearch = new RegExp(variablePrefix, 'g');\n/** used only for apps, otherwise use TagSupport */\nexport class BaseTagSupport {\n    templater;\n    subject;\n    isApp = true;\n    appElement; // only seen on this.getAppTagSupport().appElement\n    strings;\n    values;\n    propsConfig;\n    // stays with current render\n    memory = {\n        state: [],\n    };\n    clones = []; // elements on document. Needed at destroy process to know what to destroy\n    // travels with all rerenderings\n    global = {\n        destroy$: new Subject(),\n        context: {}, // populated after reading interpolated.values array converted to an object {variable0, variable:1}\n        providers: [],\n        /** Indicator of re-rending. Saves from double rending something already rendered */\n        renderCount: 0,\n        deleted: false,\n        subscriptions: [],\n        oldest: this\n    };\n    hasLiveElements = false;\n    childTags = []; // tags on me\n    constructor(templater, subject) {\n        this.templater = templater;\n        this.subject = subject;\n        const children = templater.children; // children tags passed in as arguments\n        const kidValue = children.value;\n        const props = templater.props; // natural props\n        const latestCloned = props.map(props => deepClone(props));\n        this.propsConfig = {\n            latest: props,\n            latestCloned, // assume its HTML children and then detect\n            lastClonedKidValues: kidValue.map(kid => {\n                const cloneValues = cloneValueArray(kid.values);\n                return cloneValues;\n            })\n        };\n    }\n    /** Function that kicks off actually putting tags down as HTML elements */\n    buildBeforeElement(insertBefore, options = {\n        counts: { added: 0, removed: 0 },\n    }) {\n        const subject = this.subject;\n        const global = this.global;\n        global.insertBefore = insertBefore;\n        if (!global.placeholder) {\n            setTagPlaceholder(global);\n        }\n        const placeholderElm = global.placeholder;\n        global.oldest = this;\n        global.newest = this;\n        subject.tagSupport = this;\n        this.hasLiveElements = true;\n        const context = this.update();\n        const template = this.getTemplate();\n        const elementContainer = document.createDocumentFragment();\n        const tempDraw = document.createElement('template');\n        tempDraw.innerHTML = template.string;\n        elementContainer.appendChild(tempDraw);\n        // Search/replace innerHTML variables but don't interpolate tag components just yet\n        const { tagComponents } = interpolateElement(elementContainer, context, template, this, // ownerSupport,\n        {\n            counts: options.counts\n        });\n        afterInterpolateElement(elementContainer, placeholderElm, this, // ownerSupport\n        context, options);\n        // Any tag components that were found should be processed AFTER the owner processes its elements. Avoid double processing of elements attributes like (oninit)=${}\n        const length = tagComponents.length;\n        for (let index = 0; index < length; ++index) {\n            const tagComponent = tagComponents[index];\n            subscribeToTemplate(tagComponent.insertBefore, tagComponent.subject, tagComponent.ownerSupport, options.counts);\n            afterInterpolateElement(elementContainer, tagComponent.insertBefore, tagComponent.ownerSupport, context, options);\n        }\n    }\n    getTemplate() {\n        const thisTag = this.templater.tag;\n        const strings = this.strings || thisTag.strings;\n        const values = this.values || thisTag.values;\n        const string = strings.map((string, index) => {\n            const safeString = string.replace(prefixSearch, escapeVariable);\n            const endString = safeString + (values.length > index ? `{${variablePrefix}${index}}` : '');\n            const trimString = endString.replace(/>\\s*/g, '>').replace(/\\s*</g, '<');\n            return trimString;\n        }).join('');\n        const interpolation = interpolateString(string);\n        return {\n            interpolation,\n            string: interpolation.string,\n            strings,\n            values,\n            context: this.global.context || {},\n        };\n    }\n    update() {\n        return this.updateContext(this.global.context);\n    }\n    updateContext(context) {\n        const thisTag = this.templater.tag;\n        const strings = this.strings || thisTag.strings;\n        const values = this.values || thisTag.values;\n        strings.map((_string, index) => {\n            const hasValue = values.length > index;\n            if (!hasValue) {\n                return;\n            }\n            const variableName = variablePrefix + index;\n            const value = values[index];\n            // is something already there?\n            const exists = variableName in context;\n            if (exists) {\n                return updateContextItem(context, variableName, value);\n            }\n            // 🆕 First time values below\n            context[variableName] = processNewValue(value, this);\n        });\n        return context;\n    }\n    updateBy(tagSupport) {\n        const tempTag = tagSupport.templater.tag;\n        this.updateConfig(tempTag.strings, tempTag.values);\n    }\n    updateConfig(strings, values) {\n        this.strings = strings;\n        this.updateValues(values);\n    }\n    updateValues(values) {\n        this.values = values;\n        return this.updateContext(this.global.context);\n    }\n    destroy(options = {\n        stagger: 0,\n        byParent: false, // Only destroy clones of direct children\n    }) {\n        const firstDestroy = !options.byParent;\n        const global = this.global;\n        const subject = this.subject;\n        const childTags = options.byParent ? [] : getChildTagsToDestroy(this.childTags);\n        if (firstDestroy && isTagComponent(this.templater)) {\n            global.destroy$.next();\n            runBeforeDestroy(this, this);\n        }\n        this.destroySubscriptions();\n        // signify immediately child has been deleted (looked for during event processing)\n        for (let index = childTags.length - 1; index >= 0; --index) {\n            const child = childTags[index];\n            const subGlobal = child.global;\n            delete subGlobal.newest;\n            subGlobal.deleted = true;\n            if (isTagComponent(child.templater)) {\n                runBeforeDestroy(child, child);\n            }\n        }\n        // HTML DOM manipulation. Put back down the template tag\n        const insertBefore = global.insertBefore;\n        if (insertBefore.nodeName === 'TEMPLATE') {\n            const placeholder = global.placeholder;\n            if (placeholder && !('arrayValue' in this.memory)) {\n                if (!options.byParent) {\n                    restoreTagMarker(this);\n                }\n            }\n        }\n        let mainPromise;\n        const ownerTagSupport = this.ownerTagSupport;\n        if (ownerTagSupport) {\n            ownerTagSupport.childTags = ownerTagSupport.childTags.filter(child => child !== this);\n        }\n        if (firstDestroy) {\n            const { stagger, promise } = this.destroyClones(options);\n            options.stagger = stagger;\n            if (promise) {\n                mainPromise = promise;\n            }\n        }\n        else {\n            this.destroyClones();\n        }\n        // data reset\n        delete global.placeholder;\n        global.context = {};\n        delete global.oldest; // may not be needed\n        delete global.newest;\n        global.deleted = true;\n        this.childTags.length = 0;\n        this.hasLiveElements = false;\n        delete subject.tagSupport;\n        if (mainPromise) {\n            mainPromise = mainPromise.then(async () => {\n                const promises = childTags.map(kid => kid.destroy({ stagger: 0, byParent: true }));\n                return Promise.all(promises);\n            });\n        }\n        else {\n            mainPromise = Promise.all(childTags.map(kid => kid.destroy({ stagger: 0, byParent: true })));\n        }\n        return mainPromise.then(() => options.stagger);\n    }\n    destroyClones({ stagger } = {\n        stagger: 0,\n    }) {\n        const oldClones = [...this.clones];\n        this.clones.length = 0; // tag maybe used for something else\n        const promises = oldClones.map(clone => this.checkCloneRemoval(clone, stagger)).filter(x => x); // only return promises\n        // check subjects that may have clones attached to them\n        const oldContext = this.global.context;\n        for (const name in oldContext) {\n            const value = oldContext[name];\n            const clone = value.clone;\n            if (clone?.parentNode) {\n                clone.parentNode.removeChild(clone);\n            }\n        }\n        if (promises.length) {\n            return { promise: Promise.all(promises), stagger };\n        }\n        return { stagger };\n    }\n    /** Reviews elements for the presences of ondestroy */\n    checkCloneRemoval(clone, stagger) {\n        let promise;\n        const customElm = clone;\n        if (customElm.ondestroy) {\n            promise = elementDestroyCheck(customElm, stagger);\n        }\n        const next = () => {\n            const parentNode = clone.parentNode;\n            if (parentNode) {\n                parentNode.removeChild(clone);\n            }\n            const ownerSupport = this.ownerTagSupport;\n            if (ownerSupport) {\n                // Sometimes my clones were first registered to my owner, remove them from owner\n                ownerSupport.clones = ownerSupport.clones.filter(compareClone => compareClone !== clone);\n            }\n        };\n        if (promise instanceof Promise) {\n            return promise.then(next);\n        }\n        else {\n            next();\n        }\n        return promise;\n    }\n    destroySubscriptions() {\n        const subs = this.global.subscriptions;\n        for (let index = subs.length - 1; index >= 0; --index) {\n            subs[index].unsubscribe();\n        }\n        subs.length = 0;\n    }\n}\nexport class TagSupport extends BaseTagSupport {\n    templater;\n    ownerTagSupport;\n    subject;\n    version;\n    isApp = false;\n    constructor(templater, // at runtime rendering of a tag, it needs to be married to a new TagSupport()\n    ownerTagSupport, subject, version = 0) {\n        super(templater, subject);\n        this.templater = templater;\n        this.ownerTagSupport = ownerTagSupport;\n        this.subject = subject;\n        this.version = version;\n    }\n    getAppTagSupport() {\n        let tag = this;\n        while (tag.ownerTagSupport) {\n            tag = tag.ownerTagSupport;\n        }\n        return tag;\n    }\n}\nfunction restoreTagMarkers(support) {\n    restoreTagMarker(support);\n    const childTags = support.childTags;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        restoreTagMarkers(childTags[index].global.oldest);\n    }\n}\n//# sourceMappingURL=TagSupport.class.js.map","import { isSubjectInstance, isTagComponent } from '../../isInstance.js';\nimport { TagSupport } from '../TagSupport.class.js';\nexport function updateContextItem(context, variableName, value) {\n    const subject = context[variableName];\n    const tagSubject = subject;\n    const tagSupport = tagSubject.tagSupport;\n    if (tagSupport) {\n        if (value) {\n            if (isTagComponent(value)) {\n                const templater = value;\n                let newSupport = new TagSupport(templater, tagSupport.ownerTagSupport, subject);\n                // TODO: Need to review if this is used\n                if (isTagComponent(tagSupport)) {\n                    console.warn('👉 deprecated code is being used #shareTemplaterGlobal 👈');\n                    shareTemplaterGlobal(tagSupport, newSupport);\n                }\n            }\n        }\n    }\n    if (isSubjectInstance(value)) {\n        return; // emits on its own\n    }\n    // listeners will evaluate updated values to possibly update display(s)\n    subject.next(value);\n    return;\n}\nfunction shareTemplaterGlobal(oldTagSupport, tagSupport) {\n    const oldTemp = oldTagSupport.templater;\n    const oldWrap = oldTemp.wrapper; // tag versus component\n    const oldValueFn = oldWrap.parentWrap.original;\n    const templater = tagSupport.templater;\n    const newWrapper = templater.wrapper;\n    const newValueFn = newWrapper?.parentWrap.original;\n    const fnMatched = oldValueFn === newValueFn;\n    if (fnMatched) {\n        tagSupport.global = oldTagSupport.global;\n        const newest = oldTagSupport.global.newest;\n        if (newest) {\n            const prevState = newest.memory.state;\n            tagSupport.memory.state.length = 0;\n            tagSupport.memory.state.push(...prevState);\n        }\n    }\n}\n//# sourceMappingURL=updateContextItem.function.js.map","export function elementDestroyCheck(nextSibling, stagger) {\n    const onDestroyDoubleWrap = nextSibling.ondestroy;\n    if (!onDestroyDoubleWrap) {\n        return;\n    }\n    const onDestroyWrap = onDestroyDoubleWrap.tagFunction;\n    if (!onDestroyWrap) {\n        return;\n    }\n    const onDestroy = onDestroyWrap.tagFunction;\n    if (!onDestroy) {\n        return;\n    }\n    const event = { target: nextSibling, stagger };\n    return onDestroy(event);\n}\n//# sourceMappingURL=elementDestroyCheck.function.js.map","import { setUse } from '../state/index.js';\nimport { TemplaterResult } from './TemplaterResult.class.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nlet tagCount = 0;\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent) {\n    /** function developer triggers */\n    const parentWrap = (function tagWrapper(...props) {\n        const templater = new TemplaterResult(props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        if (!innerTagWrap.parentWrap) {\n            innerTagWrap.parentWrap = parentWrap;\n        }\n        templater.tagged = true;\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }) // we override the function provided and pretend original is what's returned\n    ;\n    parentWrap.original = tagComponent;\n    parentWrap.compareTo = tagComponent.toString();\n    const tag = tagComponent;\n    parentWrap.isTag = true;\n    parentWrap.original = tag;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUse;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\n/** Used to create a tag component that renders once and has no addition rendering cycles */\ntag.oneRender = (...props) => {\n    throw new Error('Do not call function tag.oneRender but instead set it as: `(props) => tag.oneRender = (state) => html`` `');\n};\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\ntag.route = (routeProps) => {\n    throw new Error('Do not call function tag.route but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\ntag.app = (routeTag) => {\n    throw new Error('Do not call function tag.route but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\nObject.defineProperty(tag, 'oneRender', {\n    set(oneRenderFunction) {\n        oneRenderFunction.oneRender = true;\n    },\n});\n//# sourceMappingURL=tag.js.map","import { runTagCallback } from '../interpolations/bindSubjectCallback.function.js';\nimport { deepClone } from '../deepFunctions.js';\nimport { TagSupport } from './TagSupport.class.js';\nimport { alterProp } from '../alterProp.function.js';\nimport { setUse } from '../state/setUse.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    const stateArray = setUse.memory.stateConfig.array;\n    // this function gets called by taggedjs\n    const wrapper = function (newTagSupport, subject) {\n        const global = newTagSupport.global;\n        ++global.renderCount;\n        const childSubject = templater.children;\n        const lastArray = global.oldest?.templater.children.lastArray;\n        if (lastArray) {\n            childSubject.lastArray = lastArray;\n        }\n        // result.original\n        const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n        let props = templater.props;\n        let castedProps = props.map(prop => alterProp(prop, newTagSupport.ownerTagSupport, stateArray, newTagSupport));\n        const latestCloned = props.map(props => deepClone(props)); // castedProps\n        // CALL ORIGINAL COMPONENT FUNCTION\n        let tag = originalFunction(...castedProps);\n        if (tag instanceof Function) {\n            tag = tag();\n        }\n        tag.templater = templater;\n        templater.tag = tag;\n        const tagSupport = new TagSupport(templater, newTagSupport.ownerTagSupport, subject, global.renderCount);\n        tagSupport.global = global;\n        tagSupport.propsConfig = {\n            latest: props,\n            latestCloned,\n            lastClonedKidValues: tagSupport.propsConfig.lastClonedKidValues,\n        };\n        const nowState = setUse.memory.stateConfig.array;\n        tagSupport.memory.state.push(...nowState);\n        if (templater.madeChildIntoSubject) {\n            const value = childSubject.value;\n            for (let index = value.length - 1; index >= 0; --index) {\n                const kid = value[index];\n                const values = kid.values;\n                for (let index = values.length - 1; index >= 0; --index) {\n                    const value = values[index];\n                    if (!(value instanceof Function)) {\n                        continue;\n                    }\n                    const valuesValue = kid.values[index];\n                    if (valuesValue.isChildOverride) {\n                        continue; // already overwritten\n                    }\n                    // all functions need to report to me\n                    kid.values[index] = function (...args) {\n                        const ownerSupport = tagSupport.ownerTagSupport;\n                        return runTagCallback(value, // callback\n                        ownerSupport, this, // bindTo\n                        args);\n                    };\n                    valuesValue.isChildOverride = true;\n                }\n            }\n        }\n        return tagSupport;\n    };\n    return wrapper;\n}\n//# sourceMappingURL=getTagWrap.function.js.map","import { Tag } from './Tag.class.js';\nexport function html(strings, ...values) {\n    return new Tag(strings, values);\n}\n//# sourceMappingURL=html.js.map","import { BaseTagSupport } from './TagSupport.class.js';\nimport { runAfterRender, runBeforeRender } from './tagRunner.js';\nimport { ValueSubject } from '../subject/ValueSubject.js';\nconst appElements = [];\n/**\n *\n * @param app taggedjs tag\n * @param element HTMLElement\n * @param props object\n * @returns\n */\nexport function tagElement(app, // (...args: unknown[]) => TemplaterResult,\nelement, props) {\n    const appElmIndex = appElements.findIndex(appElm => appElm.element === element);\n    if (appElmIndex >= 0) {\n        appElements[appElmIndex].tagSupport.destroy();\n        appElements.splice(appElmIndex, 1);\n        // an element already had an app on it\n        console.warn('Found and destroyed app element already rendered to element', { element });\n    }\n    // Create the app which returns [props, runOneTimeFunction]\n    const wrapper = app(props);\n    // have a function setup and call the tagWrapper with (props, {update, async, on})\n    const tagSupport = runWrapper(wrapper);\n    // TODO: is the below needed?\n    tagSupport.appElement = element;\n    tagSupport.isApp = true;\n    tagSupport.global.isApp = true;\n    const templateElm = document.createElement('template');\n    templateElm.setAttribute('id', 'app-tag-' + appElements.length);\n    templateElm.setAttribute('app-tag-detail', appElements.length.toString());\n    const fragment = document.createDocumentFragment();\n    fragment.appendChild(templateElm);\n    element.destroy = async () => {\n        await tagSupport.destroy();\n        const insertBefore = tagSupport.global.insertBefore;\n        const parentNode = insertBefore.parentNode;\n        parentNode.removeChild(insertBefore);\n    };\n    tagSupport.buildBeforeElement(templateElm);\n    tagSupport.global.oldest = tagSupport;\n    tagSupport.global.newest = tagSupport;\n    element.setUse = app.original.setUse;\n    appElements.push({ element, tagSupport });\n    element.appendChild(fragment);\n    return {\n        tagSupport,\n        tags: app.original.tags,\n    };\n}\nexport function runWrapper(templater) {\n    let newSupport = {};\n    const subject = new ValueSubject(newSupport);\n    newSupport = new BaseTagSupport(templater, subject);\n    subject.next(templater);\n    subject.tagSupport = newSupport;\n    runBeforeRender(newSupport, undefined);\n    // Call the apps function for our tag templater\n    const wrapper = templater.wrapper;\n    const tagSupport = wrapper(newSupport, subject);\n    runAfterRender(newSupport, tagSupport);\n    return tagSupport;\n}\n//# sourceMappingURL=tagElement.js.map","export * from './tag/index.js';\nexport * from './errors.js';\nexport * from './subject.types.js';\nexport * from './isInstance.js';\nexport * from './state/index.js';\nexport * from './subject/index.js';\nexport * from './tag/TagSupport.class.js';\nexport * from './interpolations/ElementTargetEvent.interface.js';\nexport * from './interpolations/interpolateElement.js';\nexport * from './interpolations/InsertBefore.type.js';\nexport { tagElement } from './tag/tagElement.js';\nexport { Tag, variablePrefix } from './tag/Tag.class.js';\nexport { runBeforeRender } from './tag/tagRunner.js';\nexport { renderTagSupport } from './tag/render/renderTagSupport.function.js';\nexport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nexport { isLikeValueSets } from './tag/isLikeTags.function.js';\nimport { renderTagOnly } from './tag/render/renderTagOnly.function.js';\nimport { renderTagSupport } from './tag/render/renderTagSupport.function.js';\nimport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nimport { tagElement } from './tag/tagElement.js';\nexport const hmr = {\n    tagElement, renderWithSupport, renderTagSupport,\n    renderTagOnly,\n};\n//# sourceMappingURL=index.js.map","import { html, letState, tag } from \"taggedjs\"\n\nexport const attributeDebug = tag(() => {\n  let selected: string = letState('a')(x => [selected, selected = x])\n  let isOrange: boolean = letState(true)(x => [isOrange, isOrange = x])\n\n  return html`\n    <input onchange=${(event: any) => selected = event.target.value} placeholder=\"a b or c\" />\n    <select id=\"select-sample-drop-down\">\n      ${['a','b','c'].map(item => html`\n        <option value=${item} ${item == selected ? 'selected' : ''}>${item} - ${item == selected ? 'true' : 'false'}</option>\n      `.key(item))}\n    </select>\n    <hr />\n    <h3>Special Attributes</h3>\n    <div>\n      <input type=\"checkbox\" onchange=${(event: any) => isOrange = event.target.checked} ${isOrange && 'checked'} /> - ${isOrange ? 'true' : 'false'}\n    </div>\n    <div style=\"display: flex;flex-wrap:wrap;gap:1em\">      \n      <div\n        style.background-color=${isOrange ? 'orange' : ''}\n        style.color=${isOrange ? 'black': ''}\n      >style.background-color=&dollar;{'orange'}</div>\n      \n      <div\n        class.background-orange=${isOrange ? true : false}\n        class.text-black=${isOrange ? true : false}\n      >class.background-orange=&dollar;{true}</div>\n      \n      <div class=${isOrange ? 'background-orange text-black' : ''}\n      >class=&dollar;{'background-orange text-black'}</div>\n      \n      <div ${{class: 'text-white' + (isOrange ? ' background-orange' : '')}}\n      >class=&dollar;{'background-orange'} but always white</div>\n    </div>\n    <style>\n      .background-orange {background-color:orange}\n      .text-black {color:black}\n      .text-white {color:white}\n    </style>\n  `\n})\n","import { html, tag, letState, ValueSubject, state, combineLatest, willPromise } from \"taggedjs\"\n\nexport const contentDebug = tag(() => {\n  const vs0 = state(() => new ValueSubject(0))\n  const vs1 = state(() => new ValueSubject(1))\n\n  let renderCount: number = letState(0)(x => [renderCount, renderCount=x])\n\n  ++renderCount\n\n  return html`\n    <div style=\"font-size:0.8em\">You should see \"0\" here => \"${0}\"</div>\n    <!--proof you cannot see false values -->\n    <div style=\"font-size:0.8em\">\n      <fieldset>\n        <legend>false test</legend>\n        You should see \"\" here => \"${false}\"\n      </fieldset>\n    </div>\n    <div style=\"font-size:0.8em\">\n      <fieldset>\n        <legend>null test</legend>\n        You should see \"\" here => \"${null}\"\n      </fieldset>\n    </div>\n    <div style=\"font-size:0.8em\">\n      <fieldset>\n        <legend>undefined test</legend>\n        You should see \"\" here => \"${undefined}\"\n      </fieldset>\n    </div>\n    <!--proof you can see true booleans -->\n    <div style=\"font-size:0.8em\">\n      <fieldset>\n        <legend>true test</legend>\n        You should see \"true\" here => \"${true}\"\n      </fieldset>\n    </div>\n    <!--proof you can try to use the tagVar syntax -->\n    <div style=\"font-size:0.8em\">You should see \"${'{'}22${'}'}\" here => \"{22}\"</div>\n    <div style=\"font-size:0.8em\">You should see \"${'{'}__tagVar0${'}'}\" here => \"{__tagVar0}\"</div>\n    <div style=\"font-size:0.8em\">should be a safe string no html \"&lt;div&gt;hello&lt;/div&gt;\" here => \"${'<div>hello</div>'}\"</div>\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      <fieldset style=\"flex:1\">\n        <legend>value subject</legend>\n        0 === ${vs0}\n      </fieldset>\n      \n      <fieldset style=\"flex:1\">\n        <legend>piped subject</legend>        \n        <span id=\"content-subject-pipe-display0\">55</span> ===\n        <span id=\"content-subject-pipe-display1\">${vs0.pipe(() => 55)}</span>\n      </fieldset>\n      \n      <fieldset style=\"flex:1\">\n        <legend>combineLatest</legend>\n        <span id=\"content-combineLatest-pipe-display0\">1</span> ===\n        <span id=\"content-combineLatest-pipe-display1\">${combineLatest([vs0, vs1]).pipe(x => x[1])}</span>\n      </fieldset>\n      \n      <fieldset style=\"flex:1\">\n        <legend>combineLatest piped html</legend>\n        <span id=\"content-combineLatest-pipeHtml-display0\"><b>bold 77</b></span> ===\n        <span id=\"content-combineLatest-pipeHtml-display1\">${\n          combineLatest([vs0, vs1]).pipe(\n            willPromise(x => Promise.resolve(html`<b>bold 77</b>`))\n          )\n        }</span>\n      </fieldset>\n    </div>\n    (render count ${renderCount})\n  `\n})","export function willCallback(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        });\n        callback(lastValue, utils.next);\n    });\n}\n/** .pipe( promise((x) => Promise.resolve(44)) ) */\nexport function willPromise(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        result.then(x => utils.next(x));\n    });\n}\n/** .pipe( willSubscribe((x) => new ValueSubject(44)) ) */\nexport const willSubscribe = (callback) => {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        const subscription = result.subscribe(x => {\n            subscription.unsubscribe();\n            utils.next(x);\n        });\n    });\n};\n//# sourceMappingURL=will.functions.js.map","import { html, tag, letState } from \"taggedjs\"\n\nexport const tableDebug = tag(() => {\n  let showCell: boolean = letState(true)(x => [showCell, showCell = x])\n\n  return html`\n    <div style=\"max-height: 800px;overflow-y: scroll;\">\n      <table cellPadding=${5} cellSpacing=${5} border=\"1\">\n        <thead style=\"position: sticky;top: 0;\">\n          <tr>\n            <th>hello</th>\n            <th>hello</th>\n            ${showCell && html`\n              <td>hello 2 thead cell</td>\n            `}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>world</td>\n            <td>world</td>\n            ${showCell && html`\n              <td>world 2 tbody cell</td>\n            `}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  `\n})\n","import { tag, html } from \"taggedjs\"\n\nexport const renderCountDiv = tag((\n  {renderCount, name}: {\n    renderCount: number\n    name: string\n  }\n) => html`<div><small>(${name} render count <span id=${name+'_render_count'}>${renderCount}</span>)</small></div>`)\n","import { watch, letState, html, tag, letProp } from \"taggedjs\"\nimport { renderCountDiv } from \"./renderCount.component.js\"\nimport funInPropsTag from \"./funInProps.tag.js\"\n\nexport const propsDebugMain = tag((_='propsDebugMain') => (\n  propNumber = letState(0)(x => [propNumber, propNumber = x]),\n  renderCount = letState(0)(x => [renderCount, renderCount = x]),\n  propsJson = letState({test:33, x:'y'})(x => [propsJson, propsJson = x]),\n  date = letState(() => new Date())(x => [date, date = x]),\n  syncPropNumber = letState(0)(x => [syncPropNumber, syncPropNumber = x]),\n  json = JSON.stringify(propsJson, null, 2),\n) => html`\n  <div style=\"display:flex;flex-wrap:wrap\" id=\"textareawrap\">\n    <textarea id=\"props-debug-textarea\" wrap=\"off\"\n      onchange=${event => propsJson = JSON.parse(event.target.value)}\n      style=\"height:200px;font-size:0.6em;width:100%;max-width:400px\"\n    >${ json }</textarea>\n    \n    <pre>${ json }</pre>\n  </div>\n  <div><small>(renderCount:${++renderCount})</small></div>\n  \n  <div>\n    <button id=\"propsDebug-🥩-0-button\"\n      onclick=${() => ++propNumber}\n    >🥩 propNumber ${propNumber}</button>\n    <span id=\"propsDebug-🥩-0-display\">${propNumber}</span>\n  </div>\n  \n  <fieldset>\n    <legend>child</legend>\n    ${propsDebug({\n      propNumber,\n      propsJson,\n      propNumberChange: x => {\n        propNumber = x\n      }\n    })}\n  </fieldset>\n\n  <fieldset>\n    <legend>sync props callback</legend>\n    🥡 syncPropNumber: <span id=\"sync-prop-number-display\">${syncPropNumber}</span>\n    <button onclick=${() => ++syncPropNumber}>🥡 ++</button>\n    <hr />\n    ${syncPropDebug({\n      syncPropNumber,\n      propNumberChange: x => {\n        syncPropNumber = x\n      },\n      nothingTest: x => x\n    })}\n  </fieldset>\n\n  <fieldset>\n    <legend>date prop</legend>\n    date:${date}\n    <input type=\"date\" value=${timestampToValues(date).date} onchange=${event => {\n      const newDateString = event.target.value\n      date = new Date(newDateString)\n    }} />\n    <hr />\n    ${propDateDebug({date})}\n  </fieldset>\n`)\n\nconst propDateDebug = tag(({date}: {date: Date}) => html`date:${date}`)\n\n/** Tests calling a property that is a function immediately which should cause rendering */\nconst syncPropDebug = tag((\n  {\n    syncPropNumber,\n    propNumberChange,\n    nothingTest,\n  }: {\n    syncPropNumber: number\n    propNumberChange: (x: number) => any\n    nothingTest: <T>(x: T) => T\n  }\n) => {\n  let counter = letState(0)(x => [counter, counter = x])\n\n  if(syncPropNumber % 2 === 1) {\n    propNumberChange(syncPropNumber = syncPropNumber + 1)\n  }\n  \n  return html`<!--syncPropDebug-->\n    <div>\n      🥡 syncPropNumber:<span id=\"sync-prop-child-display\">${syncPropNumber}</span>\n      <button id=\"sync-prop-child-button\" onclick=${() => propNumberChange(++syncPropNumber)}>🥡 ++</button>\n    </div>\n    <div>\n      <div>\n        counter:<span id=\"sync-prop-counter-display\">${counter}</span>\n      </div>\n      nothingTest<span id=\"nothing-prop-counter-display\">${nothingTest(counter)}</span>\n      <button id=\"nothing-prop-counter-button\" onclick=${() => nothingTest(++counter)}>++</button>\n    </div>\n  `\n})\n\nconst propsDebug = tag((\n  {\n    propNumber,\n    propsJson,\n    propNumberChange,\n  }: {\n    propNumber: number,\n    propNumberChange: (x: number) => unknown,\n    propsJson: any\n  }\n) => (\n  renderCount = letState(0)(x => [renderCount, renderCount=x]),\n  propNumberChangeCount = letState(0)(x => [propNumberChangeCount, propNumberChangeCount=x]),\n\n  // poor way to update an argument\n  myPropNumber = letState(propNumber)(x => [myPropNumber, myPropNumber=x]),\n  _ = watch([propNumber], () => myPropNumber = propNumber),\n  watchResults = watch([myPropNumber], () => ++propNumberChangeCount),\n\n  // simple way to locally only update an argument\n  __ = letProp(propNumber)(x => [propNumber, propNumber = x]),\n) => html`<!--propsDebug.js-->\n  <h3>Props Json</h3>\n  <textarea style=\"font-size:0.6em;height:200px;width:100%;;max-width:400px\" wrap=\"off\"\n    onchange=${event=> {\n      const value = JSON.parse(event.target.value)\n      Object.assign(propsJson, value)\n    }}\n  >${ JSON.stringify(propsJson, null, 2) }</textarea>\n  <pre>${ JSON.stringify(propsJson, null, 2) }</pre>\n  <!--\n  <div style=\"display:flex;flex-wrap:wrap\">\n  </div>\n  -->\n  <hr />\n  \n  <h3>Props Number</h3>\n  <textarea style=\"font-size:0.6em;height:200px;width:100%;color:white;\" wrap=\"off\" disabled\n  >${ JSON.stringify(watchResults, null, 2) }</textarea>\n  \n  <div>\n    <button id=\"propsDebug-🥩-1-button\" onclick=${() => propNumberChange(++myPropNumber)}\n    >🐄 🥩 propNumber ${myPropNumber}</button>\n    <span id=\"propsDebug-🥩-1-display\">${myPropNumber}</span>\n  </div>\n\n  <div>\n    <button id=\"propsDebug-🥩-2-button\" onclick=${() => ++propNumber}\n    >🐄 🥩 local set propNumber ${propNumber}</button>\n    <span id=\"propsDebug-🥩-2-display\">${propNumber}</span>\n  </div>\n\n  <button\n    title=\"test of increasing render count and nothing else\"\n    onclick=${() => ++renderCount}\n  >renderCount ${++renderCount}</button>\n  \n  <button onclick=${() => ++myPropNumber}\n    title=\"only changes number locally but if change by parent than that is the number\"\n  >🐄 🥩 local set myPropNumber ${myPropNumber}</button>\n  \n  <div>\n    <small>\n      (propNumberChangeCount:<span id=\"propsDebug-🥩-change-display\">${propNumberChangeCount}</span>)\n    </small>\n  </div>\n  \n  <hr />\n\n  <h3>Fn update test</h3>\n  ${propFnUpdateTest({\n    propNumber: myPropNumber,\n    callback: () => ++myPropNumber\n  })}    \n`)\n\nconst propFnUpdateTest = tag(({\n  propNumber, callback,\n}: {\n  propNumber: number, callback: Function\n}) => {\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  ++renderCount\n\n  return html`\n    <button id=\"propsOneLevelFunUpdate-🥩-button\"\n      onclick=${callback}\n    >🐄 🥩 local & 1-parent increase ${propNumber}</button>\n    <span id=\"propsOneLevelFunUpdate-🥩-display\">${propNumber}</span>\n    ${renderCountDiv({renderCount, name: 'propFnUpdateTest'})}\n    <small style=\"opacity:.5\">the count here and within parent increases but not in parent parent</small>\n  `\n})\n\nfunction timestampToValues(\n  timestamp: number | Date | string\n) {\n  const date = new Date(timestamp);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  const hours = String(date.getHours()).padStart(2, '0');\n  const minutes = String(date.getMinutes()).padStart(2, '0');\n\n  return {\n      date: `${year}-${month}-${day}`,\n      time: `${hours}:${minutes}`\n  };\n}\n","import { letState } from './letState.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(prop) {\n    return getSetProp => {\n        let myProp = letState(prop)(getSetProp);\n        watch([prop], () => getSetProp(myProp = prop));\n        getSetProp(myProp);\n        return myProp;\n    };\n}\n//# sourceMappingURL=letProp.function.js.map","export function createFx({ fxIn, fxOut, staggerBy = 300, }) {\n    return {\n        in: (input) => animateInit({ fxName: fxIn, staggerBy, ...input }),\n        out: (input) => animateDestroy({ fxName: fxOut, staggerBy, capturePosition: true, ...input }),\n    };\n}\nconst animateInit = async ({ target, stagger, staggerBy, fxName = 'fadeInDown' }) => {\n    target.style.opacity = '0';\n    if (stagger) {\n        await wait(stagger * staggerBy);\n    }\n    target.style.opacity = '1';\n    target.classList.add('animate__animated', 'animate__' + fxName);\n};\nconst animateDestroy = async ({ target, stagger, capturePosition = true, fxName = 'fadeOutUp', staggerBy }) => {\n    if (capturePosition) {\n        captureElementPosition(target);\n    }\n    if (stagger) {\n        await wait(stagger * staggerBy);\n    }\n    target.classList.add('animate__animated', 'animate__' + fxName);\n    await wait(1000); // don't allow remove from stage until animation completed\n    target.classList.remove('animate__animated', 'animate__' + fxName);\n};\n// absolute\nexport function captureElementPosition(element) {\n    element.style.zIndex = element.style.zIndex || 1;\n    const toTop = element.offsetTop + 'px';\n    const toLeft = element.offsetLeft + 'px';\n    const toWidth = (element.clientWidth + (element.offsetWidth - element.clientWidth) + 1) + 'px';\n    const toHeight = (element.clientHeight + (element.offsetHeight - element.clientHeight) + 1) + 'px';\n    const fix = () => {\n        element.style.top = toTop;\n        element.style.left = toLeft;\n        element.style.width = toWidth;\n        element.style.height = toHeight;\n        element.style.position = 'absolute';\n    };\n    // element.style.position = 'fixed'\n    // allow other elements that are being removed to have a moment to figure out where they currently sit\n    setTimeout(fix, 0);\n}\nfunction wait(time) {\n    return new Promise((res) => {\n        setTimeout(res, time);\n    });\n}\n//# sourceMappingURL=createFx.function.js.map","import { createFx } from \"./createFx.function.js\";\nexport const { in: fadeInDown, out: fadeOutUp } = createFx({ fxIn: 'fadeInDown', fxOut: 'fadeOutUp' });\n//# sourceMappingURL=index.js.map","import { fadeInDown, fadeOutUp } from './animations.js'\nimport { renderCountDiv } from './renderCount.component.js'\nimport {html, state, letState, tag} from 'taggedjs'\n\nconst frameCount = 4\ntype Player = {\n  name: string\n  edit?: boolean\n  scores: any[]\n}\n\nexport const arrayTests = tag(function ArrayTests(){/* ArrayTests */\n  const players: Player[] = state([])\n  let renderCount: number = letState(0)(x => [renderCount, renderCount = x])\n\n  const getNewPlayer = () => ({\n    name: 'Person '+players.length,\n    scores: '0,'.repeat(/*frameCount*/0).split(',').map((_v, index) => ({\n      frame: index + 1,\n      score: Math.floor(Math.random() * 4) + 1\n    }))\n  })\n\n  ++renderCount\n\n  return html`<!--arrayTests.js-->\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      ${playersDisplay({players, getNewPlayer})}\n    </div>\n\n    <button id=\"array-test-push-item\" onclick=${() => {\n      players.push(getNewPlayer())\n    }}>push item ${players.length+1}</button>\n\n    <button onclick=${() => {\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n    }}>push 3 items</button>\n\n    <button onclick=${() => {\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n      players.push(getNewPlayer())\n    }}>push 9 items</button>\n\n    ${players.length > 0 && html`\n      <button oninit=${fadeInDown} ondestroy=${fadeOutUp}\n        style=\"--animate-duration: .1s;\"\n        onclick=${() => players.length = 0}\n      >remove all</button>\n    `}\n\n    ${renderCountDiv({renderCount, name: 'arrayTests.ts'})}\n  `\n})\n\nconst scoreData = tag((\n  {score, playerIndex}: {\n    playerIndex: number\n    score:{score: number, frame: number}\n  }\n) => {\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  \n  ++renderCount\n\n  return html`\n    frame:${score.frame}:\n    <button\n      id=${`score-data-${playerIndex}-${score.frame}-inside-button`}\n      onclick=${() => ++score.score}\n    >inner score button ++${score.score}</button>\n    <span id=${`score-data-${playerIndex}-${score.frame}-inside-display`}\n    >${score.score}</span>\n    <button onclick=${() => ++renderCount}>increase renderCount</button>\n    ${renderCountDiv({renderCount, name:'scoreData' + score.frame})}\n  `\n})\n\nconst playersDisplay = tag(({\n  players, getNewPlayer,\n}: {\n  players: Player[]\n  getNewPlayer: () => Player\n}) => {\n  const playersContent = players.map((player,index) => html`\n    <div oninit=${fadeInDown} ondestroy=${fadeOutUp}\n      style=\"background-color:black;--animate-duration: .1s;\"\n    >\n      <div>\n        name:${player.name}\n      </div>\n      <div>\n        index:${index}\n      </div>\n      \n      <div style=\"background-color:purple;padding:.5em\">\n        scores:${player.scores.map((score, playerIndex) => html`\n        <div style=\"border:1px solid white;--animate-duration: .1s;\"\n          oninit=${fadeInDown} ondestroy=${fadeOutUp}\n        >\n          <fieldset>\n            <legend>\n              <button id=${`score-data-${playerIndex}-${score.frame}-outside-button`}\n                onclick=${() => ++score.score}\n              >outer score button ++${score.score}</button>\n              <span id=${`score-data-${playerIndex}-${score.frame}-outside-display`}\n              >${score.score}</span>\n            </legend>\n            ${scoreData({score, playerIndex})}\n          </fieldset>\n        </div>\n      `.key(score))}</div>\n      \n      ${player.edit && html`\n        <button onclick=${() => {\n          players.splice(index,1);\n          player.edit = !player.edit\n        }}>remove</button>\n      `}\n      ${player.edit && html`\n        <button id=${'player-remove-promise-btn-' + index} onclick=${async () => {\n          player.edit = !player.edit\n          players.splice(index,1);\n        }}>remove by promise</button>\n      `}\n      <button id=${'player-edit-btn-' + index} onclick=${() => player.edit = !player.edit}>edit</button>\n      <button onclick=${() => {\n        players.splice(index,0,getNewPlayer())\n      }}>add before</button>\n    </div>\n  `.key(player))\n\n  return html`\n    <!-- playersLoop.js -->\n    ${playersContent}\n    <!-- end:playersLoop.js -->\n  `\n})","import { letState, html, tag, onInit, callbackMaker, onDestroy } from \"taggedjs\"\n\nconst test0interval = 3000\nconst test1interval = 6000\n\nexport const intervalTester0 = tag(() => {\n  let intervalCount: number = letState(0)(x => [intervalCount, intervalCount = x])\n  let intervalId: any = letState(undefined)(x => [intervalId, intervalId = x])\n  let intervalId2: any = letState(undefined)(x => [intervalId2, intervalId2 = x])\n  let renderCounter: number = letState(0)(x => [renderCounter, renderCounter = x])\n  let currentTime: number = letState(0)(x => [currentTime, currentTime = x])\n  \n  const callback = callbackMaker()\n  const increase = () => ++intervalCount\n\n  const startInterval = () => {\n    console.info('🟢 interval test 0 started...')\n    trackTime()\n\n    intervalId = setInterval(callback(() => {\n      increase()\n    }),test0interval)\n  }\n\n  const stopInterval = () => {\n    clearInterval(intervalId)\n    clearInterval(intervalId2)\n    intervalId = undefined\n    intervalId2 = undefined\n    console.info('🛑 interval test 0 stopped')\n  }\n\n  function trackTime() {\n    currentTime = 0\n    \n    intervalId2 = setInterval(callback(() => {\n      currentTime = currentTime + 500\n\n      if(currentTime >= test0interval) {\n        currentTime = 0\n      }      \n    }), 500)\n\n    console.info('▶️ interval started')\n  }\n\n  const toggle = () => {\n    if(intervalId || intervalId2) {\n      stopInterval()\n      return\n    }\n\n    startInterval()\n  }\n\n  const delayIncrease = () => setTimeout(callback(() => {\n    currentTime = currentTime + 200\n  }), 1000);\n\n  onInit(startInterval)\n  onDestroy(stopInterval)\n\n  ++renderCounter\n\n  return html`<!--intervalDebug.js-->\n    <div>interval type 1 at ${test0interval}ms</div>\n    intervalId: ${intervalId}\n    <button type=\"button\" onclick=${increase}>${intervalCount}:${renderCounter}</button>\n    <input type=\"range\" min=\"0\" max=${test0interval} step=\"1\" value=${currentTime} />\n    <div>\n      --${currentTime}--\n    </div>\n    <button type=\"button\" onclick=${toggle}\n      style.background-color=${intervalId || intervalId2 ? 'red' : 'green'}\n    >start/stop</button>\n    <button type=\"button\" onclick=${delayIncrease}>delay increase currentTime</button>\n  `\n})\n\nexport const intervalTester1 = tag(() => {  \n  let intervalCount: number = letState(0)(x => [intervalCount, intervalCount = x])\n  let intervalId: any = letState(undefined)(x => [intervalId, intervalId = x])\n  let intervalId2: any = letState(undefined)(x => [intervalId2, intervalId2 = x])\n  let renderCounter: number = letState(0)(x => [renderCounter, renderCounter = x])\n  let currentTime: number = letState(0)(x => [currentTime, currentTime = x])\n  \n  const callback = callbackMaker()\n  const increase = () => ++intervalCount\n\n  function trackTime() {\n    currentTime = 0\n    \n    intervalId2 = setInterval(callback(() => {\n      currentTime = currentTime + 500\n\n      if(currentTime >= test1interval) {\n        currentTime = 0\n      }\n    }), 500)\n  }\n\n  const destroy = () => {\n    clearInterval(intervalId)\n    clearInterval(intervalId2)\n    intervalId = undefined\n    intervalId2 = undefined\n    console.info('🔴 interval 1 stopped')\n  }\n\n  function toggleInterval() {\n    if(intervalId) {\n      return destroy()\n    }\n\n    console.info('🟢 interval test 1 started...')\n    trackTime()\n    intervalId = setInterval(callback(() => {\n      increase()\n      console.info('slow interval ran')\n    }),test1interval)\n  }\n\n  onInit(toggleInterval)\n  onDestroy(destroy)\n\n  ++renderCounter\n\n  return html`\n    <div>interval type 2 with ${test1interval}ms</div>\n    intervalId: ${intervalId}\n    <button type=\"button\" onclick=${increase}>${intervalCount}:${renderCounter}</button>\n    <input type=\"range\" min=\"0\" max=${test1interval} step=\"1\" value=${currentTime} />\n    <div>\n      --${currentTime}--\n    </div>\n    <button type=\"button\" onclick=${toggleInterval}\n      style.background-color=${intervalId ? 'red' : 'green'}\n    >start/stop</button>\n  `\n})\n","import { propsDebugMain } from \"./PropsDebug.tag\"\nimport { arrayTests } from \"./arrayTests\"\nimport { intervalTester0, intervalTester1 } from \"./intervalDebug\"\nimport { html, tag, providers, letState } from \"taggedjs\"\nimport { renderCountDiv } from \"./renderCount.component\"\nimport { fadeInDown, fadeOutUp } from \"./animations\"\n\nexport const tagDebug = tag(() => {// tagDebug.js\n  let _firstState: string = letState('tagJsDebug.js')(x => [_firstState, _firstState = x])\n  let showIntervals: boolean = letState(false)(x => [showIntervals, showIntervals = x])\n  let renderCount: number = letState(0)(x => [renderCount, renderCount = x])\n\n  ++renderCount\n\n  return html`<!-- tagDebug.js -->\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      <fieldset style=\"flex:4 4 40em\">\n        <legend>arrays</legend>\n        ${arrayTests()}\n      </fieldset>\n    \n      <fieldset id=\"debug-intervals\" style=\"flex:2 2 20em\">\n        <legend>\n          Interval Testing\n        </legend>\n\n        <button\n          onclick=${() => showIntervals = !showIntervals}\n        >hide/show</button>\n\n        ${showIntervals && html`\n          <div oninit=${fadeInDown} ondestroy=${fadeOutUp}>\n            <div>${intervalTester0()}</div>\n            <hr />\n            <div>${intervalTester1()}</div>\n          </div>\n        `}\n      </fieldset>\n\n      <fieldset id=\"props-debug\" style=\"flex:2 2 20em\">\n        <legend>Props Debug</legend>\n        ${propsDebugMain(undefined)}\n      </fieldset>\n    </div>\n  `\n})\n","import { html, tag, letState, InputElementTargetEvent, Tag } from \"taggedjs\"\nimport { renderCountDiv } from \"./renderCount.component.js\"\n\ntype SelectedTag = null | string | undefined\n\nexport const tagSwitchDebug = tag((_t='tagSwitchDebug') => {\n  let selectedTag = letState(null as SelectedTag)(x => [selectedTag, selectedTag = x])\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  \n  function changeSelectedTag(event: InputElementTargetEvent) {\n    selectedTag = event.target.value\n\n    if(selectedTag === 'undefined') {\n      selectedTag = undefined\n    }\n\n    if(selectedTag === 'null') {\n      selectedTag = null\n    }\n  }\n\n  let tagOutput: string | Tag = 'select tag below'\n  switch (selectedTag) {\n    case null: tagOutput = 'null, select tag below'\n      break;\n    case \"\": tagOutput = html`<div id=\"empty-string-1\"></div>`\n      break;\n    case '1': tagOutput = tag1({title:'value switch'})\n      break;\n    case '2': tagOutput = tag2({title:'value switch'})\n      break;\n    case '3': tagOutput = tag3({title:'value switch'})\n      break;\n  }\n\n  let tagOutput2 = html`<div id=\"select-tag-above\">select tag above</div>`\n  switch (selectedTag) {\n    case null: tagOutput2 = html`<div id=\"select-tag-above\">null, select tag above</div>`\n      break;\n    case \"\": tagOutput2 = html`<div id=\"select-tag-above\">empty-string, select tag above</div>`\n      break;\n    case '1': tagOutput2 = tag1({title:'tag switch'})\n      break;\n    case '2': tagOutput2 = tag2({title:'tag switch'})\n      break;\n    case '3': tagOutput2 = tag3({title:'tag switch'})\n      break;\n  }\n\n  ++renderCount\n\n  return html`\n    <div id=\"selectTag-wrap\">\n      selectedTag: |${\n        selectedTag === null && 'null' ||\n        selectedTag === undefined && 'undefined' ||\n        selectedTag === '' && 'empty-string' ||\n        selectedTag\n      }|\n    </div>\n    \n    <select id=\"tag-switch-dropdown\" onchange=${changeSelectedTag}>\n\t    <option></option>\n      <!-- TODO: implement selected attribute --->\n\t    <option value=\"\" ${ typeof(selectedTag) === 'string' && !selectedTag.length ? {selected: true} : {} }>empty-string</option>\n\t    <option value=\"undefined\" ${ selectedTag === undefined ? {selected: true} : {} }>undefined</option>\n\t    <option value=\"null\" ${ selectedTag === null ? {selected: true} : {} }>null</option>\n\t    <option value=\"1\" ${ selectedTag === '1' ? {selected: true} : {} }>tag 1</option>\n\t    <option value=\"2\" ${ selectedTag === '2' ? {selected: true} : {} }>tag 2</option>\n\t    <option value=\"3\" ${ selectedTag === '3' ? {selected: true} : {} }>tag 3</option>\n    </select>\n\n    <div id=\"switch-tests-wrap\" style=\"display:flex;flex-wrap:wrap;gap:1em;\">\n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 1 - string | Tag</h3>\n        <div>${tagOutput}</div>\n      </div>\n      \n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 2 - Tag</h3>\n        <div>${tagOutput2}</div>\n      </div>\n      \n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 3 - ternary (only 1 or 3 shows)</h3>\n        <div>${selectedTag === '3' ? tag3({title: 'ternary simple'}) : tag1({title: 'ternary simple'})}</div>\n      </div>\n\n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 3.2 - ternary via prop (only 1 or 3 shows)</h3>\n        <div>${ternaryPropTest({selectedTag})}</div>\n      </div>\n\n      <div id=\"arraySwitching-test-wrap\" style=\"border:1px solid red;flex-grow:1\">\n        <h3>Test 4 - arraySwitching</h3>\n        <div id=\"arraySwitching-wrap\">${arraySwitching({selectedTag})}</div>\n      </div>\n    </div>\n    ${renderCountDiv({renderCount, name:'tagSwitchDebug'})}\n  `\n})\n\nexport const ternaryPropTest = tag((\n  {selectedTag}: {selectedTag: string | undefined | null}\n) => {\n  const outTag = selectedTag === '3' ? tag3({title: 'ternaryPropTest'}) : tag1({title: 'ternaryPropTest'})\n  return html`\n    <div id=\"ternaryPropTest-wrap\">\n      ${selectedTag}:${outTag}\n    </div>\n  `\n})\n\nexport const tag1 = tag(({title}: {title: string}) => {\n  let counter = letState(0)(x => [counter, counter = x])\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  ++renderCount\n  return html`\n    <div id=\"tag1\" style=\"border:1px solid orange;\">\n      <div id=\"tagSwitch-1-hello\">Hello 1 ${title} World</div>\n      <button onclick=${() => ++counter}>increase ${counter}</button>\n      ${renderCountDiv({renderCount, name:'tag1'})}\n    </div>\n  `\n})\n\nexport const tag2 = tag(({title}: {title: string}) => {\n  let counter = letState(0)(x => [counter, counter = x])\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  ++renderCount\n  return html`\n    <div id=\"tag2\" style=\"border:1px solid orange;\">\n      <div id=\"tagSwitch-2-hello\">Hello 2 ${title} World</div>\n      <button onclick=${() => ++counter}>increase ${counter}</button>\n      ${renderCountDiv({renderCount, name:'tag1'})}\n    </div>\n  `\n})\n\nexport const tag3 = tag(({title}: {title: string}) => {\n  let counter = letState(0)(x => [counter, counter = x])\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  ++renderCount\n  return html`\n    <div  id=\"tag3\" style=\"border:1px solid orange;\">\n      <div id=\"tagSwitch-3-hello\">Hello 3 ${title} World</div>\n      <button onclick=${() => ++counter}>increase ${counter}</button>\n      ${renderCountDiv({renderCount, name:'tag1'})}\n    </div>\n  `\n})\n\nexport const arraySwitching = tag((\n  {selectedTag}: {selectedTag: SelectedTag}\n) => {\n  switch (selectedTag) {\n    case undefined:\n      return html`its an undefined value`\n\n    case null:\n      return html`its a null value`\n\n    case '':\n      return html`` // tests how .previousSibling works\n\n    case '1':\n      // return html`${['a'].map(x => html`${tag1({title: `array ${selectedTag} ${x}`})}`.key(x))}`\n      return html`${tag1({title: `tag ${selectedTag}`})}`\n\n    case '2':\n      return html`${['b','c'].map(x => html`${tag2({title: `array ${selectedTag} ${x}`})}`.key(x))}`\n\n    case '3':\n      return html`${['d','e','f'].map(x => html`${tag3({title: `array ${selectedTag} ${x}`})}`.key(x))}`\n  }\n\n  return html`nothing to show for in arrays`\n})\n","import { html, tag, letState, onInit, state, Subject, callbackMaker } from \"taggedjs\"\n\nexport const mirroring = tag(() => {\n  const tag = tagCounter()\n\n  return html`\n    <fieldset>\n      <legend>counter0</legend>\n      ${tag}\n    </fieldset>\n    <fieldset>\n      <legend>counter1</legend>\n      ${tag}\n    </fieldset>\n  `\n})\n\n\nconst tagCounter = () => {\n  let counter = letState(0)(x => [counter, counter = x])\n\n  return html`\n    counter:<span>🪞<span id=\"mirror-counter-display\">${counter}</span></span>\n    <button id=\"mirror-counter-button\" onclick=${() => ++counter}>${counter}</button>\n  `\n}","import { html, letState, tag, isSubjectInstance, isTagArray, children } from \"taggedjs\"\nimport { renderCountDiv } from \"./renderCount.component\"\n\nexport const innerHtmlTest = tag((\n  _props: unknown,\n  b:number,\n) => {\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  let counter = letState(0)(x => [counter, counter = x])\n\n  ++renderCount\n\n  return html`<!--innerHtmlTests.js-->\n    <fieldset id=\"innerHtmlTests-1\">\n      <legend>no props test</legend>\n      <div style=\"border:2px solid purple;\">${children()}</div>\n      <div>isSubjectInstance:${isSubjectInstance(children())}</div>\n      <div>isSubjectTagArray:${isTagArray(children().value)}</div>\n      <button id=\"innerHtmlTest-counter-button\"\n      onclick=${() => ++counter}>increase innerHtmlTest ${counter}</button>\n      <span id=\"innerHtmlTest-counter-display\">${counter}</span>\n      ${renderCountDiv({renderCount, name: 'innerHtmlTest'})}\n    </fieldset>\n  `\n})\n\nexport const innerHtmlPropsTest = tag((\n  x: number,\n) => {\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  let counter = letState(0)(x => [counter, counter = x])\n  \n  ++renderCount\n  \n  return html`<!--innerHtmlTests.js-->\n    <fieldset id=\"innerHtmlTests-2\">\n      <legend>innerHTML Props: ${x}</legend>\n      ${children()}\n      <button id=\"innerHtmlPropsTest-button\" onclick=${() => ++counter}\n      >increase innerHtmlPropsTest ${counter}</button>\n      <span id=\"innerHtmlPropsTest-display\">${counter}</span>\n      ${/*renderCountDiv(renderCount)*/ false}\n    </fieldset>\n  `\n})\n","import { children, Tag, html, letState, tag } from \"taggedjs\"\nimport { innerHtmlPropsTest, innerHtmlTest } from \"./innerHtmlTests.js\"\nimport { renderCountDiv } from \"./renderCount.component.js\"\n\nconst test22 = tag((a:number, b:number) => html`\n  <fieldset>\n    <legend>xxxxx</legend>  \n    <div>hello other world ${a} - ${b}</div>\n    <div style=\"border:2px solid red;\">***${children()}***</div>\n  </fieldset>\n`)\n\nexport const childTests = tag((_: string = 'childTests') => (\n  renderCount = letState(0)(x => [renderCount, renderCount = x]),\n  counter = letState(0)(x => [counter, counter = x]),\n) => html`\n  <fieldset id=\"children-test\" style=\"flex:2 2 20em\">\n    <legend>childTests</legend>\n\n    <hr />\n    <hr />\n    <hr />\n    ${test22(1,2).\n    html`\n      <div><hr />abc-123-${Date.now()}<hr /></div>\n    `}\n    <hr />\n    <hr />\n    <hr />\n    \n    ${innerHtmlTest({}, 2).\n    html`\n      <b>Field set body A</b>\n      <hr />\n      <button id=\"innerHtmlTest-childTests-button\"\n        onclick=${() => ++counter}\n      >🐮 increase childTests inside ${counter}:${renderCount}</button>\n      <span id=\"innerHtmlTest-childTests-display\">${counter}</span>\n      ${renderCountDiv({renderCount, name: 'childTests-innerHtmlTest'})}\n    `}\n\n    ${innerHtmlPropsTest(22).\n    html`\n      <b>Field set body B</b>\n      <hr />\n      <button id=\"innerHtmlPropsTest-childTests-button\"\n        onclick=${() => ++counter}\n      >🐮 increase childTests inside ${counter}</button>\n      <span id=\"innerHtmlPropsTest-childTests-display\">${counter}</span>\n      ${renderCountDiv({renderCount, name: 'innerHtmlPropsTest child'})}\n    `}\n\n    ${childAsPropTest({child: html`\n      hello child as prop test\n      <button id=\"child-as-prop-test-button\"\n        onclick=${() => ++counter}\n      >🐮 child as prop ${counter}</button>\n      <span id=\"child-as-prop-test-display\">${counter}</span>\n    `})}\n    \n    <hr />\n    \n    <button id=\"childTests-button\"\n      onclick=${() => ++counter}\n    >🐮 increase childTests outside ${counter} - ${renderCount}</button>\n    <span id=\"childTests-display\">${counter}</span>\n    ${renderCountDiv({renderCount, name:'childTests'})}\n  </fieldset>\n`)\n\nfunction childAsPropTest({child}: {child:Tag}) {\n  return html`\n    <fieldset>\n      <legend>child as prop</legend>\n      ${child}\n    </fieldset>\n  `\n}\n","\nexport function elmCount(selector: string) {\n  return document.querySelectorAll(selector).length\n}\n\nexport function queryOneInnerHTML(\n  query: string,\n  pos = 0\n) {\n  return document.querySelectorAll(query)[pos].innerHTML\n}\n\nexport function click(\n  query: string\n) {\n  return document.querySelectorAll(query).forEach(elm => (elm as HTMLElement).click())\n}\n\nexport function html(\n  query: string\n) {\n  let html = ''\n  document.querySelectorAll(query).forEach(elm => html = html + elm.innerHTML)\n  return html\n}\n\nexport function byId(id: string): HTMLElement {\n  return document.getElementById(id) as HTMLElement\n}\n\nexport function htmlById(id: string): string {\n  return (document.getElementById(id) as HTMLElement).innerHTML\n}\n\nexport function lastById(id: string): Element {\n  const elms = document.querySelectorAll('#' + id)\n  return elms[elms.length - 1]\n}\n","type Test = () => unknown\nconst onlyTests: Test[] = []\nlet tests: Test[] = []\nlet tab = 0\n\nexport function describe(label: string, run: () => any) {\n  tests.push(async () => {\n    const oldTests = tests\n    tests = []\n    \n    try {\n      console.debug('  '.repeat(tab) + '↘ ' + label)\n      \n      ++tab\n      await run()\n      await runTests(tests)\n      \n      --tab\n    } catch (error) {\n      --tab\n      // console.debug(' '.repeat(tab) + '❌ ' + label)\n      throw error\n    } finally {\n      tests = oldTests\n    }\n  })\n}\n\ndescribe.only = (label: string, run: () => any) => {\n  onlyTests.push(async () => {\n    const oldTests = tests\n    tests = []\n    \n    try {\n      console.debug('  '.repeat(tab) + '↘ ' + label)\n      \n      ++tab\n      \n      await run()\n      await runTests(tests)\n      \n      --tab\n    } catch (error) {\n      --tab\n      // console.debug(' '.repeat(tab) + '❌ ' + label)\n      throw error\n    } finally {\n      tests = oldTests\n    }\n  })\n}\n\nexport function it(label: string, run: () => any) {\n  tests.push(async () => {\n    try {\n      const start = Date.now()\n      await run()\n      const time = Date.now() - start\n      console.debug(' '.repeat(tab) + `✅ ${label} - ${time}ms`)\n    } catch (error) {\n      console.debug(' '.repeat(tab) + '❌ ' + label)\n      throw error\n    }\n  })\n}\n\nit.only = (label: string, run: () => any) => {\n  onlyTests.push(async () => {\n    try {\n      const start = Date.now()\n      await run()\n      const time = Date.now() - start\n      console.debug(`✅ ${label} - ${time}ms`)\n    } catch (error) {\n      console.debug('❌ ' + label)\n      throw error\n    }\n  })\n}\n\nit.skip = (label: string, run: () => any) => {\n  console.debug('⏭️ Skipped ' + label)\n}\n\nfunction clearTests() {\n  onlyTests.length = 0\n  tests.length = 0\n}\n\nexport async function execute() {\n  if(onlyTests.length) {\n    return runTests(onlyTests)\n  }\n  \n  return runTests(tests)\n}\n\nasync function runTests(tests: Test[]) {\n  for (const test of tests) {\n    try {\n      await test()\n    } catch (err) {\n      console.error(`Error testing ${test.name}`)\n      clearTests()\n      throw err\n    }\n  }\n  clearTests()\n}\n\nexport function expect(expected: unknown) {\n  return {\n    toBeDefined: () => {\n      if(expected !== undefined && expected !== null) {\n        return\n      }\n\n      const message = `Expected ${JSON.stringify(expected)} to be defined`\n      console.error(message, {expected})\n      throw new Error(message)\n    },\n    toBe: (received: unknown, customMessage?: string | Function) => {\n      if(expected === received) {\n        return\n      }\n\n      if(customMessage instanceof Function) {\n        customMessage = customMessage()\n      }\n\n      const message = customMessage || `Expected ${typeof(expected)} ${JSON.stringify(expected)} to be ${typeof(received)} ${JSON.stringify(received)}`\n      console.error(message, {received, expected})\n      throw new Error(message as string)\n    },\n    toBeGreaterThan: (amount: number, customMessage?: string) => {\n      const expectNum = expected as number\n      if(!isNaN(expectNum) && expectNum > amount) {\n        return\n      }\n\n      const message = customMessage || `Expected ${typeof(expected)} ${JSON.stringify(expected)} to be greater than amount`\n      console.error(message, {amount, expected})\n      throw new Error(message)\n    },\n    toBeLessThan: (amount: number, customMessage?: string) => {\n      const expectNum = expected as number\n      if(!isNaN(expectNum) && expectNum < amount) {\n        return\n      }\n\n      const message = customMessage || `Expected ${typeof(expected)} ${JSON.stringify(expected)} to be less than amount`\n      console.error(message, {amount, expected})\n      throw new Error(message)\n    }\n  }\n}\n","import { expect } from \"./expect\"\n\n/* all elements in each query must have the same html */\nexport function expectMatchedHtml(\n  ...queries: string[]\n) {\n  const elements = queries.reduce((all, query) => {\n      const elements = document.querySelectorAll(query)\n      all.push(...elements)\n      return all\n    }, [] as Element[]\n  )\n\n  expect(elements.length).toBeGreaterThan(0, 'Expected elements to be present in expectMatchedHtml() query but found none')\n\n  const lastElm = elements.pop() as Element\n  const lastHtml = lastElm.innerHTML\n  elements.every(elm =>\n    expect(lastHtml).toBe(elm.innerHTML, () => `expectMatchedHtml unmatched html - queries: ${queries.join(' - ')}`)\n  )\n}\n\nexport function expectHTML(\n  query: string,\n  innerHTML: string\n) {\n  const elements = document.querySelectorAll(query)\n  elements.forEach(element =>\n    expect(element.innerHTML).toBe(innerHTML, () => `Expected element ${query} innerHTML to be -->${innerHTML}<-- but it was -->${element.innerHTML}<--`)\n  )\n}\n\nexport function expectElmCount(\n  query: string,\n  count: number,\n  message?: string\n) {\n  const elements = document.querySelectorAll(query)\n  const found = elements.length\n\n  message = message || `Expected ${count} elements to match query ${query} but found ${found}`\n\n  expect(found).toBe(count, message)\n\n  return elements\n}\n\nexport function testDuelCounterElements(\n  ... sets: [string, string][]\n  // [button0, display0]: [string, string], // button, display\n  // [button1, display1]: [string, string], // button, display\n) {\n  const [button0, display0] = sets.shift() as [string, string]\n  let query = expectElmCount(display0, 1)\n  let buttonQuery = expectElmCount(button0, 1)\n  const display0Element = query[0] as HTMLElement\n  const ip0 = display0Element.innerText\n  testCounterSelectedElements(\n    buttonQuery as any as HTMLElement[],\n    query as any as HTMLElement[],\n    {elementCountExpected: 1},\n    button0,\n    display0,\n  )\n  \n  let increase = 2\n  sets.forEach(([button1, display1]) => {    \n    query = expectElmCount(display1, 1)\n    buttonQuery = expectElmCount(button1, 1)\n    let display1Element = query[0] as HTMLElement\n    let ip1Check = display1Element.innerText\n    const value = (Number(ip0) + increase).toString()\n    expect(ip1Check).toBe(value, () => `Expected second increase provider to be increased to ${ip0} but got ${ip1Check}`)\n   \n    testCounterSelectedElements(\n      buttonQuery as any as HTMLElement[],\n      query as any as HTMLElement[],\n      {elementCountExpected: 1},\n      button0,\n      display0,\n    )\n  \n    display1Element = query[0] as HTMLElement\n    ip1Check = display1Element.innerText\n    const secondIncrease = increase + 2\n    expect(ip1Check).toBe((Number(ip0) + secondIncrease).toString(), () => `Expected ${display1} innerText to be ${Number(ip0) + secondIncrease} but instead it is ${ip1Check}`)\n\n    increase = increase + 2\n  })\n}\n\nfunction testCounterSelectedElements(\n  counterButtons: HTMLElement[],\n  counterDisplays: HTMLElement[],\n  {elementCountExpected} = {\n    elementCountExpected: 1\n  },\n  counterButtonSelect: string,\n  counterDisplaySelect: string,\n) {\n  expect(counterButtons.length).toBe(elementCountExpected, () => `Expected ${counterButtonSelect} to be ${elementCountExpected} elements but is instead ${counterButtons.length}`)\n  expect(counterDisplays.length).toBe(elementCountExpected, ()=> `Expected ${counterDisplaySelect} to be ${elementCountExpected} elements but is instead ${counterDisplays.length}`)\n\n  counterButtons.forEach((increaseCounter, index: number) => {\n    const counterDisplay = document.querySelectorAll(counterDisplaySelect)[index] as HTMLElement // counterDisplays[index]\n\n    expect(document.body.contains(counterDisplay)).toBe(true, `The selected element ${counterDisplaySelect} is no longer an element on the document body before clicking ${counterButtonSelect}`)\n\n    let counterValue = Number(counterDisplay?.innerText)\n    increaseCounter.click()\n\n    expect(counterDisplay).toBeDefined()\n    expect(document.body.contains(counterDisplay)).toBe(true, `The selected element ${counterDisplaySelect} is no longer an element on the document body after clicking ${counterButtonSelect}`)\n\n    let oldCounterValue = counterValue + 1\n    counterValue = Number(counterDisplay.innerText)\n    expect(document.body.contains(counterDisplay)).toBe(true)\n    expect(oldCounterValue).toBe(counterValue, () => `Counter test 1 of 2 expected ${counterDisplaySelect} to be value ${oldCounterValue} but it is ${counterValue}`)\n    increaseCounter.click()\n\n    counterValue = Number(counterDisplay?.innerText)\n    ++oldCounterValue\n    expect(oldCounterValue).toBe(counterValue, () => `Counter test 2 of 2 expected ${counterDisplaySelect} to increase value to ${oldCounterValue} but it is ${counterValue}`)\n  })\n\n}\n\n/** increases counter by two */\nexport function testCounterElements(\n  counterButtonSelect: string,\n  counterDisplaySelect: string,\n  {elementCountExpected} = {\n    elementCountExpected: 1\n  }\n) {\n  const increaseCounters = document.querySelectorAll(counterButtonSelect) as unknown as HTMLElement[]\n  const counterDisplays = document.querySelectorAll(counterDisplaySelect) as unknown as HTMLElement[]\n\n  return testCounterSelectedElements(\n    increaseCounters,\n    counterDisplays,\n    {elementCountExpected},\n    counterButtonSelect,\n    counterDisplaySelect,\n  )\n}\n","import { byId, click, elmCount, html, htmlById, queryOneInnerHTML } from \"./elmSelectors\"\nimport { describe, execute, expect, it } from \"./expect\"\nimport { expectElmCount, expectHTML, expectMatchedHtml, testCounterElements, testDuelCounterElements } from \"./expect.html\"\n\nexport async function runTests() {\n  const slowCount = html('#🍄-slowChangeCount')\n  // tests can be run multiple times. Only the first time will this expect below work\n  const firstRun = slowCount === '0'\n\n  it('no template tags', () => {\n    const templateTags = document.getElementsByTagName('template')\n    expect(templateTags.length).toBe(0, 'Expected no templates to be on document')\n  })\n  \n  it('elements exists', () => {\n    expect(byId('h1-app')).toBeDefined()\n    const counterInput = byId('set-main-counter-input') as HTMLInputElement\n    expect(counterInput).toBeDefined()\n    const toggleTest = byId('toggle-test')\n    expect(toggleTest).toBeDefined()\n    expect(toggleTest.innerText).toBe('toggle test')\n    \n    counterInput.value = '0'\n    ;(counterInput as any).onkeyup({target: counterInput})\n  })\n\n  describe('content', () => {    \n    it('basic', () => {\n      expectMatchedHtml('#content-subject-pipe-display0', '#content-subject-pipe-display1')\n      expectMatchedHtml('#content-combineLatest-pipe-display0', '#content-combineLatest-pipe-display1')\n    })\n\n    it('html', () => {\n      expectMatchedHtml('#content-combineLatest-pipeHtml-display0', '#content-combineLatest-pipeHtml-display1')\n    })\n  })\n\n  it('toggle test', () => {\n    const toggleTest = byId('toggle-test')\n    toggleTest.click()\n    expect(toggleTest.innerText).toBe('toggle test true')\n    toggleTest.click()\n    expect(toggleTest.innerText).toBe('toggle test')\n    \n    const propsTextarea = byId('props-debug-textarea') as HTMLTextAreaElement\n    expect(propsTextarea.value.replace(/\\s/g,'')).toBe(`{\"test\":33,\"x\":\"y\"}`)\n  })\n\n  describe('counters', () => {    \n    it('basics', () => {\n      const beforeRenderCount = Number(html('#counters_render_count'))\n      const beforeInnerRenderCount = Number(html('#inner_counters_render_count'))\n\n      expectElmCount('#conditional-counter', 0)\n\n      testCounterElements('#❤️-increase-counter', '#❤️-counter-display')\n\n      expect(html('#counters_render_count')).toBe( (beforeRenderCount + 2).toString() )\n      // the parent changed a value passed to child as a prop\n      expect(html('#inner_counters_render_count')).toBe( (beforeInnerRenderCount + 2).toString() )\n\n      testCounterElements('#❤️-inner-counter', '#❤️-inner-display')\n\n      expect(html('#counters_render_count')).toBe( (beforeRenderCount + 4).toString() )\n      // the child changed a value passed from parent as a prop\n      expect(html('#inner_counters_render_count')).toBe( (beforeInnerRenderCount + 4).toString() )\n\n      testCounterElements('#standalone-counter', '#standalone-display')\n\n      expect(html('#counters_render_count')).toBe( (beforeRenderCount + (firstRun ? 6 : 8)).toString() )\n      // the child was not rendered again because props did not change so value should be less\n      expect(html('#inner_counters_render_count')).toBe( (beforeInnerRenderCount + 4).toString() )\n\n      expectElmCount('#conditional-counter', 1)\n      expectElmCount('#conditional-display', 1)\n      if(firstRun) {\n        expect(html('#conditional-display')).toBe('2')\n      }\n      testCounterElements('#conditional-counter', '#conditional-display')\n      \n      // test again after higher elements have had reruns\n      testCounterElements('#❤️-inner-counter', '#❤️-inner-display')\n\n      if(firstRun) {\n        expect(html('#🪈-pipedSubject')).toBe('')\n        expect(html('#🪈-pipedSubject-2')).toBe('')\n      }\n      \n      click('#🥦-subject-increase-counter')\n\n      expect(html('#🪈-pipedSubject')).toBe( html('#🥦-subject-counter-display') )\n      expect(html('#🪈-pipedSubject-2')).toBe( html('#🥦-subject-counter-display') )\n    })\n  })\n\n  describe('props', () => {    \n    it('test duels', () => {\n      testDuelCounterElements(\n        ['#propsDebug-🥩-0-button', '#propsDebug-🥩-0-display'],\n        ['#propsDebug-🥩-1-button', '#propsDebug-🥩-1-display'],\n      )\n  \n      testDuelCounterElements(\n        ['#propsDebug-🥩-1-button', '#propsDebug-🥩-1-display'],\n        ['#propsOneLevelFunUpdate-🥩-button', '#propsOneLevelFunUpdate-🥩-display'],\n      )\n    })\n\n    it('letProp', () => {\n      // local and outside currently match\n      expectMatchedHtml('#propsDebug-🥩-0-display', '#propsDebug-🥩-2-display')\n      const propCounter = Number(html('#propsDebug-🥩-0-display'))\n      \n      click('#propsDebug-🥩-2-button')\n\n      // outer should not have changed\n      expect(html('#propsDebug-🥩-0-display')).toBe( propCounter.toString() )\n      expect(html('#propsDebug-🥩-2-display')).toBe( (propCounter + 1).toString() )      \n    })\n\n    it('basics', () => {\n      // the number of times the watch counted a change happens to match that increase counter\n      const funUpdateValue = byId('propsOneLevelFunUpdate-🥩-display').innerHTML\n      const changed = queryOneInnerHTML('#propsDebug-🥩-change-display')\n      \n      // test that watch runs onInit\n      expect(changed).toBe( (Number(funUpdateValue) + 1).toString() )\n  \n      const ownerHTML = byId('propsDebug-🥩-0-display').innerHTML\n      const parentHTML = byId('propsDebug-🥩-1-display').innerHTML\n      const childHTML = byId('propsOneLevelFunUpdate-🥩-display').innerHTML\n  \n      const ownerNum = Number(ownerHTML)\n      const parentNum = Number(parentHTML)\n      const childNum = Number(childHTML)\n  \n      expect(parentNum).toBe(childNum)\n      expect(ownerNum + 2).toBe(parentNum) // testing of setProp() doesn't change owner\n\n      byId('propsDebug-🥩-1-button').click()\n    })\n\n    it('props as functions', () => {\n      const syncCounter = Number( htmlById('sync-prop-number-display') )\n      // const syncCounter = Number( htmlById('sync-prop-child-display') )\n      expectMatchedHtml('#sync-prop-number-display', '#sync-prop-child-display')\n\n      byId('sync-prop-child-button').click()\n\n      expectHTML('#sync-prop-number-display', (syncCounter + 2).toString())\n      testCounterElements('#nothing-prop-counter-button', '#nothing-prop-counter-display')\n      expectHTML('#sync-prop-number-display', (syncCounter + 2).toString())\n      expectMatchedHtml('#sync-prop-counter-display', '#nothing-prop-counter-display')\n      \n    })\n  })\n\n  describe('providers', () => {\n    it('basics', () => {\n      testDuelCounterElements(\n        ['#increase-provider-🍌-0-button', '#increase-provider-🍌-0-display'],\n        ['#increase-provider-🍌-1-button', '#increase-provider-🍌-1-display'],\n      )\n  \n      testDuelCounterElements(\n        ['#increase-provider-upper-🌹-0-button', '#increase-provider-upper-🌹-0-display'],\n        ['#increase-provider-upper-🌹-1-button', '#increase-provider-upper-🌹-1-display'],\n      )\n  \n      testDuelCounterElements(\n        ['#increase-provider-🍀-0-button', '#increase-provider-🍀-0-display'],\n        ['#increase-provider-🍀-1-button', '#increase-provider-🍀-1-display'],\n      )\n    })\n  \n    it('inner outer debug', () => {\n      testDuelCounterElements(\n        ['#increase-prop-🐷-0-button', '#increase-prop-🐷-0-display'],\n        ['#increase-prop-🐷-1-button', '#increase-prop-🐷-1-display'],\n      )\n  \n      // change a counter in the parent element\n      testDuelCounterElements(\n        ['#increase-provider-🍀-0-button', '#increase-provider-🍀-0-display'],\n        ['#increase-provider-🍀-1-button', '#increase-provider-🍀-1-display'],\n      )\n  \n      // now ensure that this inner tag still operates correctly even though parent just rendered but i did not from that change\n      testDuelCounterElements(\n        ['#increase-prop-🐷-0-button', '#increase-prop-🐷-0-display'],\n        ['#increase-prop-🐷-1-button', '#increase-prop-🐷-1-display'],\n      )\n    })\n  })  \n\n  describe('tagSwitching', () => {\n    it('0', () => {\n      expect(elmCount('#select-tag-above')).toBe(1, 'Expected select-tag-above element to be defined')\n      expect(elmCount('#tag-switch-dropdown')).toBe(1, 'Expected one #tag-switch-dropdown')\n      expect(elmCount('#tagSwitch-1-hello')).toBe(2, 'Expected two #tagSwitch-1-hello elements')\n      expect(elmCount('#tagSwitch-2-hello')).toBe(0)\n      expect(elmCount('#tagSwitch-3-hello')).toBe(0)\n    })\n  \n    it('1', () => {\n      const dropdown = byId('tag-switch-dropdown') as HTMLSelectElement\n      dropdown.value = \"1\"\n  \n      ;(dropdown as any).onchange({target:dropdown})\n      expectElmCount('#tagSwitch-1-hello', 5)\n      expect(elmCount('#tagSwitch-2-hello')).toBe(0)\n      expect(elmCount('#tagSwitch-3-hello')).toBe(0)\n      expect(elmCount('#select-tag-above')).toBe(0)\n    })\n  \n    it('2', () => {\n      const dropdown = byId('tag-switch-dropdown') as HTMLSelectElement\n  \n      dropdown.value = \"2\"\n      ;(dropdown as any).onchange({target:dropdown})\n  \n      expectElmCount('#tagSwitch-1-hello', 2)\n      expectElmCount('#tagSwitch-2-hello', 4)\n      expect(elmCount('#tagSwitch-3-hello')).toBe(0)\n      expect(elmCount('#select-tag-above')).toBe(0)\n    })\n  \n    it('3', () => {\n      const dropdown = byId('tag-switch-dropdown') as HTMLSelectElement\n      dropdown.value = \"3\"\n      ;(dropdown as any).onchange({target:dropdown})\n  \n      expect(elmCount('#tagSwitch-1-hello')).toBe(0,'Expected no hello 1s')\n      expect(elmCount('#tagSwitch-2-hello')).toBe(0)\n      expectElmCount('#tagSwitch-3-hello', 7)\n      expect(elmCount('#select-tag-above')).toBe(0)\n    })\n  \n    it('4', () => {  \n      const dropdown = byId('tag-switch-dropdown') as HTMLSelectElement\n      dropdown.value = \"\"\n      ;(dropdown as any).onchange({target:dropdown})\n  \n      expectElmCount('#select-tag-above',1)\n      expectElmCount('#tag-switch-dropdown',1)\n      expectElmCount('#tagSwitch-1-hello',2)\n      expectElmCount('#tagSwitch-2-hello',0)\n      expectElmCount('#tagSwitch-3-hello',0)\n    })\n  })\n\n  it('child tests', () => {\n    testCounterElements('#innerHtmlPropsTest-button', '#innerHtmlPropsTest-display')\n    testCounterElements('#innerHtmlTest-counter-button', '#innerHtmlTest-counter-display')\n    testDuelCounterElements(\n      ['#childTests-button', '#childTests-display'],\n      ['#child-as-prop-test-button', '#child-as-prop-test-display'],\n      ['#innerHtmlPropsTest-childTests-button', '#innerHtmlPropsTest-childTests-display'],\n    )\n\n    testDuelCounterElements(\n      ['#childTests-button', '#childTests-display'],\n      ['#innerHtmlTest-childTests-button', '#innerHtmlTest-childTests-display'],\n    )\n  })\n\n  describe('array testing', () => {\n    it('array basics', () => {\n      expect(elmCount('#array-test-push-item')).toBe(1)\n      const insideCount = elmCount('#score-data-0-1-inside-button')\n      expect(insideCount).toBe(0)\n      expect(elmCount('#score-data-0-1-outside-button')).toBe(0)\n      byId('array-test-push-item').click()\n      expect(elmCount('#score-data-0-1-inside-button')).toBe(1)\n      expect(elmCount('#score-data-0-1-outside-button')).toBe(1)\n      \n      const insideElm = byId('score-data-0-1-inside-button')\n      const insideDisplay = byId('score-data-0-1-inside-display')\n      let indexValue = insideDisplay.innerText\n      const outsideElm = byId('score-data-0-1-outside-button')\n      const outsideDisplay = byId('score-data-0-1-outside-display')\n      const outsideValue = outsideDisplay.innerText\n      expect(indexValue).toBe(outsideValue)\n  \n      insideElm.click()\n      expect(insideDisplay.innerText).toBe(outsideDisplay.innerText)\n      expect(indexValue).toBe((Number(insideDisplay.innerText) - 1).toString())\n      expect(indexValue).toBe((Number(outsideDisplay.innerText) - 1).toString())\n  \n      outsideElm.click()\n      expect(insideDisplay.innerText).toBe(outsideDisplay.innerText)\n      expect(indexValue).toBe((Number(insideDisplay.innerText) - 2).toString())\n      expect(indexValue).toBe((Number(outsideDisplay.innerText) - 2).toString())\n    })\n\n    it('🗑️ deletes', async () => {\n      expect(elmCount('#player-remove-promise-btn-0')).toBe(0)\n      expect(elmCount('#player-edit-btn-0')).toBe(1)\n\n      await (byId('player-edit-btn-0') as any).onclick()\n\n      expect(elmCount('#player-remove-promise-btn-0')).toBe(1)\n\n      await (byId('player-remove-promise-btn-0') as any).onclick()\n      await delay(1000) // animation\n\n      expect(elmCount('#player-remove-promise-btn-0')).toBe(0)\n      expect(elmCount('#player-edit-btn-0')).toBe(0)\n    })\n  })\n\n  it('🪞 mirror testing', () => {\n    expectElmCount('#mirror-counter-display', 2)\n    expectElmCount('#mirror-counter-button', 2)\n    \n    const counter = Number(htmlById('mirror-counter-display'))\n\n    byId('mirror-counter-button').click()\n\n    expect(counter + 1).toBe( Number(htmlById('mirror-counter-display')) )\n    expectElmCount('#mirror-counter-display', 2)\n    expectMatchedHtml('#mirror-counter-display')\n  })  \n\n  it('⌚️ watch tests', () => {\n    const startCount = Number(htmlById('watch-testing-num-display'))\n\n    expectMatchedHtml('#watch-testing-num-display', '#🍄-slowChangeCount')\n    \n    // always starts at \"false\"\n    expect(html('#🦷-truthChange')).toBe('false')\n        \n    if(firstRun) {\n      expect(html('#🍄-watchPropNumSlow')).toBe('')\n      expect(html('#🦷-watchTruth')).toBe('false')\n      expect(html('#🦷-watchTruthAsSub')).toBe('undefined')\n    } else {\n      expect(html('#🍄-watchPropNumSlow')).toBe( slowCount )\n      expect( Number(html('#🦷-watchTruth')) ).toBeGreaterThan( Number(slowCount) )\n      expect(html('#🦷-watchTruthAsSub')).toBe( html('#🦷-truthSubChangeCount') )\n    }\n\n    click('#watch-testing-num-button')\n    \n    expectMatchedHtml('#watch-testing-num-display', '#🍄-slowChangeCount')\n    expectMatchedHtml('#🍄-watchPropNumSlow', '#🍄-slowChangeCount')\n    \n    expect(html('#🍄‍🟫-subjectChangeCount')).toBe( (startCount + 2).toString() )\n    expectMatchedHtml('#🍄‍🟫-subjectChangeCount', '#🍄‍🟫-watchPropNumSubject')\n    \n    const truthStartCount = Number(html('#🦷-truthChangeCount'))\n\n    click('#🦷-truthChange-button')\n\n    let newCount = (truthStartCount + 1).toString()\n    // its been changed to \"true\", that causes a change watch count increase\n    expect(html('#🦷-truthChange')).toBe('true')\n    expect(html('#🦷-watchTruth')).toBe( newCount )\n    expect(html('#🦷-truthChangeCount')).toBe( newCount )\n\n    click('#🦷-truthChange-button')\n\n    newCount = (truthStartCount + 1).toString()\n    // its been changed to back to \"false\", that does NOT cause a change watch count increase\n    expect(html('#🦷-truthChange')).toBe('false')\n    expect(html('#🦷-watchTruth')).toBe(newCount)\n    expect(html('#🦷-truthChangeCount')).toBe( newCount )\n\n    click('#🦷-truthChange-button')\n\n    // its been changed to \"true\", that causes a change watch count increase\n    newCount = (truthStartCount + 2).toString()\n    expect(html('#🦷-truthChange')).toBe('true')\n    expect(html('#🦷-watchTruth')).toBe(newCount)\n    expect(html('#🦷-truthChangeCount')).toBe( newCount )\n\n    click('#🦷-truthChange-button') // reset so tests can pass every time\n    click('#🦷-reset-button') // reset so tests can pass every time\n\n    expect(html('#🦷-watchTruthAsSub')).toBe(html('#🦷-watchTruth'))\n  })\n\n  it('oneRender', () => {\n    expect(html('#oneRender_tag_ts_render_count')).toBe('1')\n\n    testCounterElements('#👍-counter-button', '#👍-counter-display')\n    testCounterElements('#👍👍-counter-button', '#👍👍-counter-display')\n    testCounterElements('#👍👍-counter-button', '#👍👍-counter-subject-display')\n\n    expect(html('#oneRender_tag_ts_render_count')).toBe('1')\n  })\n\n  it('function in props', () => {\n    testCounterElements('#fun_in_prop1', '#fun_in_prop_display')\n    testCounterElements('#fun_in_prop2', '#fun_in_prop_display')\n    testCounterElements('#fun_in_prop3', '#fun_in_prop_display')\n    \n    expect(html('#main_wrap_state')).toBe('taggjedjs-wrapped')\n\n    click('#toggle-fun-in-child')\n    click('#fun-parent-button')\n    expect(html('#main_wrap_state')).toBe('nowrap')\n    click('#toggle-fun-in-child')\n    click('#fun-parent-button')\n    expect(html('#main_wrap_state')).toBe('taggjedjs-wrapped')\n  })\n\n  it('has no templates', () => {\n    expect(document.getElementsByTagName('template').length).toBe(0)\n  })\n\n  try {\n    const start = Date.now() //performance.now()\n    await execute()\n    const time = Date.now() - start // performance.now() - start\n    console.info(`✅ all tests passed in ${time}ms`)\n    return true\n  } catch (error: unknown) {\n    console.error('❌ tests failed: ' + (error as Error).message, error)\n    return false\n  }\n}\n\nfunction delay(time: number) {\n  return new Promise((res) => setTimeout(res, time))\n}\n","import {html, letState, tag} from 'taggedjs'\n\nexport const mouseOverTag = tag(({\n  label, memory,\n}: {\n  label: string\n  memory:{\n    counter: number\n  }\n}) => {\n  let mouseOverEditShow = letState(false)(x => [mouseOverEditShow, mouseOverEditShow = x])\n  let edit = letState(false)(x => [edit, edit = x])\n  return html`\n    <div style=\"background-color:purple;padding:.2em;flex:1\"\n      onmouseover=${() => mouseOverEditShow = true}\n      onmouseout=${() => mouseOverEditShow = false}\n    >\n      mouseover - ${label}:${memory.counter}:${mouseOverEditShow || 'false'}\n      <button onclick=${() => ++memory.counter}>++counter</button>\n      <a style.visibility=${(edit || mouseOverEditShow) ? 'visible' : 'hidden'}\n        onclick=${() => edit = !edit}\n      >⚙️&nbsp;</a>\n    </div>\n  `\n})\n","import { mouseOverTag } from \"./mouseover.tag.js\"\nimport { renderCountDiv } from \"./renderCount.component.js\"\nimport { html, tag, Subject, onInit, letState, callbackMaker, state, ValueSubject, callback, subject } from \"taggedjs\"\n\nconst loadStartTime = Date.now()\n\nexport const counters = tag(({\n  appCounterSubject\n}: {\n  appCounterSubject: Subject<number>\n}) => (\n  readStartTime = state(() => Date.now()),\n) => {\n  let counter = letState(0)(x => [counter, counter = x])\n  let propCounter = letState(0)(x => [propCounter, propCounter = x])\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  let initCounter = letState(0)(x => [initCounter, initCounter = x])\n  let memory = state(() => ({counter: 0}))\n  \n  const callbacks = callbackMaker()\n  const callbackTestSub = state(() => new Subject(counter))\n\n  const pipedSubject0 = state(() => new ValueSubject('222'))\n  const pipedSubject1 = Subject.all([pipedSubject0, callbackTestSub]).pipe(callback(x => counter))\n  const pipedSubject2 = subject.all([pipedSubject0, callbackTestSub]).pipe(x => counter)\n\n  onInit(() => {\n    ++initCounter\n    console.info('countersDebug.ts: 👉 i should only ever run once')\n\n    callbackTestSub.subscribe(\n      callbacks(y => counter = y)\n    )\n  })\n\n  // State as a callback only needed so pipedSubject1 has the latest value\n  const increaseCounter = () => {\n    ++counter\n    pipedSubject0.next('333-' + counter)\n  }\n\n  const increasePropCounter = () => ++propCounter\n\n  ++renderCount // for debugging\n\n  const sharedMemory = true\n  const testInnerCounters = true\n  const displayRenderCounters = true\n  const testBasics = true\n\n  return html`<!--counters-->\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      ${testBasics && html`\n        <div>👉 Subscriptions:${(Subject as any).globalSubCount$}</div>\n        <button onclick=${() => console.info('subs', (Subject as any).globalSubs)}>log subs</button>\n        <div>initCounter:${initCounter}</div>\n    \n        <div>\n          <button id=\"app-counter-subject-button\"\n            onclick=${() => appCounterSubject.next((appCounterSubject.value || 0) + 1)}\n          >🍒 ++app subject</button>\n          <span>\n            🍒 <span id=\"app-counter-subject-display\">${appCounterSubject.value}</span>\n          </span>\n        </div>\n\n        <div>\n          <button id=\"standalone-counter\"\n            onclick=${increaseCounter}\n          >stand alone counters:${counter}</button>\n          <span>\n            🥦 <span id=\"standalone-display\">${counter}</span>\n          </span>\n        </div>\n    \n        ${counter > 1 && html`\n          <div>\n            <button id=\"conditional-counter\"\n              onclick=${increaseCounter}\n            >conditional counter:${counter}</button>\n            <span>\n              🥦 <span id=\"conditional-display\">${counter}</span>\n            </span>\n          </div>\n        `}\n\n        <input id=\"set-main-counter-input\"\n          onkeyup=${e => (counter = Number(e.target.value) || 0)}\n        />\n\n        <div>\n          <button id=\"❤️-increase-counter\"\n            onclick=${increasePropCounter}\n          >❤️ propCounter:${propCounter}</button>\n          <span>\n            ❤️ <span id=\"❤️-counter-display\">${propCounter}</span>\n            </span>\n        </div>\n\n        <div>\n          <button id=\"🥦-subject-increase-counter\"\n            onclick=${() => callbackTestSub.next(counter + 1)}\n          >subject increase:</button>\n          <span>\n            🥦 <span id=\"🥦-subject-counter-display\">${counter}</span>\n            🥦 <span id=\"subject-counter-subject-display\">${callbackTestSub}</span>\n          </span>\n        </div>\n      `}\n    </div>\n\n    <fieldset>\n      <legend>🪈 pipedSubject 1</legend>\n      <div>\n        <small>\n          <span id=\"🪈-pipedSubject\">${pipedSubject1}</span>\n        </small>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <legend>🪈 pipedSubject 2</legend>\n      <div>\n        <small>\n          <span id=\"🪈-pipedSubject-2\">${pipedSubject2}</span>\n        </small>\n      </div>\n    </fieldset>\n\n    ${sharedMemory && html`\n      <fieldset>\n        <legend>shared memory</legend>\n        <div class.bold.text-blue=${true} style=\"display:flex;flex-wrap:wrap;gap:.5em\">\n          ${mouseOverTag({label: 'a-a-😻', memory})}\n          ${mouseOverTag({label: 'b-b-😻', memory})}\n        </div>\n        memory.counter:😻${memory.counter}\n        <button onclick=${() => ++memory.counter}>increase 😻</button>\n      </fieldset>\n    `}\n    \n    ${testInnerCounters && html`\n      <fieldset>\n        <legend>inner counter</legend>\n        ${innerCounters({propCounter, increasePropCounter})}\n      </fieldset>\n    `}\n    ${displayRenderCounters && renderCountDiv({renderCount, name: 'counters'})}\n    <div style=\"font-size:0.8em;opacity:0.8\">\n      ⌚️ page load to display in&nbsp;<span oninit=${event => event.target.innerText = (Date.now()-loadStartTime).toString()}>-</span>ms\n    </div>\n    <div style=\"font-size:0.8em;opacity:0.8\">\n      ⌚️ read in&nbsp;<span oninit=${event => event.target.innerText = (Date.now()-readStartTime).toString()}>-</span>ms\n    </div>\n  `\n})\n\nconst innerCounters = tag(({\n  propCounter,\n  increasePropCounter,\n}: {\n  propCounter: number,\n  increasePropCounter: () => void\n}) => {\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n\n  ++renderCount // for debugging\n\n  return html`\n    <button id=\"❤️-inner-counter\" onclick=${increasePropCounter}\n    >❤️ propCounter:${propCounter}</button>\n    <span>\n      ❤️ <span id=\"❤️-inner-display\">${propCounter}</span>\n    </span>\n    <div>renderCount:${renderCount}</div>\n    ${renderCountDiv({renderCount, name: 'inner_counters'})}\n  `\n})\n","import { fadeInDown, fadeOutUp } from \"./animations.js\"\nimport { renderCountDiv } from \"./renderCount.component.js\"\nimport { letState, html, tag, providers, state, callbackMaker, Subject, onInit } from \"taggedjs\"\n\nexport class TagDebugProvider {\n  tagDebug = 0\n  showDialog = false\n}\n\nconst ProviderFunc = () => ({counter: 0})\n\n\nexport function tagDebugProvider() {\n  const upper = providers.create( upperTagDebugProvider )\n  return {\n    upper,\n    test: 0\n  }\n}\n\nexport function upperTagDebugProvider() {\n  return {\n    name: 'upperTagDebugProvider',\n    test: 0\n  }\n}\n\nexport const providerDebugBase = tag((_x = 'providerDebugBase') => {\n  // providerDebugBase, has provider\n  \n  providers.create(ProviderFunc) // test that an arrow function can be a provider\n  const providerClass: TagDebugProvider = providers.create( TagDebugProvider )\n  const provider = providers.create( tagDebugProvider )\n\n  const test = letState('props debug base')\n  let propCounter = letState(0)(x => [propCounter, propCounter = x])\n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n\n  if(providerClass.showDialog) {\n    (document.getElementById('provider_debug_dialog') as any).showModal()\n  }\n\n  ++renderCount\n\n  return html`\n    <div>\n      <strong>provider.test sugar-daddy-77</strong>:${provider.test}\n    </div>\n    <div>\n      <strong>provider.upper?.test</strong>:${provider.upper?.test || '?'}\n    </div>\n    <div>\n      <strong>providerClass.tagDebug</strong>:${providerClass.tagDebug || '?'}\n    </div>\n\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      <div>\n        <button id=\"increase-provider-🍌-0-button\"\n          onclick=${() => ++provider.test}\n        >🍌 increase provider.test ${provider.test}</button>\n        <span>\n          🍌 <span id=\"increase-provider-🍌-0-display\">${provider.test}</span>\n        </span>\n      </div>\n      \n      <div>\n        <button id=\"increase-provider-upper-🌹-0-button\" onclick=${() => ++provider.upper.test}\n        >🌹 increase upper.provider.test ${provider.upper.test}</button>\n        <span>\n          🌹 <span id=\"increase-provider-upper-🌹-0-display\">${provider.upper.test}</span>\n        </span>\n      </div>\n      \n      <div>\n        <button id=\"increase-provider-🍀-0-button\" onclick=${() => ++providerClass.tagDebug}\n        >🍀 increase provider class ${providerClass.tagDebug}</button>\n        <span>\n          🍀 <span id=\"increase-provider-🍀-0-display\">${providerClass.tagDebug}</span>\n        </span>\n      </div>\n\n      <div>\n        <button id=\"increase-prop-🐷-0-button\" onclick=${() => ++propCounter}\n        >🐷 increase propCounter ${propCounter}</button>\n        <span>\n          🐷 <span id=\"increase-prop-🐷-0-display\">${propCounter}</span>\n        </span>\n      </div>\n\n      <button onclick=${() => providerClass.showDialog = true}\n      >💬 toggle dialog ${providerClass.showDialog}</button>\n    </div>\n\n    <hr />\n\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      ${providerDebug({\n        propCounter,\n        propCounterChange: x => {\n          propCounter = x\n        }\n      })}\n    </div>\n\n    <hr />\n    renderCount outer:<span name=\"render_count_outer\">${renderCount}</span>\n    ${renderCountDiv({renderCount, name:'providerDebugBase'})}\n\n    ${dialog(providerClass)}\n  `\n})\n\nconst dialog = tag((providerClass: TagDebugProvider) => html`\n  <dialog id=\"provider_debug_dialog\" style=\"padding:0\"\n    onmousedown=\"var r = this.getBoundingClientRect();(r.top<=event.clientY&&event.clientY<=r.top+r.height&&r.left<=event.clientX&&event.clientX<=r.left+r.width) || this.close()\"\n    ondragstart=\"const {e,dt,t} = {t:this,e:event,dt:event.dataTransfer};const d=t.drag=t.drag||{x:0,y:0};d.initX=d.x;d.startX=event.clientX-t.offsetLeft;d.startY=event.clientY-t.offsetTop;t.ondragover=e.target.ondragover=(e)=>e.preventDefault();dt.effectAllowed='move';dt.dropEffect='move'\"\n    ondrag=\"const {t,e,dt,d}={e:event,dt:event.dataTransfer,d:this.drag}; if(e.clientX===0) return;d.x = d.x + e.offsetX - d.startX; d.y = d.y + e.offsetY - d.startY; this.style.left = d.x + 'px'; this.style.top = d.y+'px';\"\n    ondragend=\"const {t,e,d}={t:this,e:event,d:this.drag};if (d.initX === d.x) {d.x=d.x+e.offsetX-(d.startX-d.x);d.y=d.y+e.offsetY-(d.startY-d.y);this.style.transform=translate3d(d.x+'px', d.y+'px', 0)};this.draggable=false\"\n    onclose=${() => providerClass.showDialog = false}\n  >\n    <div style=\"padding:.25em\" onmousedown=\"this.parentNode.draggable=true\"\n    >dialog title</div>\n    ${providerClass.showDialog ? html`\n      <textarea wrap=\"off\">${JSON.stringify(providerClass, null, 2)}</textarea>\n    ` : 'no dialog'}\n    <div style=\"padding:.25em\">\n      <button type=\"button\" onclick=\"provider_debug_dialog.close()\">🅧 close</button>\n    </div>\n  </dialog>\n`)\n\nconst providerDebug = tag(({\n  propCounter,\n  propCounterChange,\n}: {\n  propCounter: number,\n  propCounterChange: (x: number) => unknown\n}) => {\n  const funcProvider = providers.inject(ProviderFunc) // test that an arrow function can be a provider\n  const provider = providers.inject( tagDebugProvider )\n  const providerClass = providers.inject( TagDebugProvider )\n  const upperProvider = providers.inject( upperTagDebugProvider )\n\n  let showProProps: boolean = letState(false)(x => [showProProps, showProProps = x])\n  let renderCount: number = letState(0)(x => [renderCount, renderCount = x])\n  // let propCounter: number = letState(0)(x => [propCounter, propCounter = x])\n\n  const callbacks = callbackMaker()\n  const callbackTestSub = state(() => new Subject())\n\n  onInit(() => {\n    console.info('providerDebug.ts: 👉 👉 i should only ever run once')\n\n    callbackTestSub.subscribe(x => {\n      callbacks((y) => {\n        provider.test = x as number\n      })()\n    })\n  })\n\n  ++renderCount\n\n  return html`<!--providerDebug.js-->\n    <div>\n      <button id=\"increase-provider-🍌-1-button\" onclick=${() => ++provider.test}\n      >🍌 increase provider.test ${provider.test}</button>\n      <span>\n        🍌 <span id=\"increase-provider-🍌-1-display\">${provider.test}</span>\n      </span>\n    </div>\n    \n    <div>\n      <button id=\"increase-provider-upper-🌹-1-button\" onclick=${() => ++upperProvider.test}\n      >🌹 increase upper.provider.test ${upperProvider.test}</button>\n      <span>\n        🌹<span id=\"increase-provider-upper-🌹-1-display\">${upperProvider.test}</span>\n      </span>\n    </div>\n\n    <div>\n      <button id=\"increase-arrow-provider-⚡️-1-button\" onclick=${() => ++funcProvider.counter}\n      >⚡️ increase upper.provider.test ${funcProvider.counter}</button>\n      <span>\n      ⚡️<span id=\"increase-arrow-provider-⚡️-1-display\">${funcProvider.counter}</span>\n      </span>\n    </div>\n\n    <div>\n      <button id=\"subject-increase-counter\"\n        onclick=${() => callbackTestSub.set = provider.test + 1}\n      >🍌 subject increase:</button>\n      <span>\n        🍌 <span id=\"subject-counter-display\">${provider.test}</span>\n      </span>\n    </div>\n    \n    <div>\n      <button id=\"increase-provider-🍀-1-button\" onclick=${() => ++providerClass.tagDebug}\n      >🍀 increase provider class ${providerClass.tagDebug}</button>\n      <span>\n        🍀 <span id=\"increase-provider-🍀-1-display\">${providerClass.tagDebug}</span>\n      </span>\n    </div>\n\n    <div>\n      <button id=\"increase-prop-🐷-1-button\" onclick=${() => propCounterChange(++propCounter)}\n      >🐷 increase propCounter ${propCounter}</button>\n      <span>\n        🐷 <span id=\"increase-prop-🐷-1-display\">${propCounter}</span>\n      </span>\n    </div>\n\n    <button onclick=${() => providerClass.showDialog = true}\n      >💬 toggle dialog ${providerClass.showDialog}</button>\n\n    <button onclick=${() => showProProps = !showProProps}\n    >${showProProps ? 'hide' : 'show'} provider as props</button>\n    \n    ${showProProps && html`\n      <div oninit=${fadeInDown} ondestroy=${fadeOutUp}>\n        <hr />\n        <h3>Provider as Props</h3>\n        ${testProviderAsProps(providerClass)}\n      </div>\n    `}\n\n    <div>\n      renderCount inner:${renderCount}\n      ${renderCountDiv({renderCount, name:'providerDebugInner'})}\n    </div>\n  `\n})\n\n\nconst testProviderAsProps = tag((\n  providerClass: TagDebugProvider\n) => {\n  return html`<!--providerDebug.js@TestProviderAsProps-->\n    <textarea wrap=\"off\" rows=\"20\" style=\"width:100%;font-size:0.6em\">${JSON.stringify(providerClass, null, 2)}</textarea>\n  `\n})","import { watch, letState, html, tag } from \"taggedjs\"\n\nexport const watchTesting = tag(() => (\n  stateNum = letState(0)(x => [stateNum, stateNum=x]),\n  stateNumChangeCount = letState(0)(x => [stateNumChangeCount, stateNumChangeCount=x]),\n  _ = watch([stateNum], () => ++stateNumChangeCount),\n  slowChangeCount = letState(0)(x => [slowChangeCount, slowChangeCount=x]),\n  watchPropNumSlow = watch.noInit([stateNum], () => ++slowChangeCount),\n  subjectChangeCount = letState(0)(x => [subjectChangeCount, subjectChangeCount=x]),\n  \n  watchPropNumSubject = watch.asSubject([stateNum], () => {\n    return ++subjectChangeCount\n  }),\n\n  truthChange = letState(false)(x => [truthChange, truthChange=x]),\n  truthChangeCount = letState(0)(x => [truthChangeCount, truthChangeCount=x]),\n  watchTruth = watch.truthy([truthChange], () => ++truthChangeCount),\n  \n  truthSubChangeCount = letState(0)(x => [truthSubChangeCount, truthSubChangeCount=x]),\n  \n  watchTruthAsSub = watch.truthy.asSubject([truthChange], () => {\n    ++truthSubChangeCount\n    return truthChange\n  }).pipe(\n    x => {\n      if(x === undefined) {\n        return 'undefined'\n      }      \n\n      return x ? truthSubChangeCount : truthSubChangeCount\n    }\n  ),\n) => html`\n  stateNum:<span id=\"watch-testing-num-display\">${stateNum}</span>\n  <button id=\"watch-testing-num-button\" type=\"button\"\n    onclick=${() => ++stateNum}\n  >++ stateNum</button>\n  <div>\n    <small>stateNumChangeCount:<span id=\"stateNumChangeCount\">${stateNumChangeCount}</span></small>\n  </div>\n  <fieldset>\n    <legend>🍄 slowChangeCount</legend> \n    <div>\n      <small>\n        <span id=\"🍄-slowChangeCount\">${slowChangeCount}</span>\n      </small>\n    </div>\n    <div>\n      <small>\n        watchPropNumSlow:<span id=\"🍄-watchPropNumSlow\">${watchPropNumSlow}</span>\n      </small>\n    </div>\n  </fieldset>\n\n  <fieldset>\n    <legend>🍄‍🟫 subjectChangeCount</legend>    \n    <div>\n      <small>\n        <span id=\"🍄‍🟫-subjectChangeCount\">${subjectChangeCount}</span>\n      </small>\n    </div>\n    <div>\n      <small>\n        (watchPropNumSubject:<span id=\"🍄‍🟫-watchPropNumSubject\">${watchPropNumSubject}</span>)\n      </small>\n    </div>\n  </fieldset>\n\n  <fieldset>\n    <legend>🦷 truthChange</legend>\n    <div>\n      <small>\n        <span id=\"🦷-truthChange\">${truthChange ? 'true' : 'false'}</span>\n      </small>\n    </div>\n    <fieldset>\n      <legend>simple truth</legend>      \n      <div>\n        <small>\n          watchTruth:<span id=\"🦷-watchTruth\">${watchTruth || 'false'}</span>\n        </small>\n      </div>\n      <div>\n        <small>\n          (truthChangeCount:<span id=\"🦷-truthChangeCount\">${truthChangeCount}</span>)\n        </small>\n      </div>\n    </fieldset>\n    <fieldset>\n      <legend>truth subject</legend>      \n      <div>\n        <small>\n        watchTruthAsSub:<span id=\"🦷-watchTruthAsSub\">${watchTruthAsSub}</span>\n        </small>\n      </div>\n      <div>\n        <small>\n          (truthSubChangeCount:<span id=\"🦷-truthSubChangeCount\">${truthSubChangeCount}</span>)\n        </small>\n      </div>\n    </fieldset>\n\n    <button id=\"🦷-truthChange-button\" type=\"button\"\n      onclick=${() => truthChange = !truthChange}\n    >toggle to ${truthChange ? 'true' : 'false'}</button>\n  </fieldset>`\n)\n","import { html, letState, Subject, subject, tag, ValueSubject } from \"taggedjs\"\nimport { renderCountDiv } from \"./renderCount.component.js\"\n\n/** this tag renders only once */\nexport const oneRender = () => tag.oneRender = (\n  counter = new ValueSubject(0),\n  renderCount = letState(0)(x => [renderCount, renderCount = x]), // state can be used but it never updates\n) => {\n  ++renderCount\n\n  const x = Subject.all([0, 'all', 4])\n  \n\n  return html`\n    ${x.pipe(x => JSON.stringify(x))}elias\n    <span>👍<span id=\"👍-counter-display\">${counter}</span></span>\n    <button type=\"button\" id=\"👍-counter-button\"\n      onclick=${() => ++counter.value}\n    >++👍</button>\n    ${renderCountDiv({renderCount, name:'oneRender_tag_ts'})}\n    <hr />\n    ${insideMultiRender()}\n  `\n}\n\n/** this tag renders on every event but should not cause parent to re-render */\nconst insideMultiRender = tag(() => (\n  counter = letState(0)(x => [counter, counter = x]),\n  counter$ = subject(0),\n  renderCount = letState(0)(x => [renderCount, renderCount = x]), // state can be used but it never updates\n) => {\n  ++renderCount\n  return html`\n  <span>👍👍 sub counter-subject-display:<span id=\"👍👍-counter-subject-display\">${counter$}</span></span>\n  <br />\n  <span>👍👍 sub counter<span id=\"👍👍-counter-display\">${counter}</span></span>\n  <br />\n  <button type=\"button\" id=\"👍👍-counter-button\"\n    onclick=${() => {\n      counter$.next(++counter)\n    }}\n  >++👍👍</button>\n  ${renderCountDiv({renderCount, name:'insideMultiRender'})}\n`\n})\n","import { html, letState, tag } from \"taggedjs\";\nimport { renderCountDiv } from \"./renderCount.component\";\n\nconst main = {\n  function: () => ++main.count,\n  count: 0,\n}\n\nexport default tag(() => (\n  array = letState([])(x => [array, array = x]),\n  counter = letState(0)(x => [counter, counter = x]),\n  myFunction = () => ++counter,\n  renderCount = letState(0)(x => [renderCount, renderCount = x]),\n  showChild = letState(true)(x => [showChild, showChild = x]),\n  somethingElse = letState('a')(x => [somethingElse, somethingElse = x]),\n  _ = ++renderCount,\n) => html`\n  <button id=\"fun-parent-button\" onclick=${myFunction}>++parent</button><span id=\"fun_in_prop_display\">${counter}</span>\n  ${renderCountDiv({renderCount, name:'funInProps_tag_parent'})}\n  <div>\n    <strong>main:</strong><span id=\"main_wrap_state\">${(main.function as any).toCall ? 'taggjedjs-wrapped' : 'nowrap'}</span>:${main.count}\n  </div>\n  <button id=\"toggle-fun-in-child\" type=\"button\" onclick=${() => showChild = !showChild}>toggle child</button>\n  array length: ${array.length}\n  <button onclick=\"() => {array = array.map(x => x);array.push('push'+array.length)}\">reset add</button>\n  <hr />\n  ${showChild && funInPropsChild({myFunction, array, child: {myChildFunction: myFunction}}, main, myFunction)}\n`)\n\nconst funInPropsChild = tag((\n  {myFunction, child, array}: {\n    array: unknown[], myFunction: () => any, child: {myChildFunction: () => any}\n  },\n  mainProp: typeof main,\n  myFunction3: () => any\n) => (\n  other = letState('other')(x => [other, other = x]),\n  counter = letState(0)(x => [counter, counter = x]),\n  renderCount = letState(0)(x => [renderCount, renderCount = x]),\n  _ = ++renderCount,\n) => html`\n  <div>\n    <strong>mainFunction:</strong>${(mainProp.function as any).toCall ? 'taggjedjs-wrapped' : 'nowrap'}:\n    <span>${mainProp.count}</span>\n  </div>\n  <div>\n    <strong>childFunction:</strong>${(child.myChildFunction as any).toCall ? 'taggjedjs-wrapped' : 'nowrap'}\n  </div>\n  <div>\n    <strong>myFunction:</strong>${(myFunction as any).toCall ? 'taggjedjs-wrapped' : 'nowrap'}\n  </div>\n\n  <button id=\"fun_in_prop1\" onclick=${myFunction}>++object argument</button>\n  <button id=\"fun_in_prop2\" onclick=${child.myChildFunction}>++child.myChildFunction</button>\n  <button id=\"fun_in_prop3\" onclick=${myFunction3}>++argument</button>\n  <button onclick=${main.function}>++main</button>\n  <button onclick=${() => ++counter}>++me</button>\n  \n  child array length: ${array.length}\n  \n  <span>${counter}</span>\n  ${renderCountDiv({renderCount, name:'funInProps_tag_child'})}\n`)\n","import { attributeDebug } from \"./attributeDebug.component\"\nimport { contentDebug } from \"./ContentDebug.component\"\nimport { tableDebug } from \"./tableDebug.component\"\nimport { html, tag, letState, onInit, state, Subject, callbackMaker, onDestroy } from \"taggedjs\"\nimport { tagDebug } from \"./tagJsDebug\"\nimport { tagSwitchDebug } from \"./tagSwitchDebug.component\"\nimport { mirroring } from \"./mirroring.tag\"\nimport { childTests } from \"./childTests\"\nimport { runTests } from \"./tests\"\nimport { renderCountDiv } from \"./renderCount.component\"\nimport { counters } from \"./countersDebug\"\nimport { providerDebugBase } from \"./providerDebug\"\nimport { watchTesting } from \"./watchTesting.tag\"\nimport { oneRender } from \"./oneRender.tag\"\nimport funInPropsTag from \"./funInProps.tag\"\n\nexport const App = tag(() => {\n  let _firstState = letState('app first state')(x => [_firstState, _firstState=x])\n  let toggleValue = letState(false)(x => [toggleValue, toggleValue=x])\n  let appCounter = letState(0)(x => [appCounter, appCounter=x])\n  let renderCount = letState(0)(x => [renderCount, renderCount=x])\n  let testTimeout = letState(null)(x => [testTimeout, testTimeout=x])\n\n  const toggle = () => {\n    toggleValue = !toggleValue\n  }\n\n  // if I am destroyed before my test runs, prevent test from running\n  onDestroy(() => {\n    clearTimeout(testTimeout as any)\n    testTimeout = null\n  })\n\n  function runTesting(manual = true) {\n    const waitFor = 2000\n    testTimeout = setTimeout(async () => {\n      console.debug('🏃 Running tests...')\n      const result = await runTests()\n\n      if(!manual) {\n        return\n      }\n\n      if(result) {\n        alert('✅ all app tests passed')\n        return\n      }\n\n      alert('❌ tests failed. See console for more details')\n\n    }, waitFor) as any // cause delay to be separate from renders\n  }\n\n  ++renderCount\n\n  const callbacks = callbackMaker()\n  const appCounterSubject = state(() => new Subject<number>(appCounter))\n\n  onInit(() => {\n    console.info('1️⃣ app init should only run once')\n    \n    runTesting(false)\n\n    appCounterSubject.subscribe(\n      callbacks(y => appCounter = y)\n    )\n  })\n\n  const content = html`<!--app.js-->\n    <h1 id=\"h1-app\">🏷️ TaggedJs - ${2+2}</h1>\n\n    <button id=\"toggle-test\" onclick=${toggle}>toggle test ${toggleValue}</button>\n    <button onclick=${runTesting}>run test</button>\n\n    <div>\n      <button id=\"app-counter-subject-button\"\n        onclick=${() => appCounterSubject.set = appCounter + 1}\n      >🍒 ++app subject</button>\n      <span>\n        🍒 <span id=\"app-counter-subject-display\">${appCounter}</span>\n      </span>\n    </div>\n\n    ${renderCountDiv({name:'app', renderCount},)}\n\n    <div id=\"tagDebug-fx-wrap\">\n      <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n        <fieldset id=\"counters\" style=\"flex:2 2 20em\">\n          <legend>counters</legend>\n          ${counters({appCounterSubject})}\n        </fieldset>\n\n        <fieldset id=\"counters\" style=\"flex:2 2 20em\">\n          <legend>⌚️ watch testing</legend>\n          ${watchTesting()}\n        </fieldset>\n\n        <fieldset id=\"provider-debug\" style=\"flex:2 2 20em\">\n          <legend>Provider Debug</legend>\n          ${providerDebugBase(undefined)}\n        </fieldset>\n\n        ${childTests(undefined)}\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Attribute Tests</legend>\n          ${attributeDebug()}\n        </fieldset>\n\n        <fieldset id=\"content-debug\" style=\"flex:2 2 20em\">\n          <legend>Content Debug</legend>\n          ${contentDebug()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Tag Switching</legend>\n          ${tagSwitchDebug(undefined)}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Tag Mirroring</legend>\n          ${mirroring()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Table Tests</legend>\n          ${tableDebug()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>oneRender</legend>\n          ${oneRender()}\n        </fieldset>\n\n        <fieldset>\n          <legend>functions in props</legend>\n          ${funInPropsTag()}\n        </fieldset>\n      </div>\n\n      ${tagDebug()}\n    </div>\n  `\n\n  return content\n})\n","import { childTests } from \"./childTests\"\nimport { Subject, callbackMaker, html, onInit, letState, tag, state } from \"taggedjs\"\nimport { arrayTests } from \"./arrayTests\"\nimport { tagSwitchDebug } from \"./tagSwitchDebug.component\"\nimport { mirroring } from \"./mirroring.tag\"\nimport { propsDebugMain } from \"./PropsDebug.tag\"\nimport { providerDebugBase } from \"./providerDebug\"\nimport { counters } from \"./countersDebug\"\nimport { tableDebug } from \"./tableDebug.component\"\nimport { contentDebug } from \"./ContentDebug.component\"\nimport { watchTesting } from \"./watchTesting.tag\"\nimport { oneRender } from \"./oneRender.tag\"\nimport { renderCountDiv } from \"./renderCount.component\"\nimport funInPropsTag from \"./funInProps.tag\"\n\ntype viewTypes = 'funInPropsTag' | 'oneRender' | 'watchTesting' | 'mirroring' | 'content' | 'arrays' | 'counters' | 'tableDebug' | 'props' | 'child' | 'tagSwitchDebug' | 'providerDebug'\n\nexport default tag(() => {\n  const views: viewTypes[] = [\n    // 'content',\n    // 'counters',\n    // 'watchTesting',\n    // 'oneRender',\n    'props',\n    'funInPropsTag',\n    // 'mirroring',\n    // 'providerDebug',\n    \n    // 'arrays',\n    // 'tagSwitchDebug',\n    \n    // 'child',\n  ]\n  \n  let renderCount = letState(0)(x => [renderCount, renderCount = x])\n  let appCounter = letState(0)(x => [appCounter, appCounter=x])\n  const appCounterSubject = state(() => new Subject(appCounter))\n  const callback = callbackMaker()\n  onInit(() => {\n    console.info('1️⃣ app init should only run once')    \n\n    appCounterSubject.subscribe(\n      callback(x => {\n        appCounter = x\n      })\n    )\n  })\n\n  ++renderCount\n\n  return html`<!--isolatedApp.js-->\n    <h1 id=\"app\">🏷️ TaggedJs - isolated</h1>\n\n    <div>\n      <button id=\"app-counter-subject-button\"\n        onclick=${() => appCounterSubject.set = appCounter + 1}\n      >🍒 ++app subject</button>\n      <span>\n        🍒 <span id=\"app-counter-subject-display\">${appCounter}</span>\n      </span>\n    </div>\n\n    <div id=\"tagDebug-fx-wrap\">\n      <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n        ${views.includes('oneRender') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>oneRender</legend>\n            ${oneRender()}\n          </fieldset>\n        `}\n\n        ${views.includes('props') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>propsDebugMain</legend>\n            ${propsDebugMain(undefined)}\n          </fieldset>\n        `}\n\n        ${views.includes('watchTesting') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>watchTesting</legend>\n            ${watchTesting()}\n          </fieldset>\n        `}\n\n        ${views.includes('tableDebug') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>tableDebug</legend>\n            ${tableDebug()}\n          </fieldset>\n        `}\n\n        ${views.includes('providerDebug') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>providerDebugBase</legend>\n            ${providerDebugBase(undefined)}\n          </fieldset>\n        `}\n\n        ${views.includes('tagSwitchDebug') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>tagSwitchDebug</legend>\n            ${tagSwitchDebug(undefined)}\n          </fieldset>\n        `}\n\n        ${views.includes('mirroring') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>mirroring</legend>\n            ${mirroring()}\n          </fieldset>\n        `}\n\n        ${views.includes('arrays') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>arrays</legend>\n            ${arrayTests()}\n          </fieldset>\n        `}\n\n        ${views.includes('counters') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>counters</legend>\n            ${counters({appCounterSubject})}\n          </fieldset>\n        `}\n\n        ${views.includes('content') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>content</legend>\n            ${contentDebug()}\n          </fieldset>\n        `}\n\n        ${views.includes('child') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>Children Tests</legend>\n            ${childTests(undefined)}\n          </fieldset>\n        `}\n\n        ${views.includes('funInPropsTag') && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>funInPropsTag</legend>\n            ${funInPropsTag()}\n          </fieldset>\n        `}\n\n        ${/*\n          <textarea style=\"font-size:0.6em;min-width:50vw;height:400px\">${ template.string }</textarea>\n          <textarea style=\"font-size:0.6em;min-width:50vw;height:400px\">${ JSON.stringify(template, null, 2) }</textarea>\n          */ false\n        }\n      </div>\n      ${renderCountDiv({renderCount, name:'isolatedApp'})}\n    </div>\n  `\n})\n","import { tagElement } from \"taggedjs\"\nimport { App } from \"./app.tag\"\nimport IsolatedApp from \"./isolatedApp\"\n\nexport const app = () => {// app.ts\n  console.info('attaching app to element...')\n  const element = document.getElementsByTagName('app')[0]\n\n  const pathname = window.location.pathname\n  const locationSplit = pathname.split('/').filter(x => x)\n  const location = locationSplit[0]?.toLowerCase()\n  if(location && ['isolated.html','index-static.html'].includes(location)) {\n    const start = Date.now()\n    tagElement(IsolatedApp, element, {test:1})\n    const end = Date.now() - start\n    console.info(`⏱️ isolated render in ${end}ms`)\n    return\n  }\n\n  const start = Date.now()\n  tagElement(App, element, {test:1})\n  const end = Date.now() - start\n  console.info(`⏱️ rendered in ${end}ms`)\n}\n"],"names":["ValueTypes","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","isStaticTag","value","tag","templater","includes","tagJsType","isTagComponent","tagComponent","isTagClass","isSubjectInstance","subject","isSubject","subscribe","isTagArray","Array","every","x","combineLatest","subjects","output","Subject","subscribeWith","callback","valuesSeen","values","setValue","index","length","subscription","clones","shift","subscriptions","map","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","next","newValue","handler","methodResponse","setHandler","onSubscription","subscribers","_value","set","constructor","this","defineValueOn","countSubject","globalSubCount$","unsubscribe","findIndex","sub","splice","removeSubFromArray","add","push","getSubscription","orgCallback","lastValue","count","emit","subs","toPromise","Promise","res","toCallback","pipe","operations","setMethods","all","args","arg","static","ValueSubject","super","getSupportInCycle","setUse","memory","stateConfig","tagSupport","use","useMe","beforeRender","beforeRedraw","afterRender","beforeDestroy","tagUse","TagError","Error","details","message","errorCode","name","ArrayNoKeyError","StateMismatchError","SyncCallbackError","array","state","config","rearray","stateLength","getStateValue","initState","defaultValue","checkValue","oldState","StateEchoBack","getCallbackValue","toString","JSON","stringify","console","error","wrapper","oldStates","newStates","tagFunction","parentWrap","original","warn","item","syncStates","stateFrom","stateTo","fromValue","getSetMethod","restate","oldValue","initValue","Function","newState","global","newest","result","watch","currentValues","setupWatch","defaultFinally","init","before","final","previous","pastResult","undefined","previousValues","defineOnMethod","getWatch","attachTo","setup","oldWatch","method","firstSupport","nowTagSupport","setTo","oldestState","letState","makeStateResult","y","deepClone","makeDeepClone","WeakMap","visited","has","Date","RegExp","clone","isArray","create","getPrototypeOf","i","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","getTime","isArrayDeepEqual","keys1","keys","keys2","isObjectDeepEqual","newWatch","providerConfig","providers","ownerSupport","constructMethod","stateDiffMemory","stateDiff","provider","oldStateCount","instance","cm","compareTo","owner","ownerTagSupport","find","msg","run","handleProviderChanges","appSupport","tagsWithProvider","getTagsWithProvider","renderCount","deleted","renderTagSupport","hasProvider","xProvider","childTags","isLikeTags","tagSupport0","tagSupport1","templater0","templater1","tag0","tag1","strings0","strings","strings1","string","values0","values1","valuesLengthsMatch","allVarsMatch","isLikeValueSets","destroyTagMemory","oldTagSupport","oldest","destroy","destroyTagSupportPast","context","runBeforeRender","runAfterRender","tagClosed$","runBeforeDestroy","renderTagOnly","newTagSupport","prevSupport","oldRenderCount","parentSupport","lastOwnerSupport","runtimeOwnerSupport","lastState","runBeforeRedraw","beforeWithRender","reSupport","renderWithSupport","lastSupport","oldGlobal","insertBefore","destroyUnlikeTags","renderExistingTag","oldestSupport","newSupport","preRenderCount","providersWithChanges","filter","getAppTagSupport","providersChangeCheck","updateBy","renderUp","ownerTag","selfPropChange","nowProps","props","latestProps","propsConfig","latestCloned","callbackStateUpdate","maybePromise","finally","innerCallback","a","b","c","d","e","f","callbackMaker","originalGetter","initMemory","onInit","onDestroy","destroy$","setCurrentTagSupport","support","childrenCurrentSupport","children","variablePrefix","escapeVariable","escapeSearch","Tag","arrayValue","html","TemplaterResult","tagged","madeChildIntoSubject","childSubject","templaterResult","kid","kidsToTagArraySubject","tags","runTagCallback","bindTo","myGlobal","callbackResult","bind","then","insertAfter","newNode","referenceNode","parentNode","nextSibling","isSimpleType","destroyArrayTag","counts","stagger","removed","removeChild","placeholderElm","placeholder","getValueType","type","function","date","tagArray","unknown","cloneValueArray","getChildTagsToDestroy","allTags","cTag","processNewTag","TagSupport","swapInsertBefore","document","createTextNode","inputAttribute","element","names","split","style","classList","remove","startRegX","endRegX","isTagVar","search","processAttribute","attrName","child","scope","howToSet","getContextValueByVarString","processNameValueAttr","processScopedNameValueAttr","attrValue","removeAttribute","processNameOnlyAttr","isSpecialAttr","replace","reverse","join","isSpecial","action","newAttrValue","oneRender","isChildOverride","subjectFunction","bindSubjectCallback","fun","isDeadValue","processAttributeSubjectValue","howToSetAttribute","setAttribute","howToSetInputValue","interpolateAttributes","attrNames","getAttributeNames","nodeName","getAttribute","interpolateReplace","processTagResult","subjectTag","processTagResultUpdate","buildBeforeElement","processSubjectComponent","options","label","substring","preClones","myClones","fClone","renderSubjectComponent","processTag","newTagSupportByTemplater","added","tagFakeTemplater","getFakeTemplater","fake","isTag","setupNewTemplater","processTagArray","lastArray","setPlaceholderElm","runtimeInsertBefore","lessLength","subTag","lastTag","newArrayValue","lastArrayValue","destroyItem","valueA","valueB","areLikeValues","last","previousSupport","template","getTemplate","processAddTagArrayItem","fragment","createDocumentFragment","newTempElm","createElement","appendChild","updateBeforeTemplate","lastFirstChild","parent","textNode","castTextValue","processRegularValue","castedValue","oldClone","textContent","processFirstSubjectValue","v","wrap","oneRenderToTagSupport","processFirstRegularValue","compareProps","compare","onDelete","compareOriginal","hasTagSupportChanged","newTemplater","propsChanged","pastCloneProps","castedProps","castedPastProps","subCastedProps","subCompareProps","matched","entries","hasPropChanges","kidsChanged","oldCloneKidValues","lastClonedKidValues","newClonedKidValues","hasKidsChanged","alterProp","stateArray","checkProp","newProp","seen","toCall","callbackPropOwner","assign","getPropWrap","forEach","getOwnPropertyDescriptor","callWith","noCycle","sync","allMatched","updateExistingTagComponent","oldestTag","oldWrapper","newWrapper","isSameTag","newPropsArray","priorPropConfig","priorPropsArray","argPosition","priorProps","newCallback","syncFunctionProps","newOldest","buildNewTag","oldInsertBefore","updateExistingValue","valueType","displaySubject","hasLastValue","newType","destroySimpleValue","arraySubject","wasArray","isValueTag","checkDestroyPrevious","subjectSup","newestState","prepareUpdateToComponent","isClass","valueSupport","isTagTemplater","handleStillTag","interpolateTemplate","hasAttribute","variableName","existingSubject","subscribeToTemplate","called","onValue","mutatingCallback","afterElmBuild","elm","textarea","match","dynamic","_elm","_name","scanTextAreaValue","diff","onInitDoubleWrap","oninit","onInitWrap","target","elementInitCheck","interpolateContentTemplates","tagComponents","nextClones","subChild","isRenderEndTemplate","nextTagComponent","tagName","interpolateElement","container","interpolatedTemplates","interpolation","content","nextTagComponents","processChildrenAttributes","interpolateString","expression","startsWith","id","interpolateToTemplates","afterInterpolateElement","temporary","firstChild","nextNextSibling","buildClones","prefixSearch","BaseTagSupport","isApp","appElement","hasLiveElements","kidValue","latest","setTagPlaceholder","update","elementContainer","tempDraw","innerHTML","thisTag","updateContext","_string","oldValueFn","newValueFn","prevState","shareTemplaterGlobal","updateContextItem","processNewValue","tempTag","updateConfig","updateValues","byParent","firstDestroy","destroySubscriptions","subGlobal","mainPromise","promise","destroyClones","async","promises","oldClones","checkCloneRemoval","oldContext","customElm","ondestroy","onDestroyDoubleWrap","onDestroyWrap","elementDestroyCheck","compareClone","version","tagCount","innerTagWrap","originalFunction","nowState","valuesValue","getTagWrap","tagIndex","route","routeProps","app","routeTag","oneRenderFunction","appElements","tagElement","appElmIndex","appElm","runWrapper","templateElm","hmr","attributeDebug","selected","isOrange","event","checked","class","contentDebug","vs0","vs1","utils","willPromise","resolve","tableDebug","showCell","renderCountDiv","propsDebugMain","_","propNumber","propsJson","test","syncPropNumber","json","parse","propsDebug","propNumberChange","syncPropDebug","nothingTest","timestamp","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","time","timestampToValues","newDateString","propDateDebug","counter","propNumberChangeCount","myPropNumber","watchResults","__","getSetProp","myProp","letProp","propFnUpdateTest","animateInit","staggerBy","fxName","opacity","wait","animateDestroy","capturePosition","zIndex","toTop","offsetTop","toLeft","offsetLeft","toWidth","clientWidth","offsetWidth","toHeight","clientHeight","offsetHeight","setTimeout","top","left","width","height","position","captureElementPosition","in","fadeInDown","out","fadeOutUp","fxIn","fxOut","input","createFx","arrayTests","players","getNewPlayer","scores","repeat","_v","frame","score","Math","floor","random","playersDisplay","scoreData","playerIndex","player","edit","test0interval","test1interval","intervalTester0","intervalCount","intervalId","intervalId2","renderCounter","currentTime","increase","startInterval","info","setInterval","stopInterval","clearInterval","intervalTester1","toggleInterval","tagDebug","_firstState","showIntervals","tagSwitchDebug","_t","selectedTag","tagOutput","title","tag2","tag3","tagOutput2","ternaryPropTest","arraySwitching","mirroring","tagCounter","innerHtmlTest","_props","innerHtmlPropsTest","test22","childTests","now","childAsPropTest","elmCount","selector","querySelectorAll","click","query","byId","getElementById","htmlById","onlyTests","tests","tab","describe","oldTests","debug","runTests","it","start","clearTests","err","expect","expected","toBeDefined","toBe","received","customMessage","toBeGreaterThan","amount","expectNum","isNaN","toBeLessThan","expectMatchedHtml","queries","elements","reduce","lastHtml","pop","expectHTML","expectElmCount","found","testDuelCounterElements","sets","button0","display0","buttonQuery","ip0","innerText","testCounterSelectedElements","elementCountExpected","button1","display1","display1Element","ip1Check","Number","secondIncrease","counterButtons","counterDisplays","counterButtonSelect","counterDisplaySelect","increaseCounter","counterDisplay","body","contains","counterValue","oldCounterValue","testCounterElements","slowCount","firstRun","getElementsByTagName","counterInput","toggleTest","onkeyup","beforeRenderCount","beforeInnerRenderCount","propCounter","funUpdateValue","pos","queryOneInnerHTML","ownerHTML","parentHTML","childHTML","ownerNum","parentNum","childNum","syncCounter","dropdown","onchange","insideElm","insideDisplay","indexValue","outsideElm","outsideDisplay","outsideValue","onclick","startCount","truthStartCount","newCount","execute","only","skip","mouseOverTag","mouseOverEditShow","loadStartTime","counters","appCounterSubject","readStartTime","initCounter","callbacks","callbackTestSub","pipedSubject0","pipedSubject1","pipedSubject2","increasePropCounter","globalSubs","innerCounters","TagDebugProvider","showDialog","ProviderFunc","tagDebugProvider","upper","upperTagDebugProvider","providerDebugBase","_x","providerClass","showModal","providerDebug","propCounterChange","dialog","funcProvider","upperProvider","showProProps","testProviderAsProps","watchTesting","stateNum","stateNumChangeCount","slowChangeCount","watchPropNumSlow","noInit","subjectChangeCount","watchPropNumSubject","asSubject","truthChange","truthChangeCount","watchTruth","truthy","truthSubChangeCount","watchTruthAsSub","insideMultiRender","counter$","main","myFunction","showChild","somethingElse","funInPropsChild","myChildFunction","mainProp","myFunction3","other","App","toggleValue","appCounter","testTimeout","runTesting","manual","alert","clearTimeout","views","locationSplit","window","location","pathname","toLowerCase","end"],"sourceRoot":""}