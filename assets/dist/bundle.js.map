{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./src/ContentDebug.component.ts","webpack:///./src/PropsDebug.component.ts","webpack:///./src/animations.ts","webpack:///./src/app.component.ts","webpack:///./src/arrayTests.ts","webpack:///./src/attributeDebug.component.ts","webpack:///./src/childTests.ts","webpack:///./src/countersDebug.ts","webpack:///./src/expect.ts","webpack:///./src/innerHtmlTests.ts","webpack:///./src/intervalDebug.ts","webpack:///./src/isolatedApp.ts","webpack:///./src/providerDebug.ts","webpack:///./src/renderCount.component.ts","webpack:///./src/tableDebug.component.ts","webpack:///./src/tagJsDebug.ts","webpack:///./src/tagSwitchDebug.component.ts","webpack:///./src/tests.ts","webpack:///../main/ts/ElementTargetEvent.interface.ts","webpack:///../main/ts/Subject.ts","webpack:///../main/ts/Tag.class.ts","webpack:///../main/ts/Tag.utils.ts","webpack:///../main/ts/TagSupport.class.ts","webpack:///../main/ts/ValueSubject.ts","webpack:///../main/ts/bindSubjectCallback.function.ts","webpack:///../main/ts/checkDestroyPrevious.function.ts","webpack:///../main/ts/deepFunctions.ts","webpack:///../main/ts/elementDestroyCheck.function.ts","webpack:///../main/ts/elementInitCheck.ts","webpack:///../main/ts/errors.ts","webpack:///../main/ts/getCallback.ts","webpack:///../main/ts/hasTagSupportChanged.function.ts","webpack:///../main/ts/html.ts","webpack:///../main/ts/index.ts","webpack:///../main/ts/inputAttribute.ts","webpack:///../main/ts/interpolateAttributes.ts","webpack:///../main/ts/interpolateContentTemplates.ts","webpack:///../main/ts/interpolateElement.ts","webpack:///../main/ts/interpolateTemplate.ts","webpack:///../main/ts/interpolations.ts","webpack:///../main/ts/isInstance.ts","webpack:///../main/ts/isLikeTags.function.ts","webpack:///../main/ts/onDestroy.ts","webpack:///../main/ts/onInit.ts","webpack:///../main/ts/processAttribute.function.ts","webpack:///../main/ts/processNewValue.function.ts","webpack:///../main/ts/processRegularValue.function.ts","webpack:///../main/ts/processSubjectComponent.function.ts","webpack:///../main/ts/processSubjectValue.function.ts","webpack:///../main/ts/processTagArray.ts","webpack:///../main/ts/processTagResult.function.ts","webpack:///../main/ts/provider.utils.ts","webpack:///../main/ts/providers.ts","webpack:///../main/ts/redrawTag.function.ts","webpack:///../main/ts/render.ts","webpack:///../main/ts/renderExistingTag.function.ts","webpack:///../main/ts/scanTextAreaValue.function.ts","webpack:///../main/ts/set.function.ts","webpack:///../main/ts/setLet.function.ts","webpack:///../main/ts/setProp.function.ts","webpack:///../main/ts/setUse.function.ts","webpack:///../main/ts/tag.ts","webpack:///../main/ts/tagElement.ts","webpack:///../main/ts/tagRunner.ts","webpack:///../main/ts/templater.utils.ts","webpack:///../main/ts/updateExistingTag.function.ts","webpack:///../main/ts/updateExistingTagComponent.function.ts","webpack:///../main/ts/updateExistingValue.function.ts","webpack:///../main/ts/watch.function.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/index.ts"],"sourcesContent":["import { html, tag, setLet } from \"taggedjs\"\n\nexport const contentDebug = tag(() => {\n  let renderCount: number = setLet(0)(x => [renderCount, renderCount=x])\n\n  ++renderCount\n\n  return html`\n    <div style=\"font-size:0.8em\">You should see \"0\" here => \"${0}\"</div>\n    <!--proof you cannot see false values -->\n    <div style=\"font-size:0.8em\">You should see \"\" here => \"${false}\"</div>\n    <div style=\"font-size:0.8em\">You should see \"\" here => \"${null}\"</div>\n    <div style=\"font-size:0.8em\">You should see \"\" here => \"${undefined}\"</div>\n    <!--proof you can see true booleans -->\n    <div style=\"font-size:0.8em\">You should see \"true\" here => \"${true}\"</div>\n    <!--proof you can try to use the tagVar syntax -->\n    <div style=\"font-size:0.8em\">You should see \"${'{'}22${'}'}\" here => \"{22}\"</div>\n    <div style=\"font-size:0.8em\">You should see \"${'{'}__tagVar0${'}'}\" here => \"{__tagVar0}\"</div>\n    <div style=\"font-size:0.8em\">should be a safe string no html \"&lt;div&gt;hello&lt;/div&gt;\" here => \"${'<div>hello</div>'}\"</div>\n    (render count ${renderCount})\n  `\n})","import { watch, setLet, html, tag, InputElementTargetEvent, setProp } from \"taggedjs\"\nimport { renderCountDiv } from \"./renderCount.component\"\n\nexport const propsDebugMain = tag(() => {\n  let renderCount: number = setLet(0)(x => [renderCount, renderCount = x])\n  let propsJson: any = setLet({test:33, x:'y'})(x => [propsJson, propsJson = x])\n  let propNumber: any = setLet(0)(x => [propNumber, propNumber = x])\n\n  function propsJsonChanged(event: InputElementTargetEvent) {\n    propsJson = JSON.parse(event.target.value)\n    return propsJson\n  }\n\n  ++renderCount\n\n  const json = JSON.stringify(propsJson, null, 2)\n\n  return html`\n    <textarea id=\"props-debug-textarea\" wrap=\"off\" onchange=${propsJsonChanged}\n      style=\"height:200px;font-size:0.6em;width:100%\"\n      oninit=${() => console.log('text area init')}\n    >${ json }</textarea>\n    \n    <pre>${ json }</pre>\n    <div><small>(renderCount:${renderCount})</small></div>\n    \n    <div>\n      <button id=\"propsDebug-🥩-0-button\" onclick=${() => ++propNumber}>🥩 propNumber ${propNumber}</button>\n      <span id=\"propsDebug-🥩-0-display\">${propNumber}</span>\n    </div>\n    \n    <fieldset>\n      <legend>child</legend>\n      ${propsDebug({\n        propNumber,\n        propsJson,\n        propNumberChange: x => {\n          propNumber = x\n        }\n      })}\n    </fieldset>\n    ${renderCountDiv({renderCount, name:'propsDebugMain'})}\n  `\n})\n\nconst propsDebug = tag((\n  {\n    propNumber,\n    propsJson,\n    propNumberChange,\n  }: {\n    propNumber: number,\n    propNumberChange: (x: number) => unknown,\n    propsJson: any\n  }\n) => {\n  let renderCount: number = setLet(0)(x => [renderCount, renderCount=x])\n  let propNumberChangeCount = setLet(0)(x => [propNumberChangeCount, propNumberChangeCount=x])\n  setProp(x => [propNumber, propNumber = x])\n\n  const watchResults = watch([propNumber], () => {\n    ++propNumberChangeCount\n  })\n\n  ++renderCount\n\n  function pasteProps(event: InputElementTargetEvent) {\n    const value = JSON.parse(event.target.value)\n    Object.assign(propsJson, value)\n  }\n\n  return html`<!--propsDebug.js-->\n    <h3>Props Json</h3>\n    <textarea style=\"font-size:0.6em;height:200px;width:100%\" wrap=\"off\" onchange=${pasteProps}>${ JSON.stringify(propsJson, null, 2) }</textarea>\n    <pre>${ JSON.stringify(propsJson, null, 2) }</pre>\n    <hr />\n    <h3>Props Number</h3>\n    \n    <textarea style=\"font-size:0.6em;height:200px;width:100%;color:white;\" wrap=\"off\" disabled>${ JSON.stringify(watchResults, null, 2) }</textarea>\n    \n    <div>\n      <button id=\"propsDebug-🥩-1-button\" onclick=${() => propNumberChange(++propNumber)}\n      >🥩 propNumber ${propNumber}</button>\n      <span id=\"propsDebug-🥩-1-display\">${propNumber}</span>\n    </div>\n    <button\n      title=\"test of increasing render count and nothing else\"\n      onclick=${() => ++renderCount}\n    >renderCount ${renderCount}</button>\n    \n    <button onclick=${() => ++propNumber}\n      title=\"only changes number locally but if change by parent than that is the number\"\n    >local set propNumber ${propNumber}</button>\n    \n    <div><small>(propNumberChangeCount:${propNumberChangeCount})</small></div>\n    \n    <hr />\n    <h3>Fn update test</h3>\n    ${propFnUpdateTest({propNumber, callback: () => {\n      ++propNumber\n    }})}\n    \n    ${renderCountDiv({renderCount, name: 'propsDebug'})}\n  `\n})\n\nconst propFnUpdateTest = tag(({\n  propNumber, callback,\n}: {\n  propNumber: number, callback: Function\n}) => {\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  ++renderCount\n  return html`\n    <button\n      title=\"the count here and within parent increases but not in parent parent\"\n      onclick=${callback}\n    >local & 1-parent increase ${propNumber}</button>\n    ${renderCountDiv({renderCount, name: 'propFnUpdateTest'})}\n  `\n})\n","const staggerBy = 300\n\nexport const animateInit = async ({target, stagger}: any) => {/* animateInit */\n  target.style.opacity = 0\n  \n  if(stagger) {\n    await wait(stagger * staggerBy)\n  }\n\n  target.style.opacity = 1\n  target.classList.add('animate__animated','animate__fadeInDown')\n}\n\nexport const animateDestroy = async ({target, stagger, capturePosition=true}: any) => {/* animateDestroy */\n  if(capturePosition) {\n    captureElementPosition(target)\n  }\n\n  if(stagger) {\n    // setInterval(() => captureElementPosition(target),10)\n    await wait(stagger * staggerBy)\n  }\n\n  target.classList.add('animate__animated','animate__fadeOutUp')\n  \n  await wait(1000) // don't allow remove from stage until animation completed\n  \n  target.classList.remove('animate__animated','animate__fadeOutUp')\n}\n\n/*\nexport function captureElementPosition(element: any) {\n  element.style.zIndex = element.style.zIndex || 1\n  const initialTop = element.offsetTop\n  const initialLeft = element.offsetLeft\n\n  const fix = () => {\n    const toTop = (initialTop - window.scrollY) + 'px'\n    const toLeft = (initialLeft - window.scrollX) + 'px'  \n    const toWidth = (element.clientWidth + (element.offsetWidth - element.clientWidth) + 1) + 'px'\n    const toHeight = (element.clientHeight + (element.offsetHeight - element.clientHeight) + 1) + 'px'\n\n    element.style.top = toTop\n    element.style.left = toLeft  \n    element.style.width = toWidth\n    element.style.height = toHeight\n    element.style.position = 'fixed'\n  }\n\n  fix()\n}\n*/\n\n// absolute\nexport function captureElementPosition(element: any) {\n  element.style.zIndex = element.style.zIndex || 1\n  const toTop = element.offsetTop + 'px'\n  const toLeft = element.offsetLeft + 'px'  \n  const toWidth = (element.clientWidth + (element.offsetWidth - element.clientWidth) + 1) + 'px'\n  const toHeight = (element.clientHeight + (element.offsetHeight - element.clientHeight) + 1) + 'px'\n\n  const fix = () => {\n    element.style.top = toTop\n    element.style.left = toLeft  \n    element.style.width = toWidth\n    element.style.height = toHeight\n    element.style.position = 'absolute'\n  }\n\n  // element.style.position = 'fixed'\n  // allow other elements that are being removed to have a moment to figure out where they currently sit\n  setTimeout(fix, 0)\n  // fix()\n}\n/*\n// fixed\nexport function captureElementPosition(element: any) {\n  element.style.zIndex = element.style.zIndex || 1\n  const toTop = element.offsetTop + 'px'\n  const toLeft = element.offsetLeft + 'px'  \n  const toWidth = (element.clientWidth + (element.offsetWidth - element.clientWidth) + 1) + 'px'\n  const toHeight = (element.clientHeight + (element.offsetHeight - element.clientHeight) + 1) + 'px'\n\n  const fix = () => {\n    element.style.top = toTop\n    element.style.left = toLeft  \n    element.style.width = toWidth\n    element.style.height = toHeight\n    element.style.position = 'fixed'\n  }\n\n  // element.style.position = 'fixed'\n  // allow other elements that are being removed to have a moment to figure out where they currently sit\n  setTimeout(fix, 0)\n  // fix()\n}\n*/\n\nfunction wait(time: number) {\n  return new Promise((res) => {\n    setTimeout(res, time)\n  })\n}\n","import { attributeDebug } from \"./attributeDebug.component\"\nimport { contentDebug } from \"./ContentDebug.component\"\nimport { tableDebug } from \"./tableDebug.component\"\nimport { html, tag, setLet, onInit } from \"taggedjs\"\nimport { tagDebug } from \"./tagJsDebug\"\nimport { tagSwitchDebug } from \"./tagSwitchDebug.component\"\nimport { childTests } from \"./childTests\"\nimport { runTests } from \"./tests\"\nimport { renderCountDiv } from \"./renderCount.component\"\nimport { counters } from \"./countersDebug\"\nimport { providerDebugBase } from \"./providerDebug\"\n\nexport const App = tag(() => {\n  console.log('render app.ts')\n  let _firstState: string = setLet('app first state')(x => [_firstState, _firstState=x])\n  let toggleValue: boolean = setLet(false)(x => [toggleValue, toggleValue=x])\n  let renderCount: number = setLet(0)(x => [renderCount, renderCount=x])\n\n  const toggle = () => {\n    toggleValue = !toggleValue\n  }\n\n  function runTesting(manual = true) {\n    const waitFor = 1000\n    setTimeout(() => {\n      console.debug('🏃 Running tests...')\n      const result = runTests()\n\n      if(!manual) {\n        return\n      }\n\n      if(result) {\n        alert('✅ all tests passed')\n        return\n      }\n\n      alert('❌ tests failed. See console for more details')\n\n    }, waitFor) // cause delay to be separate from renders\n  }\n\n  ++renderCount\n\n  onInit(() => runTesting(false))\n\n  const content = html`<!--app.js-->\n    <h1 id=\"h1-app\">🏷️ TaggedJs - ${2+2}</h1>\n\n    <button id=\"toggle-test\" onclick=${toggle}>toggle test ${toggleValue}</button>\n    <button onclick=${runTesting}>run test</button>\n\n    ${renderCountDiv({name:'app', renderCount},)}\n\n    <div id=\"tagDebug-fx-wrap\">\n      ${tagDebug()}\n\n      <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n        <fieldset id=\"counters\" style=\"flex:2 2 20em\">\n          <legend>counters</legend>\n          ${counters()}\n        </fieldset>\n\n        <fieldset id=\"provider-debug\" style=\"flex:2 2 20em\">\n          <legend>Provider Debug</legend>\n          ${providerDebugBase()}\n        </fieldset>\n\n        ${childTests()}\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Attribute Tests</legend>\n          ${attributeDebug()}\n        </fieldset>\n\n        <fieldset id=\"content-debug\" style=\"flex:2 2 20em\">\n          <legend>Content Debug</legend>\n          ${contentDebug()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Tag Switching</legend>\n          ${tagSwitchDebug()}\n        </fieldset>\n\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>Table Tests</legend>\n          ${tableDebug()}\n        </fieldset>\n      </div>            \n    </div>\n  `\n\n  return content\n})\n","import { animateDestroy, animateInit } from './animations'\nimport { renderCountDiv } from './renderCount.component'\nimport {html, set, setLet, tag} from 'taggedjs'\n\nconst frameCount = 4\n\nexport const arrayTests = tag(function ArrayTests(){/* ArrayTests */\n  const array0: {name: string, scores: any[]}[] = set([])\n  let renderCount: number = setLet(0)(x => [renderCount, renderCount = x])\n\n  const getNewPerson = () => ({\n    name: 'Person '+array0.length,\n    scores: '0,'.repeat(frameCount).split(',').map((_v, index) => ({\n      frame: index + 1,\n      score: Math.floor(Math.random() * 4) + 1\n    }))\n  })\n\n  ++renderCount\n\n  return html`<!--arrayTests.js-->\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      ${array0.map((item,index) => html`\n        <div oninit=${animateInit} ondestroy=${animateDestroy} style=\"background-color:black;\">\n          <button onclick=${() => {\n            array0.splice(index,1)\n          }}>remove</button>\n\n          <div>\n            name:${item.name}\n          </div>\n          <div>\n            index:${index}\n          </div>\n          \n          <div>scores:${item.scores.map((score, playerIndex) => html`\n            <div style=\"border:1px solid white;\"\n              oninit=${animateInit} ondestroy=${animateDestroy}\n            >\n              ${scoreData({score, playerIndex})}-\n              <button id=${`score-data-${playerIndex}-${score.frame}-outside`} onclick=${() => ++score.score}>${score.score}</button>\n            </div>\n          `.key(score))}</div>\n          \n          <button onclick=${() => {\n            array0.splice(index,1)\n          }}>remove</button>\n          <button onclick=${() => {\n            array0.splice(index,0,getNewPerson())\n          }}>add before</button>\n        </div>\n      `.key(item))}\n    </div>\n\n    <button id=\"array-test-push-item\" onclick=${() => {\n      array0.push(getNewPerson())\n    }}>push item ${array0.length+1}</button>\n\n    <button onclick=${() => {\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n    }}>push 3 items</button>\n\n    <button onclick=${() => {\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n      array0.push(getNewPerson())\n    }}>push 9 items</button>\n\n    ${array0.length > 0 && html`\n      <button oninit=${animateInit} ondestroy=${animateDestroy} onclick=${() => {\n        array0.length = 0\n      }}>remove all</button>\n    `}\n\n    ${renderCountDiv({renderCount, name: 'arrayTests.ts'})}\n  `\n})\n\nconst scoreData = tag((\n  {score, playerIndex}: {\n    playerIndex: number\n    score:{score: number, frame: number}\n  }\n) => {\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  \n  ++renderCount\n  \n  return html`\n    frame:${score.frame}:\n    <button\n      id=${`score-data-${playerIndex}-${score.frame}-inside`}\n      onclick=${() => ++score.score}\n    >${score.score}</button>\n    <button onclick=${() => ++renderCount}>increase renderCount</button>\n    ${renderCountDiv({renderCount, name:'scoreData' + score.frame})}\n  `\n})\n","import { html, setLet, tag } from \"taggedjs\"\n\nexport const attributeDebug = tag(() => {\n  let selected: string = setLet('a')(x => [selected, selected = x])\n  let isOrange: boolean = setLet(true)(x => [isOrange, isOrange = x])\n\n  return html`\n    <input onchange=${(event: any) => selected = event.target.value} placeholder=\"a b or c\" />\n    <select id=\"select-sample-drop-down\">\n      ${['a','b','c'].map(item => html`\n        <option value=${item} ${item == selected ? 'selected' : ''}>${item} - ${item == selected ? 'true' : 'false'}</option>\n      `.key(item))}\n    </select>\n    <hr />\n    <h3>Special Attributes</h3>\n    <div>\n      <input type=\"checkbox\" onchange=${(event: any) => isOrange = event.target.checked} ${isOrange && 'checked'} /> - ${isOrange ? 'true' : 'false'}\n    </div>\n    <div style=\"display: flex;flex-wrap:wrap;gap:1em\">      \n      <div\n        style.background-color=${isOrange ? 'orange' : ''}\n        style.color=${isOrange ? 'black': ''}\n      >style.background-color=&dollar;{'orange'}</div>\n      \n      <div\n        class.background-orange=${isOrange ? true : false}\n        class.text-black=${isOrange ? true : false}\n      >class.background-orange=&dollar;{true}</div>\n      \n      <div class=${isOrange ? 'background-orange text-black' : ''}\n      >class=&dollar;{'background-orange text-black'}</div>\n      \n      <div ${{class: 'text-white' + (isOrange ? ' background-orange' : '')}}\n      >class=&dollar;{'background-orange'} but always white</div>\n    </div>\n    <style>\n      .background-orange {background-color:orange}\n      .text-black {color:black}\n      .text-white {color:white}\n    </style>\n  `\n})\n","import { Tag, html, setLet, tag } from \"taggedjs\"\nimport { innerHtmlPropsTest, innerHtmlTest } from \"./innerHtmlTests\"\nimport { renderCountDiv } from \"./renderCount.component\"\n\nconst childContentTest = tag((\n  {legend, id}:  {legend: string, id: string},\n  children?: Tag[],\n) => {\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  let counter = setLet(0)(x => [counter, counter = x])\n\n  ++renderCount\n  \n  return html`\n    <fieldset id=${id} style=\"flex:2 2 20em\">\n      <legend>${legend}</legend>\n      ${children}\n      <hr />\n      <button onclick=${() => ++counter}>increase childContentTest ${counter}</button>\n      ${renderCountDiv({renderCount, name: 'childContentTest'})}\n    </fieldset>\n  `\n})\n\nexport const childTests = tag(() => {\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  let counter = setLet(0)(x => [counter, counter = x])\n\n  ++renderCount\n\n  return html`\n    <fieldset id=\"children-test\" style=\"flex:2 2 20em\">\n      <legend>childTests</legend>\n      \n      ${/*renderCountDiv(renderCount)}- ${renderCount*/false}\n      \n      ${innerHtmlTest({}, html`\n        <b>Field set body A</b>\n        <hr />\n        <button id=\"innerHtmlTest-childTests-button\"\n          onclick=${() => ++counter}\n        >increase childTests inside ${counter}:${renderCount}</button>\n        <span id=\"innerHtmlTest-childTests-display\">${counter}</span>\n        ${renderCountDiv({renderCount, name: 'childTests'})}\n      `)}\n\n      ${innerHtmlPropsTest(22, html`\n        <b>Field set body B</b>\n        <hr />\n        <button id=\"innerHtmlPropsTest-childTests-button\"\n          onclick=${() => ++counter}\n        >increase childTests inside 22 ${counter}</button>\n        <span id=\"innerHtmlPropsTest-childTests-display\">${counter}</span>\n        ${renderCountDiv({renderCount, name: 'innerHtmlPropsTest child'})}\n      `)}\n\n      ${/*childContentTest({legend: 'Inner Test', id:'children-inner-test'}, html`\n        ${innerHtmlTest(html`\n          <b>Field set body C</b>\n        `)}\n        \n        ${innerHtmlPropsTest(33, html`\n          <b>Field set body D</b>\n        `)}\n\n        <hr />\n        \n        <button onclick=${() => ++counter}>increase childTests inside ${counter}</button>\n        ${renderCountDiv(renderCount)}\n      `)*/false}\n      \n      <hr />\n      <button id=\"childTests-button\"\n        onclick=${() => ++counter}\n      >increase childTests outside ${counter} - ${renderCount}</button>\n      <span id=\"childTests-display\">${counter}</span>\n      ${renderCountDiv({renderCount, name:'childTests'})}\n    </fieldset>\n  `\n})\n","import { renderCountDiv } from \"./renderCount.component\"\nimport { html, tag, Subject, onInit, setLet } from \"taggedjs\"\n\nexport const counters = tag(() => {  \n  let counter = setLet(0)(x => [counter, counter = x])\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  let initCounter = setLet(0)(x => [initCounter, initCounter = x])\n\n  onInit(() => {\n    ++initCounter\n    console.info('tagJsDebug.js: 👉 i should only ever run once')\n  })\n\n  const increaseCounter = () => {\n    ++counter\n  }\n\n  ++renderCount // for debugging\n\n  return html`<!--counters-->\n    <div>Subscriptions:${(Subject as any).globalSubCount$}</div>\n    <button onclick=${() => console.info('subs', (Subject as any).globalSubs)}>log subs</button>\n    <div>initCounter:${initCounter}</div>\n    <button id=\"increase-counter\" onclick=${increaseCounter}>counter:${counter}</button>\n    <span id=\"counter-display\">${counter}</span>\n    <fieldset>\n      <legend>inner counter</legend>\n      ${innerCounters({counter, increaseCounter})}\n    </fieldset>\n    ${renderCountDiv({renderCount, name: 'counters'})}\n  `\n})\n\nconst innerCounters = tag(({counter, increaseCounter}) => {\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n\n  ++renderCount // for debugging\n\nreturn html`\n    <button id=\"inner-increase-counter\" onclick=${increaseCounter}\n    >counter:${counter}</button>\n    <span id=\"inner-counter-display\">${counter}</span>\n    renderCount:${renderCount}\n    ${/*renderCountDiv({renderCount, name: 'inner counters'})*/false}\n  `\n})\n","type Test = () => unknown\nconst onlyTests: Test[] = []\nconst tests: Test[] = []\n\nexport function it(label: string, run: () => any) {\n  tests.push(() => {\n    try {\n      run()\n      console.debug('✅ ' + label)\n    } catch (error) {\n      console.debug('❌ ' + label)\n      throw error\n    }\n  })\n}\n\nit.only = (label: string, run: () => any) => {\n  onlyTests.push(() => {\n    try {\n      run()\n      console.debug('✅ ' + label)\n    } catch (error) {\n      console.debug('❌ ' + label)\n      throw error\n    }\n  })\n}\n\nexport function execute() {\n  if(onlyTests.length) {\n    return runTests(onlyTests)\n  }\n  \n  return runTests(tests)\n}\n\nfunction runTests(tests: Test[]) {\n  tests.forEach(test => test())\n}\n\nexport function expect(expected: unknown) {\n  return {\n    toBeDefined: () => {\n      if(expected !== undefined && expected !== null) {\n        return\n      }\n\n      const message = `Expected ${JSON.stringify(expected)} to be defined`\n      console.error(message, {expected})\n      throw new Error(message)\n    },\n    toBe: (received: unknown, customMessage?: string) => {\n      if(expected === received) {\n        return\n      }\n\n      const message = customMessage || `Expected ${typeof(expected)} ${JSON.stringify(expected)} to be ${typeof(received)} ${JSON.stringify(received)}`\n      console.error(message, {received, expected})\n      throw new Error(message)\n    }\n  }\n}","import { html, setLet, tag, Tag, ValueSubject, isSubjectInstance, isTagArray, TagChildren } from \"taggedjs\"\nimport { renderCountDiv } from \"./renderCount.component\"\n\nexport const innerHtmlTest = tag((\n  _props: unknown,\n  children: TagChildren,\n) => {\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  let counter = setLet(0)(x => [counter, counter = x])\n\n  ++renderCount\n\n  return html`<!--innerHtmlTests.js-->\n    <fieldset id=\"innerHtmlTests-1\">\n      <legend>no props test</legend>\n      <div>${children}</div>\n      <div>isSubjectInstance:${isSubjectInstance(children)}</div>\n      <div>isSubjectTagArray:${isTagArray(children.value)}</div>\n      <button id=\"innerHtmlTest-counter-button\"\n      onclick=${() => ++counter}>increase innerHtmlTest ${counter}</button>\n      <span id=\"innerHtmlTest-counter-display\">${counter}</span>\n      ${renderCountDiv({renderCount, name: 'innerHtmlTest'})}\n    </fieldset>\n  `\n})\n\nexport const innerHtmlPropsTest = tag((\n  x: number,\n  children: ValueSubject<Tag[]>\n) => {\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  let counter = setLet(0)(x => [counter, counter = x])\n  \n  ++renderCount\n  \n  return html`<!--innerHtmlTests.js-->\n    <fieldset id=\"innerHtmlTests-2\">\n      <legend>innerHTML Props: ${x}</legend>\n      ${children}\n      <button id=\"innerHtmlPropsTest-button\" onclick=${() => ++counter}\n      >increase innerHtmlPropsTest ${counter}</button>\n      <span id=\"innerHtmlPropsTest-display\">${counter}</span>\n      ${/*renderCountDiv(renderCount)*/ false}\n    </fieldset>\n  `\n})\n","import { setLet, html, tag, onInit, getCallback, onDestroy } from \"taggedjs\"\n\nconst test0interval = 3000\nconst test1interval = 6000\n\nexport const intervalTester0 = tag(() => {\n  let intervalCount: number = setLet(0)(x => [intervalCount, intervalCount = x])\n  let intervalId: any = setLet(undefined)(x => [intervalId, intervalId = x])\n  let intervalId2: any = setLet(undefined)(x => [intervalId2, intervalId2 = x])\n  let renderCounter: number = setLet(0)(x => [renderCounter, renderCounter = x])\n  let currentTime: number = setLet(0)(x => [currentTime, currentTime = x])\n  const callback = getCallback()\n\n  const increase = () => ++intervalCount\n\n  console.log('intervalId', intervalId)\n\n  const startInterval = () => {\n    console.info('interval test 0 started...')\n    trackTime()\n\n    intervalId = setInterval(callback(() => {\n      increase()\n    }),test0interval)\n  }\n\n  const stopInterval = () => {\n    clearInterval(intervalId)\n    clearInterval(intervalId2)\n    intervalId = undefined\n    intervalId2 = undefined\n    console.info('🛑 interval test 0 stopped')\n  }\n\n  function trackTime() {\n    currentTime = 0\n    \n    intervalId2 = setInterval(callback(() => {\n      currentTime = currentTime + 500\n\n      if(currentTime >= test0interval) {\n        currentTime = 0\n        console.log('interval tick')\n      }      \n    }), 500)\n\n    console.log('▶️ interval started')\n  }\n\n  const toggle = () => {\n    if(intervalId || intervalId2) {\n      stopInterval()\n      return\n    }\n\n    startInterval()\n  }\n\n  const delayIncrease = () => setTimeout(callback(() => {\n    currentTime = currentTime + 200\n  }), 1000);\n\n  onInit(startInterval)\n  onDestroy(stopInterval)\n\n  ++renderCounter\n\n  return html`<!--intervalDebug.js-->\n    <div>interval type 1 at ${test0interval}ms</div>\n    intervalId: ${intervalId}\n    <button type=\"button\" onclick=${increase}>${intervalCount}:${renderCounter}</button>\n    <input type=\"range\" min=\"0\" max=${test0interval} step=\"1\" value=${currentTime} />\n    <div>\n      --${currentTime}--\n    </div>\n    <button type=\"button\" onclick=${toggle}\n      style.background-color=${intervalId || intervalId2 ? 'red' : 'green'}\n    >start/stop</button>\n    <button type=\"button\" onclick=${delayIncrease}>delay increase currentTime</button>\n  `\n})\n\nexport const intervalTester1 = tag(() => {  \n  let intervalCount: number = setLet(0)(x => [intervalCount, intervalCount = x])\n  let intervalId: any = setLet(undefined)(x => [intervalId, intervalId = x])\n  let intervalId2: any = setLet(undefined)(x => [intervalId2, intervalId2 = x])\n  let renderCounter: number = setLet(0)(x => [renderCounter, renderCounter = x])\n  let currentTime: number = setLet(0)(x => [currentTime, currentTime = x])\n  \n  const callback = getCallback()\n  const increase = () => ++intervalCount\n\n  function trackTime() {\n    currentTime = 0\n    \n    intervalId2 = setInterval(callback(() => {\n      currentTime = currentTime + 500\n\n      if(currentTime >= test1interval) {\n        currentTime = 0\n      }\n    }), 500)\n  }\n\n  const destroy = () => {\n    clearInterval(intervalId)\n    clearInterval(intervalId2)\n    intervalId = undefined\n    intervalId2 = undefined\n    console.info('interval 1 stopped')\n  }\n\n  function toggleInterval() {\n    if(intervalId) {\n      return destroy()\n    }\n\n    console.info('interval test 1 started...')\n    trackTime()\n    intervalId = setInterval(callback(() => {\n      increase()\n      console.info('slow interval ran')\n    }),test1interval)\n  }\n\n  onInit(toggleInterval)\n  onDestroy(toggleInterval)\n\n  ++renderCounter\n\n  return html`\n    <div>interval type 2 with ${test1interval}ms</div>\n    intervalId: ${intervalId}\n    <button type=\"button\" onclick=${increase}>${intervalCount}:${renderCounter}</button>\n    <input type=\"range\" min=\"0\" max=${test1interval} step=\"1\" value=${currentTime} />\n    <div>\n      --${currentTime}--\n    </div>\n    <button type=\"button\" onclick=${toggleInterval}\n      style.background-color=${intervalId ? 'red' : 'green'}\n    >start/stop</button>\n  `\n})\n","import { childTests } from \"./childTests\"\nimport { html, set, tag } from \"taggedjs\"\nimport { arrayTests } from \"./arrayTests\"\nimport { tagSwitchDebug } from \"./tagSwitchDebug.component\"\nimport { propsDebugMain } from \"./PropsDebug.component\"\nimport { providerDebugBase } from \"./providerDebug\"\nimport { counters } from \"./countersDebug\"\n\nexport const IsolatedApp = tag(() => {\n  const stateTest = set('isolated-app-state')\n  // const component = childTests() as any\n  // const template = component.wrapper().getTemplate()\n\n  const view = 'tagSwitchDebug' as 'props' | 'child' | 'tagSwitchDebug'\n  \n  return html`<!--isolatedApp.js-->\n    <h1 id=\"app\">🏷️ TaggedJs - isolated</h1>\n\n    <div id=\"tagDebug-fx-wrap\">\n      <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n        ${view === 'props' && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>propsDebugMain</legend>\n            ${propsDebugMain()}\n          </fieldset>\n        `}\n\n        ${/*\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>providerDebugBase</legend>\n          ${providerDebugBase()}\n        </fieldset>\n        */false}\n\n        ${view === 'tagSwitchDebug' && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>tagSwitchDebug</legend>\n            ${tagSwitchDebug()}\n          </fieldset>\n        `}\n\n        ${/*\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>arrays</legend>\n          ${arrayTests()}\n        </fieldset>\n        */false}\n\n        ${/*\n        <fieldset style=\"flex:2 2 20em\">\n          <legend>counters</legend>\n          ${counters()}\n        </fieldset>\n        */false}\n\n        ${view === 'child' && html`\n          <fieldset style=\"flex:2 2 20em\">\n            <legend>Children Tests</legend>\n            ${childTests()}\n          </fieldset>\n        `}\n\n        ${/*\n          <textarea style=\"font-size:0.6em;min-width:50vw;height:400px\">${ template.string }</textarea>\n          <textarea style=\"font-size:0.6em;min-width:50vw;height:400px\">${ JSON.stringify(template, null, 2) }</textarea>\n          */ false\n        }\n      </div>\n    </div>\n  `\n})\n","import { animateDestroy, animateInit } from \"./animations\"\nimport { renderCountDiv } from \"./renderCount.component\"\nimport { tagDebugProvider, upperTagDebugProvider } from \"./tagJsDebug\"\nimport { setLet, html, tag, providers, set } from \"taggedjs\"\n\nexport class TagDebugProvider {\n  tagDebug = 0\n}\n\nexport const providerDebugBase = tag(() => {\n  const provider = providers.create( tagDebugProvider as any ) as any\n  const providerClass = providers.create( TagDebugProvider as any ) as any\n  const test = setLet('props debug base')\n  let propCounter = setLet(0)(x => [propCounter, propCounter = x])\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n\n  ++renderCount\n\n  return html`\n    <div>\n      <strong>testValue</strong>:${provider.test}\n    </div>\n    <div>\n      <strong>upperTest</strong>:${provider.upper?.test || '?'}\n    </div>\n    <div>\n      <strong>providerClass</strong>:${providerClass.tagDebug || '?'}\n    </div>\n\n    <div style=\"display:flex;gap:1em\">\n      <button id=\"increase-provider-🍌-0-button\" onclick=${() => ++provider.test}\n      >🍌 increase provider.test ${provider.test}</button>\n      <span id=\"increase-provider-🍌-0-display\">${provider.test}</span>\n      \n      <button id=\"increase-provider-upper-🌹-0-button\" onclick=${() => ++provider.upper.test}\n      >🌹 increase upper.provider.test ${provider.upper.test}</button>\n      \n      <span id=\"increase-provider-upper-🌹-0-display\">${provider.upper.test}</span>\n      <button id=\"increase-provider-🍀-0-button\" onclick=${() => ++providerClass.tagDebug}\n      >🍀 increase provider class ${providerClass.tagDebug}</button>\n      <span id=\"increase-provider-🍀-0-display\">${providerClass.tagDebug}</span>\n\n      <button id=\"increase-prop-🐷-0-button\" onclick=${() => ++propCounter}\n      >🐷 increase propCounter ${propCounter}</button>\n      <span id=\"increase-prop-🐷-0-display\">${propCounter}</span>\n    </div>\n\n    <hr />\n    ${providerDebug({\n      propCounter,\n      propCounterChange: x => {\n        propCounter = x\n      }\n    })}\n    <hr />\n    renderCount outer:${renderCount}\n    ${renderCountDiv({renderCount, name:'providerDebugBase'})}\n  `\n})\n\nconst providerDebug = tag(({\n  propCounter,\n  propCounterChange,\n}: {\n  propCounter: number,\n  propCounterChange: (x: number) => unknown\n}) => {\n  const provider = providers.inject( tagDebugProvider )\n  const upperProvider = providers.inject( upperTagDebugProvider )\n  const providerClass = providers.inject( TagDebugProvider )\n\n  const test = set('provider debug inner test')\n  let showProProps: boolean = setLet(false)(x => [showProProps, showProProps = x])\n  let renderCount: number = setLet(0)(x => [renderCount, renderCount = x])\n  // let propCounter: number = setLet(0)(x => [propCounter, propCounter = x])\n\n  ++renderCount\n\n  return html`<!--providerDebug.js-->\n    <button id=\"increase-provider-🍌-1-button\" onclick=${() => ++provider.test}\n    >🍌 increase provider.test ${provider.test}</button>\n    <span id=\"increase-provider-🍌-1-display\">${provider.test}</span>\n    \n    <button id=\"increase-provider-upper-🌹-1-button\" onclick=${() => ++upperProvider.test}\n    >🌹 increase upper.provider.test ${upperProvider.test}</button>\n        \n    <span id=\"increase-provider-upper-🌹-1-display\">${upperProvider.test}</span>\n    <button id=\"increase-provider-🍀-1-button\" onclick=${() => ++providerClass.tagDebug}\n    >🍀 increase provider class ${providerClass.tagDebug}</button>\n    <span id=\"increase-provider-🍀-1-display\">${providerClass.tagDebug}</span>\n\n    <div>\n      <button id=\"increase-prop-🐷-1-button\" onclick=${() => propCounterChange(++propCounter)}\n      >🐷 increase propCounter ${propCounter}</button>\n      <span id=\"increase-prop-🐷-1-display\">${propCounter}</span>\n    </div>\n\n    <button onclick=${() => showProProps = !showProProps}\n    >${showProProps ? 'hide' : 'show'} provider as props</button>\n    \n    ${showProProps && html`\n      <div oninit=${animateInit} ondestroy=${animateDestroy}>\n        <hr />\n        <h3>Provider as Props</h3>\n        ${testProviderAsProps(providerClass)}\n      </div>\n    `}\n\n    <hr />\n    renderCount inner:${renderCount}\n    ${renderCountDiv({renderCount, name:'providerDebugInner'})}\n  `\n})\n\n\nconst testProviderAsProps = tag((\n  providerClass: TagDebugProvider\n) => {\n  return html`<!--providerDebug.js@TestProviderAsProps-->\n    <textarea wrap=\"off\" rows=\"20\" style=\"width:100%;font-size:0.6em\">${JSON.stringify(providerClass, null, 2)}</textarea>\n  `\n})","import { tag, html } from \"taggedjs\"\n\nexport const renderCountDiv = tag((\n  {renderCount, name}: {\n    renderCount: number\n    name: string\n  }\n) => html`<div><small>(${name} render count ${renderCount})</small></div>`)\n","import { html, tag, setLet } from \"taggedjs\"\n\nexport const tableDebug = tag(() => {\n  let showCell: boolean = setLet(true)(x => [showCell, showCell = x])\n\n  return html`\n    <div style=\"max-height: 800px;overflow-y: scroll;\">\n      <table cellPadding=${5} cellSpacing=${5} border=\"1\">\n        <thead style=\"position: sticky;top: 0;\">\n          <tr>\n            <th>hello</th>\n            <th>hello</th>\n            ${showCell && html`\n              <td>hello 2 thead cell</td>\n            `}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>world</td>\n            <td>world</td>\n            ${showCell && html`\n              <td>world 2 tbody cell</td>\n            `}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  `\n})\n","import { propsDebugMain } from \"./PropsDebug.component\"\nimport { animateDestroy, animateInit } from \"./animations\"\nimport { arrayTests } from \"./arrayTests\"\nimport { intervalTester0, intervalTester1 } from \"./intervalDebug\"\nimport { html, tag, providers, setLet } from \"taggedjs\"\nimport { renderCountDiv } from \"./renderCount.component\"\n\nexport function tagDebugProvider() {\n  const upper = providers.create( upperTagDebugProvider as any )\n  return {\n    upper,\n    test: 0\n  }\n}\n\nexport function upperTagDebugProvider() {\n  return {\n    name: 'upperTagDebugProvider',\n    test: 0\n  }\n}\n\nexport const tagDebug = tag(() => {// tagDebug.js\n  let _firstState: string = setLet('tagJsDebug.js')(x => [_firstState, _firstState = x])\n  let showIntervals: boolean = setLet(false)(x => [showIntervals, showIntervals = x])\n  let renderCount: number = setLet(0)(x => [renderCount, renderCount = x])\n\n  ++renderCount\n\n  return html`<!-- tagDebug.js -->\n    <h3 id=\"debugging\">Debugging</h3>\n    ${renderCountDiv({renderCount, name: 'tagJsDebug'})}\n\n    <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n      <fieldset style=\"flex:4 4 40em\">\n        <legend>arrays</legend>\n        ${arrayTests()}\n      </fieldset>\n    \n      <fieldset id=\"debug-intervals\" style=\"flex:2 2 20em\">\n        <legend>\n          Interval Testing\n        </legend>\n\n        <button\n          onclick=${() => showIntervals = !showIntervals}\n        >hide/show</button>\n\n        ${showIntervals && html`\n          <div oninit=${animateInit} ondestroy=${animateDestroy}>\n            <div>${intervalTester0()}</div>\n            <hr />\n            <div>${intervalTester1()}</div>\n          </div>\n        `}\n      </fieldset>\n\n      <fieldset id=\"props-debug\" style=\"flex:2 2 20em\">\n        <legend>Props Debug</legend>\n        ${propsDebugMain()}\n      </fieldset>\n    </div>\n  `\n})\n","import { html, tag, setLet, InputElementTargetEvent, Tag } from \"taggedjs\"\nimport { renderCountDiv } from \"./renderCount.component\"\n\ntype SelectedTag = null | string | undefined\n\nexport const tagSwitchDebug = tag(() => {\n  let selectedTag = setLet(null as SelectedTag)(x => [selectedTag, selectedTag = x])\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  \n  function changeSelectedTag(event: InputElementTargetEvent) {\n    selectedTag = event.target.value\n\n    if(selectedTag === 'undefined') {\n      selectedTag = undefined\n    }\n\n    if(selectedTag === 'null') {\n      selectedTag = null\n    }\n  }\n\n  let tagOutput: string | Tag = 'select tag below'\n  switch (selectedTag) {\n    case null: tagOutput = 'null, select tag below'\n      break;\n    case '1': tagOutput = tag1({title:'value switch'})\n      break;\n    case '2': tagOutput = tag2({title:'value switch'})\n      break;\n    case '3': tagOutput = tag3({title:'value switch'})\n      break;\n  }\n\n  let tagOutput2 = html`<div id=\"select-tag-above\">select tag above</div>`\n  console.log('selectedTag', selectedTag)\n  switch (selectedTag) {\n    case null: tagOutput2 = html`<div id=\"select-tag-above\">null, select tag above</div>`\n      break;\n    case '1': tagOutput2 = tag1({title:'tag switch'})\n      break;\n    case '2': tagOutput2 = tag2({title:'tag switch'})\n      break;\n    case '3': tagOutput2 = tag3({title:'tag switch'})\n      break;\n  }\n\n  ++renderCount\n\n  return html`\n    <div>\n      selectedTag: ${selectedTag}\n    </div>\n    \n    <select id=\"tag-switch-dropdown\" onchange=${changeSelectedTag}>\n\t    <option></option>\n      <!-- TODO: implement selected attribute --->\n\t    <option value=\"undefined\" ${ selectedTag === undefined ? {selected: true} : {} }>undefined</option>\n\t    <option value=\"null\" ${ selectedTag === null ? {selected: true} : {} }>null</option>\n\t    <option value=\"1\" ${ selectedTag === '1' ? {selected: true} : {} }>tag 1</option>\n\t    <option value=\"2\" ${ selectedTag === '2' ? {selected: true} : {} }>tag 2</option>\n\t    <option value=\"3\" ${ selectedTag === '3' ? {selected: true} : {} }>tag 3</option>\n    </select>\n\n    <div style=\"display:flex;gap:1em;\">\n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 1 - string | Tag</h3>\n        <div>${tagOutput}</div>\n      </div>\n      \n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 2 - Tag</h3>\n        <div>${tagOutput2}</div>\n      </div>\n      \n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 3 - ternary (only 1 or 3 shows)</h3>\n        <div>${selectedTag === '3' ? tag3({title: 'ternary simple'}) : tag1({title: 'ternary simple'})}</div>\n      </div>\n      \n      <div style=\"border:1px solid blue;flex-grow:1\">\n        <h3>Test 3.2 - ternary via prop (only 1 or 3 shows)</h3>\n        <div>${ternaryPropTest({selectedTag})}</div>\n      </div>\n\n      <div style=\"border:1px solid red;flex-grow:1\">\n        <h3>Test 4 - arraySwitching</h3>\n        <div>${arraySwitching({selectedTag})}</div>\n      </div>\n    </div>\n    ${renderCountDiv({renderCount, name:'tagSwitchDebug'})}\n  `\n})\n\nexport const ternaryPropTest = tag((\n  {selectedTag}: {selectedTag: string | undefined | null}\n) => {\n  return html`\n  <div>${selectedTag === '3' ? tag3({title: 'ternaryPropTest'}) : tag1({title: 'ternaryPropTest'})}</div>\n  `\n})\n\nexport const tag1 = tag(({title}: {title: string}) => {\n  let counter = setLet(0)(x => [counter, counter = x])\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  ++renderCount\n  return html`\n    <div style=\"border:1px solid orange;\">\n      <div id=\"tagSwitch-1-hello\">Hello 1 ${title} World</div>\n      <button onclick=${() => ++counter}>increase ${counter}</button>\n      ${renderCountDiv({renderCount, name:'tag1'})}\n    </div>\n  `\n})\n\nexport const tag2 = tag(({title}: {title: string}) => {\n  let counter = setLet(0)(x => [counter, counter = x])\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  ++renderCount\n  return html`\n    <div style=\"border:1px solid orange;\">\n      <div id=\"tagSwitch-2-hello\">Hello 2 ${title} World</div>\n      <button onclick=${() => ++counter}>increase ${counter}</button>\n      ${renderCountDiv({renderCount, name:'tag1'})}\n    </div>\n  `\n})\n\nexport const tag3 = tag(({title}: {title: string}) => {\n  let counter = setLet(0)(x => [counter, counter = x])\n  let renderCount = setLet(0)(x => [renderCount, renderCount = x])\n  ++renderCount\n  return html`\n    <div style=\"border:1px solid orange;\">\n      <div id=\"tagSwitch-3-hello\">Hello 3 ${title} World</div>\n      <button onclick=${() => ++counter}>increase ${counter}</button>\n      ${renderCountDiv({renderCount, name:'tag1'})}\n    </div>\n  `\n})\n\nexport const arraySwitching = tag((\n  {selectedTag}: {selectedTag: SelectedTag}\n) => {\n  switch (selectedTag) {\n    case undefined:\n      return html`its an undefined value`\n\n    case null:\n      return html`its a null value`\n\n    case '1':\n      return html`${['a'].map(x => html`${tag1({title: `array ${selectedTag} ${x}`})}`.key(x))}`\n\n    case '2':\n      return html`${['b','c'].map(x => html`${tag2({title: `array ${selectedTag} ${x}`})}`.key(x))}`\n\n    case '3':\n      return html`${['d','e','f'].map(x => html`${tag3({title: `array ${selectedTag} ${x}`})}`.key(x))}`\n  }\n\n  return html`nothing to show for in arrays`\n})\n","import { execute, expect, it } from \"./expect\"\n\nexport function runTests() {  \n  it('elements exists', () => {\n    expect(document.getElementById('h1-app')).toBeDefined()\n    const toggleTest = document.getElementById('toggle-test')\n    expect(toggleTest).toBeDefined()\n    expect(toggleTest?.innerText).toBe('toggle test')\n    toggleTest?.click()\n    expect(toggleTest?.innerText).toBe('toggle test true')\n    toggleTest?.click()\n    expect(toggleTest?.innerText).toBe('toggle test')\n    \n    const propsTextarea = document.getElementById('props-debug-textarea') as HTMLTextAreaElement\n    expect(propsTextarea.value.replace(/\\s/g,'')).toBe(`{\"test\":33,\"x\":\"y\"}`)\n  })\n\n  it('counters increase', () => {\n    testCounterElements('#increase-counter', '#counter-display')\n    // testCounterElements('#increase-gateway-count', '#display-gateway-count')\n      \n    testCounterElements('#innerHtmlTest-counter-button', '#innerHtmlTest-counter-display')\n    testCounterElements('#innerHtmlPropsTest-button', '#innerHtmlPropsTest-display')\n  })\n\n  it('testDuelCounterElements', () => {\n    testDuelCounterElements(\n      ['#childTests-button', '#childTests-display'],\n      ['#innerHtmlPropsTest-childTests-button', '#innerHtmlPropsTest-childTests-display'],\n    )\n\n    testDuelCounterElements(\n      ['#childTests-button', '#childTests-display'],\n      ['#innerHtmlTest-childTests-button', '#innerHtmlTest-childTests-display'],\n    )\n\n    testDuelCounterElements(\n      ['#increase-provider-🍌-0-button', '#increase-provider-🍌-0-display'],\n      ['#increase-provider-🍌-1-button', '#increase-provider-🍌-1-display'],\n    )\n\n    testDuelCounterElements(\n      ['#increase-provider-upper-🌹-0-button', '#increase-provider-upper-🌹-0-display'],\n      ['#increase-provider-upper-🌹-1-button', '#increase-provider-upper-🌹-1-display'],\n    )\n\n    testDuelCounterElements(\n      ['#increase-provider-🍀-0-button', '#increase-provider-🍀-0-display'],\n      ['#increase-provider-🍀-1-button', '#increase-provider-🍀-1-display'],\n    )\n\n    testDuelCounterElements(\n      ['#propsDebug-🥩-0-button', '#propsDebug-🥩-0-display'],\n      ['#propsDebug-🥩-1-button', '#propsDebug-🥩-1-display'],\n    )\n  })\n  \n  it('provider debug', () => {\n    testDuelCounterElements(\n      ['#increase-prop-🐷-0-button', '#increase-prop-🐷-0-display'],\n      ['#increase-prop-🐷-1-button', '#increase-prop-🐷-1-display'],\n    )\n  })\n\n  it('tagSwitching', () => {\n    console.log('0 - 0')\n    expect(elementCount('#select-tag-above')).toBe(1, 'Expected select-tag-above element to be defined')\n    expect(elementCount('#tag-switch-dropdown')).toBe(1, 'Expected one #tag-switch-dropdown')\n    expect(elementCount('#tagSwitch-1-hello')).toBe(2, 'Expected two #tagSwitch-1-hello elements')\n    expect(elementCount('#tagSwitch-2-hello')).toBe(0)\n    expect(elementCount('#tagSwitch-3-hello')).toBe(0)\n    console.log('0 - 1')\n    const dropdown = document.getElementById('tag-switch-dropdown') as HTMLSelectElement\n    dropdown.value = \"1\"\n\n    ;(dropdown as any).onchange({target:dropdown})\n    console.log('0 - 2')\n    expectElementCount('#tagSwitch-1-hello', 5)\n    expect(elementCount('#tagSwitch-2-hello')).toBe(0)\n    expect(elementCount('#tagSwitch-3-hello')).toBe(0)\n    expect(elementCount('#select-tag-above')).toBe(0)\n\n    dropdown.value = \"2\"\n    ;(dropdown as any).onchange({target:dropdown})\n\n    expectElementCount('#tagSwitch-1-hello', 2)\n    expectElementCount('#tagSwitch-2-hello', 4)\n    expect(elementCount('#tagSwitch-3-hello')).toBe(0)\n    expect(elementCount('#select-tag-above')).toBe(0)\n\n    dropdown.value = \"3\"\n    ;(dropdown as any).onchange({target:dropdown})\n\n    expect(elementCount('#tagSwitch-1-hello')).toBe(0,'Expected no hello 1s')\n    expect(elementCount('#tagSwitch-2-hello')).toBe(0)\n    expectElementCount('#tagSwitch-3-hello', 7)\n    expect(elementCount('#select-tag-above')).toBe(0)\n\n    dropdown.value = \"\"\n    ;(dropdown as any).onchange({target:dropdown})\n\n    expectElementCount('#select-tag-above',1)\n    expectElementCount('#tag-switch-dropdown',1)\n    expectElementCount('#tagSwitch-1-hello',2)\n    expectElementCount('#tagSwitch-2-hello',0)\n    expectElementCount('#tagSwitch-3-hello',0)\n  })\n\n  it('array testing', () => {\n    expect(elementCount('#array-test-push-item')).toBe(1)\n    expect(elementCount('#score-data-0-1-inside')).toBe(0)\n    expect(elementCount('#score-data-0-1-outside')).toBe(0)\n    document.getElementById('array-test-push-item')?.click()\n    expect(elementCount('#score-data-0-1-inside')).toBe(1)\n    expect(elementCount('#score-data-0-1-outside')).toBe(1)\n    \n    const insideElm = document.getElementById('score-data-0-1-inside')\n    let indexValue = insideElm?.innerText\n    const outsideElm = document.getElementById('score-data-0-1-outside')\n    const outsideValue = outsideElm?.innerText\n    expect(indexValue).toBe(outsideValue)\n\n    insideElm?.click()\n    expect(insideElm?.innerText).toBe(outsideElm?.innerText)\n    expect(indexValue).toBe((Number(insideElm?.innerText) - 1).toString())\n    expect(indexValue).toBe((Number(outsideElm?.innerText) - 1).toString())\n\n    outsideElm?.click()\n    expect(insideElm?.innerText).toBe(outsideElm?.innerText)\n    expect(indexValue).toBe((Number(insideElm?.innerText) - 2).toString())\n    expect(indexValue).toBe((Number(outsideElm?.innerText) - 2).toString())\n\n  })  \n\n  try {\n    execute()\n    console.info('✅ all tests passed')\n    return true\n  } catch (error: unknown) {\n    console.error('❌ tests failed: ' + (error as Error).message, error)\n    return false\n  }\n}\n\nfunction elementCount(selector: string) {\n  return document.querySelectorAll(selector).length\n}\n\nfunction testDuelCounterElements(\n  [button0, display0]: [string, string], // button, display\n  [button1, display1]: [string, string], // button, display\n) {\n  let query = expectElementCount(display0, 1)\n  const display0Element = query[0] as HTMLElement\n  const ip0 = display0Element.innerText\n  testCounterElements(button0, display0)\n  \n  query = expectElementCount(display1, 1)\n  let display1Element = query[0] as HTMLElement\n  let ip1Check = display1Element.innerText\n  const value = (Number(ip0) + 2).toString()\n  expect(ip1Check).toBe(value, `Expected second increase provider to be increased to ${ip0} but got ${ip1Check}`)\n \n  testCounterElements(button1, display1)\n  \n  query = expectElementCount(display1, 1)\n  display1Element = query[0] as HTMLElement\n  ip1Check = display1Element.innerText\n  expect(ip1Check).toBe((Number(ip0) + 4).toString(), `Expected ${display1} innerText to be ${Number(ip0) + 4} but instead it is ${ip1Check}`)\n}\n\n/** increases counter by two */\nfunction testCounterElements(\n  counterButtonId: string,\n  counterDisplayId: string,\n  {elementCountExpected} = {\n    elementCountExpected: 1\n  }\n) {\n  // const getByIndex = (selector: string, index: number) => document.querySelectorAll(selector)[index] as unknown as HTMLElement[]\n  const increaseCounters = document.querySelectorAll(counterButtonId) as unknown as HTMLElement[]\n  const counterDisplays = document.querySelectorAll(counterDisplayId) as unknown as HTMLElement[]\n\n  expect(increaseCounters.length).toBe(elementCountExpected, `Expected ${counterButtonId} to be ${elementCountExpected} elements but is instead ${increaseCounters.length}`)\n  expect(counterDisplays.length).toBe(elementCountExpected, `Expected ${counterDisplayId} to be ${elementCountExpected} elements but is instead ${counterDisplays.length}`)\n\n  increaseCounters.forEach((increaseCounter, index) => {\n    const counterDisplay = counterDisplays[index]\n    // const counterDisplay = getByIndex(index)\n    \n    let counterValue = Number(counterDisplay?.innerText)\n    increaseCounter?.click()\n\n    let oldCounterValue = counterValue + 1\n    counterValue = Number(counterDisplay?.innerText)\n    expect(oldCounterValue).toBe(counterValue, `Expected element(s) ${counterDisplayId} to be value ${oldCounterValue} but is instead ${counterValue}`)\n    increaseCounter?.click()\n\n    counterValue = Number(counterDisplay?.innerText)\n    ++oldCounterValue\n    expect(oldCounterValue).toBe(counterValue, `Expected element(s) ${counterDisplayId} to increase value to ${oldCounterValue} but is instead ${counterValue}`)\n  })\n}\n\nfunction expectElementCount(\n  query: string,\n  count: number,\n  message?: string\n) {\n//  const found = elementCount(query)\n  const elements = document.querySelectorAll(query)\n  const found = elements.length\n\n  message = message || `Expected ${count} elements to match query ${query} but found ${found}`\n\n  expect(found).toBe(count, message)\n\n  return elements\n}\n","export interface ElementTargetEvent extends Event {\n  target: HTMLElement\n}\n\nexport interface InputElementTargetEvent extends Event {\n  target: HTMLInputElement\n}\n","export type Subscription = (() => void) & {\n  unsubscribe: () => any\n}\n\ntype Subscriber = (value?: any) => any\n\nexport interface SubjectLike {\n  subscribe?: (callback: (value?: any) => any) => any,\n  isSubject?: boolean\n}\n\nexport class Subject<T> implements SubjectLike {\n  isSubject = true\n  subscribers: Subscriber[] = []\n  // unsubcount = 0 // 🔬 testing\n\n  constructor(public value?: T) {}\n\n  subscribe(callback: Subscriber) {\n    this.subscribers.push(callback)\n    SubjectClass.globalSubs.push(callback) // 🔬 testing\n    const countSubject = SubjectClass.globalSubCount$ as {value: number}\n    SubjectClass.globalSubCount$.set( countSubject.value + 1 )\n\n    const unsubscribe: Subscription = () => {\n      unsubscribe.unsubscribe()\n    }\n\n    // Return a function to unsubscribe from the BehaviorSubject\n    unsubscribe.unsubscribe = () => {\n      removeSubFromArray(this.subscribers, callback)\n      removeSubFromArray(SubjectClass.globalSubs, callback) // 🔬 testing\n      SubjectClass.globalSubCount$.set( countSubject.value - 1 )\n      \n      // any double unsubscribes will be ignored\n      unsubscribe.unsubscribe = () => undefined\n    }\n\n    return unsubscribe\n  }\n\n  set(value: any) {\n    this.value = value\n    \n    // Notify all subscribers with the new value\n    this.subscribers.forEach((callback: any) => {\n      callback.value = value\n      callback(value)\n    })\n  }\n  next = this.set\n}\n\nfunction removeSubFromArray(\n  subscribers: Subscriber[],\n  callback: Subscriber,\n) {\n  const index = subscribers.indexOf(callback)\n  if (index !== -1) {\n    subscribers.splice(index, 1)\n  }\n}\n\nconst SubjectClass = Subject as typeof Subject & {\n  globalSubCount$: Subject<number>\n  globalSubs: Subscriber[]\n}\nSubjectClass.globalSubs = [] // 🔬 for testing\nSubjectClass.globalSubCount$ = new Subject() // for ease of debugging\nSubjectClass.globalSubCount$.set(0)","import { TagSupport } from './TagSupport.class'\nimport { Provider } from './providers'\nimport { Subscription } from './Subject'\nimport { runBeforeDestroy } from './tagRunner'\nimport { buildClones } from './render'\nimport { interpolateElement, interpolateString } from './interpolateElement'\nimport { Counts, Template, afterElmBuild, subscribeToTemplate } from './interpolateTemplate'\nimport { State } from './set.function'\nimport { elementDestroyCheck } from './elementDestroyCheck.function'\nimport { updateExistingValue } from './updateExistingValue.function'\nimport { InterpolatedTemplates } from './interpolations'\nimport { processNewValue } from './processNewValue.function'\nimport { InterpolateSubject } from './processSubjectValue.function'\nimport { Clones } from './Clones.type'\nimport { checkDestroyPrevious } from './checkDestroyPrevious.function'\nimport { TagSubject } from './Tag.utils'\nimport { TagArraySubject } from './processTagArray'\n\nexport const variablePrefix = '__tagvar'\nexport const escapeVariable = '--' + variablePrefix + '--'\n\nconst prefixSearch = new RegExp(variablePrefix, 'g')\nexport const escapeSearch = new RegExp(escapeVariable, 'g')\n\nexport type Context = {\n  [index: string]: InterpolateSubject // ValueSubject<unknown>\n}\nexport type TagMemory = Record<string, any> & {\n  context: Context\n  state: State\n  providers: Provider[]\n}\n\nexport interface TagTemplate {\n  interpolation: InterpolatedTemplates,\n  string: string,\n  strings: string[],\n  values: unknown[],\n  context: Context,\n}\n\nexport class ArrayValueNeverSet {\n  isArrayValueNeverSet = true\n}\n\nexport class Tag {\n  isTag = true\n\n  clones: (Element | Text | ChildNode)[] = [] // elements on document. Needed at destroy process to know what to destroy\n  cloneSubs: Subscription[] = [] // subscriptions created by clones\n  children: Tag[] = [] // tags on me\n\n  tagSupport!: TagSupport\n  \n  // only present when a child of a tag\n  ownerTag?: Tag\n  // insertBefore?: Element\n  appElement?: Element // only seen on this.getAppElement().appElement\n  \n  // present only when an array. Populated by this.key()\n  arrayValue: unknown | ArrayValueNeverSet = new ArrayValueNeverSet()\n\n  constructor(\n    public strings: string[],\n    public values: any[],\n  ) {}\n\n  /** Used for array, such as array.map(), calls aka array.map(x => html``.key(x)) */\n  key(arrayValue: unknown) {\n    this.arrayValue = arrayValue\n    return this\n  }\n\n  async destroy(\n    options: DestroyOptions = {\n      stagger: 0,\n      byParent: false, // Only destroy clones of direct children\n    }\n  ) {\n    // the isComponent check maybe able to be removed\n    const isComponent = this.tagSupport ? true : false    \n    if(isComponent) {\n      runBeforeDestroy(this.tagSupport, this)    \n    }\n\n    this.destroySubscriptions()\n\n    if(this.ownerTag) {\n      this.ownerTag.children = this.ownerTag.children.filter(child => child !== this)\n    }\n\n    if( !options.byParent ) {\n      const {stagger, promise} = this.destroyClones(options)\n      options.stagger = stagger\n      \n      if(promise) {\n        await promise\n      }\n    } else {\n      this.destroyClones()\n    }\n\n    const promises = this.children.map(kid => kid.destroy({stagger:0, byParent: true}))\n    this.children.length = 0\n    await Promise.all(promises)\n\n    return options.stagger\n  }\n\n  destroySubscriptions() {\n    this.cloneSubs.forEach(cloneSub => cloneSub.unsubscribe())\n    this.cloneSubs.length = 0\n  }\n\n  destroyClones(\n    {stagger}: DestroyOptions = {\n      stagger: 0,\n    }\n  ) {\n    //const promises = this.clones.reverse().map(\n    const promises = this.clones.map(\n      clone => this.checkCloneRemoval(clone, stagger)\n    ).filter(x => x) // only return promises\n\n    this.clones.length = 0 // tag maybe used for something else\n    \n    if(promises.length) {\n      return {promise: Promise.all(promises), stagger}\n    }\n\n    return {stagger}\n  }\n\n  checkCloneRemoval(\n    clone: Element | Text | ChildNode,\n    stagger: number,\n  ) {\n    let promise: Promise<unknown> | undefined\n    \n    const customElm = clone as any\n    if( customElm.ondestroy ) {\n      promise = elementDestroyCheck(customElm, stagger)\n    }\n\n    const next = () => {\n      clone.parentNode?.removeChild(clone)\n\n      const ownerTag = this.ownerTag\n      if(ownerTag) {\n        // Sometimes my clones were first registered to my owner, remove them from owner\n        ownerTag.clones = ownerTag.clones.filter(compareClone => compareClone !== clone)\n      }\n    }\n\n    if(promise instanceof Promise) {\n      return promise.then(next)\n    } else {\n      next()\n    }\n\n\n    return promise\n  }\n\n  updateByTag(tag: Tag) {\n    this.updateConfig(tag.strings, tag.values)\n    this.tagSupport.templater = tag.tagSupport.templater\n    this.tagSupport.propsConfig = {...tag.tagSupport.propsConfig}\n    this.tagSupport.newest = tag\n    this.tagSupport.templater.newest = tag\n  }\n\n  lastTemplateString: string | undefined = undefined // used to compare templates for updates\n  \n  updateConfig(strings: string[], values: any[]) {\n    this.strings = strings\n    this.updateValues(values)\n  }\n\n  getTemplate(): TagTemplate {\n    const string = this.strings.map((string, index) => {\n      const safeString = string.replace(prefixSearch, escapeVariable)\n      const endString = safeString + (this.values.length > index ? `{${variablePrefix}${index}}` : '')\n      // const trimString = index === 0 || index === this.strings.length-1 ? endString.trim() : endString\n      const trimString = endString.replace(/>\\s*/g,'>').replace(/\\s*</g,'<')\n      return trimString\n    }).join('')\n\n    const interpolation = interpolateString(string)\n    this.lastTemplateString = interpolation.string\n    return {\n      interpolation,\n      // string,\n      string: interpolation.string,\n      strings: this.strings,\n      values: this.values,\n      context: this.tagSupport?.memory.context || {},\n    }\n  }\n\n  isLikeTag(tag: Tag) {\n    const {string} = tag.getTemplate()\n\n    // TODO: most likely remove?\n    if(!this.lastTemplateString) {\n      throw new Error('no template here')\n    }\n\n    const stringMatched = string === this.lastTemplateString\n    if(!stringMatched || tag.values.length !== this.values.length) {\n      return false\n    }\n\n    const allVarsMatch = tag.values.every((value, index)=> {\n      const compareTo = this.values[index]\n      const isFunctions = value instanceof Function && compareTo instanceof Function\n      \n      if(isFunctions) {\n        const stringMatch = value.toString() === compareTo.toString()\n        if(stringMatch) {\n          return true\n        }\n\n        return false\n      }\n\n      return true\n    })\n\n    if(allVarsMatch) {\n      return true\n    }\n\n    return false\n  }\n\n  update() {\n    return this.updateContext( this.tagSupport.memory.context )\n  }\n\n  updateValues(values: any[]) {\n    this.values = values\n    return this.updateContext( this.tagSupport.memory.context )\n  }\n\n  updateContext(context: Context) {\n    const seenContext: string[] = []\n\n    this.strings.map((_string, index) => {\n      const variableName = variablePrefix + index\n      const hasValue = this.values.length > index\n      const value = this.values[index]\n\n      // is something already there?\n      const existing = variableName in context\n      seenContext.push(variableName)\n\n      if(existing) {\n        const existing = context[variableName]\n        return updateExistingValue(existing, value, this)\n      }\n\n      // 🆕 First time values below\n      processNewValue(\n        hasValue,\n        value,\n        context,\n        variableName,\n        this,\n      )      \n    })\n\n    // Support reduction in context\n    Object.entries(context).forEach(([key, subject]) => {\n      if(seenContext.includes(key)) {\n        return\n      }\n\n      throw new Error('we here')\n      const destroyed = checkDestroyPrevious(subject, undefined as any)\n    })\n\n    return context\n  }\n\n  getAppElement() {\n    let tag: Tag = this\n    \n    while(tag.ownerTag) {\n      tag = tag.ownerTag\n    }\n\n    return tag\n  }\n\n  /** Used during HMR only where static content itself could have been edited */\n  rebuild() {\n    // const insertBefore = this.insertBefore\n    const insertBefore = this.tagSupport.templater.insertBefore\n\n    if(!insertBefore) {\n      const err = new Error('Cannot rebuild. Previous insertBefore element is not defined on tag')\n      ;(err as any).tag = this\n      throw err\n    }\n\n    this.buildBeforeElement(insertBefore, {\n      forceElement: true,\n      counts: {added: 0, removed: 0},\n    })\n  }\n\n  buildBeforeElement(\n    insertBefore: Element | Text,\n    options: ElementBuildOptions = {\n      forceElement: false,\n      counts: {added:0, removed: 0},\n    },\n  ) {\n    // this.insertBefore = insertBefore\n    this.tagSupport.templater.insertBefore = insertBefore\n    \n    const context = this.update()\n    const template = this.getTemplate()\n    \n    const elementContainer = document.createElement('div')\n    elementContainer.id = 'tag-temp-holder'\n    // render content with a first child that we can know is our first element\n    elementContainer.innerHTML = `<template id=\"temp-template-tag-wrap\">${template.string}</template>`\n\n    // Search/replace innerHTML variables but don't interpolate tag components just yet\n    const {clones, tagComponents} = interpolateElement(\n      elementContainer,\n      context,\n      template,\n      this, // ownerTag,\n      {\n        forceElement: options.forceElement,\n        counts: options.counts\n      }\n    )\n\n    // remove old clones\n    if(this.clones.length) {\n      this.clones.forEach(clone => this.checkCloneRemoval(clone, 0))\n    }\n   \n    afterInterpolateElement(\n      elementContainer,\n      insertBefore,\n      this, // ownerTag\n      [],\n      context,\n      options,\n    )\n\n    // this.clones.push(...clones)\n\n    // Any tag components that were found should be processed AFTER the owner processes its elements. Avoid double processing of elements attributes like (oninit)=${}\n    let isForceElement = options.forceElement\n    tagComponents.forEach(tagComponent => {\n      const preClones = this.clones.map(clone => clone)\n\n      subscribeToTemplate(\n        tagComponent.insertBefore, // temporary,\n        tagComponent.subject as TagSubject | TagArraySubject,\n        tagComponent.ownerTag,\n        options.counts,\n        {isForceElement}\n      )\n\n      afterInterpolateElement(\n        elementContainer,\n        insertBefore,\n        this,\n        preClones,\n        context,\n        options,\n      )\n\n        // remove component clones from ownerTag as they will belong to the components they live on\n        /*\n        if( preClones.length ) {\n          this.clones = this.clones.filter(cloneFilter => !preClones.find(clone => clone === cloneFilter))\n        }\n        */\n    })\n  }\n}\n\nfunction afterInterpolateElement(\n  container: Element,\n  insertBefore: Element | Text | Template,\n  ownerTag: Tag,\n  preClones: Clones,\n  context: Context,\n  options: ElementBuildOptions,\n) {\n  const clones = buildClones(container, insertBefore)\n\n  ownerTag.clones.push( ...clones )\n  clones.forEach(clone => afterElmBuild(clone, options, context, ownerTag))\n\n  return clones\n}\n\ntype DestroyOptions = {\n  stagger: number\n  byParent?: boolean // who's destroying me? if byParent, ignore possible animations\n}\n\nexport type ElementBuildOptions = {\n  counts: Counts\n  forceElement?: boolean\n}\n","import { TagSupport } from \"./TagSupport.class\"\nimport { ValueSubject } from \"./ValueSubject\"\nimport { Subject } from \"./Subject\"\nimport { Tag } from \"./Tag.class\"\nimport { TemplaterResult } from \"./templater.utils\"\nimport { bindSubjectCallback } from \"./bindSubjectCallback.function\"\nimport { Template } from \"./interpolateTemplate\"\n\nexport type TagSubject = Subject<TemplaterResult> & {\n  tagSupport: TagSupport\n  tag: Tag\n  template: Element | Text | Template\n}\n\ntype RegularValue = string | number | boolean\nexport type DisplaySubject = Subject<RegularValue> & {\n  lastValue?: RegularValue\n  clone?: Element | Text | Template\n  template: Element | Text | Template\n}\n\nexport function getSubjectFunction(\n  value: any,\n  tag: Tag,\n) {\n  return new ValueSubject( bindSubjectCallback(value, tag) )\n}\n\nexport function setValueRedraw(\n  templater: TemplaterResult, // latest tag function to call for rendering\n  existing: TagSubject,\n  ownerTag: Tag,\n) {\n  // redraw does not communicate to parent\n  templater.redraw = () => {\n    const existingTag = templater.oldest || existing.tag\n    const tagSupport = existingTag?.tagSupport || templater.tagSupport\n\n    const {retag} = templater.renderWithSupport(\n      tagSupport,\n      existingTag,\n      ownerTag,\n    )\n\n    existing.set(templater)\n\n    return retag\n  }\n}\n","import { Props } from './Props'\nimport { Tag, TagMemory } from './Tag.class'\nimport { deepClone } from './deepFunctions'\nimport { isTagArray, isTagComponent, isTagInstance } from './isInstance'\nimport { StateConfigArray, getStateValue } from './set.function'\nimport { TagChildren } from './tag'\nimport { TemplaterResult, alterProps } from './templater.utils'\n\nexport class TagSupport {\n  propsConfig: {\n    latest: Props // new props NOT cloned props\n    // props from **constructor** are converted for comparing over renders\n    latestCloned: Props // This seems to be a duplicate of clonedProps\n    lastClonedKidValues: unknown[][]\n    clonedProps: Props // duplicate of latestClonedProps\n  }\n\n  memory: TagMemory = {\n    context: {}, // populated after reading interpolated.values array converted to an object {variable0, variable:1}\n    state: {\n      newest: [] as StateConfigArray,\n    },\n    providers: [],\n    /** Indicator of re-rending. Saves from double rending something already rendered */\n    renderCount: 0,\n  }\n\n  updateState() {\n    this.memory.state.newest.forEach(newest => {\n      newest.lastValue = getStateValue(newest)\n    })\n  }\n\n  constructor(\n    public templater: TemplaterResult,\n    public children: TagChildren, // children tags passed in as arguments\n    props?: Props,  // natural props\n  ) {\n    const latestCloned = alterProps(props, templater)\n    this.propsConfig = {\n      latest: props,\n      latestCloned, // assume its HTML children and then detect\n      clonedProps: latestCloned, // maybe duplicate\n      lastClonedKidValues: children.value.map(kid => {\n        const cloneValues = cloneValueArray(kid.values)\n        return cloneValues\n      })  \n    }\n\n    // if the latest props are not HTML children, then clone the props for later render cycles to compare\n    if(!isTagInstance(props)) {\n      this.propsConfig.latestCloned = deepClone( latestCloned )\n      this.propsConfig.clonedProps = this.propsConfig.latestCloned\n    }\n  }\n\n  // TODO: these below may not be in use\n  oldest?: Tag\n  newest?: Tag\n\n  mutatingRender(): Tag {\n    const message = 'Tag function \"render()\" was called in sync but can only be called async'\n    console.error(message, {tagSupport: this})\n    throw new Error(message)\n  } // loaded later and only callable async\n\n  render () {\n    ++this.memory.renderCount\n    return this.mutatingRender()\n  } // ensure this function still works even during deconstructing\n}\n\nfunction cloneValueArray<T>(values: (T | Tag | Tag[])[]): T[] {\n  return values.map((value) => {\n    const tag = value as Tag\n\n    if(isTagInstance(tag)) {\n      return cloneValueArray(tag.values)\n    }\n\n    if(isTagComponent(tag)) {\n      const tagComponent = tag as unknown as TemplaterResult\n      return deepClone(tagComponent.tagSupport.propsConfig.latestCloned)\n    }\n\n    if(isTagArray(tag)) {\n      return cloneValueArray(tag as unknown as Tag[])\n    }\n\n    return deepClone(value)\n  })\n}","import { Subject } from './Subject'\n\nexport class ValueSubject<T> extends Subject<T> {\n  constructor(public value: T) {\n    super(value)\n  }\n\n  subscribe(callback: any) {\n    const unsubscribe = super.subscribe(callback)\n    \n    // Call the callback immediately with the current value\n    callback(this.value)\n\n    return unsubscribe\n  }\n}\n","/** File largely responsible for reacting to element events, such as onclick */\n\nimport { Tag } from \"./Tag.class\"\n\nexport type Callback = (...args: any[]) => any & {\n  isChildOverride?: true // if this is set, then a parent tag passed children to a tag/component\n}\n\nexport function bindSubjectCallback(\n  value: Callback,\n  tag: Tag,\n) {\n  // Is this children? No override needed\n  if((value as any).isChildOverride) {\n    return value\n  }\n\n  const subjectFunction = (\n    element: Element, args: any[]\n  ) => runTagCallback(value, tag, element, args)\n\n  // link back to original. Mostly used for <div oninit ondestroy> animations\n  subjectFunction.tagFunction = value\n\n  return subjectFunction\n}\n\nexport function runTagCallback(\n  value: Callback,\n  tag: Tag,\n  bindTo: unknown,\n  args: any[]\n) {\n  const tagSupport = tag.tagSupport\n  const renderCount = tagSupport ? tagSupport.memory.renderCount : 0\n  \n  const method = value.bind(bindTo)\n  const callbackResult = method(...args)\n\n  const sameRenderCount = renderCount === tagSupport.memory.renderCount\n  \n  if(tagSupport && !sameRenderCount) {    \n    return // already rendered\n  }\n\n  tagSupport.render()\n\n  if(callbackResult instanceof Promise) {\n    return callbackResult.then(() => {\n      tagSupport.render()\n      return 'promise-no-data-ever'\n    })\n  }\n\n  // Caller always expects a Promise\n  return 'no-data-ever'\n}\n","import { DisplaySubject, TagSubject } from './Tag.utils'\nimport { isTagArray, isTagComponent, isTagInstance } from './isInstance'\nimport { Tag } from './Tag.class'\nimport { InterpolateSubject } from './processSubjectValue.function'\nimport { TagArraySubject } from './processTagArray'\nimport { isLikeTags } from './isLikeTags.function'\nimport { Counts, Template } from './interpolateTemplate'\n\nexport function checkDestroyPrevious(\n  existing: InterpolateSubject, // existing.value is the old value\n  newValue: unknown,\n) {\n  const existingSubArray = existing as TagArraySubject\n  const wasArray = existingSubArray.lastArray\n  \n  // no longer an array\n  if (wasArray && !isTagArray(newValue)) {\n    wasArray.forEach(({tag}) => destroyArrayTag(tag, {added:0, removed:0}))\n    delete (existing as any).lastArray  \n    return 1\n  }\n\n  const tagSubject = existing as TagSubject\n  const existingTag = tagSubject.tag\n  \n  // no longer tag or component?\n  if(existingTag) {\n    const isValueTag = isTagInstance(newValue)\n    const isSubjectTag = isTagInstance(existing.value)\n\n    if(isSubjectTag && isValueTag) {\n      const newTag = newValue as Tag\n      if(!isLikeTags(newTag, existingTag)) {\n        destroyTagMemory(existingTag, tagSubject)\n        return 2\n      }\n\n      return false\n    }\n\n    const isValueTagComponent = isTagComponent(newValue)\n    if(isValueTagComponent) {\n      return false // its still a tag component\n    }\n\n    // destroy old component, value is not a component\n    destroyTagMemory(existingTag, tagSubject)\n    return 3\n  }\n\n  const displaySubject = existing as DisplaySubject\n  const hasLastValue = 'lastValue' in displaySubject\n  const lastValue = displaySubject.lastValue // TODO: we maybe able to use displaySubject.value and remove concept of lastValue\n  // was simple value but now something bigger\n  if(hasLastValue && lastValue !== newValue) {\n    destroySimpleValue(displaySubject.template, displaySubject)\n    return 4\n  }\n\n  return false\n}\n\nexport function destroyTagMemory(\n  existingTag: Tag,\n  existingSubject: TagSubject,\n) {\n  delete (existingSubject as any).tag\n  delete (existingSubject as any).tagSupport\n  existingTag.destroy()\n}\n\nexport function destroyArrayTag(\n  tag: Tag,\n  counts: Counts,\n) {\n  /*\n  tag.children.forEach(child => child.destroy({\n    stagger: counts.removed++,\n    // byParent: false\n    // byParent: true,\n  }))\n  */\n\n  // tag.destroyClones({stagger:counts.removed++})\n  tag.destroy({\n    stagger: counts.removed++,\n    // byParent: false\n    // byParent: true,\n  })\n}\n\nfunction destroySimpleValue(\n  template: Element | Text | Template,\n  subject: DisplaySubject,\n) {\n  const clone = subject.clone as Element\n  const parent = clone.parentNode as ParentNode\n\n  // put the template back down\n  parent.insertBefore(template, clone)\n  parent.removeChild(clone)\n  \n  delete subject.clone\n  delete subject.lastValue\n  // subject.template = template\n}\n","export function deepClone(\n  obj: any,\n) {\n  return makeDeepClone(obj, new WeakMap())\n}\n\nfunction makeDeepClone(\n  obj: any,\n  visited: WeakMap<any, any>\n) {\n  // If obj is a primitive type or null, return it directly\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  // If obj is already visited, return the cloned reference\n  if (visited.has(obj)) {\n    return visited.get(obj)\n  }\n\n  // Handle special cases like Date and RegExp\n  if (obj instanceof Date) {\n    return new Date(obj);\n  }\n\n  if (obj instanceof RegExp) {\n    return new RegExp(obj);\n  }\n\n  // Create an empty object or array with the same prototype\n  const clone = Array.isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n\n  // Register the cloned object to avoid cyclic references\n  visited.set(obj, clone)\n\n  // Clone each property or element of the object or array\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      clone[i] = makeDeepClone(obj[i], visited)\n    }\n  } else {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        clone[key] = makeDeepClone(obj[key], visited)\n      }\n    }\n  }\n\n  return clone;\n}\n\nexport function deepEqual(\n  obj1: any,\n  obj2: any,\n) {\n  return isDeepEqual(obj1, obj2, new WeakMap())\n}\n\nfunction isDeepEqual(\n  obj1: any,\n  obj2: any,\n  visited: WeakMap<any, any>,\n) {\n  if (obj1 === obj2 || isSameFunctions(obj1,obj2)) {\n    return true\n  }\n\n  if (\n    typeof obj1 !== 'object' ||\n    typeof obj2 !== 'object' ||\n    obj1 === null ||\n    obj2 === null\n  ) {\n    return false\n  }\n\n  const keys1 = Object.keys(obj1)\n  const keys2 = Object.keys(obj2)\n\n  if (keys1.length !== keys2.length) {\n    return false\n  }\n\n  // If obj is already visited, return the cloned reference\n  if (visited.has(obj1)) {\n    return true\n  }\n\n  // Register the cloned object to avoid cyclic references\n  visited.set(obj1, 0)\n\n  for (const key of keys1) {\n    const keyFound = keys2.includes(key)\n    if (!keyFound || !isDeepEqual(obj1[key], obj2[key], visited)) {\n      /*\n      if(isSameFunctions(obj1[key], obj2[key])) {\n        continue\n      }\n      */\n      return false\n    }\n  }\n\n  // Check if obj1 and obj2 are both arrays\n  if (Array.isArray(obj1) && Array.isArray(obj2)) {\n    if (obj1.length !== obj2.length) {\n      return false\n    }\n\n    for (let i = 0; i < obj1.length; i++) {\n      if (!isDeepEqual(obj1[i], obj2[i], visited)) {\n        return false\n      }\n    }\n  } else if (Array.isArray(obj1) || Array.isArray(obj2)) {\n    // One is an array, and the other is not\n    return false\n  }\n\n  return true\n}\n\nfunction isSameFunctions(\n  fn0: Function,\n  fn1: Function\n): Boolean {\n  const bothFunction = fn0 instanceof Function && fn1 instanceof Function\n  return bothFunction && fn0.toString() === fn1.toString()\n}","export function elementDestroyCheck<T>(\n  nextSibling: Element & {ondestroy?: (event: Event) => T},\n  stagger: number,\n): T | undefined {\n  const onDestroyDoubleWrap = nextSibling.ondestroy\n  if(!onDestroyDoubleWrap) {\n    return\n  }\n\n  const onDestroyWrap = (onDestroyDoubleWrap as any).tagFunction\n  if(!onDestroyWrap) {\n    return\n  }\n\n  const onDestroy = onDestroyWrap.tagFunction\n  if(!onDestroy) {\n    return\n  }\n\n  const event = {target: nextSibling, stagger} as unknown as Event\n  return onDestroy(event)\n}\n","import { InputElementTargetEvent } from \"./ElementTargetEvent.interface\"\nimport { Counts } from \"./interpolateTemplate\"\n\nexport function elementInitCheck(\n  nextSibling: Element | ChildNode,\n  counts: Counts\n) {\n  const onInitDoubleWrap = (nextSibling as any).oninit\n  if (!onInitDoubleWrap) {\n    return counts.added\n  }\n\n  const onInitWrap = onInitDoubleWrap.tagFunction\n  if (!onInitWrap) {\n    return counts.added\n  }\n  \n  const onInit = onInitWrap.tagFunction\n  if (!onInit) {\n    return counts.added\n  }\n  \n  const event = { target: nextSibling, stagger: counts.added } as unknown as InputElementTargetEvent\n  onInit(event)\n  \n  return ++counts.added\n}\n","export type TagErrorDetails = Record<string, unknown>\nexport type TagErrorFullDetails = Record<string, unknown> & {errorCode: string}\n\nexport class TagError extends Error {\n  details: TagErrorFullDetails\n\n  constructor(\n    message: string,\n    errorCode: string,\n    details: Record<string, unknown> = {},\n  ) {\n    super(message);\n    this.name = TagError.name;\n    this.details = {...details, errorCode}\n  }\n}\n\nexport class ArrayNoKeyError extends TagError {\n  constructor(message: string, details?: TagErrorDetails) {\n    super(message, 'array-no-key-error', details);\n    this.name = ArrayNoKeyError.name;\n  }\n}\n\nexport class StateMismatchError extends TagError {\n  constructor(message: string, details?: TagErrorDetails) {\n    super(message, 'state-mismatch-error', details);\n    this.name = StateMismatchError.name;\n  }\n}\n","import { TagSupport } from \"./TagSupport.class\"\nimport { setUse } from \"./setUse.function\"\nimport { State, StateConfigArray, getStateValue } from \"./set.function\"\n\ntype Callback = <T>(...args: unknown[]) => (T | void)\n\nexport let getCallback = () => (callback: Callback) => (): void => {\n  throw new Error('The real callback function was called and that should never occur')\n}\n\nsetUse({\n  beforeRender: (tagSupport: TagSupport) => initMemory(tagSupport),\n  beforeRedraw: (tagSupport: TagSupport) => initMemory(tagSupport),\n  // afterRender: (tagSupport: TagSupport) => {},\n})\n\nfunction updateState(\n  stateFrom: StateConfigArray,\n  stateTo: StateConfigArray,\n) {\n  stateFrom.forEach((state, index) => {\n    const fromValue = getStateValue(state)\n    const callback = stateTo[index].callback\n    \n    if(callback) {\n      callback( fromValue ) // set the value\n    }\n    \n    stateTo[index].lastValue = fromValue // record the value\n  })\n}\n\ntype Trigger = () => void\ntype CallbackMaker = (callback: Callback) => Trigger\n\nfunction initMemory (tagSupport: TagSupport) {\n  getCallback = () => {\n    const oldState: StateConfigArray = setUse.memory.stateConfig.array\n\n    const callbackMaker: CallbackMaker = (\n      callback: Callback\n    ) => {\n      const trigger = (...args: any[]) => triggerStateUpdate(tagSupport, callback, oldState, ...args)\n      return trigger\n    }\n\n    return callbackMaker\n  }\n}\n\nfunction triggerStateUpdate(\n  tagSupport: TagSupport,\n  callback: Callback,\n  oldState: StateConfigArray,\n  ...args: any[]\n) {\n  const state = tagSupport.memory.state as State\n  const newest = state.newest\n\n  // ensure that the oldest has the latest values first\n  updateState(newest, oldState)\n  \n  // run the callback\n  const promise = callback(...args)\n\n  // send the oldest state changes into the newest\n  updateState(oldState, newest)\n  \n  tagSupport.render()        \n  \n  // TODO: turn back on below\n  if(promise instanceof Promise) {\n    promise.finally(() => {\n      // send the oldest state changes into the newest\n      updateState(oldState, newest)\n\n      tagSupport.render()    \n    })\n  }\n}","import { Props } from \"./Props\"\nimport { TagSupport } from \"./TagSupport.class\"\nimport { deepEqual } from \"./deepFunctions\"\n\nexport function hasTagSupportChanged(\n  oldTagSupport: TagSupport,\n  newTagSupport: TagSupport,\n) {\n  if(oldTagSupport === newTagSupport) {\n    throw new Error('something here')\n  }\n\n  const oldProps = oldTagSupport.propsConfig.latest\n  const latestProps = newTagSupport.propsConfig.latest\n  const oldClonedProps = oldTagSupport.propsConfig.latestCloned\n  const propsChanged = hasPropChanges(latestProps, oldClonedProps, oldProps)\n\n  // if no changes detected, no need to continue to rendering further tags\n  if(propsChanged) {\n    return true\n  }\n\n  const kidsChanged = hasKidsChanged(oldTagSupport, newTagSupport)\n\n  // we already know props didn't change and if kids didn't either, than don't render\n  return kidsChanged\n}\n\nexport function hasPropChanges(\n  props: Props, // natural props\n  pastCloneProps: Props, // previously cloned props\n  compareToProps: Props, // new props NOT cloned props\n) {\n  const isCommonEqual = props === undefined && props === compareToProps\n\n  if(isCommonEqual) {\n    return false\n  }\n  \n  let castedProps: Props = props\n  let castedPastProps: Props = pastCloneProps\n\n  // check all prop functions match\n  if(typeof(props) === 'object') {\n    if(!pastCloneProps) {\n      return true\n    }\n\n    castedProps = {...props}\n    castedPastProps = {...(pastCloneProps || {})}\n    \n    const allFunctionsMatch = Object.entries(castedProps as any).every(([key,value]) => {      \n      /*if(!(key in (castedPastProps as any))) {\n        return false\n      }*/\n\n      let compare = (castedPastProps as any)[key]\n\n      if(!(value instanceof Function)) {\n        return true // this will be checked in deepEqual\n      }\n\n      if(!(compare instanceof Function)) {\n        return false // its a function now but was not before\n      }\n\n      // ensure we are comparing apples to apples as function get wrapped\n      if(compare.original) {\n        compare = compare.original\n      }\n\n      const original = (value as any).original\n      if(original) {\n        value = (value as any).original\n      }\n      \n      if((value as any).toString() !== compare.toString()) {\n        return false // both are function but not the same\n      }\n\n      delete (castedProps as any)[key] // its a function and not needed to be compared\n      delete (castedPastProps as any)[key] // its a function and not needed to be compared\n\n      return true\n    })\n\n    if(!allFunctionsMatch) {\n      return true // a change has been detected by function comparisons\n    }\n  }\n\n  const isEqual = deepEqual(pastCloneProps, props)\n  return !isEqual // if equal then no changes\n}\n\nexport function hasKidsChanged(\n  oldTagSupport: TagSupport,\n  newTagSupport: TagSupport,\n) {\n  const oldCloneKidValues = oldTagSupport.propsConfig.lastClonedKidValues\n  const newClonedKidValues = newTagSupport.propsConfig.lastClonedKidValues\n\n  const everySame = oldCloneKidValues.every((set, index) => {\n    const x = newClonedKidValues[index]\n    return set.every((item, index) => item === x[index])\n  })\n\n  return !everySame\n}\n","import { Tag } from \"./Tag.class\"\n\nexport function html(\n  strings: string[] | TemplateStringsArray,\n  ...values: unknown[]\n) {\n  return new Tag(strings as string[], values)\n}\n","import { redrawTag } from \"./redrawTag.function\"\nimport { tagElement } from \"./tagElement\"\n\nexport * from \"./ElementTargetEvent.interface\"\n\nexport * from \"./tag\"\nexport * from \"./html\"\nexport * from \"./errors\"\nexport * from \"./Subject\"\nexport * from \"./isInstance\"\nexport * from \"./ValueSubject\"\nexport * from \"./watch.function\"\nexport * from \"./TagSupport.class\"\nexport * from \"./redrawTag.function\"\nexport * from \"./interpolateElement\"\n\n// TODO: export *\nexport { tagElement } from \"./tagElement\"\nexport { Tag } from \"./Tag.class\"\nexport { runBeforeRender } from \"./tagRunner\"\nexport { setUse } from \"./setUse.function\"\n\n/* hooks */\n  // TODO: export *\n  export { providers } from \"./providers\"\n  export { set } from \"./set.function\"\n  export { setLet } from \"./setLet.function\"\n  export { setProp } from \"./setProp.function\"\n  export * from \"./onInit\"\n  export * from \"./onDestroy\"\n  export * from \"./getCallback\"\n/* end: hooks */\n\nexport const hmr = {\n  tagElement, redrawTag\n}\n","export function inputAttribute(\n  name: string,\n  value: any,\n  element: Element,\n) {\n  const names = name.split('.')\n\n  // style.position = \"absolute\"\n  if(names[0] === 'style') {\n    (element as any).style[names[1]] = value\n  }\n\n  // Example: class.width-full = \"true\"\n  if(names[0] === 'class') {\n    names.shift()\n    if(value) {\n      names.forEach(name => element.classList.add(name))\n    } else {\n      names.forEach(name => element.classList.remove(name))\n    }\n    return\n  }\n}\n","import { Context, Tag } from \"./Tag.class\"\nimport { processAttribute } from \"./processAttribute.function\"\n\nexport type HowToSet = (element: Element, name: string, value: string) => any\n\nfunction howToSetAttribute(\n  element: Element,\n  name: string,\n  value: string\n) {\n  /*\n  if(name === 'class'){\n    value.split(' ').forEach(className => child.classList.add(className))\n    return\n  }\n  */\n\n  element.setAttribute(name, value)\n}\n\nfunction howToSetInputValue(\n  element: Element,\n  name: string,\n  value: string\n) {\n  (element as any)[name] = value\n}\n\nexport function interpolateAttributes(\n  child: Element,\n  scope: Context,\n  ownerTag: Tag,\n) {\n  const attrNames = child.getAttributeNames()\n\n  let howToSet = howToSetAttribute\n\n  attrNames.forEach(attrName => {\n    if(child.nodeName === 'INPUT' && attrName === 'value') {\n      howToSet = howToSetInputValue\n    }\n\n    const value = child.getAttribute(attrName)\n    processAttribute(attrName, value, child, scope, ownerTag, howToSet)\n\n    howToSet = howToSetAttribute // put back\n  })\n}\n","import { Clones } from \"./Clones.type\"\nimport { Tag } from \"./Tag.class\"\nimport { InterpolateOptions } from \"./interpolateElement\"\nimport { InterpolateComponentResult, Template, interpolateTemplate } from \"./interpolateTemplate\"\n\nexport type InterpolatedContentTemplates = {\n  clones: Clones\n  tagComponents: InterpolateComponentResult[]\n}\n\nexport function interpolateContentTemplates(\n  element: Element,\n  context: any,\n  tag: Tag,\n  options: InterpolateOptions,\n  children: HTMLCollection,\n): InterpolatedContentTemplates {\n  if ( !children || element.tagName === 'TEMPLATE' ) {\n    return {clones:[], tagComponents: []} // done\n  }\n\n  // counting for animation stagger computing\n  const counts = options.counts\n  const clones: Clones = []\n  const tagComponents: InterpolateComponentResult[] = []\n  const childArray = new Array(...children)\n\n  childArray.forEach(child => {\n    const {clones: nextClones, tagComponent} = interpolateTemplate(\n      child as Template,\n      context,\n      tag,\n      counts,\n      options,\n    )\n\n    clones.push(...nextClones)\n\n    if(tagComponent) {\n      tagComponents.push(tagComponent)\n      return\n    }\n      \n    if ( child.children ) {      \n      const nextKids = new Array(...child.children)\n      nextKids.forEach((subChild, index) => {\n\n        // IF <template end /> its a variable to be processed\n        if ( isRenderEndTemplate(subChild) ) {\n          const {tagComponent} = interpolateTemplate(\n            subChild as Template,\n            context,\n            tag,\n            counts,\n            options,\n          )\n\n          if(tagComponent) {\n            tagComponents.push(tagComponent)\n          }\n        }\n\n        const {clones:nextClones, tagComponents: nextTagComponent} = interpolateContentTemplates(\n          subChild,\n          context,\n          tag,\n          options,\n          subChild.children\n        )\n\n        clones.push( ...nextClones )\n        tagComponents.push( ...nextTagComponent )\n      })\n    }\n  })\n\n  return {clones, tagComponents}\n}\n\nfunction isRenderEndTemplate(child: Element) {\n  const isTemplate = child.tagName==='TEMPLATE'\n  return isTemplate &&\n  child.getAttribute('interpolate') !== undefined && \n  child.getAttribute('end') !== undefined\n}\n","import { interpolateAttributes } from \"./interpolateAttributes\"\nimport { interpolateToTemplates } from \"./interpolations\"\nimport { InterpolatedContentTemplates, interpolateContentTemplates } from \"./interpolateContentTemplates\"\nimport { Context, Tag, TagTemplate, escapeSearch, variablePrefix } from \"./Tag.class\"\nimport { Clones } from \"./Clones.type\"\nimport { Counts, InterpolateComponentResult } from \"./interpolateTemplate\"\n\nexport type InterpolateOptions = {\n  /** make the element go on document */\n  forceElement?: boolean\n  counts: Counts\n}\n\n/** Review elements within an element */\nexport function interpolateElement(\n  container: Element,\n  context: Context, // variables used to evaluate\n  interpolatedTemplates: TagTemplate,\n  tagOwner: Tag,\n  options: InterpolateOptions,\n): InterpolatedContentTemplates {\n  const clones: Clones = []\n  const tagComponents: InterpolateComponentResult[] = []\n  const result = interpolatedTemplates.interpolation\n  const template = container.children[0] as HTMLTemplateElement\n  const children = template.content.children\n\n  if(result.keys.length) {\n    const {clones: nextClones, tagComponents: nextTagComponents} = interpolateContentTemplates(container, context, tagOwner, options, children)\n    clones.push( ...nextClones )\n    tagComponents.push( ...nextTagComponents )\n  }\n\n  interpolateAttributes(container, context, tagOwner)\n  processChildrenAttributes(children, context, tagOwner)\n\n  return {clones, tagComponents}\n}\n\nfunction processChildrenAttributes(\n  children: HTMLCollection,\n  context: Context,\n  ownerTag: Tag,\n) {\n  new Array(...children as any).forEach(child => {\n    interpolateAttributes(child, context, ownerTag)\n\n    if(child.children) {\n      processChildrenAttributes(child.children, context, ownerTag)\n    }\n  })\n}\n\nexport function interpolateString(string: string) {\n  const result = interpolateToTemplates(string)\n  result.string = result.string.replace(escapeSearch, variablePrefix)\n  return result\n}\n","import { Context, ElementBuildOptions, Tag, variablePrefix } from \"./Tag.class\"\nimport { InterpolateOptions } from \"./interpolateElement\"\nimport { elementInitCheck } from \"./elementInitCheck\"\nimport { Clones } from \"./Clones.type\"\nimport { InterpolateSubject, processSubjectValue } from \"./processSubjectValue.function\"\nimport { isTagArray, isTagComponent } from \"./isInstance\"\nimport { DisplaySubject, TagSubject } from \"./Tag.utils\"\nimport { scanTextAreaValue } from \"./scanTextAreaValue.function\"\nimport { processSubjectComponent } from \"./processSubjectComponent.function\"\nimport { TemplaterResult } from \"./templater.utils\"\n\nexport type Template = Element & {clone?: any}\nexport type InterpolateComponentResult = {\n  subject: InterpolateSubject\n  insertBefore: Element | Text | Template\n  ownerTag: Tag\n}\nexport type InterpolateTemplateResult = {\n  clones: Clones\n  tagComponent?: InterpolateComponentResult\n}\n\nexport function interpolateTemplate(\n  insertBefore: Template, // <template end interpolate /> (will be removed)\n  context: Context, // variable scope of {`__tagvar${index}`:'x'}\n  ownerTag: Tag, // Tag class\n  counts: Counts, // used for animation stagger computing\n  options: InterpolateOptions,\n): InterpolateTemplateResult {\n  // TODO: THe clones array is useless here\n  const clones: Clones = []\n\n  if ( !insertBefore.hasAttribute('end') ) {\n    return {clones} // only care about <template end>\n  }\n\n  const variableName = insertBefore.getAttribute('id')\n  if(variableName?.substring(0, variablePrefix.length) !== variablePrefix) {\n    return {clones} // ignore, not a tagVar\n  }\n\n  const existingSubject = context[variableName]\n\n  // process dynamics later\n  if(isTagComponent(existingSubject.value) || isTagArray(existingSubject.value)) {\n    return {clones, tagComponent: {ownerTag, subject: existingSubject, insertBefore}}\n  }\n  \n  let isForceElement = options.forceElement\n  subscribeToTemplate(\n    insertBefore,\n    existingSubject,\n    ownerTag,\n    counts,\n    {isForceElement}\n  )\n\n  return {clones}\n}\n\nexport function subscribeToTemplate(\n  insertBefore: Element | Text | Template,\n  subject: InterpolateSubject,\n  ownerTag: Tag,\n  counts: Counts, // used for animation stagger computing\n  {isForceElement}: {isForceElement?:boolean}\n) {\n  const callback = (value: unknown) => {\n    const clone = (subject as DisplaySubject).clone\n    if(clone) {\n      insertBefore = clone\n    }\n\n    processSubjectValue(\n      value,\n      subject,\n      insertBefore,\n      ownerTag,\n      {\n        counts: {...counts},\n        forceElement: isForceElement,\n      }\n    )\n\n    if(isForceElement) {\n      isForceElement = false // only can happen once\n    }\n\n    // ownerTag.clones.push(...nextClones)\n    // clones.push(...nextClones)\n  }\n\n  const sub = subject.subscribe(callback as any)\n  ownerTag.cloneSubs.push(sub)\n}\n\n// Function to update the value of x\nexport function updateBetweenTemplates(\n  value: string | undefined | boolean | number,\n  lastFirstChild: Element | Text,\n) {\n  const parent = lastFirstChild.parentNode as ParentNode\n  \n  // mimic React skipping to display EXCEPT for true does display on page\n  if(value === undefined || value === false || value === null) { // || value === true\n    value = ''\n  }\n\n  // Insert the new value (never use innerHTML here)\n  const textNode = document.createTextNode(value as string) // never innerHTML\n  parent.insertBefore(textNode, lastFirstChild)\n\n  /* remove existing nodes */\n  parent.removeChild(lastFirstChild)\n  \n  return textNode\n}\n\nexport type Counts = {\n  added: number\n  removed: number // increased when item removed from array\n}\n\nexport function afterElmBuild(\n  elm: Element | ChildNode,\n  options: ElementBuildOptions,\n  context: Context,\n  ownerTag: Tag,\n) {\n  if(!(elm as Element).getAttribute) {\n    return\n  }\n\n  const tagName = elm.nodeName // elm.tagName\n  if(tagName==='TEXTAREA') {\n    scanTextAreaValue(elm as HTMLTextAreaElement, context, ownerTag)\n  }\n\n  let diff = options.counts.added\n  if(!options.forceElement) {\n    diff = elementInitCheck(elm, options.counts) - diff\n  }\n\n  if((elm as Element).children) {\n    const subCounts = {\n      added: options.counts.added, // - diff,\n      removed: options.counts.removed,\n    }\n\n    new Array(...(elm as Element).children as any).forEach((child, index) => {\n      const subOptions = {\n        ...options,\n       counts: options.counts,\n      }\n\n      return afterElmBuild(child, subOptions, context, ownerTag)\n    })\n  }\n}\n","// support arrow functions in attributes\nexport const interpolateReplace = /(?:<[^>]*?(?:(?:\\s+\\w+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^>\\s]+)))*\\s*)\\/?>)|({__tagvar[^}]+})/g\n\n// stops after arrow function\n// export const interpolateReplace = /(?:<[^>]*>)|({__tagvar[^}]+})/g\n\nexport type InterpolatedTemplates = {\n  string: string\n  keys: string[]\n}\n\n/** replaces ${x} with <template id=\"x-start\"></template><template id=\"x-end\"></template> */\nexport function interpolateToTemplates(\n  template: string,\n): InterpolatedTemplates {\n  const keys: string[] = []\n  const string = template.replace(interpolateReplace, (match, expression) => {\n    if (match.startsWith('<')) {\n      // If the match is an HTML tag, don't replace\n      return match\n    }\n    \n    const noBraces = expression.substring(1, expression.length-1)\n    const id = noBraces\n    keys.push(id)\n    return `<template interpolate end id=\"${id}\"></template>`\n  })\n\n  return { string, keys }\n}\n","import { SubjectLike } from \"./Subject\"\nimport { Tag } from \"./Tag.class\"\nimport { TemplaterResult } from \"./templater.utils\"\n\nexport function isTagComponent(value?: TemplaterResult | unknown) {\n  return (value as TemplaterResult)?.isTemplater === true\n}\n\nexport function isTagInstance(tag?: Tag | unknown) {\n  return (tag as Tag)?.isTag === true\n}\n\nexport function isSubjectInstance(\n  subject?: SubjectLike | any\n): Boolean {\n  return (subject?.isSubject === true || subject?.subscribe) ? true : false // subject?.isSubject === true || \n}\n\nexport function isTagArray(value: any) {\n  return value instanceof Array && value.every(x => isTagInstance(x))\n}\n","import { Tag } from \"./Tag.class\"\nimport { deepEqual } from \"./deepFunctions\"\n\nexport function isLikeTags(tag0: Tag, tag1: Tag): Boolean {\n  if(tag0.strings.length !== tag1.strings.length) {\n    return false\n  }\n\n  const everyStringMatched = tag0.strings.every((string,index) => tag1.strings[index] === string)\n  if(!everyStringMatched) {\n    return false\n  }\n\n  const valuesLengthsMatch = tag0.values.length === tag1.values.length\n  if(!valuesLengthsMatch) {\n    return false\n  }\n\n  /*\n  const valuesMatch = deepEqual(tag0.values, tag1.values)\n  if(!valuesMatch) {\n    return false\n  }\n  */\n\n  return true\n}","import { TagSupport } from \"./TagSupport.class\"\nimport { setUse } from \"./setUse.function\"\n\nexport type OnDestroyCallback = () => unknown\n\n/** When undefined, it means a tag is being built for the first time so do run destroy(s) */\nlet destroyCurrentTagSupport: TagSupport\n\nexport function onDestroy(\n  callback: OnDestroyCallback\n) {\n  destroyCurrentTagSupport.memory.destroyCallback = callback\n}\n\nsetUse({\n  beforeRender: tagSupport => destroyCurrentTagSupport = tagSupport,\n  beforeRedraw: tagSupport => destroyCurrentTagSupport = tagSupport,\n  beforeDestroy: (tagSupport, tag) => {\n    const callback = tagSupport.memory.destroyCallback\n\n    if(callback) {\n      callback()\n    }\n  }\n})\n","import { TagSupport } from \"./TagSupport.class\"\nimport { setUse } from \"./setUse.function\"\n\nexport type OnInitCallback = () => unknown\n\nfunction setCurrentTagSupport(support: TagSupport) {\n  setUse.memory.initCurrentSupport = support\n}\n\nexport function onInit(\n  callback: OnInitCallback\n) {\n  if(!setUse.memory.initCurrentSupport.memory.init) {\n    setUse.memory.initCurrentSupport.memory.init = callback\n    callback() // fire init\n  }\n}\n\nsetUse({\n  beforeRender: tagSupport => setCurrentTagSupport(tagSupport),\n  beforeRedraw: tagSupport => setCurrentTagSupport(tagSupport),\n})\n","import { inputAttribute } from './inputAttribute'\nimport { isSubjectInstance } from './isInstance'\nimport { Context, Tag } from './Tag.class'\nimport { HowToSet } from './interpolateAttributes'\n\nconst startRegX = /^\\s*{__tagvar/\nconst endRegX = /}\\s*$/\nfunction isTagVar(value: string | null) {\n  return value && value.search(startRegX) >= 0 && value.search(endRegX) >= 0\n}\n\nexport function processAttribute(\n  attrName: string,\n  value: string | null,\n  child: Element,\n  scope: Context,\n  ownerTag: Tag,\n  howToSet: HowToSet,\n) {\n  if ( isTagVar(value) ) {  \n    return processScopedNameValueAttr(\n      attrName,\n      value as string,\n      child,\n      scope,\n      ownerTag,\n      howToSet,\n    )\n  }\n\n  if( isTagVar(attrName) ) {  \n    const contextValueSubject = getContextValueByVarString(scope, attrName)\n    let lastValue: any;\n\n    // the above callback gets called immediately since its a ValueSubject()\n    const sub = contextValueSubject.subscribe((value: any) => {\n      processNameOnlyAttr(\n        value,\n        lastValue,\n        child,\n        ownerTag,\n        howToSet,\n      )\n\n      lastValue = value\n    })\n    ownerTag.cloneSubs.push(sub) // this is where unsubscribe is picked up\n    child.removeAttribute(attrName)\n\n    return\n  }\n\n  // Non dynamic\n  const isSpecial = isSpecialAttr(attrName)\n  if (isSpecial) {\n    return inputAttribute(attrName, value, child)\n  }\n}\n\nfunction processScopedNameValueAttr(\n  attrName: string,\n  value: string, // {__tagVarN}\n  child: Element,\n  scope: Context,\n  ownerTag: Tag,\n  howToSet: HowToSet\n) {\n  // get the code inside the brackets like \"variable0\" or \"{variable0}\"\n  const result = getContextValueByVarString(scope, value)\n  return processNameValueAttr(attrName, result, child, ownerTag, howToSet)\n}\n\nfunction getContextValueByVarString(\n  scope: Context,\n  value: string,\n) {\n  const code = value.replace('{','').split('').reverse().join('').replace('}','').split('').reverse().join('')\n  return scope[code]\n}\nfunction processNameOnlyAttr(\n  attrValue: string | Record<string, any>,\n  lastValue: string | Record<string, any> | undefined,\n  child: Element,\n  ownerTag: Tag,\n  howToSet: HowToSet,\n) {\n  if(lastValue && lastValue != attrValue) {\n    if(typeof(lastValue) === 'string') {\n      child.removeAttribute(lastValue as string)\n    } else if(lastValue instanceof Object) {\n      Object.entries(lastValue).forEach(([name]) =>\n        child.removeAttribute(name)\n      )\n    }\n  }\n\n  if(typeof(attrValue) === 'string') {\n    if(!attrValue.length) {\n      return\n    }\n\n    processNameValueAttr(\n      attrValue as string,\n      '',\n      child,\n      ownerTag,\n      howToSet,\n    )\n\n    return\n  }\n\n  if(attrValue instanceof Object) {\n    Object.entries(attrValue).forEach(([name, value]) =>\n      processNameValueAttr(\n        name,\n        value,\n        child,\n        ownerTag,\n        howToSet,\n      )\n    )\n\n    return\n  }\n}\n\nfunction processNameValueAttr(\n  attrName: string,\n  result: any,\n  child: Element,\n  ownerTag: Tag,\n  howToSet: HowToSet\n) {\n  const isSpecial = isSpecialAttr(attrName)\n\n  // attach as callback?\n  if(result instanceof Function) {\n    const action = function(...args: any[]) {\n      return result(child, args)\n    }\n    \n    ;(child as any)[attrName].action = action\n    // child.addEventListener(attrName, action)\n  }\n\n  // Most every variable comes in here since everything is made a ValueSubject\n  if(isSubjectInstance(result)) {\n    child.removeAttribute(attrName)\n    const callback = (newAttrValue: any) => {\n      return processAttributeSubjectValue(\n        newAttrValue,\n        child,\n        attrName,\n        isSpecial,\n        howToSet,\n      )\n    }\n\n    // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n    const sub = result.subscribe(callback as any)\n    \n    // Record subscription for later unsubscribe when element destroyed\n    ownerTag.cloneSubs.push(sub)\n\n    return\n  }\n\n  howToSet(child, attrName, result)\n  // child.setAttribute(attrName, result.value)\n  return\n}\n\nfunction processAttributeSubjectValue(\n  newAttrValue: any,\n  child: Element,\n  attrName: string,\n  isSpecial: boolean,\n  howToSet: HowToSet,\n) {\n  if(newAttrValue instanceof Function) {\n    ;(child as any)[attrName] = function(...args: any[]) {\n      const result = newAttrValue(child, args)\n      return result\n    }\n\n    // access to original function\n    ;(child as any)[attrName].tagFunction = newAttrValue\n\n    return\n  }\n\n  if (isSpecial) {\n    inputAttribute(attrName, newAttrValue, child)\n    return\n  }\n\n  if(newAttrValue) {\n    howToSet(child, attrName, newAttrValue)\n    return\n  }\n\n  const isDeadValue = newAttrValue === undefined || newAttrValue === false || newAttrValue === null\n  if(isDeadValue) {\n    child.removeAttribute(attrName)\n    return\n  }\n\n  // value is 0\n  howToSet(child, attrName, newAttrValue)\n}\n\n/** Looking for (class | style) followed by a period */\nfunction isSpecialAttr(\n  attrName: string | String\n) {\n  return attrName.search(/^(class|style)(\\.)/) >= 0\n}\n","import { Context, Tag } from './Tag.class'\nimport { TagSubject, getSubjectFunction, setValueRedraw } from './Tag.utils'\nimport { ValueSubject } from './ValueSubject'\nimport { isSubjectInstance, isTagComponent, isTagInstance } from './isInstance'\n\nexport function processNewValue(\n  hasValue: boolean,\n  value: any,\n  context: Context,\n  variableName: string,\n  ownerTag: Tag,\n) {\n  if(isTagComponent(value)) {\n    const existing = context[variableName] = new ValueSubject(value) as TagSubject\n    setValueRedraw(value, existing, ownerTag)\n    return\n  }\n\n  if(value instanceof Function) {\n    context[variableName] = getSubjectFunction(value, ownerTag)\n    return\n  }\n\n  if(!hasValue) {\n    return // more strings than values, stop here\n  }\n\n  if(isTagInstance(value)) {\n    value.ownerTag = ownerTag\n    ownerTag.children.push(value)\n    context[variableName] = new ValueSubject(value)\n    return\n  }\n\n  if(isSubjectInstance(value)) {\n    context[variableName] = value // its already a value subject\n    return\n  }\n\n  context[variableName] = new ValueSubject(value)\n}\n","import { DisplaySubject } from './Tag.utils'\nimport { Template, updateBetweenTemplates } from './interpolateTemplate'\n\nexport type RegularValue = string | number | undefined | boolean\n\nexport function processRegularValue(\n  value: RegularValue,\n  result: DisplaySubject, // could be tag via result.tag\n  template: Element | Text | Template, // <template end interpolate /> (will be removed)\n) {\n  result.template = template\n\n  const before = result.clone || template // Either the template is on the doc OR its the first element we last put on doc\n\n  result.lastValue = value\n  \n  // Processing of regular values\n  const clone = updateBetweenTemplates(\n    value,\n    before, // this will be removed\n  )\n\n  result.clone = clone // remember single element put down, for future updates\n\n  return []\n}\n","import { runBeforeRedraw, runBeforeRender } from './tagRunner'\nimport { TemplaterResult } from './templater.utils'\nimport { setUse } from './setUse.function'\nimport { Counts, Template } from './interpolateTemplate'\nimport { Tag } from './Tag.class'\nimport { processTagResult } from './processTagResult.function'\nimport { TagSubject } from './Tag.utils'\n\nexport function processSubjectComponent(\n  value: TemplaterResult,\n  subject: TagSubject,\n  template: Element | Text | Template,\n  ownerTag: Tag,\n  options: {counts: Counts, forceElement?: boolean},\n) {\n  // Check if function component is wrapped in a tag() call\n  // TODO: This below check not needed in production mode\n  if(value.tagged !== true) {\n    let name: string | undefined = value.wrapper.original.name || value.wrapper.original.constructor?.name\n\n    if(name === 'Function') {\n      name = undefined\n    }\n\n    const label = name || value.wrapper.original.toString().substring(0,120)\n    const error = new Error(`Not a tag component. Wrap your function with tag(). Example tag(props => html\\`\\`) on component:\\n\\n${label}\\n\\n`)\n    throw error\n  }\n\n  const templater = value as TemplaterResult\n  templater.insertBefore = template\n  const tagSupport = value.tagSupport\n\n  let retag = templater.newest as Tag\n  \n  const providers = setUse.memory.providerConfig\n  providers.ownerTag = ownerTag\n  \n  const isFirstTime = !retag || options.forceElement\n  if(isFirstTime) {\n    if(retag) {\n      // runBeforeRedraw(tagSupport, retag)\n      runBeforeRedraw(tagSupport, templater.oldest as Tag)\n    } else {\n      runBeforeRender(tagSupport, ownerTag)\n    }\n\n    const preClones = ownerTag.clones.map(clone => clone)\n\n    const result = templater.renderWithSupport(tagSupport, subject.tag, ownerTag)\n\n    retag = result.retag\n    templater.newest = retag\n\n    if(ownerTag.clones.length > preClones.length) {\n      const myClones = ownerTag.clones.filter(fClone => !preClones.find(clone => clone === fClone))\n      retag.clones.push(...myClones)\n    }\n  }\n  \n  ownerTag.children.push(retag)\n\n  // TODO: this line below might be duplicative of work done in renderWithSupport\n  tagSupport.templater = retag.tagSupport.templater\n  \n  processTagResult(\n    retag,\n    subject, // The element set here will be removed from document. Also result.tag will be added in here\n    template, // <template end interpolate /> (will be removed)\n    options,\n  )\n}\n","import { processSubjectComponent } from './processSubjectComponent.function'\nimport { processTagResult } from './processTagResult.function'\nimport { isTagArray, isTagComponent, isTagInstance } from './isInstance'\nimport { TagArraySubject, processTagArray } from './processTagArray'\nimport { TemplaterResult } from './templater.utils'\nimport { TagSupport } from './TagSupport.class'\nimport { Clones } from './Clones.type'\nimport { Tag } from './Tag.class'\nimport { Counts, Template } from './interpolateTemplate'\nimport { DisplaySubject, TagSubject } from './Tag.utils'\nimport { ValueSubject } from './ValueSubject'\nimport { processRegularValue } from './processRegularValue.function'\nimport { Callback } from './bindSubjectCallback.function'\n\nenum ValueTypes {\n  tag = 'tag',\n  tagArray = 'tag-array',\n  tagComponent = 'tag-component',\n  value = 'value',\n}\n\nfunction getValueType(value: any): ValueTypes {\n  if(isTagComponent(value)) {\n    return ValueTypes.tagComponent\n  }\n\n  if (isTagInstance(value)) {\n    return ValueTypes.tag\n  }\n\n  if (isTagArray(value)) {\n    return ValueTypes.tagArray\n  }\n\n  return ValueTypes.value\n}\n\ntype processOptions = {\n  forceElement?: boolean\n  counts: Counts // used to count stagger\n}\n\nexport type ClonesAndPromise = {\n  clones: Clones\n  // promise?: Promise<any>\n}\n\nexport type InterpolateSubject = TagArraySubject | TagSubject | DisplaySubject | ValueSubject<Callback>\n\nexport function processSubjectValue(\n  value: any,\n  result: InterpolateSubject, // could be tag via result.tag\n  template: Element | Text | Template, // <template end interpolate /> (will be removed)\n  ownerTag: Tag, // owner\n  options: processOptions, // {added:0, removed:0}\n): Clones {\n  const valueType = getValueType(value)\n  \n  switch (valueType) {\n    case ValueTypes.tag:\n      processTag(\n        value,\n        result as TagSubject,\n        template,\n        ownerTag,\n        options\n      )\n      return []\n  \n    case ValueTypes.tagArray:\n      return processTagArray(result as TagArraySubject, value, template, ownerTag, options)\n    \n    case ValueTypes.tagComponent:\n      processSubjectComponent(\n        value,\n        result as TagSubject,\n        template,\n        ownerTag,\n        options\n      )\n      return []\n  }\n\n  return processRegularValue(\n    value,\n    result as DisplaySubject,\n    template,\n  )\n}\n\n/** Could be a regular tag or a component. Both are Tag.class */\nexport function processTag(\n  value: any,\n  result: TagSubject, // could be tag via result.tag\n  template: Element | Text | Template, // <template end interpolate /> (will be removed)\n  ownerTag: Tag, // owner\n  options: processOptions, // {added:0, removed:0}\n) {\n  // first time seeing this tag?\n  if(!value.tagSupport) {\n    value.tagSupport = new TagSupport(\n      {} as TemplaterResult, // the template is provided via html`` call\n      new ValueSubject([]), // no children\n    )\n\n    // asking me to render will cause my parent to render\n    value.tagSupport.mutatingRender = () => {\n      ownerTag.tagSupport.render()\n    }\n    value.tagSupport.oldest = value.tagSupport.oldest || value\n    ownerTag.children.push(value as Tag)\n  }\n  \n  value.ownerTag = ownerTag\n  result.template = template\n\n  processTagResult(\n    value,\n    result, // Function will attach result.tag\n    template,\n    options,\n  )\n}\n","import { Clones } from './Clones.type'\nimport { ArrayValueNeverSet, Tag } from './Tag.class'\nimport { ValueSubject } from './ValueSubject'\nimport { TagSupport } from './TagSupport.class'\nimport { Counts, Template } from './interpolateTemplate'\nimport { TemplaterResult } from './templater.utils'\nimport { ArrayNoKeyError } from './errors'\nimport { destroyArrayTag } from './checkDestroyPrevious.function'\n\nexport type LastArrayItem = {tag: Tag, index: number}\nexport type TagArraySubject = ValueSubject<Tag[]> & {\n  lastArray: LastArrayItem[]\n  template: Element | Text | Template\n  isChildSubject?: boolean // present when children passed as prop0 or prop1\n}\n\nexport function processTagArray(\n  result: TagArraySubject,\n  value: Tag[], // arry of Tag classes\n  template: Element | Text | Template, // <template end interpolate />\n  ownerTag: Tag,\n  options: {\n    counts: Counts\n    forceElement?: boolean\n  },\n): Clones {\n  // const clones: Clones = []\n  const clones: Clones = ownerTag.clones // []\n\n  if(!result.lastArray) {\n    result.lastArray = [] // {tag, index}[] populated in processTagResult\n  }\n\n  result.template = template\n\n  let removed = 0\n  \n  /** 🗑️ remove previous items first */\n  result.lastArray = result.lastArray.filter((\n    item: any,\n    index: number,\n  ) => {\n    const newLength = value.length-1\n    const at = index - removed\n    const lessLength = newLength < at\n    const subTag = value[index - removed]\n    const subArrayValue = subTag?.arrayValue\n    const destroyItem = lessLength || !areLikeValues(subArrayValue, item.tag.arrayValue)\n    \n    if(destroyItem) {\n      const last = result.lastArray[index]\n      const tag: Tag = last.tag\n      destroyArrayTag(tag, options.counts)\n\n      ++removed\n      ++options.counts.removed\n      \n      return false\n    }\n    return true\n  })\n\n  // const masterBefore = template || (template as any).clone\n  const before = template || (template as any).clone\n\n  value.forEach((subTag, index) => {\n    const previous = result.lastArray[index]\n    const previousSupport = subTag.tagSupport || previous?.tag.tagSupport\n\n    subTag.tagSupport = previousSupport || new TagSupport({} as TemplaterResult, new ValueSubject([]))\n    \n    if(previousSupport) {\n      previousSupport.newest = subTag\n    } else {\n      subTag.tagSupport.mutatingRender = () => {\n        ownerTag.tagSupport.render() // call owner for needed updates\n        return subTag\n      }\n  \n      ownerTag.children.push(subTag)\n    }\n    \n    subTag.ownerTag = ownerTag    \n\n    // check for html``.key()\n    const keyNotSet = subTag.arrayValue as ArrayValueNeverSet | undefined\n    if (keyNotSet?.isArrayValueNeverSet) {\n      const details = {\n        template: subTag.getTemplate().string,\n        array: value,\n        ownerTagContent: ownerTag.lastTemplateString,\n      }\n      const message = 'Use html`...`.key(item) instead of html`...` to template an Array'\n      console.error(message, details)\n      const err = new ArrayNoKeyError(message, details)\n      throw err\n    }\n    \n    const couldBeSame = result.lastArray.length > index\n    if (couldBeSame) {\n\n      const isSame = areLikeValues(previous.tag.arrayValue, subTag.arrayValue)\n      if (isSame) {\n        subTag.tagSupport = subTag.tagSupport || previous.tag.tagSupport\n        previous.tag.updateByTag(subTag)\n        return []\n      }\n\n      return []\n    }\n\n    processAddTagArrayItem(before, subTag, result, index, options)\n  })\n\n  return clones\n}\n\nfunction processAddTagArrayItem(\n  before: Element | Text | Template,\n  subTag: Tag,\n  result: TagArraySubject,\n  index: number,\n  options: {\n    counts: Counts\n    forceElement?: boolean\n  },\n) {\n  const lastValue = {\n    tag: subTag, index\n  }\n  // Added to previous array\n  result.lastArray.push(lastValue)\n\n  const counts: Counts = {\n    added: options.counts.added + index,\n    removed: options.counts.removed,\n  }\n\n  const lastFirstChild = before // tag.clones[0] // insertBefore.lastFirstChild    \n\n  subTag.buildBeforeElement(\n    lastFirstChild,\n    {counts, forceElement: options.forceElement}\n  )\n}\n\n/** compare two values. If both values are arrays then the items will be compared */\nfunction areLikeValues(valueA: unknown, valueB: unknown): Boolean {\n  if(valueA === valueB) {\n    return true\n  }\n\n  const bothArrays = valueA instanceof Array && valueB instanceof Array\n  const matchLengths = bothArrays && valueA.length == valueB.length\n  if(matchLengths) {\n    return valueA.every((item, index) => item == valueB[index])\n  }\n\n  return false\n}\n","import { Tag } from './Tag.class'\nimport { Clones } from './Clones.type'\nimport { Counts, Template } from './interpolateTemplate'\nimport { TagArraySubject } from './processTagArray'\nimport { TagSubject } from './Tag.utils'\n\nexport function processTagResult(\n  tag: Tag,\n  result: TagArraySubject | TagSubject | Function, // used for recording past and current value\n  insertBefore: Element | Text | Template, // <template end interpolate />\n  {\n    counts, forceElement,\n  }: {\n    counts: Counts\n    forceElement?: boolean\n  }\n) {\n  // *if appears we already have seen\n  const subjectTag = result as TagSubject\n  const rTag = subjectTag.tag\n  if(rTag && !forceElement) {\n    // are we just updating an if we already had?\n    if(rTag.isLikeTag(tag)) {\n      // components\n      if(result instanceof Function) {\n        const newTag = result(rTag.tagSupport)\n        rTag.updateByTag(newTag)\n        return\n      }\n\n      rTag.updateByTag(tag)\n      return\n    }    \n  }\n\n  tag.buildBeforeElement(insertBefore, {\n    counts,\n    forceElement,\n  })\n  subjectTag.tag = subjectTag.tag || tag // let reprocessing know we saw this previously as an if\n}\n","import { Tag } from './Tag.class'\nimport { deepClone, deepEqual } from './deepFunctions'\nimport { Provider } from './providers'\n\nexport function providersChangeCheck(tag: Tag) {\n  const providersWithChanges = tag.tagSupport.memory.providers.filter(provider =>\n    !deepEqual(provider.instance, provider.clone)\n  )\n\n  // reset clones\n  providersWithChanges.forEach(provider => {\n    const appElement = tag.getAppElement()\n\n    handleProviderChanges(appElement, provider)\n\n    provider.clone = deepClone(provider.instance)\n  })\n}\n\nfunction handleProviderChanges(\n  appElement: Tag,\n  provider: Provider,\n) {\n  const tagsWithProvider = getTagsWithProvider(appElement, provider)\n\n  tagsWithProvider.forEach(({tag, renderCount, provider}) => {\n    const notRendered = renderCount === tag.tagSupport.memory.renderCount\n    if(notRendered) {\n      provider.clone = deepClone(provider.instance)\n      tag.tagSupport.render()\n    }\n  })\n}\n\nfunction getTagsWithProvider(\n  tag: Tag,\n  provider: Provider,\n  memory: {\n    tag: Tag\n    renderCount: number\n    provider: Provider\n  }[] = []\n) {\n  const compare = tag.tagSupport.memory.providers\n\n  const hasProvider = compare.find(\n    xProvider => xProvider.constructMethod === provider.constructMethod\n  )\n  \n  if(hasProvider) {\n    memory.push({\n      tag,\n      renderCount: tag.tagSupport.memory.renderCount,\n      provider: hasProvider\n    })\n  }\n\n  tag.children.forEach(child => getTagsWithProvider(child, provider, memory))\n\n  return memory\n}\n","import { Tag } from './Tag.class'\nimport { deepClone } from './deepFunctions'\nimport { TagSupport } from './TagSupport.class'\nimport { setUse } from './setUse.function'\n\nexport type Provider = {\n  constructMethod: any\n  instance: any\n  clone: any\n}\n\ntype ProviderConstructor<T> = (new (...args: any[]) => T) | (() => T)\n\n// TODO: rename\nsetUse.memory.providerConfig = {\n  providers: [] as Provider[],\n\n  //currentTagSupport: undefined as TagSupport | undefined,\n  ownerTag: undefined as Tag | undefined,\n}\n\nfunction get(constructMethod: Function) {\n  const config = setUse.memory.providerConfig\n  const providers: Provider[] = config.providers\n  return providers.find(provider => provider.constructMethod === constructMethod)\n}\n\ntype functionProvider = <T>() => T\ntype classProvider = new <T>(...args: any[]) => T\n\nexport const providers = {\n  create: <T>(\n    constructMethod: classProvider | functionProvider\n  ): T => {\n    const existing = get(constructMethod)\n    if(existing) {\n      existing.clone = deepClone(existing.instance)\n      return existing.instance\n    }\n\n    // Providers with provider requirements just need to use providers.create() and providers.inject()\n    const instance: T = constructMethod.constructor ? new (constructMethod as classProvider)() : (constructMethod as functionProvider)()\n    \n    const config = setUse.memory.providerConfig\n    config.providers.push({\n      constructMethod,\n      instance,\n      clone: deepClone(instance)\n    })\n    \n    return instance\n  },\n  \n  /**\n   * @template T\n   * @param {(new (...args: any[]) => T) | () => T} constructor \n   * @returns {T}\n   */\n  inject: <T>(constructor: ProviderConstructor<T>): T => {\n    const oldValue = get(constructor)\n    if(oldValue) {\n      return oldValue.instance\n    }\n\n    const config = setUse.memory.providerConfig\n    let owner = {\n      ownerTag: config.ownerTag\n    } as Tag\n  \n    while(owner.ownerTag) {\n      const ownerProviders = owner.ownerTag.tagSupport.memory.providers\n\n      const provider = ownerProviders.find(provider => {\n        if(provider.constructMethod === constructor) {\n          return true\n        }\n      })\n\n      if(provider) {\n        provider.clone = deepClone(provider.instance) // keep a copy of the latest before any change occur\n        config.providers.push(provider)\n        return provider.instance\n      }\n\n      owner = owner.ownerTag // cause reloop\n    }\n    \n    const msg = `Could not inject provider: ${constructor.name} ${constructor}`\n    console.warn(`${msg}. Available providers`, config.providers)\n    throw new Error(msg)\n  }\n}\n\nsetUse({ // providers\n  beforeRender: (\n    tagSupport: TagSupport,\n    ownerTag: Tag,\n  ) => {\n    run(tagSupport, ownerTag)\n  },\n  beforeRedraw: (\n    tagSupport: TagSupport,\n    tag: Tag,\n  ) => {\n    run(tagSupport, tag.ownerTag as Tag)\n  },\n  afterRender: (\n    tagSupport: TagSupport,\n    // tag: Tag\n  ) => {\n    const config = setUse.memory.providerConfig\n    tagSupport.memory.providers = [...config.providers]\n    config.providers.length = 0\n  }\n})\n\nfunction run(\n  tagSupport: TagSupport,\n  ownerTag: Tag,\n  // tag: Tag,\n) {\n  const config = setUse.memory.providerConfig\n  // config.currentTagSupport = tagSupport\n  \n  config.ownerTag = ownerTag\n  \n  if(tagSupport.memory.providers.length) {\n    config.providers.length = 0\n    config.providers.push(...tagSupport.memory.providers)\n  }\n}","import { TagSupport } from './TagSupport.class'\nimport { TemplaterResult } from './templater.utils'\nimport { Tag } from './Tag.class'\n\nexport function redrawTag(\n  tagSupport: TagSupport,\n  templater: TemplaterResult, // latest tag function to call for rendering\n  existingTag?: Tag,\n  ownerTag?: Tag,\n) {\n  const result = templater.renderWithSupport(\n    tagSupport,\n    existingTag,\n    ownerTag,\n  )\n\n  return result\n}\n","export function buildClones(\n  temporary: Element,\n  insertBefore: Element | Text,\n) {\n  const clones = []\n  const template = temporary.children[0] as HTMLTemplateElement\n  let nextSibling = template.content.firstChild\n  \n  while (nextSibling) {\n    const nextNextSibling = nextSibling.nextSibling\n    buildSibling(nextSibling, insertBefore)\n    clones.push(nextSibling)\n    nextSibling = nextNextSibling\n  }\n\n  return clones\n}\n\nfunction buildSibling(\n  nextSibling: ChildNode,\n  insertBefore: Element | Text,\n) {\n  const parentNode = insertBefore.parentNode as ParentNode\n  parentNode.insertBefore(\n    nextSibling,\n    insertBefore\n  )\n}\n","import { Tag } from './Tag.class'\nimport { TagSupport } from './TagSupport.class'\nimport { hasTagSupportChanged } from './hasTagSupportChanged.function'\nimport { providersChangeCheck } from './provider.utils'\nimport { TemplateRedraw, TemplaterResult } from './templater.utils'\n\n/** Returns true when rendering owner is not needed. Returns false when rendering owner should occur */\nexport function renderExistingTag(\n  tag: Tag,\n  newTemplater: TemplaterResult,\n  tagSupport: TagSupport\n): boolean {\n  const preRenderCount = tagSupport.memory.renderCount\n  providersChangeCheck(tag)\n\n  // When the providers were checked, a render to myself occurred and I do not need to re-render again\n  if(preRenderCount !== tagSupport.memory.renderCount) {\n    return true\n  }\n\n  const oldTagSupport = tag.tagSupport\n  const hasChanged = hasTagSupportChanged(\n    oldTagSupport,\n    newTemplater.tagSupport,\n  )\n  \n  const oldTemplater = tagSupport.templater as TemplateRedraw\n  tagSupport.newest = oldTemplater.redraw() // No change detected, just redraw me only\n  newTemplater.newest = tagSupport.newest\n\n  if(!hasChanged) {\n    return true\n  }\n\n  return false\n}\n","import { Context, Tag } from './Tag.class'\nimport { HowToSet } from './interpolateAttributes'\nimport { processAttribute } from './processAttribute.function'\n\nconst search = new RegExp('\\\\s*<template interpolate end id=\"__tagvar(\\\\d{1,4})\"([^>]*)></template>(\\\\s*)')\n\nexport function scanTextAreaValue(\n  textarea: HTMLTextAreaElement,\n  context: Context,\n  ownerTag: Tag,\n) {\n  const value = textarea.value\n  if( value.search(search) >=0 ) {\n    const match = value.match(/__tagvar(\\d{1,4})/);\n    const token = match ? match[0] : ''\n    const dynamic = '{' + token + '}'\n    textarea.value = ''\n    textarea.setAttribute('text-var-value', dynamic)\n\n    const howToSet: HowToSet = (_elm, _name, value: string) => textarea.value = value\n\n    processAttribute(\n      'text-var-value',\n      dynamic, // realValue, // context[token].value,\n      textarea,\n      context,\n      ownerTag,\n      howToSet,\n    )  \n  }\n}\n","import { StateMismatchError } from './errors'\nimport { TagSupport } from './TagSupport.class'\nimport { setUse } from './setUse.function'\n\nexport type StateConfig<T> = (x: T) => [T, T]\n\nexport type StateConfigItem<T> = {\n  callback?: StateConfig<T>\n  lastValue?: T\n  defaultValue?: T\n  watch?: T // when this value changes, the state becomes this value\n}\n\nexport type StateConfigArray = StateConfigItem<any>[]\n\nexport type Config = {\n  array: StateConfigArray // state memory on the first render\n  rearray: StateConfigArray // state memory to be used before the next render\n}\n\nexport type State = {\n  newest: StateConfigArray\n  // update: () => any\n  // oldest?: StateConfigArray\n  // config: Config\n}\n\n// TODO: rename\nsetUse.memory.stateConfig = {\n  array: [] as StateConfigArray, // state memory on the first render\n  rearray: [] as StateConfigArray, // state memory to be used before the next render\n} as Config\n\nexport type GetSet<T> = (y: T) => [T, T]\n\nexport function makeStateResult<T>(\n  initValue: T,\n  push: StateConfigItem<T>,\n) {\n  // return initValue\n  const result =  (y: any) => {\n    push.callback = y || (x => [initValue, initValue = x])\n\n    return initValue\n  }\n\n  return result\n}\n\n/*\nconst waitingStates: (() => unknown)[] = []\nexport function onNextStateOnly(callback: () => unknown) {\n  const config: Config = setUse.memory.stateConfig\n  \n  if(!config.rearray.length) {\n    callback()\n    return\n  }\n\n  waitingStates.push(callback)\n}\n*/\n\nsetUse({\n  beforeRender: (tagSupport: TagSupport) => initState(tagSupport),\n  beforeRedraw: (tagSupport: TagSupport) => initState(tagSupport),\n  afterRender: (\n    tagSupport: TagSupport,\n    // tag: Tag,\n  ) => {\n    const state: State = tagSupport.memory.state\n    const config: Config = setUse.memory.stateConfig\n    \n    if(config.rearray.length) {\n      if(config.rearray.length !== config.array.length) {\n        const message = `States lengths has changed ${config.rearray.length} !== ${config.array.length}. Typically occurs when a function is intended to be wrapped with a tag() call`\n        const details = {\n          oldStates: config.array,\n          newStates: config.rearray,\n          component: tagSupport.templater?.wrapper.original,\n        }\n        const error = new StateMismatchError(message,details)\n        console.warn(message,details)\n        throw error\n      }\n    }\n    \n    config.rearray = [] // clean up any previous runs\n\n    state.newest = [...config.array]\n    \n    // config.array.length = 0\n    config.array = []\n\n    // waitingStates.forEach(callback => callback())\n    // waitingStates.length = 0\n  }\n})\n\n\nexport function getStateValue<T>(\n  // state: StateConfig,\n  state: StateConfigItem<T>,\n) {\n  const callback = state.callback\n  \n  if(!callback) {\n    return state.defaultValue\n  }\n\n  const oldState = callback(StateEchoBack as any) // get value and set to undefined\n  const [oldValue] = oldState\n  const [checkValue] = callback( oldValue ) // set back to original value\n\n  if(checkValue !== StateEchoBack) {\n    const message = 'State property not used correctly. Second item in array is not setting value as expected.\\n\\n' +\n    'For \"let\" state use `let name = state(default)(x => [name, name = x])`\\n\\n' +\n    'For \"const\" state use `const name = state(default)()`\\n\\n' +\n    'Problem state:\\n' + (callback ? callback.toString() : JSON.stringify(state)) +'\\n'\n    \n    console.error(message, {state, callback, oldState, oldValue, checkValue})\n    \n    throw new Error(message)\n  }\n\n  return oldValue\n}\n\nexport class StateEchoBack {}\n\nfunction initState(\n  tagSupport: TagSupport\n) {\n  const state = tagSupport.memory.state as State\n  const config: Config = setUse.memory.stateConfig\n  \n  // TODO: This guard may no longer be needed\n  if (config.rearray.length) {\n    const message = 'last array not cleared'\n    console.error(message, {\n      config,\n      component: tagSupport.templater?.wrapper.original,\n      state,\n      expectedClearArray: config.rearray,\n    })\n\n    throw new StateMismatchError(message, {\n      config,\n      component: tagSupport.templater?.wrapper.original,\n      state,\n      expectedClearArray: config.rearray,\n    })\n  }\n\n  // TODO: this maybe redundant and not needed\n  config.rearray = [] // .length = 0\n\n  if(state?.newest.length) {\n    config.rearray.push( ...state.newest )\n  }\n}\n\n/** Used for variables that need to remain the same variable during render passes */\nexport function set <T>(\n  defaultValue: T | (() => T),\n): T {\n  const config: Config = setUse.memory.stateConfig\n  let getSetMethod: StateConfig<T>\n  \n  const restate = config.rearray[config.array.length]\n  if(restate) {\n    let oldValue = getStateValue(restate) as T\n    getSetMethod = ((x: T) => [oldValue, oldValue = x])\n    const push: StateConfigItem<T> = {\n      callback: getSetMethod,\n      lastValue: oldValue,\n      defaultValue: restate.defaultValue,\n    }\n\n    config.array.push(push)\n\n    return oldValue\n  }\n\n  // State first time run\n  const defaultFn = defaultValue instanceof Function ? defaultValue : () => defaultValue\n  let initValue = defaultFn()\n\n  getSetMethod = ((x: T) => [initValue, initValue = x])\n  const push: StateConfigItem<T> = {\n    callback: getSetMethod,\n    lastValue: initValue,\n    defaultValue: initValue,\n  }\n  config.array.push(push)\n  \n  return initValue\n}\n","import { Config, GetSet, StateConfig, StateConfigItem, getStateValue, makeStateResult } from './set.function'\nimport { setUse } from './setUse.function'\n\n/** Used for variables that need to remain the same variable during render passes */\nexport function setLet <T>(\n  defaultValue: T | (() => T),\n): ((getSet: GetSet<T>) => T) {\n  const config: Config = setUse.memory.stateConfig\n  let getSetMethod: StateConfig<T>\n  \n  const restate = config.rearray[config.array.length]\n  if(restate) {\n    let oldValue = getStateValue(restate) as T\n\n    getSetMethod = ((x: T) => [oldValue, oldValue = x])\n    const push: StateConfigItem<T> = {\n      callback: getSetMethod,\n      lastValue: oldValue,\n      defaultValue: restate.defaultValue,\n    }\n\n    config.array.push(push)\n\n    return makeStateResult(oldValue, push)\n  }\n\n  // State first time run\n  const defaultFn = defaultValue instanceof Function ? defaultValue : () => defaultValue\n  let initValue = defaultFn()\n\n  getSetMethod = ((x: T) => [initValue, initValue = x])\n  const push: StateConfigItem<T> = {\n    callback: getSetMethod,\n    lastValue: initValue,\n    defaultValue: initValue,\n  }\n  config.array.push(push)\n  \n  return makeStateResult(initValue, push)\n}\n","import { Config, GetSet, StateConfigItem, getStateValue } from './set.function'\nimport { setUse } from './setUse.function'\n\n/** Used for variables that need to remain the same variable during render passes */\nexport function setProp <T>(\n  getSet: GetSet<any>\n): T {\n  const config: Config = setUse.memory.stateConfig\n\n  const [propValue] = getSet(undefined as T)\n  getSet(propValue) // restore original value instead of undefined\n\n  const restate = config.rearray[config.array.length]\n  if(restate) {\n    let watchValue = restate.watch as T\n    let oldValue = getStateValue(restate) as T\n\n    const push: StateConfigItem<T> = {\n      callback: getSet,\n      lastValue: oldValue,\n      watch: restate.watch,\n    }\n\n    // has the prop value changed?\n    if(propValue != watchValue) {\n      push.watch = propValue\n      oldValue = push.lastValue = propValue\n    }\n\n    config.array.push(push)\n\n    getSet(oldValue)\n\n    return oldValue\n  }\n\n  const push: StateConfigItem<T> = {\n    callback: getSet,\n    lastValue: propValue,\n    watch: propValue,\n  }\n  config.array.push(push)\n  \n  return propValue\n}\n","import { Tag } from './Tag.class'\nimport { TagSupport } from './TagSupport.class'\nimport { Config } from './set.function'\n\nconst tagUse: TagUse[] = []\n\ninterface TagUse {\n  // runs only one time at creation of component html elements\n  beforeRender: (tagSupport: TagSupport, ownerTag: Tag) => void\n  \n  // runs every render\n  beforeRedraw: (tagSupport: TagSupport, tag: Tag) => void\n  \n  // runs every render\n  afterRender: (tagSupport: TagSupport, tag: Tag) => void\n  \n  beforeDestroy: (tagSupport: TagSupport, tag: Tag) => void\n}\n\nexport type UseOptions = {\n  beforeRender?: (tagSupport: TagSupport, ownerTag: Tag) => void\n  beforeRedraw?: (tagSupport: TagSupport, tag: Tag) => void\n  afterRender?: (tagSupport: TagSupport, tag: Tag) => void\n  beforeDestroy?: (tagSupport: TagSupport, tag: Tag) => void\n}\n\nexport function setUse(use: UseOptions) {\n  // must provide defaults\n  const useMe: TagUse = {\n    beforeRender: use.beforeRender || (() => undefined),\n    beforeRedraw: use.beforeRedraw || (() => undefined),\n    afterRender: use.afterRender || (() => undefined),\n    beforeDestroy: use.beforeDestroy || (() => undefined),\n  }\n\n  setUse.tagUse.push(useMe)\n}\n\nsetUse.tagUse = tagUse\nsetUse.memory = {} as (Record<string,any> & {stateConfig: Config})\n","import { Tag } from './Tag.class'\nimport { isSubjectInstance, isTagArray, isTagInstance } from './isInstance'\nimport { setUse } from './setUse.function'\nimport { TemplaterResult, Wrapper, alterProps } from './templater.utils'\nimport { ValueSubject } from './ValueSubject'\nimport { runTagCallback } from './bindSubjectCallback.function'\nimport { deepClone } from './deepFunctions'\nimport { TagSupport } from './TagSupport.class'\nimport { renderExistingTag } from './renderExistingTag.function'\n\nexport type TagChildren = ValueSubject<Tag[]>\nexport type TagChildrenInput = Tag[] | Tag | TagChildren\nexport type TagComponentArg<T extends any[]> = (...args: T) => Tag;\ntype FirstArgOptional<T extends any[]> = T['length'] extends 0 ? true : false;\n\n// export type TagComponent = TagComponentArg<[any?, TagChildren?]>\nexport type TagComponentBase<T extends any[]> = (\n  arg: FirstArgOptional<T> extends true ? (T[0] | void) : T[0],\n  // props: FirstParameter<T>,\n  children?: TagChildrenInput\n) => Tag\n\nexport const tags: TagComponentBase<any>[] = []\nexport type TagComponent = TagComponentBase<[any?, TagChildren?]> | TagComponentBase<[]>\n\nlet tagCount = 0\n\n/** Wraps a tag component in a state manager and always push children to last argument as any array */\n// export function tag<T>(a: T): T;\nexport function tag<T extends any[]>(\n  tagComponent: TagComponentArg<T>\n): (TagComponentBase<T>) {\n  const result = (function tagWrapper(\n    props?: T | Tag | Tag[],\n    children?: TagChildrenInput\n  ) {\n    const isPropTag = isTagInstance(props) || isTagArray(props)    \n    \n    if(isPropTag) {\n      children = props as Tag | Tag[] | TagChildren\n      props = undefined\n    }\n\n    const { childSubject, madeSubject } = kidsToTagArraySubject(children)\n    ;(childSubject as any).isChildSubject = true\n\n    const templater: TemplaterResult = new TemplaterResult(props, childSubject)\n\n    const innerTagWrap: Wrapper = getTagWrap(\n      templater,\n      childSubject,\n      madeSubject,\n    )\n\n    innerTagWrap.original = tagComponent\n    \n    templater.tagged = true    \n    templater.wrapper = innerTagWrap as Wrapper\n\n    return templater\n  }) // we override the function provided and pretend original is what's returned\n\n  updateResult(result, tagComponent as unknown as TagComponent)\n\n  // group tags together and have hmr pickup\n  updateComponent(tagComponent)\n  tags.push(tagComponent as unknown as TagComponent)\n\n  return result as any\n}\n\nfunction kidsToTagArraySubject(\n  children?: TagChildrenInput\n): {\n  childSubject: ValueSubject<Tag[]>,\n  madeSubject: boolean\n} {\n  if(isSubjectInstance(children)) {\n    return {childSubject: children as ValueSubject<Tag[]>, madeSubject: false}\n  }\n  \n  const kidArray = children as Tag[]\n  if(isTagArray(kidArray)) {\n    return {childSubject: new ValueSubject(children as Tag[]), madeSubject: true}\n  }\n\n  const kid = children as Tag\n  if(kid) {\n    kid.arrayValue = 0\n    return {childSubject: new ValueSubject([kid]), madeSubject: true}\n  }\n\n  return {childSubject: new ValueSubject([]), madeSubject: true}\n}\n\nfunction updateResult(\n  result: any,\n  tagComponent: TagComponent\n) {\n  result.isTag = true\n  result.original = tagComponent\n}\n\nfunction updateComponent(\n  tagComponent: any\n) {\n  tagComponent.tags = tags\n  tagComponent.setUse = setUse\n  tagComponent.tagIndex = tagCount++ // needed for things like HMR\n}\n\nfunction getTagWrap(\n  templater: TemplaterResult,\n  childSubject: ValueSubject<Tag[]>,\n  madeSubject: boolean\n): Wrapper {\n  const innerTagWrap = function(oldTagSetup: TagSupport) {\n    const originalFunction = (innerTagWrap as any).original as unknown as TagComponent\n    // const oldTagSetup = templater.tagSupport\n\n    const oldest = templater.oldest\n\n    let props = oldTagSetup.propsConfig.latest\n    let castedProps = alterProps(props, templater)\n    \n    // CALL ORIGINAL COMPONENT FUNCTION\n    const tag = originalFunction(castedProps, childSubject)\n\n    if(oldTagSetup.mutatingRender === TagSupport.prototype.mutatingRender) {\n      oldTagSetup.oldest = tag\n      templater.oldest = tag\n      // tag.tagSupport = oldTagSetup\n\n      oldTagSetup.mutatingRender = () => {\n        const exit = renderExistingTag(templater.oldest as Tag, templater, oldTagSetup)\n\n        if(exit) {\n          return tag\n        }\n        \n        // Have owner re-render\n        if(tag.ownerTag) {\n          const newest = tag.ownerTag.tagSupport.render()\n          // TODO: Next line most likely not needed\n          tag.ownerTag.tagSupport.newest = newest\n          return tag\n        }\n    \n        return tag\n      }\n    }\n\n    tag.tagSupport = new TagSupport(templater, oldTagSetup.children)\n\n    const clonedProps = deepClone(castedProps) // castedProps\n    tag.tagSupport.propsConfig = {\n      latest: props, // castedProps\n      latestCloned: clonedProps,\n      clonedProps: clonedProps,\n      lastClonedKidValues: tag.tagSupport.propsConfig.lastClonedKidValues,\n    }\n\n    tag.tagSupport.memory = oldTagSetup.memory\n    // ???\n    // tag.tagSupport.memory = {...oldTagSetup.memory}\n    // tag.tagSupport.memory.context = {...oldTagSetup.memory.context}\n    tag.tagSupport.mutatingRender = oldTagSetup.mutatingRender\n    oldTagSetup.newest = tag\n\n    oldTagSetup.propsConfig = {...tag.tagSupport.propsConfig}\n    if(oldest) {\n      oldest.tagSupport.propsConfig = {...tag.tagSupport.propsConfig}\n    }\n\n    if(madeSubject) {\n      childSubject.value.forEach(kid => {\n        kid.values.forEach((value, index) => {            \n          if(!(value instanceof Function)) {\n            return\n          }\n          \n          if(kid.values[index].isChildOverride) {\n            return // already overwritten\n          }\n          \n          // all functions need to report to me\n          kid.values[index] = function(...args: unknown[]) {\n            runTagCallback(value, tag.ownerTag as Tag, this, args)\n            // runTagCallback(value, tag, this, args)\n          }\n          \n          kid.values[index].isChildOverride = true\n        })\n      })\n    }\n\n    return tag\n  }\n\n  return innerTagWrap as Wrapper\n}","import { TagSupport } from './TagSupport.class'\nimport { runAfterRender, runBeforeRender } from './tagRunner'\nimport { TemplaterResult } from './templater.utils'\nimport { Tag } from './Tag.class'\nimport { TagComponent } from './tag'\nimport { renderExistingTag } from './renderExistingTag.function'\n\nconst appElements: {tag: Tag, element: Element}[] = []\n\nexport function tagElement(\n  app: TagComponent, // (...args: unknown[]) => TemplaterResult,\n  element: HTMLElement | Element,\n  props: unknown,\n): {tag: Tag, tags: TagComponent[]} {\n  const appElmIndex = appElements.findIndex(appElm => appElm.element === element)\n  if(appElmIndex >= 0) {\n    appElements[appElmIndex].tag.destroy()\n    appElements.splice(appElmIndex, 1)\n    // an element already had an app on it\n    console.warn('Found and destroyed app element already rendered to element', {element})\n  }\n\n  // Create the app which returns [props, runOneTimeFunction]\n  const wrapper = app(props) as unknown as TemplaterResult\n\n  // have a function setup and call the tagWrapper with (props, {update, async, on})\n  const result = applyTagUpdater(wrapper)\n  const {tag} = result\n\n  tag.appElement = element\n  tag.tagSupport.oldest = tag\n\n  addAppTagRender(tag.tagSupport, tag)\n    \n  const templateElm = document.createElement('template')\n  templateElm.setAttribute('id', 'app-tag-' + appElements.length)\n  templateElm.setAttribute('app-tag-detail', appElements.length.toString())\n  element.appendChild(templateElm)\n  \n  tag.buildBeforeElement(templateElm)\n\n  ;(element as any).setUse = (app as any).original.setUse\n\n  appElements.push({element, tag})\n\n  return {tag, tags: (app as any).original.tags}\n}\n\nexport function applyTagUpdater(\n  wrapper: TemplaterResult,\n) {\n  const tagSupport = wrapper.tagSupport\n  runBeforeRender(tagSupport, undefined as any as Tag)\n\n  // Call the apps function for our tag templater\n  const tag = wrapper.wrapper(tagSupport)\n  runAfterRender(tagSupport, tag)\n\n  return { tag, tagSupport }\n}\n\n/** Overwrites arguments.tagSupport.mutatingRender */\nexport function addAppTagRender(\n  tagSupport: TagSupport,\n  tag: Tag,\n) {\n  tagSupport.templater.redraw = () => {\n    const existingTag = tag\n    const {retag} = tagSupport.templater.renderWithSupport(\n      tagSupport,\n      existingTag, // newest\n      {} as any, // ownerTag,\n    )\n\n    tag.updateByTag(retag)\n    return retag\n  }\n  \n  tagSupport.mutatingRender = () => {\n    renderExistingTag(tag, tagSupport.templater, tagSupport)\n    return tag\n  }\n}\n","// TODO: This should be more like `new TaggedJs().use({})`\n\nimport { Tag } from './Tag.class'\nimport { TagSupport } from './TagSupport.class'\nimport { setUse } from './setUse.function'\n\n// Life cycle 1\nexport function runBeforeRender(\n  tagSupport: TagSupport,\n  tagOwner: Tag,\n) {\n  setUse.tagUse.forEach(tagUse => tagUse.beforeRender(tagSupport, tagOwner))\n}\n\n// Life cycle 2\nexport function runAfterRender(\n  tagSupport: TagSupport,\n  tag: Tag,\n) {\n  setUse.tagUse.forEach(tagUse => tagUse.afterRender(tagSupport, tag))\n}\n\n// Life cycle 3\nexport function runBeforeRedraw(\n  tagSupport: TagSupport,\n  tag: Tag,\n) {\n  setUse.tagUse.forEach(tagUse => tagUse.beforeRedraw(tagSupport, tag))\n}\n\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(\n  tagSupport: TagSupport,\n  tag: Tag,\n) {\n  setUse.tagUse.forEach(tagUse => tagUse.beforeDestroy(tagSupport, tag))\n}\n","import { Tag } from './Tag.class'\nimport { TagSupport } from './TagSupport.class'\nimport { isTagInstance } from './isInstance'\nimport { runAfterRender, runBeforeRedraw, runBeforeRender } from './tagRunner'\nimport { setUse } from './setUse.function'\nimport { Props } from './Props'\nimport { TagChildren } from './tag'\n\nexport type Wrapper = ((tagSupport: TagSupport) => Tag) & {\n  original: () => Tag\n}\n\nexport class TemplaterResult {\n  tagged!: boolean\n  wrapper!: Wrapper\n  insertBefore!: Element | Text\n  newest?: Tag\n  oldest?: Tag\n\n  tagSupport: TagSupport\n\n  constructor(\n    props: Props,\n    children: TagChildren,\n  ) {\n    this.tagSupport = new TagSupport(this, children, props)\n  }\n\n  redraw?: (\n    force?: boolean, // force children to redraw\n  ) => Tag | undefined\n  isTemplater = true\n\n  renderWithSupport(\n    tagSupport: TagSupport,\n    existingTag: Tag | undefined,\n    ownerTag?: Tag,\n  ) {\n    /* BEFORE RENDER */\n      // signify to other operations that a rendering has occurred so they do not need to render again\n      ++tagSupport.memory.renderCount\n\n      const runtimeOwnerTag = existingTag?.ownerTag || ownerTag\n\n      // const insertBefore = tagSupport.templater.insertBefore\n\n      if(existingTag) {\n        tagSupport.propsConfig = {...existingTag.tagSupport.propsConfig}\n        runBeforeRedraw(tagSupport, existingTag)\n      } else {\n        // first time render\n        runBeforeRender(tagSupport, runtimeOwnerTag as Tag)\n\n        // TODO: Logic below most likely could live within providers.ts inside the runBeforeRender function\n        const providers = setUse.memory.providerConfig\n        providers.ownerTag = runtimeOwnerTag\n      }\n    /* END: BEFORE RENDER */\n\n    const templater = this\n    const retag = templater.wrapper(tagSupport)\n\n    /* AFTER */\n\n    runAfterRender(tagSupport, retag)\n  \n    templater.newest = retag\n    retag.ownerTag = runtimeOwnerTag\n    tagSupport.newest = retag\n    \n    return {remit: true, retag}\n  }\n}\n\nexport interface TemplateRedraw extends TemplaterResult {\n  redraw: () => Tag | undefined\n}\n\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProps(\n  props: Props,\n  templater: TemplaterResult,\n) {\n  function callback(toCall: any, callWith: any) {\n    const callbackResult = toCall(...callWith)\n\n    // const tag = templater.oldest as Tag\n    const tag = templater.newest\n    // const tagSupport = tag.tagSupport\n    // const tagSupport = templater.tagSupport\n    const tagSupport = tag?.ownerTag?.tagSupport as TagSupport\n    tagSupport.render()\n\n    return callbackResult\n  }\n  \n  const isPropTag = isTagInstance(props)\n  const watchProps = isPropTag ? 0 : props\n  const newProps = resetFunctionProps(watchProps, callback)\n\n  return newProps\n}\n\nfunction resetFunctionProps(\n  props: any,\n  callback: (toCall: any, callWith: any) => unknown,\n) {\n  if(typeof(props)!=='object') {\n    return props\n  }\n\n  const newProps = props\n  // BELOW: Do not clone because if first argument is object, the memory ref back is lost\n  // const newProps = {...props} \n\n  Object.entries(newProps).forEach(([name, value]) => {\n    if(value instanceof Function) {\n      const original = newProps[name].original\n      \n      if(original) {\n        return // already previously converted\n      }\n\n      newProps[name] = (...args: any[]) => {\n        return callback(value, args)\n      }\n\n      newProps[name].original = value\n\n      return\n    }\n  })\n\n  return newProps\n}\n","import { Tag } from './Tag.class'\nimport { TagSubject } from './Tag.utils'\nimport { runAfterRender, runBeforeRedraw } from './tagRunner'\nimport { TemplaterResult } from './templater.utils'\n\nexport function updateExistingTag(\n  templater: TemplaterResult,\n  ogTag: Tag,\n  existingSubject: TagSubject,\n) {\n  const tagSupport = ogTag.tagSupport\n  const oldest = tagSupport.oldest as Tag\n  const newest = tagSupport.newest as Tag\n\n  // runBeforeRedraw(oldest.tagSupport, newest || oldest)\n  runBeforeRedraw(oldest.tagSupport, oldest)\n\n  const retag = templater.wrapper(tagSupport)\n  \n  templater.newest = retag\n  tagSupport.newest = retag\n  runAfterRender(oldest.tagSupport, oldest)\n  ogTag.updateByTag(retag)\n  // oldest.updateByTag(retag)\n\n  existingSubject.set(templater)\n  \n  return []\n}\n","import { TagSubject, setValueRedraw } from './Tag.utils'\nimport { deepClone } from './deepFunctions'\nimport { TemplateRedraw } from './templater.utils'\nimport { isTagInstance } from './isInstance'\nimport { Tag } from './Tag.class'\nimport { hasTagSupportChanged } from './hasTagSupportChanged.function'\nimport { destroyTagMemory } from './checkDestroyPrevious.function'\nimport { isLikeTags } from './isLikeTags.function'\n\nexport function updateExistingTagComponent(\n  ownerTag: Tag,\n  tempResult: TemplateRedraw,\n  existingSubject: TagSubject,\n): void {\n  let existingTag: Tag | undefined = existingSubject.tag\n  \n  //const template = existingSubject.template\n  const insertBefore = existingTag.tagSupport.templater.insertBefore\n\n  // tag existingTag\n  const oldWrapper = existingTag.tagSupport.templater.wrapper\n  const newWrapper = tempResult.wrapper\n  let isSameTag = false\n  \n  if(oldWrapper && newWrapper) {\n    const oldFunction = oldWrapper.original\n    const newFunction = newWrapper.original\n    isSameTag = oldFunction === newFunction\n  }\n\n  const latestProps = tempResult.tagSupport.propsConfig.latest\n  const oldTagSetup = existingTag.tagSupport\n  oldTagSetup.propsConfig.latest = latestProps\n\n  if(!isSameTag) {\n    destroyTagMemory(existingTag, existingSubject)\n  } else {\n    const subjectTagSupport = existingTag.tagSupport\n    // old props may have changed, reclone first\n\n    let oldCloneProps = subjectTagSupport.propsConfig.clonedProps\n    const newProps = subjectTagSupport.propsConfig.latest\n\n    // if the new props are NOT HTML children, then clone the props for later render cycle comparing\n    if(!isTagInstance(newProps)) {\n      oldCloneProps = deepClone( newProps )\n    }\n\n    const newTagSupport = tempResult.tagSupport\n    const hasChanged = hasTagSupportChanged(oldTagSetup, newTagSupport)\n    if(!hasChanged) {\n      return // its the same tag component\n    }\n  }\n\n  setValueRedraw(tempResult, existingSubject, ownerTag)\n\n  oldTagSetup.templater = tempResult\n  \n  const newTag = tempResult.redraw() as Tag\n  // detect if both the function is the same and the return is the same\n  const isLikeTag = isSameTag && existingTag.isLikeTag(newTag)\n\n  if(isLikeTag) {\n    existingTag.updateByTag(newTag)\n  } else {\n    existingSubject.tagSupport = newTag.tagSupport\n    existingSubject.tag = newTag    \n    oldTagSetup.oldest = newTag\n    \n    // Although function looked the same it returned a different html result\n    if(isSameTag) {\n      existingTag.destroy()\n    }\n  }\n  \n  oldTagSetup.newest = newTag\n  oldTagSetup.propsConfig = {...tempResult.tagSupport.propsConfig}\n\n  return\n}\n","import { DisplaySubject, TagSubject } from './Tag.utils'\nimport { TagSupport } from './TagSupport.class'\nimport { Subject } from './Subject'\nimport { TemplateRedraw, TemplaterResult } from './templater.utils'\nimport { isSubjectInstance, isTagArray, isTagComponent, isTagInstance } from './isInstance'\nimport { bindSubjectCallback } from './bindSubjectCallback.function'\nimport { Tag } from './Tag.class'\nimport { InterpolateSubject, processTag } from './processSubjectValue.function'\nimport { TagArraySubject, processTagArray } from './processTagArray'\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function'\nimport { updateExistingTag } from './updateExistingTag.function'\nimport { RegularValue, processRegularValue } from './processRegularValue.function'\nimport { checkDestroyPrevious } from './checkDestroyPrevious.function'\n\ntype ExistingValue = TemplaterResult | Tag[] | TagSupport | Function | Subject<unknown> | RegularValue | Tag\n\nexport function updateExistingValue(\n  subject: InterpolateSubject,\n  value: ExistingValue,\n  ownerTag: Tag,\n): void {\n  const subjectSubArray = subject as TagArraySubject\n  const subjectSubTag = subject as TagSubject\n  const isChildSubject = subjectSubArray.isChildSubject\n  const isComponent = isTagComponent(value)\n  \n  // If we are working with tag component 2nd argument children, the value has to be digged\n  if(isChildSubject) {\n    value = (value as any).value // A subject contains the value\n  }\n\n  const oldInsertBefore = (subject as DisplaySubject).template || subjectSubTag.tag?.tagSupport.templater.insertBefore || (subjectSubTag as DisplaySubject).clone\n  \n  checkDestroyPrevious(subject, value)\n\n  // handle already seen tag components\n  if(isComponent) {\n    if(!subjectSubTag.tag) {\n      const templater = value as TemplaterResult\n      const {retag} = templater.renderWithSupport(\n        (value as TemplaterResult).tagSupport,\n        undefined,\n        ownerTag,\n      )\n      \n      templater.newest = retag\n      templater.oldest = retag\n      subjectSubTag.tag = retag\n      subjectSubTag.tagSupport = retag.tagSupport\n\n      retag.buildBeforeElement(oldInsertBefore, {\n        forceElement: true,\n        counts: {added: 0, removed: 0},\n      })\n\n      return\n    }\n\n    return updateExistingTagComponent(\n      ownerTag,\n      value as TemplateRedraw, // latest value\n      subjectSubTag,\n    )\n  }\n  \n  // was component but no longer\n  const subjectTag = subjectSubTag.tag\n  if(subjectTag) {\n    handleStillTag(\n      subjectTag,\n      subject as TagSubject | TagArraySubject,\n      value,\n      ownerTag\n    )\n\n    return\n  }\n\n  // its another tag array\n  if(isTagArray(value)) {\n    const insertBefore = subjectSubArray.template || subjectSubTag.tag?.tagSupport.templater.insertBefore\n\n    processTagArray(\n      subject as TagArraySubject,\n      value as any as Tag[],\n      insertBefore,\n      ownerTag,\n      {counts: {\n        added: 0,\n        removed: 0,\n      }}\n    )\n\n    return \n  }\n\n  // now its a function\n  if(value instanceof Function) {\n    subjectSubTag.set( bindSubjectCallback(value as any, ownerTag) )\n    return\n  }\n\n  // we have been given a subject\n  if(isSubjectInstance(value)) {\n    subjectSubTag.set( (value as Subject<any>).value ) // let ValueSubject now of newest value\n    return\n  }\n  \n  if(isTagInstance(value)) {\n    subjectSubTag.template = oldInsertBefore\n  }\n\n  // This will cause all other values to render\n  subjectSubTag.set(value) // let ValueSubject now of newest value\n\n  return\n}\n\nfunction handleStillTag(\n  existingTag: Tag,\n  existing: InterpolateSubject,\n  value: ExistingValue,\n  ownerTag: Tag,\n) {\n  const oldWrapper = existingTag.tagSupport.templater.wrapper\n  const newWrapper = (value as any)?.wrapper\n  const wrapMatch = oldWrapper && newWrapper && oldWrapper?.original === newWrapper?.original\n\n  // TODO: We shouldn't need both of these\n  const isSameTag = value && existingTag.lastTemplateString === (value as any).lastTemplateString\n  const isSameTag2 = value && (value as any).getTemplate && existingTag.isLikeTag(value as any)\n\n  if(isSameTag || isSameTag2) {\n    return processTag(\n      value,\n      existing as TagSubject,\n      (existing as any).template,\n      ownerTag,// existingTag, // tag,\n      {\n        counts: {\n          added: 0,\n          removed: 0,\n        }\n      }\n    )\n  }\n  \n  if(wrapMatch) {\n    return updateExistingTag(\n      value as TemplaterResult,\n      existingTag,\n      existing as TagSubject,\n    )\n  }\n\n  const subject = existing as DisplaySubject\n  return processRegularValue(value as RegularValue, subject, subject.template)\n}\n","import { setLet } from './setLet.function'\n\nexport type WatchCallback = (\n  currentValues: any[],\n  previousValues: any[] | undefined // first run this is undefined\n) => unknown | ((currentValues: any[]) => unknown) | (() => unknown)\n\n/** When an item in watch array changes, callback function will be triggered */\nexport function watch<T>(\n  currentValues: T[],\n  callback: WatchCallback\n): T[] {\n  let previousValues = setLet(undefined as undefined | unknown[])(x => [previousValues, previousValues = x])\n\n  if(previousValues === undefined) {\n    callback(currentValues, previousValues)\n    const result = {currentValues, previousValues}\n    previousValues = currentValues\n    return currentValues\n  }\n\n  const allExact = currentValues.every((item, index) => item === (previousValues as any[])[index])\n\n  if(allExact) {\n    return currentValues\n  }\n\n  callback(currentValues, previousValues)\n  previousValues = currentValues\n\n  return currentValues\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { App } from \"./app.component\"\nexport { IsolatedApp } from \"./isolatedApp\"\nexport { hmr } from \"taggedjs\"\n"],"names":[],"sourceRoot":""}