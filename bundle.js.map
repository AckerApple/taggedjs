{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://taggedjs/webpack/bootstrap","webpack://taggedjs/webpack/runtime/define property getters","webpack://taggedjs/webpack/runtime/hasOwnProperty shorthand","webpack://taggedjs/./ts/tag/update/getNewGlobal.function.ts","webpack://taggedjs/./ts/tag/tag.types.ts","webpack://taggedjs/./ts/tag/ValueTypes.enum.ts","webpack://taggedjs/./ts/isInstance.ts","webpack://taggedjs/./ts/subject/combineLatest.function.ts","webpack://taggedjs/./ts/subject/subject.utils.ts","webpack://taggedjs/./ts/subject/Subject.class.ts","webpack://taggedjs/./ts/subject/ValueSubject.ts","webpack://taggedjs/./ts/subject/will.functions.ts","webpack://taggedjs/./ts/state/stateHandlers.ts","webpack://taggedjs/./ts/state/state.function.ts","webpack://taggedjs/./ts/state/states.utils.ts","webpack://taggedjs/./ts/state/state.utils.ts","webpack://taggedjs/./ts/state/getStateValue.function.ts","webpack://taggedjs/./ts/state/letState.utils.ts","webpack://taggedjs/./ts/state/setUseMemory.object.ts","webpack://taggedjs/./ts/state/syncStates.function.ts","webpack://taggedjs/./ts/state/watch.function.ts","webpack://taggedjs/./ts/state/subject.function.ts","webpack://taggedjs/./ts/state/letState.function.ts","webpack://taggedjs/./ts/state/letProp.function.ts","webpack://taggedjs/./ts/state/providers.ts","webpack://taggedjs/./ts/errors.ts","webpack://taggedjs/./ts/deepFunctions.ts","webpack://taggedjs/./ts/tag/TemplaterResult.class.ts","webpack://taggedjs/./ts/tag/tag.utils.ts","webpack://taggedjs/./ts/tag/cloneValueArray.function.ts","webpack://taggedjs/./ts/tag/Support.class.ts","webpack://taggedjs/./ts/tag/clonePropsBy.function.ts","webpack://taggedjs/./ts/alterProp.function.ts","webpack://taggedjs/./ts/tag/executeWrap.function.ts","webpack://taggedjs/./ts/tag/getTagWrap.function.ts","webpack://taggedjs/./ts/tag/key.ts","webpack://taggedjs/./ts/tag/tag.ts","webpack://taggedjs/./ts/tag/hasSupportChanged.function.ts","webpack://taggedjs/./ts/tag/paint.function.ts","webpack://taggedjs/./ts/updateBeforeTemplate.function.ts","webpack://taggedjs/./ts/interpolations/attributes/howToSetInputValue.function.ts","webpack://taggedjs/./ts/interpolations/attributes/specialAttribute.ts","webpack://taggedjs/./ts/state/handleProviderChanges.function.ts","webpack://taggedjs/./ts/interpolations/attributes/getUpTags.function.ts","webpack://taggedjs/./ts/tag/render/renderSupport.function.ts","webpack://taggedjs/./ts/state/providersChangeCheck.function.ts","webpack://taggedjs/./ts/interpolations/attributes/renderTagArray.function.ts","webpack://taggedjs/./ts/interpolations/attributes/bindSubjectCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processNameValueAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/addSupportEventListener.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttributeCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/isSpecialAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttribute.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/attachDomElements.function.ts","webpack://taggedjs/./ts/tag/buildBeforeElement.function.ts","webpack://taggedjs/./ts/tag/update/processTag.function.ts","webpack://taggedjs/./ts/tag/processUpdateAttrContext.function.ts","webpack://taggedjs/./ts/tag/processUpdateContext.function.ts","webpack://taggedjs/./ts/tag/updateSupportBy.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingValue.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingTagComponent.function.ts","webpack://taggedjs/./ts/tag/update/processRegularValue.function.ts","webpack://taggedjs/./ts/tag/update/processNewValue.function.ts","webpack://taggedjs/./ts/tag/tagRunner.ts","webpack://taggedjs/./ts/tag/getChildTagsToDestroy.function.ts","webpack://taggedjs/./ts/tag/smartRemoveKids.function.ts","webpack://taggedjs/./ts/tag/elementDestroyCheck.function.ts","webpack://taggedjs/./ts/tag/destroySupport.function.ts","webpack://taggedjs/./ts/tag/update/processTagArray.ts","webpack://taggedjs/./ts/tag/isLikeTags.function.ts","webpack://taggedjs/./ts/tag/checkDestroyPrevious.function.ts","webpack://taggedjs/./ts/tag/update/oneRenderToSupport.function.ts","webpack://taggedjs/./ts/tag/checkStateMismatch.function.ts","webpack://taggedjs/./ts/tag/afterRender.function.ts","webpack://taggedjs/./ts/tag/render/renderTagOnly.function.ts","webpack://taggedjs/./ts/tag/update/processNewSubjectTag.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectValue.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectComponent.function.ts","webpack://taggedjs/./ts/tag/update/processTagResult.function.ts","webpack://taggedjs/./ts/interpolations/processSubscriptionUpdate.function.ts","webpack://taggedjs/./ts/interpolations/subscribeToTemplate.function.ts","webpack://taggedjs/./ts/tag/render/softDestroySupport.function.ts","webpack://taggedjs/./ts/tag/render/renderWithSupport.function.ts","webpack://taggedjs/./ts/tag/render/renderExistingTag.function.ts","webpack://taggedjs/./ts/state/callback.function.ts","webpack://taggedjs/./ts/state/callbackStateUpdate.function.ts","webpack://taggedjs/./ts/state/callbackMaker.function.ts","webpack://taggedjs/./ts/state/onInit.ts","webpack://taggedjs/./ts/state/onDestroy.ts","webpack://taggedjs/./ts/state/states.function.ts","webpack://taggedjs/./ts/tag/getSupportInCycle.function.ts","webpack://taggedjs/./ts/tag/Tag.class.ts","webpack://taggedjs/./ts/interpolations/optimizers/htmlInterpolationToDomMeta.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/replacePlaceholders.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/restorePlaceholders.function.ts","webpack://taggedjs/./ts/tag/domMetaCollector.ts","webpack://taggedjs/./ts/tag/getStringsId.function.ts","webpack://taggedjs/./ts/tag/isLastRunMatched.function.ts","webpack://taggedjs/./ts/tag/html.ts","webpack://taggedjs/./ts/tag/tagElement.ts","webpack://taggedjs/./ts/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export function getNewGlobal(subject) {\n    ;\n    subject.renderCount = 0;\n    return subject.global = {}; // TODO: makeSupportTagGlobal\n}\n","export class RouteQuery {\n    get(_name) {\n        return 'todo';\n    }\n}\n","export const empty = '';\nexport var ImmutableTypes;\n(function (ImmutableTypes) {\n    ImmutableTypes[\"string\"] = \"string\";\n    ImmutableTypes[\"number\"] = \"number\";\n    ImmutableTypes[\"boolean\"] = \"boolean\";\n    ImmutableTypes[\"undefined\"] = \"undefined\";\n})(ImmutableTypes || (ImmutableTypes = {}));\nexport var BasicTypes;\n(function (BasicTypes) {\n    BasicTypes[\"function\"] = \"function\";\n    BasicTypes[\"date\"] = \"date\";\n    BasicTypes[\"unknown\"] = \"unknown\";\n    BasicTypes[\"object\"] = \"object\";\n})(BasicTypes || (BasicTypes = {}));\nconst version = Date.now();\n/** Used as direct memory comparisons, the strings are never compared, just the array */\nexport const ValueTypes = {\n    tag: ['html'], // html'' aka StringTag | DomTag\n    dom: ['dom'], // compiled version of html''\n    templater: ['templater'],\n    tagComponent: ['tagComponent'],\n    tagArray: ['tagArray'],\n    subject: ['subject'],\n    tagJsSubject: ['tagJsSubject'],\n    renderOnce: ['renderOnce'],\n    stateRender: ['stateRender'],\n    version,\n};\n","import { BasicTypes, ImmutableTypes, ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isSimpleType(value) {\n    switch (value) {\n        case ImmutableTypes.string:\n        case ImmutableTypes.number:\n        case ImmutableTypes.boolean:\n            return true;\n    }\n    return false;\n}\nexport function isStaticTag(value) {\n    switch (value?.tagJsType) {\n        case ValueTypes.dom:\n        case ValueTypes.tag:\n        case ValueTypes.templater:\n            return true;\n    }\n    return false;\n}\n/** passed in is expected to be a TemplaterResult */\nexport function isTagComponent(value) {\n    const tagType = value?.tagJsType;\n    return tagType === ValueTypes.tagComponent || tagType === ValueTypes.stateRender;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return isObject(subject) && typeof subject.subscribe === BasicTypes.function;\n}\nexport function isPromise(value) {\n    return value && isFunction(value.then);\n}\nexport function isFunction(value) {\n    return typeof value === BasicTypes.function;\n}\nexport function isObject(value) {\n    return typeof (value) === BasicTypes.object && value !== null;\n}\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (const item of valuesSeen) {\n                if (!item) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => {\n            return subject.subscribe(x => setValue(x, index + 1));\n        });\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject.value + 1);\n    const subscription = function () {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = function () {\n        return unsubscribe(subscription, subscribers, callback);\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\nfunction unsubscribe(subscription, subscribers, callback) {\n    removeSubFromArray(subscribers, callback); // each will be called when update comes in\n    const valSub = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(valSub.value - 1);\n    // any double unsubscribes will be ignored\n    subscription.unsubscribe = () => subscription;\n    // unsubscribe from any combined subjects\n    const subscriptions = subscription.subscriptions;\n    for (const sub of subscriptions) {\n        sub.unsubscribe();\n    }\n    return subscription;\n}\n","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    constructor(value, \n    // private? - only used by extending classes\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        // defineValueOn(this)\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this.value = value;\n        this.emit();\n    }\n    set = this.next.bind(this);\n    emit() {\n        const value = this.value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster */\n    toCallback(callback) {\n        const subscription = this.subscribe((x, runtimeSub) => {\n            const tagJsUnsub = runtimeSub?.unsubscribe;\n            if (tagJsUnsub) {\n                tagJsUnsub(); // its from taggedjs\n            }\n            else {\n                setTimeout(() => subscription.unsubscribe(), 0);\n            }\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this.value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging}\n}\nexport class Subjective extends Subject {\n    value;\n    onSubscription;\n    _value;\n    constructor(value, \n    // private?\n    onSubscription) {\n        super(value, onSubscription);\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n}\n","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this.value, subscription);\n        return subscription;\n    }\n}\nexport class ValueSubjective extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        this._value = value;\n        defineValueOn(this); // if you extend this AND have a constructor, you must call this in your extension\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n","export function willCallback(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        });\n        callback(lastValue, utils.next);\n    });\n}\n/** .pipe( promise((x) => Promise.resolve(44)) ) */\nexport function willPromise(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        result.then(x => utils.next(x));\n    });\n}\n/** .pipe( willSubscribe((x) => new ValueSubject(44)) ) */\nexport const willSubscribe = (callback) => {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        const subscription = result.subscribe(x => {\n            subscription.unsubscribe();\n            utils.next(x);\n        });\n    });\n};\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nexport function runRestate() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    config.stateArray.push(restate);\n    return restate.defaultValue;\n}\nexport function runFirstState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    let initValue = defaultValue;\n    if (typeof (defaultValue) === BasicTypes.function) {\n        initValue = defaultValue();\n    }\n    // the state is actually intended to be a function\n    if (typeof (initValue) === BasicTypes.function) {\n        const original = initValue;\n        initValue = function initValueFun(...args) {\n            const result = original(...args);\n            return result;\n        };\n        initValue.original = original;\n    }\n    const push = {\n        get: function pushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return initValue;\n}\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    return setUseMemory.stateConfig.handlers.handler(defaultValue);\n}\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nexport function firstStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    config.states[config.statesIndex] = setter;\n    const support = config.support;\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(state);\n}\nexport function reStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    const support = config.support;\n    const statesIndex = config.statesIndex;\n    const prevSupport = config.prevSupport;\n    const oldStates = prevSupport?.states[statesIndex];\n    const lastValues = [];\n    const regetter = (value) => {\n        lastValues.push(value);\n        return value;\n    };\n    oldStates(regetter);\n    let index = 0;\n    const resetter = (value) => {\n        // state(value) // fake call and do not care about result\n        // fake state() having been called\n        config.stateArray.push({\n            get: () => value,\n            defaultValue: value,\n        });\n        const lastValue = lastValues[index];\n        ++index;\n        return lastValue;\n    };\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(resetter);\n}\n","import { runFirstState, runRestate } from './stateHandlers.js';\nimport { firstLetState, reLetState } from './letState.utils.js';\nimport { firstStatesHandler, reStatesHandler } from './states.utils.js';\nexport function initState(support, config) {\n    config.handlers.handler = runFirstState;\n    config.handlers.letHandler = firstLetState;\n    config.handlers.statesHandler = firstStatesHandler;\n    config.rearray = [];\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.support = support;\n}\nexport function reState(support, config, prevState, prevStates) {\n    // set previous state memory\n    config.rearray = prevState;\n    config.stateArray = [];\n    // config.states = []\n    config.states = prevStates;\n    config.statesIndex = 0;\n    config.handlers.handler = runRestate;\n    config.handlers.letHandler = reLetState;\n    config.handlers.statesHandler = reStatesHandler;\n    config.support = support;\n}\nexport class StateEchoBack {\n}\n// sends a fake value and then sets back to received value\nexport function getCallbackValue(callback) {\n    const oldState = callback(StateEchoBack); // get value and set to undefined\n    const [value] = oldState;\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n","import { getCallbackValue } from './state.utils.js';\n/*\nconst badLetState = 'letState function incorrectly used. Second item in array is not setting expected value.\\n\\n' +\n'For \"let\" state use `let name = state(default)(x => [name, name = x])`\\n\\n' +\n'For \"const\" state use `const name = state(default)()`\\n\\n' +\n'Problem state:\\n'\n*/\nexport function getStateValue(state) {\n    const callback = state.callback;\n    // state()\n    if (!callback) {\n        return state.defaultValue;\n    }\n    // letState()\n    const [value] = getCallbackValue(callback);\n    // TODO: not needed in production, needed in development\n    /*\n    const [value, checkValue] = getCallbackValue(callback)\n    if(checkValue !== StateEchoBack) {\n      const message = badLetState + (callback ? callback.toString() : JSON.stringify(state)) +'\\n'\n      console.error(message, {state, callback, value, checkValue})\n      throw new Error(message)\n    }\n    */\n    return value;\n}\n","import { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nexport function firstLetState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    const initValue = typeof (defaultValue) === BasicTypes.function ? defaultValue() : defaultValue;\n    const push = {\n        get: function getPushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return makeStateResult(initValue, push);\n}\nexport function reLetState() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    const oldValue = getStateValue(restate);\n    const push = {\n        get: function getLetState() {\n            return getStateValue(push);\n        },\n        defaultValue: restate.defaultValue,\n    };\n    config.stateArray.push(push);\n    return makeStateResult(oldValue, push);\n}\nfunction makeStateResult(initValue, push) {\n    return function msr(y) {\n        push.callback = y;\n        return initValue;\n    };\n}\n","import { firstLetState } from './letState.utils.js';\nimport { firstStatesHandler } from './states.utils.js';\nimport { runFirstState } from './stateHandlers.js';\nexport const setUseMemory = {\n    stateConfig: {\n        stateArray: [], // state memory on the first render\n        version: Date.now(),\n        handlers: {\n            handler: runFirstState,\n            letHandler: firstLetState,\n            statesHandler: firstStatesHandler,\n        }\n    },\n};\n","export function syncStates(stateFrom, stateTo, oldStates, statesFrom) {\n    // sync state() and letState()\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const fromValue = stateFrom[index].get();\n        const callback = stateTo[index].callback; // is it a let state?\n        if (!callback) {\n            continue;\n        }\n        callback(fromValue); // set the value\n    }\n    for (let index = statesFrom.length - 1; index >= 0; --index) {\n        const oldValues = [];\n        const oldGetCallback = (oldValue) => {\n            oldValues.push(oldValue);\n            return oldValue;\n        };\n        // trigger getting all old values\n        statesFrom[index](oldGetCallback);\n        let getIndex = 0;\n        const newSetCallback = (_) => {\n            return oldValues[getIndex++];\n        };\n        // trigger setting updated values\n        oldStates[index](newSetCallback);\n    }\n}\n","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered.\n * Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before, final = defaultFinally, } = {}) => {\n    const previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (before && !before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (before && !before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const firstSupport = state(() => getSupportInCycle());\n            const subject = state(() => new ValueSubject(undefined));\n            const oldState = state(() => ({\n                stateArray: setUseMemory.stateConfig.stateArray,\n                states: setUseMemory.stateConfig.states,\n            }));\n            const method = (currentValues, callback) => {\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowSupport !== firstSupport) {\n                        const newestState = oldState.stateArray;\n                        const global = firstSupport.subject.global;\n                        const oldest = global.oldest;\n                        const oldestState = oldest.state;\n                        const newStates = oldState.states;\n                        const oldStates = oldest.states;\n                        syncStates(newestState, oldestState, newStates, oldStates);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(value, onSubscription) {\n    const oldestState = state(function subjectState() {\n        // return setUseMemory.stateConfig.stateArray\n        // return setUseMemory.stateConfig.support as AnySupport\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectState() {\n        const subject = new Subject(value, onSubscription).pipe(x => {\n            syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n}\nsubject._value = (value) => {\n    const oldestState = state(function subjectValue() {\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectValue() {\n        const subject = new ValueSubject(value).pipe(x => {\n            syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => ({\n        stateArray: setUseMemory.stateConfig.stateArray,\n        states: setUseMemory.stateConfig.states,\n    }));\n    const nowSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n        return x;\n    });\n}\nsubject.all = all;\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function letState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.letHandler(defaultValue);\n}\n","import { letState } from './letState.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(prop) {\n    return getSetProp => {\n        let myProp = letState(prop)(getSetProp);\n        watch([prop], () => getSetProp(myProp = prop));\n        getSetProp(myProp); // always reset to my value and right await so that the old prop value never slips through\n        return myProp;\n    };\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nexport const providers = {\n    create: (constructMethod) => {\n        const stateDiffMemory = state(() => ({ stateDiff: 0, provider: undefined }));\n        // mimic how many states were called the first time\n        if (stateDiffMemory.stateDiff) {\n            let x = stateDiffMemory.stateDiff;\n            while (x--) {\n                state(undefined);\n            }\n            const result = state(undefined);\n            return result;\n        }\n        const result = state(() => {\n            const stateConfig = setUseMemory.stateConfig;\n            const oldStateCount = stateConfig.stateArray.length;\n            // Providers with provider requirements just need to use providers.create() and providers.inject()\n            const instance = constructMethod.prototype ? new constructMethod() : constructMethod();\n            const support = stateConfig.support;\n            const stateDiff = stateConfig.stateArray.length - oldStateCount;\n            const provider = {\n                constructMethod,\n                instance,\n                stateDiff,\n                owner: support,\n                children: [],\n            };\n            stateDiffMemory.provider = provider;\n            const global = support.subject.global;\n            const providers = global.providers = global.providers || [];\n            providers.push(provider);\n            stateDiffMemory.stateDiff = stateDiff;\n            return instance;\n        });\n        const cm = constructMethod;\n        const compareTo = cm.compareTo = cm.toString();\n        stateDiffMemory.provider.constructMethod.compareTo = compareTo;\n        return result;\n    },\n    /**\n     * @template T\n     * @param {(new (...args: any[]) => T) | () => T} constructor\n     * @returns {T}\n     */\n    inject: (constructor) => {\n        // find once, return same every time after\n        return state(() => {\n            // const memory = setUse.memory\n            const cm = constructor;\n            const compareTo = cm.compareTo = cm.compareTo || constructor.toString();\n            const support = getSupportInCycle(); // memory.stateConfig.support as AnySupport\n            const providers = [];\n            let owner = {\n                ownerSupport: support.ownerSupport\n            };\n            while (owner.ownerSupport) {\n                const ownGlobal = owner.ownerSupport.subject.global;\n                const ownerProviders = ownGlobal.providers;\n                if (!ownerProviders) {\n                    owner = owner.ownerSupport; // cause reloop checking next parent\n                    continue;\n                }\n                const provider = ownerProviders.find(provider => {\n                    providers.push(provider);\n                    const constructorMatch = provider.constructMethod.compareTo === compareTo;\n                    if (constructorMatch) {\n                        return true;\n                    }\n                });\n                if (provider) {\n                    const global = support.subject.global;\n                    const providers = global.providers = global.providers || [];\n                    providers.push(provider);\n                    provider.children.push(support);\n                    return provider.instance;\n                }\n                owner = owner.ownerSupport; // cause reloop checking next parent\n            }\n            const msg = `Could not inject provider: ${constructor.name} ${constructor}`;\n            console.warn(`${msg}. Available providers`, providers);\n            throw new Error(msg);\n        });\n    }\n};\n","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n","import { isArray, isFunction } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nexport function deepClone(obj, maxDepth) {\n    // return makeDeepClone(obj, new WeakMap())\n    return makeDeepClone(obj, maxDepth);\n}\nfunction makeDeepClone(obj, \n// visited: WeakMap<any, any>\nmaxDepth) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== BasicTypes.object) {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    /*\n    if (visited.has(obj)) {\n      return visited.get(obj)\n    }\n    */\n    if (maxDepth < 0) {\n        return obj;\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Clone each property or element of the object or array\n    if (isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], maxDepth - 1);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                clone[key] = makeDeepClone(obj[key], maxDepth - 1);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2, maxDepth) {\n    return isDeepEqual(obj1, obj2, maxDepth);\n}\nfunction isDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    // if (visited.has(obj1)) {\n    if (maxDepth < 0) {\n        return true;\n    }\n    if (typeof obj1 === BasicTypes.object && typeof obj2 === BasicTypes.object) {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        // visited.set(obj1, 0)\n        // Check if obj1 and obj2 are both arrays\n        if (isArray(obj1) && isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, maxDepth - 1);\n        }\n        else if (isArray(obj1) || isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        // return isObjectDeepEqual(obj1, obj2, visited)\n        return isObjectDeepEqual(obj1, obj2, maxDepth - 1);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, maxDepth) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = isFunction(fn0) && isFunction(fn1);\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nexport function getTemplaterResult(propWatch, props) {\n    const templater = {\n        propWatch,\n        props,\n        tagJsType: ValueTypes.templater,\n        key: function keyTemplate(arrayValue) {\n            templater.arrayValue = arrayValue;\n            return templater;\n        }\n    };\n    return templater;\n}\n","export const tags = [];\n","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isArray } from '../isInstance.js';\nexport function cloneValueArray(values) {\n    return values.map(cloneTagJsValue);\n}\n/** clones only what is needed to compare differences later */\nexport function cloneTagJsValue(value, maxDepth) {\n    const tag = value;\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.stateRender:\n                return undefined;\n            case ValueTypes.dom:\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n        }\n    }\n    if (isArray(value)) {\n        return cloneValueArray(tag);\n    }\n    return deepClone(value, maxDepth);\n}\n","import { clonePropsBy } from './clonePropsBy.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** used only for apps, otherwise use Support */\nexport function getBaseSupport(templater, subject, castedProps) {\n    const baseSupport = {\n        templater,\n        subject,\n        castedProps,\n        state: [], // TODO: this is not needed for every type of tag\n        states: [], // TODO: this is not needed for every type of tag\n        appSupport: undefined,\n    };\n    baseSupport.appSupport = baseSupport;\n    const global = subject.global;\n    global.blocked = [];\n    global.destroy$ = new Subject();\n    const props = templater.props; // natural props\n    if (props) {\n        baseSupport.propsConfig = clonePropsBy(baseSupport, props, castedProps);\n    }\n    return baseSupport;\n}\nexport function getSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = getBaseSupport(templater, subject, castedProps);\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\nexport function getHtmlSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nimport { cloneTagJsValue } from './cloneValueArray.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { PropWatches } from './tag.js';\nexport function clonePropsBy(support, props, castProps) {\n    const templater = support.templater;\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return support.propsConfig = {\n                latest: props,\n                castProps,\n            };\n        case PropWatches.SHALLOW:\n            return support.propsConfig = {\n                latest: props.map(x => cloneTagJsValue(x, shallowCompareDepth)),\n                castProps,\n            };\n    }\n    return support.propsConfig = {\n        latest: props.map(props => cloneTagJsValue(props, deepCompareDepth)),\n        castProps,\n    };\n}\n","import { isInlineHtml, renderInlineHtml } from './tag/render/renderSupport.function.js';\nimport { renderExistingReadyTag } from './tag/render/renderExistingTag.function.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nimport { deepCompareDepth } from './tag/hasSupportChanged.function.js';\nimport { isArray, isStaticTag } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nimport { setUseMemory } from './state/index.js';\nexport function castProps(props, newSupport, depth) {\n    return props.map(prop => alterProp(prop, newSupport.ownerSupport, newSupport, depth));\n}\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, newSupport, depth) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, newSupport, depth);\n}\nexport function checkProp(value, ownerSupport, newSupport, depth) {\n    if (!value) {\n        return value;\n    }\n    if (value.tagJsType) {\n        return value;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        return getPropWrap(value, ownerSupport);\n    }\n    if (depth === deepCompareDepth) {\n        return value;\n    }\n    const skip = isSkipPropValue(value);\n    if (skip) {\n        return value; // no children to crawl through\n    }\n    if (isArray(value)) {\n        return checkArrayProp(value, newSupport, ownerSupport, depth);\n    }\n    return checkObjectProp(value, newSupport, ownerSupport, depth);\n}\nfunction checkArrayProp(value, newSupport, ownerSupport, depth) {\n    for (let index = value.length - 1; index >= 0; --index) {\n        const subValue = value[index];\n        value[index] = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        if (typeof (subValue) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, index, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction checkObjectProp(value, newSupport, ownerSupport, depth) {\n    const keys = Object.keys(value);\n    for (const name of keys) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        const newSubValue = value[name];\n        if (newSubValue === result) {\n            continue;\n        }\n        const getset = Object.getOwnPropertyDescriptor(value, name);\n        const hasSetter = getset?.get || getset?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n        if (typeof (result) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, name, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction afterCheckProp(depth, index, originalValue, newProp, newSupport) {\n    // restore object to have original function on destroy\n    if (depth > 0) {\n        const global = newSupport.subject.global;\n        newProp[index].subscription = global.destroy$.toCallback(function alterCheckProcessor() {\n            newProp[index] = originalValue;\n        });\n    }\n}\nexport function getPropWrap(value, ownerSupport) {\n    const already = value.mem;\n    // already previously converted by a parent?\n    if (already) {\n        return value;\n    }\n    const wrap = function wrapRunner(...args) {\n        return wrap.toCall(...args);\n    }; // what gets called can switch over parent state changes\n    wrap.original = value;\n    wrap.mem = value;\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = function toCallRunner(...args) {\n        return callbackPropOwner(wrap.mem, args, ownerSupport);\n    };\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport) {\n    const global = ownerSupport.subject.global;\n    const newest = global?.newest || ownerSupport;\n    const supportInCycle = getSupportInCycle();\n    const noCycle = supportInCycle === undefined;\n    const callbackResult = toCall(...callWith);\n    const run = function propCallbackProcessor() {\n        const global = newest.subject.global;\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            const allMatched = global.locked === true;\n            if (allMatched) {\n                return callbackResult; // owner did not change\n            }\n        }\n        safeRenderSupport(newest, ownerSupport);\n        return callbackResult;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUseMemory.tagClosed$.toCallback(run);\n    return callbackResult;\n}\nexport function isSkipPropValue(value) {\n    return typeof (value) !== BasicTypes.object || !value || value.tagJsType;\n}\nexport function safeRenderSupport(newest, ownerSupport) {\n    const subject = newest.subject;\n    const isInline = isInlineHtml(newest.templater);\n    if (isInline) {\n        const result = renderInlineHtml(ownerSupport, newest);\n        // TODO: below maybe never true\n        /*\n        const global = subject.global as TagGlobal\n        if(global) {\n          delete global.locked\n        }\n        */\n        return result;\n    }\n    const global = subject.global;\n    global.locked = true;\n    renderExistingReadyTag(global.newest, newest, ownerSupport, subject);\n    delete global.locked;\n}\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nexport function executeWrap(templater, result, useSupport, castedProps) {\n    const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n    const stateless = templater.tagJsType === ValueTypes.stateRender;\n    let tag;\n    if (stateless) {\n        tag = templater();\n    }\n    else {\n        tag = originalFunction(...castedProps);\n        // CALL ORIGINAL COMPONENT FUNCTION\n        if (typeof (tag) === BasicTypes.function) {\n            tag = tag();\n        }\n    }\n    tag.templater = templater;\n    templater.tag = tag;\n    const config = setUseMemory.stateConfig;\n    useSupport.state = config.stateArray;\n    useSupport.states = config.states;\n    return useSupport;\n}\n","import { getSupport } from './Support.class.js';\nimport { castProps } from '../alterProp.function.js';\nimport { syncFunctionProps } from './update/updateExistingTagComponent.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { PropWatches } from './tag.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    // this function gets called by taggedjs\n    const wrapper = function tagFunWrap(newSupport, subject, lastSupport // subject.global.newest\n    ) {\n        // wrap any prop functions that are passed in\n        const castedProps = getCastedProps(templater, newSupport, lastSupport);\n        const ownerSupport = newSupport.ownerSupport;\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject, castedProps);\n        return executeWrap(templater, result, useSupport, castedProps);\n    };\n    return wrapper;\n}\nexport function getCastedProps(templater, newSupport, lastSupport) {\n    const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n    const props = templater.props;\n    const propsConfig = newSupport.propsConfig;\n    // When defined, this must be an update where my new props have already been made for me\n    let preCastedProps = propsConfig.castProps;\n    const lastPropsConfig = lastSupport?.propsConfig;\n    const lastCastProps = lastPropsConfig?.castProps;\n    if (lastCastProps) {\n        propsConfig.castProps = lastCastProps;\n        preCastedProps = syncFunctionProps(newSupport, lastSupport, lastSupport.ownerSupport, props, maxDepth);\n    }\n    const castedProps = preCastedProps || castProps(props, newSupport, 0);\n    return castedProps;\n}\n","/** Used to give unique value to an array of tag content. Should not be an object */\nexport function key(arrayValue) {\n    return {\n        set html(newValue) {\n            newValue.arrayValue = arrayValue;\n        }\n    };\n}\n","// taggedjs-no-compile\nimport { setUseMemory } from '../state/index.js';\nimport { getTemplaterResult } from './TemplaterResult.class.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { key } from './key.js';\nlet tagCount = 0;\nexport var PropWatches;\n(function (PropWatches) {\n    PropWatches[\"DEEP\"] = \"deep\";\n    PropWatches[\"SHALLOW\"] = \"shallow\";\n    PropWatches[\"NONE\"] = \"none\";\n    PropWatches[\"IMMUTABLE\"] = \"immutable\";\n})(PropWatches || (PropWatches = {}));\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent, propWatch = PropWatches.SHALLOW) {\n    /** function developer triggers */\n    const parentWrap = function tagWrapper(...props) {\n        const templater = getTemplaterResult(propWatch, props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        innerTagWrap.original = tagComponent;\n        /*\n            if(!innerTagWrap.parentWrap) {\n              innerTagWrap.parentWrap = parentWrap as TagWrapper<unknown>\n            }\n        */\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }; // we override the function provided and pretend original is what's returned\n    const tag = tagComponent;\n    parentWrap.original = tagComponent;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUseMemory;\n    tag.ValueTypes = ValueTypes;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\ntag.renderOnce = renderOnceFn;\nfunction renderOnceFn() {\n    throw new Error('Do not call tag.renderOnce as a function but instead set it as: `(props) => tag.renderOnce = () => html`` `');\n}\n/** Used to create variable scoping when calling a function that lives within a prop container function */\nfunction tagUseFn() {\n    throw new Error('Do not call tag.use as a function but instead set it as: `(props) => tag.use = (use) => html`` `');\n}\n/** deprecated */\n;\ntag.state = tagUseFn;\ntag.use = tagUseFn;\ntag.route = routeFn;\nfunction routeFn(_routeProps) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n}\n;\ntag.key = key;\ntag.app = function (_routeTag) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\ntag.deepPropWatch = tag;\ntag.immutableProps = function immutableProps(tagComponent) {\n    return tag(tagComponent, PropWatches.IMMUTABLE);\n};\ntag.watchProps = function watchProps(tagComponent) {\n    return tag(tagComponent, PropWatches.SHALLOW);\n};\n/* BELOW: Cast functions into setters with no getters */\nObject.defineProperty(tag, 'renderOnce', {\n    set(oneRenderFunction) {\n        oneRenderFunction.tagJsType = ValueTypes.renderOnce;\n    },\n});\n// TODO: deprecate this\nObject.defineProperty(tag, 'state', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\nObject.defineProperty(tag, 'use', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\n","import { deepEqual } from '../deepFunctions.js';\nimport { isArray } from '../isInstance.js';\nimport { hasPropLengthsChanged } from './render/renderSupport.function.js';\nimport { PropWatches } from './tag.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function hasSupportChanged(lastSupport, newTemplater) {\n    const latestProps = newTemplater.props;\n    const propsConfig = lastSupport.propsConfig;\n    const pastCloneProps = propsConfig.latest;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps, lastSupport.templater.propWatch);\n    return propsChanged;\n}\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nfunction hasPropChanges(props, // natural props\npastCloneProps, // previously cloned props\npropWatch) {\n    const hasLenChanged = hasPropLengthsChanged(props, pastCloneProps);\n    if (hasLenChanged) {\n        return 11;\n    }\n    switch (propWatch) {\n        case PropWatches.NONE:\n            return 1; // always render\n        case PropWatches.SHALLOW: // determining equal is same as immutable, its the previous cloning step thats different\n            return shallowPropMatch(props, pastCloneProps);\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(props, pastCloneProps);\n    }\n    return deepPropChangeCompare(props, pastCloneProps);\n}\nfunction deepPropChangeCompare(props, pastCloneProps) {\n    // DEEP watch\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    castedProps = [...props];\n    castedPastProps = [...(pastCloneProps || [])];\n    const allFunctionsMatch = castedProps.every((value, index) => onePropCompare(value, index, castedProps, castedPastProps));\n    if (!allFunctionsMatch) {\n        return 7; // a change has been detected by function comparisons\n    }\n    return false;\n}\nexport function immutablePropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (prop !== pastProp) {\n            return 2;\n        }\n    }\n    return false; // false means has not changed\n}\nexport function shallowPropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (isArray(prop) && isArray(pastProp)) {\n            if (prop === pastProp) {\n                continue;\n            }\n            return 3.0; // not equal array\n        }\n        if (typeof (prop) === BasicTypes.function && typeof (pastProp) === BasicTypes.function) {\n            continue; // considered good\n        }\n        if (typeof (prop) === BasicTypes.object) {\n            if (typeof (pastCloneProps) === BasicTypes.object) {\n                const obEntries = Object.entries(prop);\n                for (const subItem of obEntries) {\n                    const result = objectItemMatches(subItem, pastProp);\n                    if (!result) {\n                        return 3.1;\n                    }\n                }\n            }\n            continue; // all sub objects matched\n        }\n        if (prop === pastProp) {\n            continue; // matched good\n        }\n        return 3.3; // not equal\n    }\n    return false; // false means has not changed\n}\nfunction onePropCompare(value, index, castedProps, castedPastProps) {\n    const compare = castedPastProps[index];\n    if (typeof (value) === BasicTypes.object) {\n        const subCastedProps = { ...value };\n        const subCompareProps = { ...compare || {} };\n        const matched = Object.entries(subCastedProps).every(([key, value]) => compareProps(value, subCompareProps[key], () => {\n            delete subCastedProps[key]; // its a function and not needed to be compared\n            delete subCompareProps[key]; // its a function and not needed to be compared\n        }));\n        return matched;\n    }\n    return compareProps(value, compare, () => {\n        castedProps.splice(index, 1);\n        castedPastProps.splice(index, 1);\n    });\n}\nexport const shallowCompareDepth = 3;\nexport const deepCompareDepth = 10;\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(typeof (value) === BasicTypes.function)) {\n        return deepEqual(value, compare, deepCompareDepth) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(typeof (compareFn) === BasicTypes.function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 5; // both are function the same\n    }\n    onDelete();\n    return 6;\n}\nfunction objectItemMatches([name, value], pastProp) {\n    const pastValue = pastProp[name];\n    if (typeof (value) === BasicTypes.function && typeof (pastValue) === BasicTypes.function) {\n        return true;\n    }\n    return pastValue === value;\n}\n","export let paintRemoves = [];\nexport let paintContent = [];\nexport let setContent = [];\nexport let paintAppends = [];\nexport let paintInsertBefores = [];\nexport let paintAfters = [];\nexport const painting = {\n    locks: 0\n};\nexport function paint() {\n    if (painting.locks > 0) {\n        return;\n    }\n    ++painting.locks;\n    for (const toRemove of paintRemoves) {\n        const parentNode = toRemove.parentNode;\n        parentNode.removeChild(toRemove);\n    }\n    for (const content of paintContent) {\n        content();\n    }\n    for (const [text, textNode] of setContent) {\n        textNode.textContent = text;\n    }\n    for (const now of paintAppends) {\n        now.relative.appendChild(now.element);\n    }\n    for (const { element, relative } of paintInsertBefores) {\n        relative.parentNode.insertBefore(element, relative);\n    }\n    for (const now of paintAfters) {\n        now();\n    }\n    paintRemoves = [];\n    paintContent = [];\n    paintAppends = [];\n    paintInsertBefores = [];\n    paintAfters = [];\n    setContent = [];\n    --painting.locks;\n}\n","import { paintInsertBefores } from './tag/paint.function.js';\nimport { empty } from './tag/ValueTypes.enum.js';\n// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const textNode = document.createTextNode(value); // never innerHTML\n    paintInsertBefores.push({\n        element: textNode,\n        relative: lastFirstChild,\n    });\n    return textNode;\n}\nexport function castTextValue(value) {\n    switch (value) {\n        case undefined:\n        case false:\n        case null:\n            return empty;\n    }\n    return value;\n}\n","import { paintContent } from \"../../tag/paint.function.js\";\nexport function howToSetInputValue(element, name, value) {\n    paintContent.push(() => {\n        if (value === undefined || value === false || value === null) {\n            element.removeAttribute(name);\n            return;\n        }\n        element.setAttribute(name, value);\n    });\n}\n","import { paintAfters, paintContent } from \"../../tag/paint.function.js\";\nexport function specialAttribute(name, value, element, specialName) {\n    switch (specialName) {\n        case 'oninit':\n        case 'init':\n            paintAfters.push(() => {\n                const event = { target: element, stagger: 0 };\n                const onInit = value;\n                onInit(event);\n            });\n            return;\n        case 'autofocus':\n            paintAfters.push(() => element.focus());\n            return;\n        case 'autoselect':\n            paintAfters.push(() => element.select());\n            return;\n        case 'style': {\n            const names = name.split('.');\n            // names.shift() // remove 'style'\n            paintContent.push(() => element.style[names[1]] = value); // attribute changes should come first\n            return;\n        }\n        case 'class':\n            processSpecialClass(name, value, element);\n            return;\n    }\n    throw new Error(`Invalid special attribute of ${specialName}. ${name}`);\n}\nfunction processSpecialClass(name, value, element) {\n    const names = name.split('.');\n    names.shift(); // remove class\n    // truthy\n    if (value) {\n        for (const name of names) {\n            paintContent.push(() => element.classList.add(name));\n        }\n        return;\n    }\n    // falsy\n    for (const name of names) {\n        paintContent.push(() => element.classList.remove(name));\n    }\n}\n","export function handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    return tagsWithProvider;\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(support, provider, memory = []) {\n    const subject = support.subject;\n    memory.push({\n        support,\n        renderCount: subject.renderCount,\n        provider,\n    });\n    const childTags = provider.children;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const child = childTags[index];\n        const cSubject = child.subject;\n        memory.push({\n            support: child,\n            renderCount: cSubject.renderCount,\n            provider,\n        });\n    }\n    return memory;\n}\n","import { isTagComponent } from \"../../isInstance.js\";\nimport { providersChangeCheck } from \"../../state/providersChangeCheck.function.js\";\nimport { checkRenderUp, isInlineHtml } from \"../../tag/render/renderSupport.function.js\";\nimport { ValueTypes } from \"../../tag/ValueTypes.enum.js\";\nexport function getUpTags(support, supports = []) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        supports.push(support);\n        return supports;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return getUpTags(ownerSupport, supports);\n    }\n    const newSupport = support; // global.newest as AnySupport\n    const isComponent = isTagComponent(newSupport.templater);\n    const tagJsType = support.templater.tagJsType;\n    const canContinueUp = ownerSupport && tagJsType !== ValueTypes.stateRender;\n    const continueUp = canContinueUp && (!isComponent || checkRenderUp(ownerSupport, newSupport.templater, newSupport));\n    const proSupports = providersChangeCheck(newSupport);\n    supports.push(...proSupports);\n    if (continueUp) {\n        getUpTags(ownerSupport, supports);\n        if (isComponent) {\n            supports.push(newSupport);\n        }\n        return supports; // more to keep going up, do not push this child for review\n    }\n    supports.push(newSupport);\n    return supports;\n}\n","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingReadyTag } from './renderExistingTag.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { PropWatches } from '../index.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from '../hasSupportChanged.function.js';\nexport function isInlineHtml(templater) {\n    return ValueTypes.templater === templater.tagJsType;\n}\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderSupport(support) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        global.blocked.push(support);\n        return support;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return renderInlineHtml(ownerSupport, support);\n    }\n    global.locked = true;\n    const subject = support.subject;\n    if (global.blocked.length) {\n        support = global.blocked.pop();\n        global.blocked = [];\n    }\n    delete global.locked;\n    const tag = renderExistingReadyTag(global.newest, support, ownerSupport, subject);\n    return tag;\n}\nexport function renderInlineHtml(ownerSupport, support) {\n    const ownGlobal = ownerSupport.subject.global;\n    if (!ownGlobal || ownGlobal.deleted === true) {\n        return support;\n    }\n    // ??? new change\n    const newest = ownGlobal.newest || ownerSupport;\n    const result = renderSupport(newest);\n    return result;\n}\nexport function checkRenderUp(ownerSupport, templater, support) {\n    const selfPropChange = hasPropsToOwnerChanged(templater, support);\n    // render owner up first and that will cause me to re-render\n    if (ownerSupport && selfPropChange) {\n        return true;\n    }\n    return false;\n}\nfunction hasPropsToOwnerChanged(templater, support) {\n    const nowProps = templater.props;\n    const propsConfig = support.propsConfig;\n    const latestProps = propsConfig.latest;\n    const compareLen = hasPropLengthsChanged(nowProps, latestProps);\n    if (compareLen) {\n        return true;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(nowProps, latestProps);\n        case PropWatches.SHALLOW:\n            return shallowPropMatch(nowProps, latestProps);\n    }\n    return !deepEqual(nowProps, latestProps, deepCompareDepth);\n}\nexport function hasPropLengthsChanged(nowProps, latestProps) {\n    const nowLen = nowProps.length;\n    const latestLen = latestProps.length;\n    /*\n    const noLength = nowProps && nowLen === 0 && latestLen === 0\n  \n    if(noLength) {\n      return false\n    }\n    */\n    return nowLen !== latestLen;\n}\n","import { handleProviderChanges } from './handleProviderChanges.function.js';\nexport function providersChangeCheck(support) {\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (!providers) {\n        return [];\n    }\n    const prosWithChanges = [];\n    // reset clones\n    for (const provider of providers) {\n        const owner = provider.owner;\n        const hasChange = handleProviderChanges(owner, provider);\n        prosWithChanges.push(...hasChange.map(x => x.support));\n    }\n    return prosWithChanges;\n}\n","import { paint, painting } from '../../tag/paint.function.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nexport function renderTagUpdateArray(supports) {\n    ++painting.locks;\n    supports.forEach(mapTagUpdate);\n    --painting.locks;\n    paint();\n}\nfunction mapTagUpdate(support) {\n    const global = support.subject.global;\n    if (!global) {\n        return; // while rendering a parent, a child may have been deleted (pinbowl)\n    }\n    // renderSupport(support)\n    renderSupport(global.newest);\n}\n","// taggedjs-no-compile\n/** File largely responsible for reacting to element events, such as onclick */\nimport { isPromise, isTagComponent } from '../../isInstance.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nimport { getUpTags } from './getUpTags.function.js';\nimport { renderTagUpdateArray } from './renderTagArray.function.js';\nconst noData = 'no-data-ever';\nconst promiseNoData = 'promise-no-data-ever';\nexport function bindSubjectCallback(value, support) {\n    const global = support.subject.global;\n    // MAIN EVENT CALLBACK PROCESSOR\n    const subjectFunction = function (element, args) {\n        if (global.deleted === true) {\n            return;\n        }\n        // const newest = global.newest as AnySupport // || subjectFunction.support\n        return runTagCallback(subjectFunction.tagFunction, subjectFunction.support, // newest\n        element, args);\n    };\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    subjectFunction.support = support;\n    return subjectFunction;\n}\nexport function runTagCallback(value, support, bindTo, args) {\n    // get actual component owner not just the html`` support\n    let component = support;\n    while (component.ownerSupport && !isTagComponent(component.templater)) {\n        component = component.ownerSupport;\n    }\n    const global = component.subject.global; // tag.subject.global as TagGlobal\n    global.locked = true; // prevent another render from re-rendering this tag\n    // ACTUAL CALLBACK TO ORIGINAL FUNCTION\n    const callbackResult = value.apply(bindTo, args);\n    return afterTagCallback(callbackResult, component);\n}\nexport function afterTagCallback(callbackResult, eventHandlerSupport) {\n    const global = eventHandlerSupport.subject.global; // tag.subject.global as SupportTagGlobal\n    delete global.locked;\n    return renderCallbackSupport(eventHandlerSupport, callbackResult, global);\n}\nfunction renderCallbackSupport(last, callbackResult, global) {\n    const tagsToUpdate = getUpTags(last);\n    renderTagUpdateArray(tagsToUpdate);\n    return checkAfterCallbackPromise(callbackResult, last, global);\n}\nexport function checkAfterCallbackPromise(callbackResult, last, global) {\n    if (isPromise(callbackResult)) {\n        const global0 = last.subject.global;\n        global0.locked = true;\n        return callbackResult.then(() => {\n            if (global.deleted === true) {\n                return promiseNoData; // tag was deleted during event processing\n            }\n            const global1 = last.subject.global;\n            delete global1.locked;\n            const tagsToUpdate = getUpTags(last);\n            renderTagUpdateArray(tagsToUpdate);\n            return promiseNoData;\n        });\n    }\n    return noData;\n}\nexport function runBlocked(tag) {\n    const global = tag.subject.global;\n    const blocked = global.blocked;\n    for (const block of blocked) {\n        const lastResult = renderSupport(block);\n        global.newest = lastResult;\n    }\n    global.blocked = [];\n    return global.newest;\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { processTagCallbackFun } from './processAttribute.function.js';\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nexport function processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, isSpecial) {\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    if (typeof (value) === BasicTypes.function) {\n        if (isSpecial && attrName === 'init') {\n            specialAttribute(attrName, value, element, attrName);\n            return;\n        }\n        return processTagCallbackFun(contextItem, value, support, attrName, element);\n    }\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    contextItem.isSpecial = isSpecial;\n    return processNonDynamicAttr(attrName, value, element, howToSet, isSpecial);\n}\nexport function processNonDynamicAttr(attrName, value, element, howToSet, isSpecial) {\n    if (isSpecial) {\n        return specialAttribute(attrName, value, element, isSpecial);\n    }\n    howToSet(element, attrName, value);\n}\n","export function addSupportEventListener(support, eventName, element, callback) {\n    const elm = support.appElement;\n    // cast events that do not bubble up into ones that do\n    if (eventName === 'blur') {\n        eventName = 'focusout';\n    }\n    const replaceEventName = '_' + eventName;\n    // const replaceEventName = eventName\n    const global = support.subject.global;\n    const eventReg = global.events;\n    if (!eventReg[eventName]) {\n        const listener = function eventCallback(event) {\n            event.originalStopPropagation = event.stopPropagation;\n            bubbleEvent(event, replaceEventName, event.target);\n        };\n        eventReg[eventName] = listener;\n        elm.addEventListener(eventName, listener);\n    }\n    // attach to element but not as \"_click\" and \"_keyup\"\n    ;\n    element[replaceEventName] = callback;\n    element[eventName] = callback;\n}\nfunction bubbleEvent(event, replaceEventName, target) {\n    const callback = target[replaceEventName];\n    if (callback) {\n        let stopped = false;\n        event.stopPropagation = function () {\n            stopped = true;\n            event.originalStopPropagation.call(event);\n        };\n        callback(event);\n        if (event.defaultPrevented || stopped) {\n            return;\n        }\n    }\n    const parentNode = target.parentNode;\n    if (parentNode) {\n        bubbleEvent(event, replaceEventName, parentNode);\n    }\n}\n","import { addSupportEventListener } from './addSupportEventListener.function.js';\nexport function processAttributeFunction(element, newAttrValue, support, attrName) {\n    const fun = function (...args) {\n        return fun.tagFunction(element, args);\n    };\n    // access to original function\n    fun.tagFunction = newAttrValue;\n    fun.support = support;\n    addSupportEventListener(support.appSupport, attrName, element, // support.appSupport.appElement as Element,\n    fun);\n}\n","/** Looking for (class | style) followed by a period */\nexport function isSpecialAttr(attrName) {\n    if (attrName.startsWith('class.')) {\n        return 'class';\n    }\n    const specialAction = isSpecialAction(attrName);\n    if (specialAction !== false) {\n        return true;\n    }\n    if (attrName.startsWith('style.')) {\n        return 'style';\n    }\n    return false;\n}\nexport function isSpecialAction(attrName) {\n    switch (attrName) {\n        case 'autoselect':\n            return 'autoselect';\n        case 'autofocus':\n            return 'autofocus';\n        case 'oninit': // when read in compile process\n        case 'init': // when read in realtime\n            return 'oninit';\n    }\n    return false;\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { isFunction, isObject, isSubjectInstance } from '../../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nimport { BasicTypes, ValueTypes, empty } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { processDynamicNameValueAttribute, processNonDynamicAttr } from './processNameValueAttribute.function.js';\nimport { addOneContext, checkSimpleValueChange } from '../../tag/index.js';\nimport { processAttributeFunction } from './processAttributeCallback.function.js';\nimport { isSpecialAttr } from './isSpecialAttribute.function.js';\n/** Sets attribute value, subscribes to value updates  */\nexport function processAttribute(values, attrName, element, support, howToSet, //  = howToSetInputValue\ncontext, value, isSpecial) {\n    const nameVar = getTagJsVar(attrName);\n    const isNameVar = nameVar >= 0;\n    if (isNameVar) {\n        const value = values[nameVar];\n        const contextItem = addOneContext(value, context, true);\n        contextItem.isAttr = true;\n        contextItem.element = element;\n        contextItem.howToSet = howToSet;\n        contextItem.isNameOnly = true;\n        processNameOnlyAttrValue(values, value, element, support, howToSet, context);\n        return;\n    }\n    const valueVar = getTagJsVar(value);\n    if (valueVar >= 0) {\n        const value = values[valueVar];\n        const contextItem = {\n            isAttr: true,\n            element,\n            attrName: attrName,\n            checkValueChange: checkSimpleValueChange,\n            withinOwnerElement: true,\n        };\n        context.push(contextItem);\n        const isSubject = isSubjectInstance(contextItem.value);\n        if (isSubject) {\n            return processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial);\n        }\n        processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, isSpecial);\n        contextItem.value = value;\n        return;\n    }\n    return processNonDynamicAttr(attrName, value, element, howToSet, isSpecial);\n}\nexport function updateNameOnlyAttrValue(values, attrValue, lastValue, element, ownerSupport, howToSet, context) {\n    // check to remove previous attribute(s)\n    if (lastValue) {\n        if (isNoDisplayValue(attrValue)) {\n            element.removeAttribute(lastValue);\n            return;\n        }\n        if (typeof (lastValue) === BasicTypes.object) {\n            const isObStill = typeof (attrValue) === BasicTypes.object;\n            if (isObStill) {\n                for (const name in lastValue) {\n                    // if((attrValue as any)[name]) {\n                    if (name in attrValue) {\n                        continue;\n                    }\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n            else {\n                for (const name in lastValue) {\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n        }\n    }\n    processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context);\n}\nexport function processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context) {\n    if (isNoDisplayValue(attrValue)) {\n        return;\n    }\n    // process an object of attributes ${{class:'something, checked:true}}\n    if (typeof attrValue === BasicTypes.object) {\n        for (const name in attrValue) {\n            const value = attrValue[name];\n            processAttribute(values, name, element, ownerSupport, howToSet, context, value, isSpecialAttr(name));\n        }\n        return;\n    }\n    // regular attributes\n    if (attrValue.length === 0) {\n        return; // ignore, do not set at this time\n    }\n    howToSet(element, attrValue, empty);\n}\n/** Processor for flat attributes and object attributes */\nfunction processNameValueAttributeAttrSubject(attrName, result, element, support, howToSet, isSpecial) {\n    if (isSpecial) {\n        paintContent.push(function paintContent() {\n            element.removeAttribute(attrName);\n        });\n    }\n    const contextValueSubject = result.value;\n    if (isSubjectInstance(contextValueSubject)) {\n        const callback = function processAttrCallback(newAttrValue) {\n            processAttributeEmit(newAttrValue, attrName, result, element, support, howToSet, isSpecial);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        const global = result.global;\n        const subs = global.subscriptions = global.subscriptions || [];\n        subs.push(sub);\n    }\n    processAttributeEmit(result.value, attrName, result, element, support, howToSet, isSpecial);\n    return;\n}\nexport function processAttributeEmit(newAttrValue, attrName, subject, element, support, howToSet, isSpecial) {\n    // should the function be wrapped so every time its called we re-render?\n    if (isFunction(newAttrValue)) {\n        return callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support);\n}\nexport function processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support) {\n    if (isFunction(newAttrValue)) {\n        return processAttributeFunction(element, newAttrValue, support, attrName);\n    }\n    if (isSpecial) {\n        specialAttribute(attrName, newAttrValue, element, isSpecial);\n        return;\n    }\n    switch (newAttrValue) {\n        case undefined:\n        case false:\n        case null:\n            paintContent.push(function paintContentPush() {\n                element.removeAttribute(attrName);\n            });\n            return;\n    }\n    // value is 0\n    howToSet(element, attrName, newAttrValue);\n}\nfunction callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject) {\n    const wrapper = support.templater.wrapper;\n    const tagJsType = wrapper?.tagJsType || wrapper?.original?.tagJsType;\n    const oneRender = tagJsType === ValueTypes.renderOnce;\n    if (!oneRender) {\n        return processTagCallbackFun(subject, newAttrValue, support, attrName, element);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support);\n}\nexport function processTagCallbackFun(subject, newAttrValue, support, attrName, element) {\n    const prevFun = subject.value;\n    if (prevFun && prevFun.tagFunction && prevFun.support) {\n        prevFun.tagFunction = newAttrValue;\n        prevFun.support = support;\n        return prevFun;\n    }\n    // tag has state and will need all functions wrapped to cause re-renders\n    newAttrValue = bindSubjectCallback(newAttrValue, support);\n    return processAttributeFunction(element, newAttrValue, support, attrName);\n}\nfunction getTagJsVar(attrPart) {\n    if (isObject(attrPart) && 'tagJsVar' in attrPart)\n        return attrPart.tagJsVar;\n    return -1;\n    // return (attrPart as TagVarIdNum)?.tagJsVar || -1\n}\nexport function isNoDisplayValue(attrValue) {\n    return undefined === attrValue || null === attrValue || false === attrValue;\n}\n","// taggedjs-no-compile\nimport { processFirstSubjectValue } from \"../../tag/update/processFirstSubjectValue.function.js\";\nimport { howToSetInputValue } from \"../attributes/howToSetInputValue.function.js\";\nimport { paintAppends, paintInsertBefores } from \"../../tag/paint.function.js\";\nimport { processAttribute } from \"../attributes/processAttribute.function.js\";\nimport { addOneContext } from \"../../tag/index.js\";\nimport { isSubjectInstance } from \"../../isInstance.js\";\nimport { empty } from \"../../tag/ValueTypes.enum.js\";\n// ??? TODO: This could be done within exchangeParsedForValues to reduce loops\nexport function attachDomElements(nodes, values, support, counts, // used for animation stagger computing\ncontext, depth, // used to know if dynamic variables live within parent owner tag/support\nowner, insertBefore, subs = []) {\n    const x = document.createElement('div');\n    const dom = [];\n    for (const node of nodes) {\n        const newNode = {}; // DomObjectText\n        dom.push(newNode);\n        const value = node.v;\n        const isNum = !isNaN(value);\n        if (isNum) {\n            attachDynamicDom(values, context, owner, support, subs, counts, depth);\n            continue;\n        }\n        if (node.nn === 'text') {\n            const textNode = newNode;\n            const string = textNode.tc = node.tc;\n            x.innerHTML = string;\n            const domElement = textNode.domElement = document.createTextNode(x.innerText);\n            domElement.id = `tp_${context.length}_${values.length}`;\n            if (owner) {\n                paintAppends.push({\n                    element: domElement,\n                    relative: owner,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: domElement,\n                    relative: insertBefore,\n                });\n            }\n            continue;\n        }\n        const domElement = newNode.domElement = document.createElement(node.nn);\n        // attributes that may effect style, come first\n        if (node.at) {\n            node.at.map(attr => {\n                const name = attr[0];\n                const value = attr[1];\n                const isSpecial = attr[2];\n                processAttribute(values, name, domElement, support, howToSetInputValue, context, value, isSpecial);\n            });\n        }\n        if (owner) {\n            paintAppends.push({\n                element: domElement,\n                relative: owner,\n            });\n        }\n        else {\n            paintInsertBefores.push({\n                element: domElement,\n                relative: insertBefore,\n            });\n        }\n        if (node.ch) {\n            newNode.ch = attachDomElements(node.ch, values, support, counts, context, depth + 1, domElement, insertBefore, subs).dom;\n        }\n    }\n    return { subs, dom, context };\n}\nfunction attachDynamicDom(values, context, owner, support, subs, counts, // used for animation stagger computing\ndepth) {\n    const subVal = values[context.length];\n    const marker = document.createTextNode(empty);\n    marker.id = `dvp_${context.length}_${values.length}`;\n    const contextItem = addOneContext(subVal, context, depth > 0);\n    contextItem.placeholder = marker;\n    if (owner) {\n        paintAppends.push({\n            relative: owner,\n            element: marker,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: marker,\n            relative: support.subject.placeholder,\n        });\n    }\n    if (isSubjectInstance(subVal)) {\n        subs.push({\n            insertBefore: marker,\n            appendTo: owner,\n            subject: subVal,\n            support, // ownerSupport,\n            counts,\n            contextItem,\n        });\n        return;\n    }\n    const global = support.subject.global;\n    global.locked = true;\n    processFirstSubjectValue(subVal, contextItem, support, counts, `rvp_${context.length}_${values.length}`, owner);\n    const global2 = support.subject.global;\n    delete global2.locked;\n    contextItem.value = subVal;\n    return;\n}\n","import { attachDomElements } from '../interpolations/optimizers/attachDomElements.function.js';\nimport { checkSimpleValueChange } from './index.js';\nimport { getDomMeta } from './domMetaCollector.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { painting } from './paint.function.js';\n/** Function that kicks off actually putting tags down as HTML elements */\nexport function buildBeforeElement(support, element, insertBefore, options) {\n    const global = support.subject.global;\n    global.oldest = support;\n    global.newest = support;\n    ++painting.locks;\n    const result = getHtmlDomMeta(support, options, element, insertBefore);\n    global.htmlDomMeta = result.dom;\n    --painting.locks;\n    // return fragment\n    return result;\n}\nfunction getHtmlDomMeta(support, options = {\n    counts: { added: 0, removed: 0 },\n}, appendTo, insertBefore) {\n    const domMeta = loadDomMeta(support);\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    const context = [];\n    const global = support.subject.global;\n    global.context = context;\n    const result = attachDomElements(domMeta, values, support, options.counts, context, 0, appendTo, insertBefore);\n    return result;\n}\nfunction loadDomMeta(support) {\n    const templater = support.templater;\n    const thisTag = templater.tag; // || templater\n    if (thisTag.tagJsType === ValueTypes.dom) {\n        return thisTag.dom;\n    }\n    return getDomMeta(thisTag.strings, thisTag.values);\n}\nexport function addOneContext(value, context, withinOwnerElement) {\n    const contextItem = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement,\n    };\n    context.push(contextItem);\n    return contextItem;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { getHtmlSupport } from '../Support.class.js';\nimport { checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** When first time render, adds to owner childTags\n * Used for BOTH inserts & updates to values that were something else\n * Intended use only for updates\n*/\nexport function processTag(ownerSupport, // owner\nsubject) {\n    const global = subject.global;\n    const support = global.newest;\n    support.ownerSupport = ownerSupport;\n    subject.checkValueChange = checkTagValueChange;\n    const ph = subject.placeholder;\n    const result = buildBeforeElement(support, undefined, ph, { counts: { added: 0, removed: 0 } });\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        tagJsType: ValueTypes.templater,\n    };\n    return fake;\n}\n/** Create support for a tag component */\nexport function newSupportByTemplater(templater, ownerSupport, subject) {\n    const support = getHtmlSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const global = subject.global;\n    global.context = [];\n    return support;\n}\n","import { processAttributeEmit, updateNameOnlyAttrValue } from '../interpolations/attributes/processAttribute.function.js';\nexport function processUpdateAttrContext(values, value, contextItem, ownerSupport) {\n    if (contextItem.isNameOnly) {\n        updateNameOnlyAttrValue(values, value, contextItem.value, contextItem.element, // global.element as Element,\n        ownerSupport, contextItem.howToSet, []);\n        contextItem.value = value;\n        return;\n    }\n    const element = contextItem.element;\n    processAttributeEmit(value, contextItem.attrName, contextItem, element, ownerSupport, contextItem.howToSet, contextItem.isSpecial);\n    contextItem.value = value;\n    return;\n}\n","import { processUpdateAttrContext } from './processUpdateAttrContext.function.js';\nimport { updateExistingValue } from './update/updateExistingValue.function.js';\nimport { isSubjectInstance } from '../isInstance.js';\nexport function processUpdateContext(support, context) {\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    let index = 0;\n    const len = values.length;\n    while (index < len) {\n        processUpdateOneContext(values, index, context, support);\n        ++index;\n    }\n    return context;\n}\n/** returns boolean of did render */\nexport function processUpdateOneContext(values, index, context, ownerSupport) {\n    const value = values[index];\n    // is something already there?\n    const contextItem = context[index];\n    if (isSubjectInstance(value)) {\n        return; // emits on its own\n    }\n    if (contextItem.isAttr) {\n        // Do not continue if the value is just the same\n        if (value === contextItem.value) {\n            return;\n        }\n        processUpdateAttrContext(values, value, contextItem, ownerSupport);\n        contextItem.value = value;\n    }\n    // listeners will evaluate updated values to possibly update display(s)\n    updateExistingValue(contextItem, value, ownerSupport);\n    contextItem.value = value;\n}\n","import { paint, painting } from './paint.function.js';\nimport { processUpdateContext } from './processUpdateContext.function.js';\nexport function updateSupportBy(olderSupport, newerSupport) {\n    const global = olderSupport.subject.global;\n    const context = global.context;\n    updateSupportValuesBy(olderSupport, newerSupport);\n    ++painting.locks;\n    processUpdateContext(olderSupport, context);\n    --painting.locks;\n    paint();\n}\nexport function updateSupportValuesBy(olderSupport, newerSupport) {\n    const tempTag = (newerSupport.templater.tag || newerSupport.templater);\n    const values = newerSupport.templater.values || tempTag.values;\n    const tag = olderSupport.templater.tag;\n    tag.values = values;\n}\n","import { getSupport } from '../Support.class.js';\nimport { getFakeTemplater, newSupportByTemplater, processTag } from './processTag.function.js';\nimport { processNowRegularValue } from './processRegularValue.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nimport { isArray, isTagComponent } from '../../isInstance.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\n/** Used for all tag value updates. Determines if value changed since last render */\nexport function updateExistingValue(contextItem, value, ownerSupport) {\n    // Do not continue if the value is just the same\n    if (value === contextItem.value) {\n        return;\n    }\n    const wasDestroyed = contextItem.checkValueChange(value, contextItem);\n    if (wasDestroyed === -1) {\n        return; // do nothing\n    }\n    // handle already seen tag components\n    const tagJsType = value && value.tagJsType;\n    if (tagJsType) {\n        if (tagJsType === ValueTypes.renderOnce) {\n            return;\n        }\n        const isComp = isTagComponent(value);\n        if (isComp) {\n            if (!contextItem.global) {\n                getNewGlobal(contextItem);\n            }\n            prepareUpdateToComponent(value, contextItem, ownerSupport);\n            return;\n        }\n    }\n    const global = contextItem.global;\n    if (global) {\n        // its html/dom based tag\n        const support = global.newest;\n        if (support) {\n            updateContextItemBySupport(support, contextItem, value, ownerSupport);\n            return;\n        }\n    }\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater:\n                processTag(ownerSupport, contextItem);\n                return;\n            case ValueTypes.tag:\n            case ValueTypes.dom: {\n                const tag = value;\n                let templater = tag.templater;\n                if (!templater) {\n                    templater = getFakeTemplater();\n                    tag.templater = templater;\n                    templater.tag = tag;\n                }\n                const nowGlobal = (contextItem.global ? contextItem.global : getNewGlobal(contextItem));\n                nowGlobal.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n                processTag(ownerSupport, contextItem);\n                return;\n            }\n        }\n    }\n    if (isArray(value)) {\n        processTagArray(contextItem, value, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        contextItem.value = value; // do not render functions that are not explicity defined as tag html processing\n        return;\n    }\n    if (wasDestroyed) {\n        processNowRegularValue(value, contextItem);\n    }\n}\nfunction handleStillTag(lastSupport, subject, value, ownerSupport) {\n    const templater = value.templater || value;\n    const valueSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const lastSubject = lastSupport.subject;\n    const newGlobal = lastSubject.global;\n    const oldest = newGlobal.oldest;\n    updateSupportBy(oldest, valueSupport);\n}\nfunction prepareUpdateToComponent(templater, contextItem, ownerSupport) {\n    const global = contextItem.global;\n    // When last value was not a component\n    if (!global.newest) {\n        processReplacementComponent(templater, contextItem, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    const support = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    updateExistingTagComponent(ownerSupport, support, // latest value\n    contextItem);\n}\n/** Used to destro */\nfunction updateContextItemBySupport(support, contextItem, value, ownerSupport) {\n    if (typeof (value) === BasicTypes.function) {\n        return;\n    }\n    handleStillTag(support, contextItem, value, ownerSupport);\n    return;\n}\n","import { deepCompareDepth, hasSupportChanged, shallowCompareDepth } from '../hasSupportChanged.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { castProps, isSkipPropValue } from '../../alterProp.function.js';\nimport { renderSupport } from '../render/renderSupport.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { destroySupport } from '../destroySupport.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { isArray } from '../../isInstance.js';\nimport { PropWatches } from '../tag.js';\nexport function updateExistingTagComponent(ownerSupport, support, // lastest\nsubject) {\n    const global = subject.global;\n    const lastSupport = global.newest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = support.templater.wrapper;\n    let isSameTag = false;\n    const tagJsType = support.templater.tagJsType;\n    const skipComparing = ValueTypes.stateRender === tagJsType || ValueTypes.renderOnce === tagJsType;\n    if (skipComparing) {\n        isSameTag = support.templater.tagJsType === ValueTypes.renderOnce || isLikeTags(lastSupport, support);\n    }\n    else if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.original;\n        const newFunction = newWrapper.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = support.templater;\n    if (!isSameTag) {\n        swapTags(subject, templater, ownerSupport);\n        return;\n    }\n    const hasChanged = skipComparing || hasSupportChanged(lastSupport, templater);\n    // everyhing has matched, no display needs updating.\n    if (!hasChanged) {\n        const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n        syncSupports(templater, support, lastSupport, ownerSupport, maxDepth);\n        return;\n    }\n    if (global.locked) {\n        global.blocked.push(support);\n        return;\n    }\n    renderSupport(support);\n    return;\n}\nexport function syncFunctionProps(newSupport, lastSupport, ownerSupport, newPropsArray, // templater.props\nmaxDepth, depth = -1) {\n    const global = lastSupport.subject.global;\n    const newest = global.newest;\n    if (!newest) {\n        const castedProps = castProps(newPropsArray, newSupport, depth);\n        newPropsArray.push(...castedProps);\n        const propsConfig = newSupport.propsConfig;\n        propsConfig.castProps = castedProps;\n        return newPropsArray;\n    }\n    lastSupport = newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.castProps;\n    const newArray = [];\n    for (let index = 0; index < newPropsArray.length; ++index) {\n        const prop = newPropsArray[index];\n        const priorProp = priorPropsArray[index];\n        const newValue = syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, depth + 1, maxDepth);\n        newArray.push(newValue);\n    }\n    const newPropsConfig = newSupport.propsConfig;\n    newPropsConfig.castProps = newArray;\n    return newArray;\n}\nfunction syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth) {\n    if (typeof (priorProp) === BasicTypes.function) {\n        // the prop i am receiving, is already being monitored/controlled by another parent\n        if (prop.mem) {\n            priorProp.mem = prop.mem;\n            return prop;\n        }\n        priorProp.mem = prop;\n        return priorProp;\n    }\n    // prevent infinite recursion\n    if (depth === maxDepth) {\n        return prop;\n    }\n    if (isSkipPropValue(prop)) {\n        return prop; // no children to crawl through\n    }\n    if (isArray(prop)) {\n        return updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth);\n    }\n    if (priorProp === undefined) {\n        return prop;\n    }\n    return updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n}\nfunction updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    const keys = Object.keys(prop);\n    for (const name of keys) {\n        const subValue = prop[name];\n        const result = syncPriorPropFunction(priorProp[name], subValue, newSupport, ownerSupport, maxDepth, depth + 1);\n        if (prop[name] === result) {\n            continue;\n        }\n        const hasSetter = Object.getOwnPropertyDescriptor(prop, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        ;\n        prop[name] = result;\n    }\n    return prop;\n}\nfunction updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth) {\n    for (let index = prop.length - 1; index >= 0; --index) {\n        const x = prop[index];\n        prop[index] = syncPriorPropFunction(priorProp[index], x, newSupport, ownerSupport, depth + 1, index);\n    }\n    return prop;\n}\nexport function moveProviders(lastSupport, newSupport) {\n    const global = lastSupport.subject.global;\n    let pIndex = -1;\n    const providers = global.providers = global.providers || [];\n    const pLen = providers.length - 1;\n    while (pIndex++ < pLen) {\n        const provider = providers[pIndex];\n        let index = -1;\n        const pcLen = provider.children.length - 1;\n        while (index++ < pcLen) {\n            const child = provider.children[index];\n            const wasSameGlobals = global === child.subject.global;\n            if (wasSameGlobals) {\n                provider.children.splice(index, 1);\n                provider.children.push(newSupport);\n                return;\n            }\n        }\n    }\n}\nfunction syncSupports(templater, support, lastSupport, ownerSupport, maxDepth) {\n    // update function refs to use latest references\n    const newProps = templater.props;\n    const castedProps = syncFunctionProps(support, lastSupport, ownerSupport, newProps, maxDepth);\n    const propsConfig = support.propsConfig;\n    // When new support actually makes call to real function, use these pre casted props\n    propsConfig.castProps = castedProps;\n    const lastPropsConfig = lastSupport.propsConfig;\n    // update support to think it has different cloned props\n    lastPropsConfig.latest = propsConfig.latest;\n    return lastSupport; // its the same tag component  \n}\n/** Was tag, will be tag */\nfunction swapTags(subject, templater, // new tag\nownerSupport) {\n    const global = subject.global;\n    const oldestSupport = global.oldest;\n    destroySupport(oldestSupport, 0);\n    getNewGlobal(subject);\n    const newSupport = processReplacementComponent(templater, subject, ownerSupport, { added: 0, removed: 0 });\n    return newSupport;\n}\n","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { setContent } from '../paint.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nexport function processUpdateRegularValue(value, contextItem) {\n    const castedValue = castTextValue(value);\n    const oldClone = contextItem.simpleValueElm; // placeholder\n    setContent.push([castedValue, oldClone]);\n}\n/** Used during updates that were another value/tag first but now simple string */\nexport function processNowRegularValue(value, subject) {\n    subject.checkValueChange = checkSimpleValueChange;\n    const before = subject.placeholder;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    subject.simpleValueElm = updateBeforeTemplate(castedValue, before);\n}\n","import { getTemplaterResult } from '../TemplaterResult.class.js';\nimport { checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getSupport } from '../Support.class.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { PropWatches } from '../tag.js';\nexport function processNewArrayValue(value, ownerSupport, contextItem) {\n    const tagJsType = value.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater: {\n                const templater = value;\n                const tag = templater.tag;\n                processNewTag(tag, ownerSupport, contextItem);\n                break;\n            }\n            case ValueTypes.tag:\n            case ValueTypes.dom:\n                processNewTag(value, ownerSupport, contextItem);\n                break;\n        }\n    }\n    return contextItem;\n}\nfunction processNewTag(value, ownerSupport, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const tag = value;\n    let templater = tag.templater;\n    // TODO: Can this ever happen?\n    if (!templater) {\n        templater = getTemplaterResult(PropWatches.DEEP);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const global = contextItem.global = getNewGlobal(contextItem); // contextItem.global as SupportTagGlobal\n    const newest = global.newest = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    global.oldest = newest;\n    return contextItem;\n}\n","import { getSupportInCycle } from './getSupportInCycle.function.js';\nimport { setUseMemory } from '../state/index.js';\nimport { Subject } from '../subject/index.js';\n// Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering\nsetUseMemory.tagClosed$ = new Subject(undefined, function tagCloser(subscription) {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(support) {\n    // TODO: We don't need to remove from parents if parent is being destroyed\n    // remove me from my parents\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (providers) {\n        for (const provider of providers) {\n            for (let index = provider.children.length - 1; index >= 0; --index) {\n                const child = provider.children[index];\n                if (child.subject.global === global) {\n                    provider.children.splice(index, 1);\n                }\n            }\n        }\n    }\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n}\n","import { isTagComponent } from '../isInstance.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function getChildTagsToDestroy(childTags) {\n    for (const child of childTags) {\n        const lastArray = child.lastArray;\n        if (lastArray) {\n            getChildTagsToDestroy(lastArray);\n            continue;\n        }\n        const global = child.global;\n        if (!global) {\n            continue; // not a support contextItem\n        }\n        const support = global.newest;\n        const iSubs = global.subscriptions;\n        if (iSubs) {\n            iSubs.forEach(iSub => iSub.unsubscribe());\n        }\n        if (isTagComponent(support.templater)) {\n            runBeforeDestroy(support);\n        }\n        const subTags = global.context;\n        getChildTagsToDestroy(subTags);\n    }\n}\nexport function getChildTagsToSoftDestroy(childTags, tags = [], subs = []) {\n    for (const child of childTags) {\n        const global = child.global;\n        if (!global) {\n            continue;\n        }\n        const support = global.newest;\n        if (support) {\n            tags.push(support);\n            const iSubs = global.subscriptions;\n            if (iSubs) {\n                subs.push(...iSubs);\n            }\n        }\n        const subTags = global.context;\n        if (subTags) {\n            getChildTagsToSoftDestroy(subTags, tags, subs);\n        }\n    }\n    return { tags, subs };\n}\n","import { destroyArray } from './checkDestroyPrevious.function.js';\nimport { elementDestroyCheck } from './elementDestroyCheck.function.js';\nimport { paint, paintRemoves } from './paint.function.js';\nimport { isPromise } from '../isInstance.js';\n/** sets global.deleted on support and all children */\nexport function smartRemoveKids(support, promises, stagger) {\n    const startStagger = stagger;\n    const subject = support.subject;\n    const thisGlobal = subject.global;\n    const htmlDomMeta = thisGlobal.htmlDomMeta;\n    const context = thisGlobal.context;\n    thisGlobal.deleted = true;\n    for (const subject of context) {\n        if (subject.withinOwnerElement) {\n            continue; // i live within my owner variable. I will be deleted with owner\n        }\n        const lastArray = subject.lastArray;\n        if (lastArray) {\n            destroyArray(subject, lastArray);\n            continue;\n        }\n        // regular values, no placeholders\n        const elm = subject.simpleValueElm;\n        if (elm) {\n            delete subject.simpleValueElm;\n            paintRemoves.push(elm);\n            continue;\n        }\n        const global = subject.global;\n        if (global === undefined) {\n            continue; // subject\n        }\n        if (global.deleted === true) {\n            continue;\n        }\n        global.deleted = true;\n        const oldest = global.oldest;\n        if (oldest) {\n            // recurse\n            stagger = stagger + smartRemoveKids(oldest, promises, stagger);\n            continue;\n        }\n    }\n    destroyClones(htmlDomMeta, startStagger, promises);\n    return stagger;\n}\nfunction destroyClones(oldClones, stagger, promises) {\n    // check subjects that may have clones attached to them\n    const newPromises = oldClones.map(clone => {\n        const marker = clone.marker;\n        if (marker) {\n            paintRemoves.push(marker);\n        }\n        const dom = clone.domElement;\n        if (!dom) {\n            return;\n        }\n        return checkCloneRemoval(dom, stagger);\n    }).filter(x => x); // only return promises\n    if (newPromises.length) {\n        promises.push(Promise.all(newPromises));\n        return stagger;\n    }\n    return stagger;\n}\n/** Reviews elements for the presences of ondestroy */\nfunction checkCloneRemoval(clone, stagger) {\n    const customElm = clone;\n    if (customElm.ondestroy) {\n        const promise = elementDestroyCheck(customElm, stagger);\n        if (isPromise(promise)) {\n            return promise.then(() => {\n                paintRemoves.push(clone);\n                paint();\n            });\n        }\n    }\n    paintRemoves.push(clone);\n}\n","export function elementDestroyCheck(nextSibling, stagger) {\n    const onDestroyDoubleWrap = nextSibling.ondestroy;\n    const onDestroyWrap = onDestroyDoubleWrap.tagFunction;\n    if (!onDestroyWrap) {\n        return;\n    }\n    const onDestroy = onDestroyWrap.tagFunction;\n    const event = {\n        target: nextSibling,\n        stagger\n    };\n    return onDestroy(event);\n}\n","import { getChildTagsToDestroy } from './getChildTagsToDestroy.function.js';\nimport { smartRemoveKids } from './smartRemoveKids.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function destroySupport(support, stagger) {\n    const global = support.subject.global;\n    global.deleted = true;\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n    const context = global.context;\n    getChildTagsToDestroy(context);\n    if (global.destroy$) {\n        global.destroy$.next();\n        runBeforeDestroy(support);\n    }\n    // first paint\n    const promises = [];\n    stagger = smartRemoveKids(support, promises, stagger);\n    if (promises.length) {\n        return Promise.all(promises).then(() => stagger);\n    }\n    return stagger;\n}\n","// taggedjs-no-compile\nimport { paintAppends, paintInsertBefores, paintRemoves } from '../paint.function.js';\nimport { processFirstSubjectValue } from './processFirstSubjectValue.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { updateExistingValue } from './updateExistingValue.function.js';\nimport { processNewArrayValue } from './processNewValue.function.js';\nimport { destroySupport } from '../destroySupport.function.js';\nexport function processTagArray(subject, value, // arry of Tag classes\nownerSupport, counts, appendTo) {\n    if (!subject.lastArray) {\n        subject.lastArray = [];\n    }\n    const lastArray = subject.lastArray;\n    let runtimeInsertBefore = subject.placeholder;\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    const filteredLast = [];\n    for (let index = 0; index < lastArray.length; ++index) {\n        const item = lastArray[index];\n        const newRemoved = reviewLastArrayItem(item, value, index, lastArray, removed, counts);\n        if (newRemoved === 0) {\n            filteredLast.push(item);\n            continue;\n        }\n        removed = removed + newRemoved;\n        // do the same number again because it was a mid delete\n        if (newRemoved === 2) {\n            index = index - 1;\n        }\n    }\n    subject.lastArray = filteredLast;\n    // const eAppendTo = existed ? undefined : appendTo\n    const eAppendTo = appendTo; // existed ? undefined : appendTo\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const newSubject = reviewArrayItem(value, index, filteredLast, ownerSupport, runtimeInsertBefore, counts, eAppendTo);\n        runtimeInsertBefore = newSubject.placeholder;\n    }\n}\nfunction reviewArrayItem(array, index, lastArray, ownerSupport, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const item = array[index];\n    const previous = lastArray[index];\n    if (previous) {\n        return reviewPreviousArrayItem(item, previous, lastArray, ownerSupport, index, runtimeInsertBefore, counts, appendTo);\n    }\n    return processAddTagArrayItem(item, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n}\nfunction reviewPreviousArrayItem(value, itemSubject, lastArray, ownerSupport, index, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const couldBeSame = lastArray.length > index;\n    if (couldBeSame) {\n        updateExistingValue(itemSubject, value, ownerSupport);\n        return itemSubject;\n    }\n    const result = processAddTagArrayItem(value, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n    return result;\n}\nfunction processAddTagArrayItem(value, before, // used during updates\nownerSupport, counts, lastArray, appendTo) {\n    const itemSubject = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement: false, // TODO: we need to pass down depth so we can answer this truthfully\n    };\n    counts.added = counts.added + 1; // index\n    const subPlaceholder = document.createTextNode('');\n    itemSubject.placeholder = subPlaceholder;\n    if (!appendTo) {\n        paintInsertBefores.push({\n            element: subPlaceholder,\n            relative: before,\n        });\n    }\n    processNewArrayValue(value, ownerSupport, itemSubject);\n    processFirstSubjectValue(value, itemSubject, ownerSupport, counts, `rvp_${lastArray.length}_array`, appendTo);\n    // after processing\n    itemSubject.value = value;\n    // Added to previous array\n    lastArray.push(itemSubject);\n    if (appendTo) {\n        paintAppends.push({\n            element: subPlaceholder,\n            relative: appendTo,\n        });\n    }\n    return itemSubject;\n}\nexport function destroyArrayItem(item, counts) {\n    const global = item.global;\n    if (global) {\n        const support = global.oldest;\n        global.deleted = true;\n        destroySupport(support, counts.removed);\n        global.deleted = true;\n    }\n    else {\n        const element = item.simpleValueElm;\n        delete item.simpleValueElm;\n        paintRemoves.push(element);\n    }\n    ++counts.removed;\n}\nfunction reviewLastArrayItem(_subTag, // used to compare arrays\nvalue, index, lastArray, removed, counts) {\n    const newLength = value.length - 1;\n    const at = index - removed;\n    const lessLength = at < 0 || newLength < at;\n    const prev = lastArray[index];\n    if (lessLength) {\n        destroyArrayItem(prev, counts);\n        ++removed;\n        return 1;\n    }\n    if (lastArray[index].value.arrayValue !== value[index].arrayValue) {\n        destroyArrayItem(prev, counts);\n        lastArray.splice(index, 1);\n        ++removed;\n        return 2;\n    }\n    /*\n    const nowValue = getArrayValueByItem(subTag)\n    const lastArrayValue = lastArray.array[index].arrayValue\n    */\n    // check for html``.key()\n    /*\n    const keySet = 'arrayValue' in tag\n    if (!keySet) {\n      const details = {\n        array: value.map(item => item.values || item),\n        vdom: (tag as any)?.support.templater.tag.dom,\n        tag,\n        lastArray: lastArray.array[index]\n      }\n      const message = 'Found Tag in array without key value, during array update. Be sure to use \"html`...`.key(unique)\" OR import TaggedJs \"key\" \"key(unique).html = CustomTag(props)\"'\n      console.error(message, details)\n      const err = new ArrayNoKeyError(message, details)\n      throw err\n    }\n    */\n    /*\n    const destroyItem = nowValue !== lastArrayValue\n    if(destroyItem) {\n      destroyArrayItem(lastArray.array, index, counts)\n      ++removed\n      return 1\n    }\n    */\n    return 0;\n}\n/*\nfunction getArrayValueByItem(item: any) {\n  return item?.arrayValue || item\n}\n*/\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nexport function isLikeTags(support0, // new\nsupport1) {\n    const templater0 = support0.templater;\n    const templater1 = support1.templater;\n    const tag0 = templater0?.tag || support0;\n    const tag1 = templater1.tag; // || (support1 as any)\n    if (templater0?.tagJsType === ValueTypes.stateRender) {\n        return templater0.dom === templater1.dom;\n    }\n    switch (tag0.tagJsType) {\n        case ValueTypes.dom: {\n            if (tag1?.tagJsType !== ValueTypes.dom) {\n                return false; // tag0 is not even same type\n            }\n            return isLikeDomTags(tag0, tag1);\n        }\n        case ValueTypes.tag: {\n            const like = isLikeStringTags(tag0, tag1, support0, support1);\n            return like;\n        }\n    }\n    throw new Error(`unknown tagJsType of ${tag0.tagJsType}`);\n}\n// used when compiler was used\nexport function isLikeDomTags(tag0, tag1) {\n    const domMeta0 = tag0.dom;\n    const domMeta1 = tag1.dom;\n    return domMeta0 === domMeta1;\n}\n// used for no compiling\nfunction isLikeStringTags(tag0, tag1, support0, // new\nsupport1) {\n    const strings0 = tag0.strings;\n    const strings1 = tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index].length === string.length // performance, just compare length of strings // TODO: Document this\n    // strings1[index] === string // slower\n    );\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = support0.templater.values || tag0.values;\n    const values1 = support1.templater.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = typeof (value) === BasicTypes.function && typeof (compareTo) === BasicTypes.function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n","// Functions in here are attached as ContextItem.checkValueChange\nimport { processUpdateRegularValue } from './update/processRegularValue.function.js';\nimport { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { destroyArrayItem } from './update/processTagArray.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { isArray, isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { paintRemoves } from './paint.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function checkArrayValueChange(newValue, subject) {\n    // no longer an array?\n    if (!isArray(newValue)) {\n        const lastArray = subject.lastArray;\n        destroyArray(subject, lastArray);\n        return 9; // 'array'\n    }\n    return false;\n}\nexport function destroyArray(subject, lastArray) {\n    const counts = { added: 0, removed: 0 };\n    for (let index = 0; index < lastArray.length; ++index) {\n        destroyArrayItem(lastArray[index], counts);\n    }\n    delete subject.lastArray;\n}\nexport function checkSimpleValueChange(newValue, subject) {\n    const isBadValue = newValue === null || newValue === undefined;\n    if (isBadValue || !(typeof (newValue) === BasicTypes.object)) {\n        // This will cause all other values to render\n        processUpdateRegularValue(newValue, subject);\n        return -1; // no need to destroy, just update display\n    }\n    const elm = subject.simpleValueElm;\n    delete subject.simpleValueElm;\n    paintRemoves.push(elm);\n    return 6; // 'changed-simple-value'\n}\nexport function checkTagValueChange(newValue, subject) {\n    const global = subject.global;\n    const lastSupport = global?.newest;\n    const isValueTag = isStaticTag(newValue);\n    const newTag = newValue;\n    if (isValueTag) {\n        // its a different tag now\n        const likeTags = isLikeTags(newTag, lastSupport);\n        if (!likeTags) {\n            destroySupport(lastSupport, 0);\n            getNewGlobal(subject);\n            return 7; // 'tag-swap'\n        }\n        return false;\n    }\n    const isTag = newValue?.tagJsType;\n    if (isTag) {\n        return false; // its still a tag component\n    }\n    // destroy old component, value is not a component\n    destroySupport(lastSupport, 0);\n    delete subject.global;\n    subject.renderCount = 0;\n    return 8; // 'no-longer-tag'\n}\n","import { getTemplaterResult } from '../TemplaterResult.class.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nimport { PropWatches } from '../tag.js';\nexport function oneRenderToSupport(wrapper, subject, ownerSupport) {\n    const templater = getTemplaterResult(PropWatches.DEEP);\n    templater.tagJsType = wrapper.tagJsType;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    function wrap() {\n        templater.tag = tag || (wrapper());\n        return support;\n    }\n    templater.wrapper = wrap;\n    wrap.tagJsType = wrapper.tagJsType;\n    wrap.original = wrapper.original || wrapper;\n    return support;\n}\n","import { StateMismatchError } from '../errors.js';\nexport function checkStateMismatch(config, support) {\n    const rearray = config.rearray;\n    if (rearray.length && rearray.length !== config.stateArray.length) {\n        throwStateMismatch(rearray, support, config);\n    }\n}\nconst hint = 'State tracking requires same number of state calls on every render. This error typically occurs when a state call is only reachable behind a condition. Also, wrapping tags that have state, with tag(), often helps when tag is only reachable by a condition.';\nfunction throwStateMismatch(rearray, support, config) {\n    const message = `Saved states between renders are inconsistent. Expected ${rearray.length} states got ${config.stateArray.length}.`;\n    const wrapper = support.templater?.wrapper;\n    let tagFunction = wrapper;\n    if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    else if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    const details = {\n        oldStates: config.stateArray,\n        newStates: config.rearray,\n        tagFunction,\n        templater: support.templater,\n    };\n    const error = new StateMismatchError(message, details);\n    console.error(hint, details);\n    throw error;\n}\n","import { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkStateMismatch } from './checkStateMismatch.function.js';\n/** Compares states of previous renders\n * @property support - The workflow that supports a single tag\n * @property ownerSupport - undefined when \"support\" is the app element\n */\nexport function runAfterRender(support, ownerSupport) {\n    const subject = support.subject;\n    ++subject.renderCount;\n    const config = setUseMemory.stateConfig;\n    delete config.support;\n    support.state = config.stateArray;\n    // support.states = config.states\n    setUseMemory.tagClosed$.next(ownerSupport);\n    checkStateMismatch(config, support);\n    subject.global.newest = support;\n}\n","import { getSupport } from '../Support.class.js';\nimport { executeWrap } from '../executeWrap.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { runAfterRender } from '../afterRender.function.js';\nimport { initState, reState } from '../../state/state.utils.js';\nimport { setUseMemory } from '../../state/setUseMemory.object.js';\nexport function renderTagOnly(newSupport, prevSupport, // causes restate\nsubject, ownerSupport) {\n    const global = subject.global;\n    const oldRenderCount = subject.renderCount;\n    const prevState = prevSupport?.state;\n    const config = setUseMemory.stateConfig;\n    if (prevState) {\n        const prevStates = prevSupport.states;\n        config.prevSupport = prevSupport;\n        reState(newSupport, setUseMemory.stateConfig, prevState, prevStates);\n    }\n    else {\n        initState(newSupport, config);\n    }\n    const templater = newSupport.templater;\n    let reSupport;\n    // NEW TAG CREATED HERE\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = templater; // .wrapper as any// || {original: templater} as any\n        // TODO: Not sure if useSupport could be replaced by just using \"newSupport\"\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject);\n        reSupport = executeWrap(templater, result, useSupport);\n        reSupport.states = newSupport.states;\n    }\n    else {\n        // functions wrapped in tag()\n        const wrapper = templater.wrapper;\n        // calls the function returned from getTagWrap()\n        reSupport = wrapper(newSupport, subject, prevSupport);\n        reSupport.states = newSupport.states;\n    }\n    runAfterRender(reSupport, ownerSupport);\n    // When we rendered, only 1 render should have taken place OTHERWISE rendering caused another render and that is the latest instead\n    // TODO: below most likely not needed\n    if (subject.renderCount > oldRenderCount + 1) {\n        return global.newest;\n    }\n    return reSupport;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nexport function processNewSubjectTag(templater, ownerSupport, // owner\nsubject, // could be tag via result.tag\nappendTo) {\n    subject.checkValueChange = checkTagValueChange;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    support.ownerSupport = ownerSupport;\n    const result = buildBeforeElement(support, appendTo, undefined, { counts: { added: 0, removed: 0 } });\n    for (const dom of result.dom) {\n        if (dom.marker) {\n            paintAppends.push({\n                element: dom.marker,\n                relative: appendTo, // ph.parentNode as Element,\n            });\n        }\n        if (dom.domElement) {\n            paintAppends.push({\n                element: dom.domElement,\n                relative: appendTo, // ph.parentNode as Element,\n            });\n        }\n    }\n    let index = -1;\n    const length = result.subs.length - 1;\n    //++painting.locks\n    while (index++ < length) {\n        const sub = result.subs[index];\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","import { checkArrayValueChange, checkSimpleValueChange, checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { processFirstSubjectComponent, processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { newSupportByTemplater, processTag, tagFakeTemplater } from './processTag.function.js';\nimport { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { oneRenderToSupport } from './oneRenderToSupport.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { isArray, isSubjectInstance } from '../../isInstance.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processFirstSubjectValue(value, subject, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nvalueId, appendTo) {\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            // TODO: Do we ever get in here? because dom, tag, and component are covered below\n            case ValueTypes.templater:\n                subject.checkValueChange = checkTagValueChange;\n                if (appendTo) {\n                    return processNewSubjectTag(value, ownerSupport, subject, appendTo);\n                }\n                return processTag(ownerSupport, subject);\n            case ValueTypes.dom:\n            case ValueTypes.tag: {\n                subject.checkValueChange = checkTagValueChange;\n                const tag = value;\n                let templater = tag.templater;\n                if (!templater) {\n                    templater = tagFakeTemplater(tag); // TODO: most likely a not needed performance hit\n                }\n                const global = getNewGlobal(subject);\n                if (appendTo) {\n                    return processNewSubjectTag(templater, ownerSupport, subject, appendTo);\n                }\n                global.newest = newSupportByTemplater(templater, ownerSupport, subject);\n                subject.checkValueChange = checkTagValueChange;\n                return processTag(ownerSupport, subject);\n            }\n            case ValueTypes.stateRender:\n            case ValueTypes.tagComponent: {\n                getNewGlobal(subject);\n                subject.checkValueChange = checkTagValueChange;\n                if (appendTo) {\n                    const processResult = processFirstSubjectComponent(value, subject, ownerSupport, counts, appendTo);\n                    // ++subject.global.renderCount\n                    return processResult;\n                }\n                const processResult = processReplacementComponent(value, subject, ownerSupport, counts);\n                // ++subject.global.renderCount\n                return processResult;\n            }\n            case ValueTypes.renderOnce: {\n                getNewGlobal(subject);\n                const support = oneRenderToSupport(value, subject, ownerSupport);\n                renderTagOnly(support, undefined, subject, ownerSupport);\n                const result = processNewSubjectTag(support.templater, ownerSupport, subject, appendTo);\n                // ++subject.global.renderCount\n                subject.checkValueChange = checkTagValueChange;\n                return result;\n            }\n        }\n    }\n    if (isArray(value)) {\n        processTagArray(subject, value, ownerSupport, counts, appendTo);\n        subject.checkValueChange = checkArrayValueChange;\n        return;\n    }\n    if (isSubjectInstance(value)) {\n        return; // will be subscribed to for value\n    }\n    processFirstRegularValue(value, subject, subject.placeholder, valueId);\n}\nfunction processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore, // <template end interpolate /> (will be removed)\nvalueId) {\n    const castedValue = castTextValue(value);\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    clone.id = valueId;\n    subject.simpleValueElm = clone;\n    subject.checkValueChange = checkSimpleValueChange;\n}\n","import { processFirstTagResult, processReplaceTagResult } from './processTagResult.function.js';\nimport { getSupport } from '../Support.class.js';\nimport { renderWithSupport } from '../render/renderWithSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getCastedProps } from '../getTagWrap.function.js';\nexport function processReplacementComponent(templater, subject, ownerSupport, counts) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag\n    subject, ownerSupport);\n    processReplaceTagResult(support, counts, subject);\n    return support;\n}\nexport function processFirstSubjectComponent(templater, subject, ownerSupport, counts, appendTo) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag   \n    subject, ownerSupport);\n    processFirstTagResult(support, counts, appendTo);\n    return support;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { checkTagValueChange } from '../index.js';\nexport function processReplaceTagResult(support, counts, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const ph = contextItem.placeholder;\n    const result = buildBeforeElement(support, undefined, // element for append child\n    ph, // placeholder\n    { counts });\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function processFirstTagResult(support, counts, appendTo) {\n    let appendIndex = paintAppends.length;\n    const result = buildBeforeElement(support, appendTo, undefined, { counts });\n    for (const dom of result.dom) {\n        if (dom.domElement) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.domElement,\n                relative: appendTo,\n            });\n        }\n        if (dom.marker) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.marker,\n                relative: appendTo,\n            });\n        }\n    }\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","import { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\nexport function processSubUpdate(value, contextItem, support) {\n    if (value === contextItem.value) {\n        return; // same value emitted\n    }\n    updateExistingValue(contextItem, value, support);\n    if (!setUseMemory.stateConfig.support) {\n        paint();\n    }\n    return;\n}\n","import { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { processSubUpdate } from './processSubscriptionUpdate.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\nexport function subscribeToTemplate({ subject, support, counts, contextItem, appendTo, }) {\n    let onValue = function onSubValue(value) {\n        processFirstSubjectValue(value, contextItem, support, { ...counts }, `rvp_-1_${support.templater.tag?.values.length}`, syncRun ? appendTo : undefined);\n        if (!syncRun && !setUseMemory.stateConfig.support) {\n            paint();\n        }\n        // from now on just run update\n        onValue = function subscriptionUpdate(value) {\n            processSubUpdate(value, contextItem, support);\n        };\n    };\n    const callback = function subValueProcessor(value) {\n        onValue(value);\n    };\n    let syncRun = true;\n    const sub = subject.subscribe(callback);\n    contextItem.subject = subject;\n    syncRun = false;\n    const global = support.subject.global;\n    const subs = global.subscriptions = global.subscriptions || [];\n    subs.push(sub);\n}\n","import { getChildTagsToSoftDestroy } from '../getChildTagsToDestroy.function.js';\nimport { getNewGlobal } from '../update/getNewGlobal.function.js';\nimport { smartRemoveKids } from '../smartRemoveKids.function.js';\n/** used when a tag swaps content returned */\nexport function softDestroySupport(lastSupport) {\n    const global = lastSupport.subject.global;\n    const { subs, tags } = getChildTagsToSoftDestroy(global.context);\n    softDestroyOne(lastSupport);\n    for (const child of tags) {\n        softDestroyOne(child);\n    }\n    const mySubs = global.subscriptions;\n    if (mySubs) {\n        subs.forEach(sub => sub.unsubscribe());\n    }\n    getNewGlobal(lastSupport.subject);\n}\nfunction softDestroyOne(child) {\n    const subject = child.subject;\n    const global = subject.global;\n    if (global.deleted === true) {\n        return;\n    }\n    global.deleted = true; // the children are truly destroyed but the main support will be swapped\n    subject.renderCount = 0;\n    smartRemoveKids(child, [], 0);\n}\n","import { moveProviders } from '../update/updateExistingTagComponent.function.js';\nimport { softDestroySupport } from './softDestroySupport.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** TODO: This seems to support both new and updates and should be separated? */\nexport function renderWithSupport(newSupport, lastSupport, // previous\nsubject, // events & memory\nownerSupport) {\n    const lastTemplater = lastSupport?.templater;\n    const lastTag = lastTemplater?.tag;\n    const reSupport = renderTagOnly(newSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        moveProviders(lastSupport, reSupport);\n        softDestroySupport(lastSupport);\n        const global = reSupport.subject.global;\n        global.oldest = reSupport;\n        global.newest = reSupport;\n    }\n    else if (lastSupport) {\n        const tag = lastSupport.templater.tag;\n        if (tag && subject.renderCount > 0) {\n            checkTagSoftDestroy(tag, lastSupport, lastTag);\n        }\n    }\n    const lastOwnerSupport = lastSupport?.ownerSupport;\n    reSupport.ownerSupport = (ownerSupport || lastOwnerSupport);\n    return { support: reSupport, wasLikeTags: isLikeTag };\n}\nfunction checkTagSoftDestroy(tag, lastSupport, lastTag) {\n    if (tag.tagJsType === ValueTypes.dom) {\n        const lastDom = lastTag?.dom;\n        const newDom = tag.dom;\n        if (lastDom !== newDom) {\n            softDestroySupport(lastSupport);\n        }\n        return;\n    }\n    if (lastTag) {\n        const lastStrings = lastTag.strings;\n        if (lastStrings) {\n            const oldLength = lastStrings?.length;\n            const newLength = tag.strings.length;\n            if (oldLength !== newLength) {\n                softDestroySupport(lastSupport);\n            }\n        }\n    }\n}\n","import { renderWithSupport } from './renderWithSupport.function.js';\nimport { processTag } from '../update/processTag.function.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\n// TODO: This function is being called for 1st time renders WHEN renderCount === 1\nexport function renderExistingReadyTag(lastSupport, newSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const global = subject.global;\n    const { support, wasLikeTags } = renderWithSupport(newSupport, lastSupport, // renderCount <= 0 ? undefined : lastSupport\n    subject, ownerSupport);\n    if (wasLikeTags) {\n        updateSupportBy(global.oldest, support);\n        return support;\n    }\n    processTag(ownerSupport, subject);\n    return support;\n}\n","import callbackStateUpdate from './callbackStateUpdate.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { syncError } from './callbackMaker.function.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\n/** Wrap a function that will be called back. After the wrapper and function are called, a rendering cycle will update display */\nexport function callback(callback) {\n    const support = getSupportInCycle();\n    if (!support) {\n        throw syncError;\n    }\n    return createTrigger(support, setUseMemory.stateConfig, // setUseMemory.stateConfig.stateArray\n    callback);\n}\nexport function createTrigger(support, oldState, toCallback) {\n    const oldStateArray = oldState.stateArray;\n    const oldStates = oldState.states;\n    return function trigger(...args) {\n        const callbackMaker = support.subject.renderCount > 0;\n        if (callbackMaker) {\n            return callbackStateUpdate(support, toCallback, {\n                stateArray: oldStateArray,\n                states: oldStates,\n            }, ...args);\n        }\n        // we are in sync with rendering, just run callback naturally\n        return toCallback(...args);\n    };\n}\n","// import { State } from './state.types.js'\nimport { renderSupport } from '../tag/render/renderSupport.function.js';\nimport { syncStates } from './syncStates.function.js';\nimport { isPromise } from '../isInstance.js';\nexport default function callbackStateUpdate(support, callback, oldState, // State,\n...args) {\n    const global = support.subject.global;\n    support = global.newest;\n    const state = support.state;\n    // ensure that the oldest has the latest values first\n    syncStates(state, oldState.stateArray, support.states, oldState.states);\n    // run the callback\n    const maybePromise = callback(...args);\n    // send the oldest state changes into the newest\n    syncStates(oldState.stateArray, state, oldState.states, support.states);\n    renderSupport(support);\n    if (isPromise(maybePromise)) {\n        maybePromise.finally(() => {\n            // send the oldest state changes into the newest\n            syncStates(oldState.stateArray, state, oldState.states, support.states);\n            renderSupport(support);\n        });\n    }\n    // return undefined as T\n    return maybePromise;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { createTrigger } from './callback.function.js';\nexport const callbackMaker = () => {\n    const support = getSupportInCycle();\n    // callback as typeof innerCallback\n    if (!support) {\n        throw syncError;\n    }\n    const oldState = setUseMemory.stateConfig; // .stateArray\n    // oldState.support = support // TODO: should not be need and already set\n    return function triggerMaker(callback) {\n        return createTrigger(support, oldState, callback);\n    };\n};\nexport const syncError = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n","import { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { state } from \"./state.function.js\";\nexport function onDestroy(callback) {\n    state(function stateDestroy() {\n        const support = getSupportInCycle();\n        const global = support.subject.global;\n        global.destroy$.toCallback(callback);\n    });\n}\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function states(setter) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.statesHandler(setter);\n}\n","import { setUseMemory } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUseMemory.stateConfig.support;\n}\n","// taggedjs-no-compile\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\nexport const variablePrefix = ':tagvar';\nexport const variableSuffix = ':';\nexport function getStringTag(strings, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        tagJsType: ValueTypes.tag,\n        strings,\n        key(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: function html(strings, values) {\n            tag.children = { strings, values };\n            return tag;\n        }\n    };\n    return tag;\n}\nexport function getDomTag(dom, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        dom,\n        tagJsType: ValueTypes.dom,\n        key: function keyFun(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: {\n            dom: function dom(dom, // ObjectChildren\n            values) {\n                tag.children = { dom: dom, values };\n                return tag;\n            }\n        }\n    };\n    return tag;\n}\n","import { variablePrefix, variableSuffix } from \"../../tag/Tag.class.js\";\nimport { isSpecialAttr } from \"../attributes/isSpecialAttribute.function.js\";\nconst ondoubleclick = 'ondoubleclick';\nconst fragFindAny = /(:tagvar\\d+:)/;\nconst fragReplacer = /(^:tagvar\\d+:|:tagvar\\d+:$)/g;\nconst safeVar = '__safeTagVar';\nconst regexAttr = /([:_a-zA-Z0-9\\-.]+)\\s*(?:=\\s*\"([^\"]*)\"|=\\s*(\\S+))?/g;\nconst regexTagOrg = /<\\/?([a-zA-Z0-9-]+)((?:\\s+[a-zA-Z_:][\\w:.-]*(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+))?)+\\s*|\\s*)\\/?>/g;\n/** Run only during compile step OR when no compile step occurred at runtime */\nexport function htmlInterpolationToDomMeta(strings, values) {\n    htmlInterpolationToPlaceholders(strings, values);\n    // Parse the modified fragments\n    const htmlString = htmlInterpolationToPlaceholders(strings, values).join('');\n    const domMeta = parseHTML(htmlString);\n    return domMeta;\n}\nexport function htmlInterpolationToPlaceholders(strings, values) {\n    // Sanitize placeholders in the fragments\n    const sanitizedFragments = sanitizePlaceholders(strings);\n    // Add placeholders to the fragments\n    return addPlaceholders(sanitizedFragments, values);\n}\nfunction sanitizePlaceholders(fragments) {\n    return fragments.map(fragment => fragment.replace(fragReplacer, (match, index) => safeVar + index));\n}\nfunction addPlaceholders(strings, values) {\n    const results = strings.map((fragment, index) => {\n        if (index < values.length) {\n            return fragment + variablePrefix + index + variableSuffix;\n        }\n        return fragment;\n    });\n    balanceArrayByArrays(results, strings, values);\n    return results;\n}\nexport function parseHTML(html) {\n    const valuePositions = [];\n    const elements = [];\n    const stack = [];\n    let currentElement = null;\n    let valueIndex = -1;\n    let position = 0;\n    const regexTag = new RegExp(regexTagOrg, 'g');\n    html = preprocessTagsInComments(html);\n    while (position < html.length) {\n        const tagMatch = regexTag.exec(html);\n        if (!tagMatch) {\n            break;\n        }\n        const [fullMatch, tagName, attrString] = tagMatch;\n        const isClosingTag = fullMatch.startsWith('</');\n        const isSelfClosing = fullMatch.endsWith('/>');\n        if (position < tagMatch.index) {\n            const textContent = html.slice(position, tagMatch.index);\n            if (textContent.trim()) {\n                const textVarMatches = splitByTagVar(textContent);\n                textVarMatches.forEach(textContent => {\n                    if (textContent.startsWith(variablePrefix)) {\n                        textContent = variablePrefix + (++valueIndex) + variableSuffix;\n                    }\n                    pushTextTo(currentElement, elements, textContent);\n                });\n            }\n        }\n        position = tagMatch.index + fullMatch.length;\n        if (isClosingTag) {\n            currentElement = stack.pop() || null;\n            continue;\n        }\n        const attributes = [];\n        let attrMatch;\n        while ((attrMatch = regexAttr.exec(attrString)) !== null) {\n            const attrName = attrMatch[1] || attrMatch[3] || attrMatch[5];\n            const attrChoice = attrMatch[2] || attrMatch[4] || attrMatch[6];\n            let attrValue = attrChoice;\n            if (attrName === undefined) {\n                continue;\n            }\n            const notEmpty = attrMatch[2] !== '';\n            const noValue = attrValue === undefined && notEmpty;\n            const lowerName = attrName.toLowerCase();\n            const fixedName = lowerName.startsWith('on') ? cleanEventName(lowerName) : lowerName;\n            if (noValue) {\n                const standAloneVar = attrName.slice(0, variablePrefix.length) === variablePrefix;\n                if (standAloneVar) {\n                    const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                    valuePositions.push(['at', valueName]);\n                    attributes.push([valueName]); // the name itself is dynamic\n                    continue;\n                }\n                const startMatched = attrMatch[0].startsWith(attrName);\n                const standAloneAttr = startMatched && attrMatch[0].slice(attrName.length, attrMatch[0].length).search(/\\s+$/) >= 0;\n                if (standAloneAttr) {\n                    attributes.push([fixedName]);\n                    continue;\n                }\n                const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                attrValue = valueName;\n            }\n            if (!notEmpty) {\n                attrValue = attrMatch[2];\n            }\n            const attrSet = [fixedName, attrValue];\n            const isSpecial = isSpecialAttr(lowerName); // check original name for \"oninit\" or \"autofocus\"\n            if (isSpecial) {\n                attrSet.push(isSpecial);\n            }\n            attributes.push(attrSet);\n        }\n        const element = {\n            nn: tagName, // nodeName\n        };\n        if (attributes.length) {\n            element.at = attributes;\n        }\n        if (currentElement) {\n            if (!currentElement.ch) {\n                currentElement.ch = [];\n            }\n            currentElement.ch.push(element);\n        }\n        else {\n            elements.push(element);\n        }\n        if (!isSelfClosing) {\n            stack.push(currentElement);\n            currentElement = element;\n        }\n    }\n    if (position < html.length) {\n        const textContent = html.slice(position);\n        if (textContent.trim()) {\n            const textVarMatches = splitByTagVar(textContent);\n            textVarMatches.forEach(textContent => {\n                if (textContent.startsWith(variablePrefix)) {\n                    ++valueIndex;\n                }\n                return pushTextTo(currentElement, elements, textContent);\n            });\n        }\n    }\n    return elements;\n}\nexport function balanceArrayByArrays(results, strings, values) {\n    const diff = values.length - strings.length;\n    if (diff > 0) {\n        for (let x = diff; x > 0; --x) {\n            results.push(variablePrefix + (strings.length + x - 1) + variableSuffix);\n        }\n    }\n}\nfunction splitByTagVar(inputString) {\n    // Split the string using the regular expression, keep delimiters in the output\n    const parts = inputString.split(fragFindAny);\n    // Filter out any empty strings from the results\n    const filteredParts = parts.filter(part => part !== '');\n    return filteredParts;\n}\nfunction pushTo(currentElement, elements, textNode) {\n    if (currentElement) {\n        if (!currentElement.ch) {\n            currentElement.ch = [];\n        }\n        currentElement.ch.push(textNode);\n    }\n    else {\n        elements.push(textNode);\n    }\n}\nfunction pushTextTo(currentElement, elements, textContent) {\n    const textNode = {\n        nn: 'text', // nodeName\n        tc: postprocessTagsInComments(textContent), // textContent\n    };\n    pushTo(currentElement, elements, textNode);\n}\nconst removeCommentRegX = new RegExp('(<!--[\\\\s\\\\S]*?-->)', 'g');\nfunction preprocessTagsInComments(html) {\n    // Use a regex to find all HTML comments\n    return html.replace(removeCommentRegX, function (match) {\n        // For each comment found, replace < and > inside it\n        return match.replace(/\\[l t\\]/g, '[l&nbsp;t]').replace(/\\[g t\\]/g, '[g&nbsp;t]').replace(/</g, '[l t]').replace(/>/g, '[g t]');\n    });\n}\nfunction postprocessTagsInComments(html) {\n    // Use a regex to find all segments that look like processed comments\n    return html.replace(/(\\[l t\\]!--[\\s\\S]*?--\\[g t\\])/g, function (match) {\n        // For each processed comment found, replace *lt* and *gt* back to < and >\n        return match.replace(/\\[l t\\]/g, '<').replace(/\\[g t\\]/g, '>').replace(/\\[l&nbsp;t\\]/g, '[l t]').replace(/\\[g&nbsp;t\\]/g, '[g t]');\n    });\n}\nfunction cleanEventName(eventName) {\n    if (eventName.startsWith('on')) {\n        const couldByDblClick = eventName.length === ondoubleclick.length && eventName === ondoubleclick;\n        if (couldByDblClick) {\n            return 'dblclick';\n        }\n        return eventName.slice(2, eventName.length);\n    }\n    return eventName;\n}\n","// taggedjs-no-compile\nimport { variableSuffix, variablePrefix } from \"../../tag/Tag.class.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nconst placeholderRegex = new RegExp(variablePrefix + '(\\\\d+)' + variableSuffix, 'g');\nconst ch = 'ch'; // short for children\nexport function replacePlaceholders(dom, valueCount, valuePositions = [], currentTail = []) {\n    const elements = dom;\n    for (let i = 0; i < elements.length; i++) {\n        const loopTail = [...currentTail, i];\n        const element = elements[i];\n        if (element.at) {\n            const attrs = element.at;\n            element.at = processAttributes(attrs, valueCount);\n        }\n        if (element.ch) {\n            const children = element.ch;\n            const innerLoopTail = [...loopTail, ch];\n            element.ch = replacePlaceholders(children, valueCount, valuePositions, innerLoopTail);\n        }\n        i = examineChild(element, valueCount, elements, i);\n    }\n    return elements;\n}\nfunction examineChild(child, valueCount, children, index) {\n    if (child.nn !== 'text') {\n        return index;\n    }\n    const textChild = child;\n    let textContent = textChild.tc;\n    if (typeof textContent !== ImmutableTypes.string) {\n        return index;\n    }\n    let match;\n    while ((match = placeholderRegex.exec(textContent)) !== null) {\n        const secondMatch = match[1];\n        const wIndex = parseInt(secondMatch, 10);\n        const examine = !isNaN(wIndex) && wIndex < valueCount;\n        if (examine) {\n            const varContent = variablePrefix + wIndex + variableSuffix;\n            const after = textContent.slice(match.index + varContent.length);\n            children.splice(index, 1, ...[{\n                    nn: 'text',\n                    v: wIndex\n                }]);\n            textContent = after;\n            placeholderRegex.lastIndex = 0; // Reset regex index due to split\n        }\n    }\n    textChild.tc = textContent;\n    return index;\n}\nfunction processAttributes(attributes, valueCount) {\n    return attributes.map(attrSet => {\n        const [key, value, isSpecial] = attrSet;\n        if (key.startsWith(variablePrefix)) {\n            const index = parseInt(key.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [{ tagJsVar: index }];\n            }\n        }\n        if (typeof value === ImmutableTypes.string && value.startsWith(variablePrefix)) {\n            const index = parseInt(value.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [key, { tagJsVar: index }, isSpecial];\n            }\n        }\n        return attrSet;\n    });\n}\n","import { variableSuffix, variablePrefix } from \"../../tag/Tag.class.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nexport const safeVar = '__safeTagVar';\nexport function restorePlaceholders(elements) {\n    elements.forEach(traverseAndRestore);\n}\nconst safeReplacer = /__safeTagVar(\\d+)/g;\nfunction traverseAndRestore(element) {\n    if (element.at) {\n        element.at = element.at ? element.at.map(attr => {\n            if (attr.length === 1) {\n                return attr;\n            }\n            const [, value] = attr;\n            if (typeof value === ImmutableTypes.string && value.startsWith(safeVar)) {\n                const index = parseInt(value.replace(safeVar, ''), 10);\n                attr[1] = variablePrefix + index + variableSuffix;\n            }\n            return attr;\n        }) : [];\n    }\n    if (element.ch) {\n        const children = element.ch;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child.nn === 'text') {\n                if (typeof child.tc !== ImmutableTypes.string) {\n                    return;\n                }\n                child.tc = child.tc.replace(safeReplacer, (_match, index) => variablePrefix + index + variableSuffix);\n            }\n            traverseAndRestore(child);\n        }\n        // Remove empty children array\n        if (children.length === 0) {\n            delete element.ch;\n        }\n    }\n}\n","// taggedjs-no-compile\nimport { htmlInterpolationToDomMeta } from '../interpolations/optimizers/htmlInterpolationToDomMeta.function.js';\nimport { replacePlaceholders } from '../interpolations/optimizers/replacePlaceholders.function.js';\nimport { restorePlaceholders } from '../interpolations/optimizers/restorePlaceholders.function.js';\nimport { isLastRunMatched } from './isLastRunMatched.function.js';\nimport { getStringsId } from './getStringsId.function.js';\nconst lastRuns = {};\n/** Converts strings & values into dom meta */\nexport function getDomMeta(strings, values) {\n    const stringId = getStringsId(strings);\n    const lastRun = lastRuns[stringId];\n    const matches = lastRun && isLastRunMatched(strings, values, lastRun);\n    if (matches) {\n        return lastRun.domMetaMap;\n    }\n    const domMeta = htmlInterpolationToDomMeta(strings, values);\n    const map = replacePlaceholders(domMeta, values.length);\n    // Restore any sanitized placeholders in text nodes\n    restorePlaceholders(map);\n    const template = {\n        interpolation: undefined,\n        string: undefined,\n        strings,\n        values,\n        domMetaMap: map,\n    };\n    lastRuns[stringId] = template;\n    return map;\n}\n","export function getStringsId(strings) {\n    const array = strings.map(x => x.length);\n    array.push(strings.length);\n    return Number(array.join(''));\n}\n","export function isLastRunMatched(strings, values, lastRun) {\n    if (lastRun) {\n        if (lastRun.strings.length === strings.length) {\n            const stringsMatch = lastRun.strings.every((string, index) => \n            // string.length === strings[index].length\n            string === strings[index]);\n            if (stringsMatch && lastRun.values.length === values.length) {\n                return true; // performance savings using the last time this component was rendered\n            }\n        }\n    }\n    return false;\n}\n","import { getStringTag, getDomTag } from './Tag.class.js';\nimport { PropWatches } from './tag.js';\nimport { getTemplaterResult } from './TemplaterResult.class.js';\nexport function html(strings, ...values) {\n    const stringTag = getStringTag(strings, values);\n    const templater = getTemplaterResult(PropWatches.NONE);\n    templater.tag = stringTag;\n    stringTag.templater = templater;\n    return stringTag;\n}\nhtml.dom = function (dom, ...values) {\n    return getDomTag(dom, values);\n};\n","import { getBaseSupport } from './Support.class.js';\nimport { subscribeToTemplate } from '../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from './buildBeforeElement.function.js';\nimport { tags } from './tag.utils.js';\nimport { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { checkTagValueChange, PropWatches } from './index.js';\nimport { runAfterRender } from './afterRender.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { paint, painting } from './paint.function.js';\nimport { initState, reState } from '../state/state.utils.js';\nimport { isTagComponent } from '../isInstance.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nconst appElements = [];\n/**\n *\n * @param app taggedjs tag\n * @param element HTMLElement\n * @param props object\n * @returns\n */\nexport function tagElement(app, element, props) {\n    const appElmIndex = appElements.findIndex(appElm => appElm.element === element);\n    if (appElmIndex >= 0) {\n        destroySupport(appElements[appElmIndex].support, 0);\n        appElements.splice(appElmIndex, 1);\n        // an element already had an app on it\n        console.warn('Found and destroyed app element already rendered to element', { element });\n    }\n    // Create the app which returns [props, runOneTimeFunction]\n    let templater = (() => templater2(props));\n    templater.propWatch = PropWatches.NONE;\n    templater.tagJsType = ValueTypes.stateRender;\n    // todo: props should be an array\n    templater.props = [props];\n    templater.isApp = true;\n    // create observable the app lives on\n    const subject = getNewSubject(templater, element);\n    const global = subject.global;\n    initState(global.newest, setUseMemory.stateConfig);\n    let templater2 = app(props);\n    const isAppFunction = typeof templater2 == BasicTypes.function;\n    if (!isAppFunction) {\n        if (!isTagComponent(templater2)) {\n            templater.tag = templater2;\n            templater2 = app;\n        }\n        else {\n            global.newest.propsConfig = {\n                latest: [props],\n                castProps: [props],\n            };\n            templater.propWatch = templater2.propWatch;\n            templater.tagJsType = templater2.tagJsType;\n            templater.wrapper = templater2.wrapper;\n            templater = templater2;\n        }\n    }\n    const placeholder = document.createTextNode('');\n    tags.push((templater.wrapper || { original: templater }));\n    const support = runWrapper(templater, placeholder, element, subject, isAppFunction);\n    global.isApp = true;\n    if (isAppFunction) {\n        templater2.tag = support.templater.tag;\n    }\n    // enables hmr destroy so it can control entire app\n    ;\n    element.destroy = function () {\n        const events = global.events;\n        for (const eventName in events) {\n            const callback = events[eventName];\n            element.removeEventListener(eventName, callback);\n        }\n        global.events = {};\n        destroySupport(support, 0); // never return anything here\n        paint();\n    };\n    ++painting.locks;\n    const result = buildBeforeElement(support, element);\n    global.oldest = support;\n    global.newest = support;\n    let setUse = templater.setUse;\n    if (templater.tagJsType !== ValueTypes.stateRender) {\n        const wrap = app;\n        const original = wrap.original;\n        setUse = original.setUse;\n        original.isApp = true;\n    }\n    ;\n    element.setUse = setUse;\n    element.ValueTypes = ValueTypes;\n    appElements.push({ element, support });\n    const newFragment = document.createDocumentFragment();\n    newFragment.appendChild(placeholder);\n    for (const domItem of result.dom) {\n        putOneDomDown(domItem, newFragment);\n    }\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    --painting.locks;\n    paint();\n    element.appendChild(newFragment);\n    return {\n        support,\n        tags,\n        ValueTypes,\n    };\n}\nfunction getNewSubject(templater, appElement) {\n    const subject = {\n        value: templater,\n        checkValueChange: checkTagValueChange,\n        withinOwnerElement: false, // i am the highest owner\n        renderCount: 0,\n        global: undefined, // gets set below in getNewGlobal()\n    };\n    const global = getNewGlobal(subject);\n    global.events = {};\n    loadNewBaseSupport(templater, subject, appElement);\n    return subject;\n}\nfunction loadNewBaseSupport(templater, subject, appElement) {\n    const global = subject.global;\n    const newSupport = getBaseSupport(templater, subject);\n    newSupport.appElement = appElement;\n    global.oldest = global.oldest || newSupport;\n    global.newest = newSupport;\n    return newSupport;\n}\nexport function runWrapper(templater, placeholder, appElement, subject, isAppFunction) {\n    subject.placeholder = placeholder;\n    const global = subject.global;\n    const useSupport = global.newest;\n    const oldest = global.oldest;\n    const isFirstRender = useSupport === oldest;\n    if (!isFirstRender) {\n        reState(useSupport, setUseMemory.stateConfig, oldest.state, oldest.states);\n    }\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = (templater.wrapper || { original: templater });\n        if (!isAppFunction) {\n            const newSupport = loadNewBaseSupport(templater, subject, appElement);\n            runAfterRender(newSupport);\n            return newSupport;\n        }\n        const nowSupport = executeWrap(templater, result, useSupport);\n        runAfterRender(nowSupport);\n        return nowSupport;\n    }\n    // Call the apps function for our tag templater\n    const wrapper = templater.wrapper;\n    const nowSupport = wrapper(useSupport, subject);\n    runAfterRender(nowSupport);\n    return nowSupport;\n}\nfunction putOneDomDown(dom, newFragment) {\n    if (dom.domElement) {\n        newFragment.appendChild(dom.domElement);\n    }\n    if (dom.marker) {\n        newFragment.appendChild(dom.marker);\n    }\n}\n","export * from './tag/index.js';\nexport * from './errors.js';\nexport * from './isInstance.js';\nexport * from './state/index.js';\nexport { states } from './state/states.function.js';\nexport * from './subject/index.js';\nexport * from './interpolations/index.js';\nexport * from './tag/Support.class.js';\nexport * from './interpolations/attributes/howToSetInputValue.function.js';\nexport * from './interpolations/attributes/ElementTargetEvent.interface.js';\nimport { renderTagOnly } from './tag/render/renderTagOnly.function.js';\nimport { renderSupport } from './tag/render/renderSupport.function.js';\nimport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nexport { key } from './tag/key.js';\nimport { tagElement } from './tag/tagElement.js';\nimport { paint } from './tag/paint.function.js';\nexport const hmr = {\n    tagElement, renderWithSupport, renderSupport,\n    renderTagOnly, paint,\n};\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNewGlobal","subject","renderCount","global","RouteQuery","_name","empty","ImmutableTypes","BasicTypes","ValueTypes","tag","dom","templater","tagComponent","tagArray","tagJsSubject","renderOnce","stateRender","version","Date","now","isSimpleType","value","string","number","boolean","isStaticTag","tagJsType","isTagComponent","tagType","isSubjectInstance","isObject","subscribe","function","isPromise","isFunction","then","object","isArray","Array","combineLatest","subjects","output","Subject","subscribeWith","callback","valuesSeen","values","setValue","x","index","length","item","subscription","clones","shift","subscriptions","map","getSubscription","subscribers","countSubject","globalSubCount$","next","unsubscribe","findIndex","sub","splice","removeSubFromArray","valSub","add","push","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","newValue","handler","methodResponse","setHandler","onSubscription","isSubject","constructor","this","orgCallback","lastValue","emit","set","bind","subs","toPromise","Promise","res","toCallback","runtimeSub","tagJsUnsub","setTimeout","pipe","operations","setMethods","all","args","arg","static","Subjective","_value","super","defineValueOn","ValueSubject","ValueSubjective","willCallback","utils","willPromise","willSubscribe","runRestate","config","setUseMemory","stateConfig","restate","rearray","stateArray","defaultValue","runFirstState","initValue","original","getStateValue","state","handlers","firstStatesHandler","setter","states","statesIndex","support","reStatesHandler","prevSupport","oldStates","lastValues","initState","letHandler","firstLetState","statesHandler","reState","prevState","prevStates","reLetState","StateEchoBack","oldState","checkValue","getCallbackValue","makeStateResult","oldValue","y","syncStates","stateFrom","stateTo","statesFrom","fromValue","oldValues","oldGetCallback","getIndex","newSetCallback","_","watch","currentValues","setupWatch","defaultFinally","init","before","final","previous","pastResult","undefined","previousValues","result","every","defineOnMethod","getWatch","attachTo","setup","oldWatch","firstSupport","getSupportInCycle","method","nowSupport","setTo","newestState","oldest","oldestState","letState","letProp","getSetProp","myProp","newWatch","providers","create","constructMethod","stateDiffMemory","stateDiff","provider","oldStateCount","instance","owner","children","cm","compareTo","toString","inject","ownerSupport","ownerProviders","find","msg","name","console","warn","Error","TagError","details","message","errorCode","ArrayNoKeyError","StateMismatchError","SyncCallbackError","deepClone","maxDepth","makeDeepClone","RegExp","clone","getPrototypeOf","i","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","getTime","isArrayDeepEqual","keys1","keys","keys2","includes","isObjectDeepEqual","getTemplaterResult","propWatch","props","arrayValue","tags","cloneValueArray","cloneTagJsValue","getBaseSupport","castedProps","baseSupport","appSupport","blocked","destroy$","propsConfig","castProps","PropWatches","IMMUTABLE","latest","SHALLOW","shallowCompareDepth","deepCompareDepth","clonePropsBy","getSupport","getHtmlSupport","newSupport","depth","checkProp","alterProp","already","mem","wrap","toCall","callWith","newest","noCycle","callbackResult","run","locked","isInline","isInlineHtml","renderInlineHtml","renderExistingReadyTag","safeRenderSupport","tagClosed$","callbackPropOwner","assign","getPropWrap","isSkipPropValue","subValue","afterCheckProp","checkArrayProp","getset","getOwnPropertyDescriptor","checkObjectProp","originalValue","newProp","executeWrap","useSupport","originalFunction","getCastedProps","lastSupport","DEEP","preCastedProps","lastPropsConfig","lastCastProps","syncFunctionProps","html","tagCount","parentWrap","innerTagWrap","getTagWrap","wrapper","setUse","tagIndex","tagUseFn","hasSupportChanged","newTemplater","propsChanged","pastCloneProps","hasLenChanged","hasPropLengthsChanged","NONE","shallowPropMatch","immutablePropMatch","castedPastProps","compare","subCastedProps","subCompareProps","matched","entries","compareProps","onePropCompare","deepPropChangeCompare","hasPropChanges","len","pastProp","obEntries","subItem","objectItemMatches","use","route","_routeProps","app","_routeTag","deepPropWatch","immutableProps","watchProps","oneRenderFunction","renderFunction","onDelete","compareOriginal","pastValue","paintRemoves","paintContent","setContent","paintAppends","paintInsertBefores","paintAfters","painting","locks","paint","toRemove","parentNode","removeChild","content","text","textNode","textContent","relative","appendChild","element","insertBefore","updateBeforeTemplate","lastFirstChild","document","createTextNode","castTextValue","howToSetInputValue","setAttribute","removeAttribute","specialAttribute","specialName","target","stagger","focus","select","names","split","style","classList","remove","processSpecialClass","handleProviderChanges","tagsWithProvider","memory","childTags","child","cSubject","getTagsWithProvider","getUpTags","supports","inlineHtml","isComponent","continueUp","selfPropChange","nowProps","latestProps","hasPropsToOwnerChanged","checkRenderUp","proSupports","prosWithChanges","hasChange","providersChangeCheck","renderTagUpdateArray","forEach","mapTagUpdate","noData","promiseNoData","bindSubjectCallback","subjectFunction","deleted","bindTo","component","apply","eventHandlerSupport","last","checkAfterCallbackPromise","renderCallbackSupport","afterTagCallback","runTagCallback","tagFunction","processNonDynamicAttr","attrName","howToSet","isSpecial","addSupportEventListener","eventName","elm","appElement","replaceEventName","eventReg","events","listener","event","originalStopPropagation","stopPropagation","bubbleEvent","addEventListener","stopped","defaultPrevented","processAttributeFunction","newAttrValue","fun","isSpecialAttr","startsWith","specialAction","isSpecialAction","processAttribute","context","nameVar","getTagJsVar","contextItem","addOneContext","isAttr","isNameOnly","processNameOnlyAttrValue","valueVar","checkValueChange","checkSimpleValueChange","withinOwnerElement","contextValueSubject","processAttributeEmit","processNameValueAttributeAttrSubject","processTagCallbackFun","processDynamicNameValueAttribute","attrValue","isNoDisplayValue","processAttributeSubjectValue","callbackFun","prevFun","attrPart","tagJsVar","attachDomElements","nodes","counts","createElement","node","newNode","v","isNaN","attachDynamicDom","nn","tc","innerHTML","domElement","innerText","id","at","attr","ch","subVal","marker","placeholder","appendTo","processFirstSubjectValue","buildBeforeElement","options","added","removed","domMeta","thisTag","getDomMeta","strings","loadDomMeta","getHtmlDomMeta","htmlDomMeta","processTag","checkTagValueChange","subscribeToTemplate","getFakeTemplater","newSupportByTemplater","processUpdateAttrContext","updateNameOnlyAttrValue","processUpdateOneContext","updateExistingValue","updateSupportBy","olderSupport","newerSupport","tempTag","updateSupportValuesBy","processUpdateContext","wasDestroyed","processReplacementComponent","oldWrapper","newWrapper","isSameTag","skipComparing","isLikeTags","oldestSupport","destroySupport","swapTags","hasChanged","newProps","syncSupports","updateExistingTagComponent","prepareUpdateToComponent","valueSupport","newGlobal","handleStillTag","updateContextItemBySupport","processTagArray","castedValue","simpleValueElm","processNowRegularValue","processNewTag","runBeforeDestroy","getChildTagsToDestroy","lastArray","iSubs","iSub","getChildTagsToSoftDestroy","subTags","smartRemoveKids","promises","startStagger","thisGlobal","destroyArray","oldClones","newPromises","customElm","ondestroy","promise","nextSibling","onDestroyWrap","onDestroy","elementDestroyCheck","checkCloneRemoval","filter","destroyClones","runtimeInsertBefore","filteredLast","newRemoved","reviewLastArrayItem","eAppendTo","reviewArrayItem","array","itemSubject","couldBeSame","processAddTagArrayItem","reviewPreviousArrayItem","subPlaceholder","processNewArrayValue","destroyArrayItem","_subTag","newLength","lessLength","prev","support0","support1","templater0","templater1","tag0","tag1","domMeta0","domMeta1","isLikeDomTags","like","strings0","strings1","values0","values1","valuesLengthsMatch","allVarsMatch","isLikeValueSets","isLikeStringTags","checkArrayValueChange","oldClone","processUpdateRegularValue","isTag","oneRenderToSupport","checkStateMismatch","newStates","error","hint","throwStateMismatch","runAfterRender","renderTagOnly","oldRenderCount","reSupport","processNewSubjectTag","valueId","tagFakeTemplater","processResult","newPropsConfig","renderWithSupport","appendIndex","processFirstTagResult","processFirstSubjectComponent","processFirstRegularValue","processSubUpdate","onValue","syncRun","processReplaceTagResult","newPropsArray","priorPropsArray","newArray","syncPriorPropFunction","priorProp","updateExistingArray","hasSetter","updateExistingObject","softDestroySupport","softDestroyOne","lastTemplater","lastTag","isLikeTag","lastDom","lastStrings","oldLength","checkTagSoftDestroy","pIndex","pLen","pcLen","moveProviders","lastOwnerSupport","wasLikeTags","pop","ownGlobal","syncError","createTrigger","oldStateArray","maybePromise","finally","callbackStateUpdate","callbackMaker","onInit","variablePrefix","variableSuffix","getStringTag","getDomTag","ondoubleclick","fragFindAny","fragReplacer","safeVar","regexAttr","regexTagOrg","htmlInterpolationToDomMeta","htmlInterpolationToPlaceholders","valuePositions","elements","stack","currentElement","valueIndex","position","regexTag","replace","removeCommentRegX","match","preprocessTagsInComments","tagMatch","exec","fullMatch","tagName","attrString","isClosingTag","isSelfClosing","endsWith","slice","trim","splitByTagVar","pushTextTo","attributes","attrMatch","notEmpty","noValue","lowerName","toLowerCase","fixedName","cleanEventName","valueName","search","attrSet","parseHTML","join","results","fragment","diff","balanceArrayByArrays","addPlaceholders","inputString","part","pushTo","postprocessTagsInComments","placeholderRegex","replacePlaceholders","valueCount","currentTail","loopTail","attrs","processAttributes","innerLoopTail","examineChild","textChild","secondMatch","wIndex","parseInt","varContent","after","lastIndex","safeReplacer","traverseAndRestore","_match","lastRuns","stringId","Number","getStringsId","lastRun","matches","isLastRunMatched","domMetaMap","template","interpolation","stringTag","appElements","tagElement","appElmIndex","appElm","templater2","isApp","loadNewBaseSupport","getNewSubject","isAppFunction","runWrapper","destroy","removeEventListener","newFragment","createDocumentFragment","domItem","putOneDomDown","hmr"],"sourceRoot":""}