{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://taggedjs/webpack/bootstrap","webpack://taggedjs/webpack/runtime/define property getters","webpack://taggedjs/webpack/runtime/hasOwnProperty shorthand","webpack://taggedjs/./ts/tag/update/getNewGlobal.function.ts","webpack://taggedjs/./ts/tag/tag.types.ts","webpack://taggedjs/./ts/tag/ValueTypes.enum.ts","webpack://taggedjs/./ts/tag/paint.function.ts","webpack://taggedjs/./ts/isInstance.ts","webpack://taggedjs/./ts/interpolations/attributes/getSupportWithState.function.ts","webpack://taggedjs/./ts/state/states.utils.ts","webpack://taggedjs/./ts/state/state.utils.ts","webpack://taggedjs/./ts/state/getStateValue.function.ts","webpack://taggedjs/./ts/state/stateHandlers.ts","webpack://taggedjs/./ts/subject/combineLatest.function.ts","webpack://taggedjs/./ts/subject/subject.utils.ts","webpack://taggedjs/./ts/subject/Subject.class.ts","webpack://taggedjs/./ts/state/tagClosed$.subject.ts","webpack://taggedjs/./ts/state/setUseMemory.object.ts","webpack://taggedjs/./ts/updateBeforeTemplate.function.ts","webpack://taggedjs/./ts/tag/tagRunner.ts","webpack://taggedjs/./ts/tag/getChildTagsToDestroy.function.ts","webpack://taggedjs/./ts/tag/smartRemoveKids.function.ts","webpack://taggedjs/./ts/tag/destroySupport.function.ts","webpack://taggedjs/./ts/tag/update/compareArrayItems.function.ts","webpack://taggedjs/./ts/tag/checkDestroyPrevious.function.ts","webpack://taggedjs/./ts/tag/update/processRegularValue.function.ts","webpack://taggedjs/./ts/interpolations/processSubscriptionUpdate.function.ts","webpack://taggedjs/./ts/interpolations/subscribeToTemplate.function.ts","webpack://taggedjs/./ts/deepFunctions.ts","webpack://taggedjs/./ts/tag/cloneValueArray.function.ts","webpack://taggedjs/./ts/interpolations/attributes/howToSetInputValue.function.ts","webpack://taggedjs/./ts/interpolations/attributes/specialAttribute.ts","webpack://taggedjs/./ts/state/handleProviderChanges.function.ts","webpack://taggedjs/./ts/interpolations/attributes/getUpTags.function.ts","webpack://taggedjs/./ts/tag/render/renderSupport.function.ts","webpack://taggedjs/./ts/state/providersChangeCheck.function.ts","webpack://taggedjs/./ts/interpolations/attributes/renderTagArray.function.ts","webpack://taggedjs/./ts/interpolations/attributes/bindSubjectCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processNameValueAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/addSupportEventListener.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttributeCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/isSpecialAttribute.function.ts","webpack://taggedjs/./ts/tag/processUpdateAttrContext.function.ts","webpack://taggedjs/./ts/interpolations/attributes/updateAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttribute.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/attachDomElements.function.ts","webpack://taggedjs/./ts/tag/buildBeforeElement.function.ts","webpack://taggedjs/./ts/alterProp.function.ts","webpack://taggedjs/./ts/tag/executeWrap.function.ts","webpack://taggedjs/./ts/tag/isLikeTags.function.ts","webpack://taggedjs/./ts/tag/checkTagValueChange.function.ts","webpack://taggedjs/./ts/tag/update/processNewSubjectTag.function.ts","webpack://taggedjs/./ts/tag/update/processTagInit.function.ts","webpack://taggedjs/./ts/tag/getTemplaterResult.function.ts","webpack://taggedjs/./ts/tag/tag.utils.ts","webpack://taggedjs/./ts/tag/update/oneRenderToSupport.function.ts","webpack://taggedjs/./ts/errors.ts","webpack://taggedjs/./ts/tag/checkStateMismatch.function.ts","webpack://taggedjs/./ts/tag/afterRender.function.ts","webpack://taggedjs/./ts/tag/render/renderTagOnly.function.ts","webpack://taggedjs/./ts/tag/update/processRenderOnceInit.function.ts","webpack://taggedjs/./ts/tag/update/processTagComponentInit.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectComponent.function.ts","webpack://taggedjs/./ts/tag/update/processTagResult.function.ts","webpack://taggedjs/./ts/tag/tag.function.ts","webpack://taggedjs/./ts/tag/getTagWrap.function.ts","webpack://taggedjs/./ts/tag/update/syncPriorPropFunction.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingArray.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingObject.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingTagComponent.function.ts","webpack://taggedjs/./ts/tag/hasSupportChanged.function.ts","webpack://taggedjs/./ts/tag/render/softDestroySupport.function.ts","webpack://taggedjs/./ts/tag/render/renderWithSupport.function.ts","webpack://taggedjs/./ts/tag/processUpdateContext.function.ts","webpack://taggedjs/./ts/tag/updateSupportBy.function.ts","webpack://taggedjs/./ts/tag/render/renderExistingTag.function.ts","webpack://taggedjs/./ts/tag/hasPropChanges.function.ts","webpack://taggedjs/./ts/tag/getSupport.function.ts","webpack://taggedjs/./ts/tag/clonePropsBy.function.ts","webpack://taggedjs/./ts/tag/update/processTag.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingValue.function.ts","webpack://taggedjs/./ts/tag/update/processNewValue.function.ts","webpack://taggedjs/./ts/tag/update/processTagArray.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectValue.function.ts","webpack://taggedjs/./ts/state/syncStates.function.ts","webpack://taggedjs/./ts/tag/update/setupSubscribe.function.ts","webpack://taggedjs/./ts/tag/update/processSubscribe.function.ts","webpack://taggedjs/./ts/subject/signal.function.ts","webpack://taggedjs/./ts/subject/ValueSubject.ts","webpack://taggedjs/./ts/subject/will.functions.ts","webpack://taggedjs/./ts/state/state.function.ts","webpack://taggedjs/./ts/state/watch.function.ts","webpack://taggedjs/./ts/state/subject.function.ts","webpack://taggedjs/./ts/state/states.function.ts","webpack://taggedjs/./ts/state/letProp.function.ts","webpack://taggedjs/./ts/state/providers.ts","webpack://taggedjs/./ts/state/callback.function.ts","webpack://taggedjs/./ts/state/callbackStateUpdate.function.ts","webpack://taggedjs/./ts/state/callbackMaker.function.ts","webpack://taggedjs/./ts/state/onInit.ts","webpack://taggedjs/./ts/state/onDestroy.ts","webpack://taggedjs/./ts/state/subscribe.function.ts","webpack://taggedjs/./ts/tag/getSupportInCycle.function.ts","webpack://taggedjs/./ts/tag/update/processDomTagInit.function.ts","webpack://taggedjs/./ts/tag/getDomTag.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/parseHTML.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/htmlInterpolationToDomMeta.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/replacePlaceholders.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/restorePlaceholders.function.ts","webpack://taggedjs/./ts/tag/domMetaCollector.ts","webpack://taggedjs/./ts/tag/getStringsId.function.ts","webpack://taggedjs/./ts/tag/isLastRunMatched.function.ts","webpack://taggedjs/./ts/tag/html.ts","webpack://taggedjs/./ts/tag/tagElement.ts","webpack://taggedjs/./ts/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export function getNewGlobal(subject) {\n    ;\n    subject.renderCount = subject.renderCount || 0;\n    // ;(subject as SupportContextItem).renderCount = 0\n    return subject.global = {};\n}\n","export class RouteQuery {\n    get(_name) {\n        return 'todo';\n    }\n}\n","export const empty = '';\nexport var ImmutableTypes;\n(function (ImmutableTypes) {\n    ImmutableTypes[\"string\"] = \"string\";\n    ImmutableTypes[\"number\"] = \"number\";\n    ImmutableTypes[\"boolean\"] = \"boolean\";\n    ImmutableTypes[\"undefined\"] = \"undefined\";\n})(ImmutableTypes || (ImmutableTypes = {}));\nexport var BasicTypes;\n(function (BasicTypes) {\n    BasicTypes[\"function\"] = \"function\";\n    BasicTypes[\"date\"] = \"date\";\n    BasicTypes[\"unknown\"] = \"unknown\";\n    BasicTypes[\"object\"] = \"object\";\n})(BasicTypes || (BasicTypes = {}));\nconst version = Date.now();\n/** Used as direct memory comparisons, the strings are never compared, just the array */\nexport const ValueTypes = {\n    tag: 'html', // html'' aka StringTag | DomTag\n    dom: 'dom', // compiled version of html''\n    templater: 'templater',\n    tagComponent: 'tagComponent',\n    tagArray: 'tagArray',\n    // subject: 'subject',\n    // tagJsSubject: 'tagJsSubject',\n    subscribe: 'subscribe',\n    signal: 'signal',\n    renderOnce: 'renderOnce',\n    stateRender: 'stateRender',\n    version,\n};\n","export let paintRemoves = [];\nexport let paintContent = [];\nexport let setContent = [];\n/** array memory that runs and completes BEFORE paintInsertBefores array */\nexport let paintAppends = [];\n/** array memory that runs and completes AFTER paintAppends array */\nexport let paintInsertBefores = [];\nexport let paintAfters = []; // callbacks after all painted\nexport const painting = {\n    locks: 0\n};\nexport function paint() {\n    if (painting.locks > 0) {\n        return;\n    }\n    for (let index = paintRemoves.length - 1; index >= 0; --index) {\n        const toRemove = paintRemoves[index];\n        const parentNode = toRemove.parentNode;\n        parentNode.removeChild(toRemove);\n    }\n    for (const content of paintContent) {\n        content();\n    }\n    for (const [text, textNode] of setContent) {\n        textNode.textContent = text;\n    }\n    for (const now of paintAppends) {\n        now.relative.appendChild(now.element);\n    }\n    for (const { element, relative } of paintInsertBefores) {\n        relative.parentNode.insertBefore(element, relative);\n    }\n    paintRemoves = [];\n    paintContent = [];\n    paintAppends = [];\n    paintInsertBefores = [];\n    setContent = [];\n    for (const now of paintAfters) {\n        now();\n    }\n    paintAfters = [];\n}\n","import { BasicTypes, ImmutableTypes, ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isSimpleType(value) {\n    switch (value) {\n        case ImmutableTypes.string:\n        case ImmutableTypes.number:\n        case ImmutableTypes.boolean:\n            return true;\n    }\n    return false;\n}\nexport function isStaticTag(value) {\n    if (!value) {\n        return false;\n    }\n    const tagJsType = value.tagJsType;\n    switch (tagJsType) {\n        case ValueTypes.dom:\n        case ValueTypes.tag:\n        case ValueTypes.templater:\n            return true;\n    }\n    return false;\n}\n/** passed in is expected to be a TemplaterResult */\nexport function isTagComponent(value) {\n    const tagType = value?.tagJsType;\n    return tagType === ValueTypes.tagComponent || tagType === ValueTypes.stateRender;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return isObject(subject) && typeof subject.subscribe === BasicTypes.function;\n}\nexport function isPromise(value) {\n    return value && isFunction(value.then);\n}\nexport function isFunction(value) {\n    return typeof value === BasicTypes.function;\n}\nexport function isObject(value) {\n    return typeof (value) === BasicTypes.object && value !== null;\n}\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n","import { isTagComponent } from '../../isInstance.js';\nexport function getSupportWithState(support) {\n    // get actual component owner not just the html`` support\n    let component = support;\n    while (component.ownerSupport && !isTagComponent(component.templater)) {\n        component = component.ownerSupport;\n    }\n    return component.subject.global.newest || component;\n}\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { getSupportWithState } from '../interpolations/attributes/getSupportWithState.function.js';\nexport function firstStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    config.states[config.statesIndex] = setter;\n    // const support = config.support as AnySupport\n    // support.states[config.statesIndex] = setter\n    ++config.statesIndex;\n    return setter((...args) => {\n        // state(args)\n        return args;\n    });\n}\n/** aka statesHandler */\nexport function reStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    const support = config.support;\n    const statesIndex = config.statesIndex;\n    const prevSupport = getSupportWithState(config.prevSupport);\n    const prevStates = prevSupport.states;\n    // const prevStates = config.states\n    const oldStates = prevStates[statesIndex];\n    let lastValues = [];\n    oldStates(function regetter(...args) {\n        lastValues = args;\n        return args;\n    });\n    let index = 0;\n    const resetter = (..._args) => {\n        // state(value) // fake call and do not care about result\n        // fake state() having been called\n        /*\n        config.stateArray.push({\n          get: () => args,\n          defaultValue: args,\n        })\n        */\n        // const lastValue = lastValues[index]\n        /*\n        let lastValue: any\n        oldStates((...x) => {\n          return lastValue = x\n        })\n    */\n        ++index;\n        return lastValues;\n    };\n    //;(config.support as AnySupport).states[config.statesIndex] = setter\n    config.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(resetter);\n}\n","import { runFirstState, runRestate } from './stateHandlers.js';\nimport { firstStatesHandler, reStatesHandler } from './states.utils.js';\nexport function initState(support, config) {\n    config.handlers.handler = runFirstState;\n    config.handlers.statesHandler = firstStatesHandler;\n    config.rearray = [];\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.support = support;\n}\nexport function reState(newSupport, prevSupport, config, prevState, prevStates) {\n    // set previous state memory\n    config.rearray = prevState;\n    config.stateArray = [];\n    config.states = [];\n    //config.states = prevStates\n    //config.states = [...prevStates]\n    // newSupport.states = [...prevStates]\n    // support.states = config.states\n    config.statesIndex = 0;\n    config.handlers.handler = runRestate;\n    config.handlers.statesHandler = reStatesHandler;\n    // config.support = support\n    config.prevSupport = prevSupport;\n}\nexport class StateEchoBack {\n}\n/** sends a fake value and then sets back to received value */\nexport function getCallbackValue(callback) {\n    const [value] = callback(StateEchoBack); // get value and set to undefined\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n","import { getCallbackValue } from './state.utils.js';\nexport function getStateValue(state) {\n    const callback = state.callback;\n    if (!callback) {\n        return state.defaultValue;\n    }\n    const [value] = getCallbackValue(callback);\n    return value;\n}\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nexport function runRestate() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    config.stateArray.push(restate);\n    return restate.defaultValue;\n}\nexport function runFirstState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    let initValue = defaultValue;\n    if (typeof (defaultValue) === BasicTypes.function) {\n        initValue = defaultValue();\n    }\n    // the state is actually intended to be a function\n    if (typeof (initValue) === BasicTypes.function) {\n        const original = initValue;\n        initValue = function initValueFun(...args) {\n            const result = original(...args);\n            return result;\n        };\n        initValue.original = original;\n    }\n    const push = {\n        get: function pushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return initValue;\n}\n","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (const item of valuesSeen) {\n                if (!item) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => {\n            return subject.subscribe(x => setValue(x, index + 1));\n        });\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject.value + 1);\n    const subscription = function () {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = function () {\n        return unsubscribe(subscription, subscribers, callback);\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\nfunction unsubscribe(subscription, subscribers, callback) {\n    removeSubFromArray(subscribers, callback); // each will be called when update comes in\n    const valSub = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(valSub.value - 1);\n    // any double unsubscribes will be ignored\n    subscription.unsubscribe = () => subscription;\n    // unsubscribe from any combined subjects\n    const subscriptions = subscription.subscriptions;\n    for (const sub of subscriptions) {\n        sub.unsubscribe();\n    }\n    return subscription;\n}\n","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    constructor(value, \n    // private? - only used by extending classes\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        // defineValueOn(this)\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this.value = value;\n        this.emit();\n    }\n    set = this.next.bind(this);\n    emit() {\n        const value = this.value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster. Only get called once. No subscription to manage */\n    toCallback(callback) {\n        const subscription = this.subscribe((x, runtimeSub) => {\n            const tagJsUnsub = runtimeSub?.unsubscribe;\n            if (tagJsUnsub) {\n                tagJsUnsub(); // its from taggedjs\n            }\n            else {\n                setTimeout(() => subscription.unsubscribe(), 0);\n            }\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this.value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging}\n}\nexport class Subjective extends Subject {\n    value;\n    onSubscription;\n    _value;\n    constructor(value, \n    // private?\n    onSubscription) {\n        super(value, onSubscription);\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering  */\nexport const tagClosed$ = new Subject(undefined, function tagCloser(subscription) {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n","import { firstStatesHandler } from './states.utils.js';\nimport { runFirstState } from './stateHandlers.js';\nimport { tagClosed$ } from './tagClosed$.subject.js';\nexport const setUseMemory = {\n    stateConfig: {\n        stateArray: [], // state memory on the first render\n        version: Date.now(),\n        handlers: {\n            handler: runFirstState,\n            statesHandler: firstStatesHandler,\n        }\n    },\n    tagClosed$,\n};\n","import { paintInsertBefores } from './tag/paint.function.js';\nimport { empty } from './tag/ValueTypes.enum.js';\n// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const textNode = document.createTextNode(value); // never innerHTML\n    paintInsertBefores.push({\n        element: textNode,\n        relative: lastFirstChild,\n    });\n    return textNode;\n}\nexport function castTextValue(value) {\n    switch (value) {\n        case undefined:\n        case false:\n        case null:\n            return empty;\n    }\n    return value;\n}\n","// Life cycle 4 - end of life\nexport function runBeforeDestroy(support, global) {\n    const providers = global.providers;\n    if (providers) {\n        for (const provider of providers) {\n            for (let index = provider.children.length - 1; index >= 0; --index) {\n                const child = provider.children[index];\n                if (child.subject.global === global) {\n                    provider.children.splice(index, 1);\n                }\n            }\n        }\n    }\n    if (global.destroy$) {\n        global.destroy$.next();\n    }\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n}\n","import { isTagComponent } from '../isInstance.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function getChildTagsToDestroy(childTags) {\n    for (const child of childTags) {\n        const lastArray = child.lastArray;\n        if (lastArray) {\n            getChildTagsToDestroy(lastArray.map(x => x.context));\n            continue;\n        }\n        const global = child.global;\n        if (!global) {\n            continue; // not a support contextItem\n        }\n        const support = global.newest;\n        const iSubs = global.subscriptions;\n        if (iSubs) {\n            iSubs.forEach(iSub => iSub.unsubscribe());\n        }\n        if (isTagComponent(support.templater)) {\n            runBeforeDestroy(support, global);\n        }\n        const subTags = global.context;\n        getChildTagsToDestroy(subTags);\n    }\n}\nexport function getChildTagsToSoftDestroy(childTags, tags = [], subs = []) {\n    for (const child of childTags) {\n        const global = child.global;\n        if (!global) {\n            continue;\n        }\n        const support = global.newest;\n        if (support) {\n            tags.push(support);\n            const iSubs = global.subscriptions;\n            if (iSubs) {\n                subs.push(...iSubs);\n            }\n        }\n        const subTags = global.context;\n        if (subTags) {\n            getChildTagsToSoftDestroy(subTags, tags, subs);\n        }\n    }\n    return { tags, subs };\n}\n","import { destroyArray } from './checkDestroyPrevious.function.js';\nimport { paint, painting, paintRemoves } from './paint.function.js';\n/** sets global.deleted on support and all children */\nexport function smartRemoveKids(global, allPromises) {\n    const context = global.context;\n    // already set\n    // global.deleted = true\n    const destroys = global.destroys;\n    if (destroys) {\n        return processContextDestroys(destroys, global, allPromises);\n    }\n    smartRemoveByContext(context, allPromises);\n    destroyClones(global);\n}\n// Elements that have a destroy or ondestroy attribute\nfunction processContextDestroys(destroys, global, allPromises) {\n    const promises = [];\n    destroys.forEach(destroy => {\n        const maybePromise = destroy();\n        const isPromise = maybePromise instanceof Promise;\n        if (isPromise) {\n            promises.push(maybePromise);\n        }\n    });\n    if (promises.length) {\n        const lastPromise = Promise.all(promises)\n            .then(() => {\n            ++painting.locks;\n            // continue to remove\n            smartRemoveByContext(global.context, allPromises);\n            destroyClones(global);\n            --painting.locks;\n            paint();\n        });\n        // run destroy animations\n        allPromises.push(lastPromise);\n        return;\n    }\n    ++painting.locks;\n    smartRemoveByContext(global.context, allPromises);\n    destroyClones(global);\n    --painting.locks;\n    paint();\n}\nfunction smartRemoveByContext(context, allPromises) {\n    for (const subject of context) {\n        if (subject.withinOwnerElement) {\n            continue; // i live within my owner variable. I will be deleted with owner\n        }\n        const lastArray = subject.lastArray;\n        if (lastArray) {\n            destroyArray(subject, lastArray);\n            continue;\n        }\n        // regular values, no placeholders\n        const elm = subject.simpleValueElm;\n        if (elm) {\n            delete subject.simpleValueElm;\n            paintRemoves.push(elm);\n            continue;\n        }\n        const subGlobal = subject.global;\n        if (subGlobal === undefined) {\n            continue; // subject\n        }\n        if (subGlobal.deleted === true) {\n            continue; // already deleted\n        }\n        subGlobal.deleted = true;\n        const oldest = subGlobal.oldest;\n        if (oldest) {\n            smartRemoveKids(subGlobal, allPromises);\n            continue;\n        }\n    }\n}\n/** Destroy dom elements and dom space markers */\nfunction destroyClones(global) {\n    // const global = subject.global\n    const htmlDomMeta = global.htmlDomMeta;\n    // check subjects that may have clones attached to them\n    htmlDomMeta.forEach(clone => {\n        const marker = clone.marker;\n        if (marker) {\n            paintRemoves.push(marker);\n        }\n        const dom = clone.domElement;\n        if (!dom) {\n            return;\n        }\n        paintRemoves.push(dom);\n    });\n    // htmlDomMeta.length = 0\n}\n","import { getChildTagsToDestroy } from './getChildTagsToDestroy.function.js';\nimport { smartRemoveKids } from './smartRemoveKids.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function destroySupport(support, global) {\n    const subject = support.subject;\n    global.deleted = true;\n    subject.renderCount = 0; // if it comes back, wont be considered an update\n    const promises = [];\n    const context = global.context;\n    getChildTagsToDestroy(context);\n    if (global.destroy$) {\n        runBeforeDestroy(support, global);\n    }\n    smartRemoveKids(global, promises);\n    return promises;\n}\n","import { paintRemoves } from '../paint.function.js';\nimport { destroySupport } from '../destroySupport.function.js';\nexport function compareArrayItems(value, index, lastArray, removed, counts) {\n    const newLength = value.length - 1;\n    const at = index - removed;\n    const lessLength = at < 0 || newLength < at;\n    const prevContext = lastArray[index].context;\n    if (lessLength) {\n        destroyArrayItem(prevContext, counts);\n        return 1;\n    }\n    const oldKey = prevContext.value.arrayValue;\n    const newValueTag = value[index];\n    const result = runArrayItemDiff(oldKey, newValueTag, prevContext, counts, lastArray, index);\n    return result;\n}\nfunction runArrayItemDiff(oldKey, newValueTag, prevContext, counts, lastArray, index) {\n    const isDiff = newValueTag && oldKey !== newValueTag.arrayValue;\n    if (isDiff) {\n        destroyArrayItem(prevContext, counts);\n        lastArray.splice(index, 1);\n        return 2;\n    }\n    return 0;\n}\nexport function destroyArrayItem(item, counts) {\n    const global = item.global;\n    destroyArrayItemByGlobal(global, item);\n    ++counts.removed;\n}\nfunction destroyArrayItemByGlobal(global, item) {\n    if (global) {\n        const support = global.oldest;\n        destroySupport(support, global);\n    }\n    else {\n        const element = item.simpleValueElm;\n        delete item.simpleValueElm;\n        paintRemoves.push(element);\n    }\n}\n","// Functions in here are attached as ContextItem.checkValueChange\nimport { processUpdateRegularValue } from './update/processRegularValue.function.js';\nimport { destroyArrayItem } from './update/compareArrayItems.function.js';\nimport { isArray } from '../isInstance.js';\nimport { paintRemoves } from './paint.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function checkArrayValueChange(newValue, subject) {\n    // no longer an array?\n    if (!isArray(newValue)) {\n        const lastArray = subject.lastArray;\n        destroyArray(subject, lastArray);\n        return 9; // 'array'\n    }\n    return false;\n}\nexport function destroyArray(subject, lastArray) {\n    const counts = { added: 0, removed: 0 };\n    for (let index = 0; index < lastArray.length; ++index) {\n        destroyArrayItem(lastArray[index], counts);\n    }\n    delete subject.lastArray;\n}\nexport function checkSimpleValueChange(newValue, subject) {\n    const isBadValue = newValue === null || newValue === undefined;\n    if (isBadValue || !(typeof (newValue) === BasicTypes.object)) {\n        // This will cause all other values to render\n        processUpdateRegularValue(newValue, subject);\n        return -1; // no need to destroy, just update display\n    }\n    deleteSimpleValue(subject);\n    return 6; // 'changed-simple-value'\n}\nexport function deleteSimpleValue(subject) {\n    const elm = subject.simpleValueElm;\n    delete subject.simpleValueElm;\n    paintRemoves.push(elm);\n}\n","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { setContent } from '../paint.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nexport function processUpdateRegularValue(value, contextItem) {\n    const castedValue = castTextValue(value);\n    const oldClone = contextItem.simpleValueElm; // placeholder\n    setContent.push([castedValue, oldClone]);\n}\n/** Used during updates that were another value/tag first but now simple string */\nexport function processNowRegularValue(value, subject) {\n    subject.checkValueChange = checkSimpleValueChange;\n    const before = subject.placeholder;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    subject.simpleValueElm = updateBeforeTemplate(castedValue, before);\n}\n","import { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\n/** Used for values that are to subscribe to */\nexport function processSubUpdate(value, // Observable | Subject\ncontextItem, support) {\n    const global = support.subject.global;\n    if (global.deleted) {\n        return; // same value emitted\n    }\n    // checks if same value\n    updateExistingValue(contextItem, value, support);\n    if (!setUseMemory.stateConfig.support) {\n        paint();\n    }\n    return;\n}\n","import { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { processSubUpdate } from './processSubscriptionUpdate.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\n/** @deprecated Used for when dynamic value is truly something to subscribe to */\nexport function subscribeToTemplate({ subject, support, counts, contextItem, appendTo, }) {\n    const sub = setupSubscribeCallbackProcessor(subject, contextItem, support, counts, appendTo);\n    // Manage unsubscribing\n    const global = support.subject.global;\n    const subs = global.subscriptions = global.subscriptions || [];\n    subs.push(sub);\n}\nfunction setupSubscribeCallbackProcessor(observable, contextItem, support, // ownerSupport ?\ncounts, // used for animation stagger computing\nappendTo) {\n    let onValue = function onSubValue(value) {\n        processFirstSubjectValue(value, contextItem, support, { ...counts }, syncRun ? appendTo : undefined);\n        if (!syncRun && !setUseMemory.stateConfig.support) {\n            paint();\n        }\n        // from now on just run update\n        onValue = function subscriptionUpdate(value) {\n            processSubUpdate(value, contextItem, support);\n        };\n    };\n    // onValue mutates so function below calls original and mutation\n    const callback = function subValueProcessor(value) {\n        onValue(value);\n    }; // as unknown as (ValueSubjectSubscriber<Callback> & ValueSubjectSubscriber<unknown>)\n    let syncRun = true;\n    const sub = observable.subscribe(callback);\n    contextItem.subject = observable;\n    syncRun = false;\n    return sub;\n}\n","import { isArray, isFunction } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nexport function deepClone(obj, maxDepth) {\n    // return makeDeepClone(obj, new WeakMap())\n    return makeDeepClone(obj, maxDepth);\n}\nfunction makeDeepClone(obj, \n// visited: WeakMap<any, any>\nmaxDepth) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== BasicTypes.object) {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    /*\n    if (visited.has(obj)) {\n      return visited.get(obj)\n    }\n    */\n    if (maxDepth < 0) {\n        return obj;\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Clone each property or element of the object or array\n    if (isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], maxDepth - 1);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                clone[key] = makeDeepClone(obj[key], maxDepth - 1);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2, maxDepth) {\n    return isDeepEqual(obj1, obj2, maxDepth);\n}\nfunction isDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    // if (visited.has(obj1)) {\n    if (maxDepth < 0) {\n        return true;\n    }\n    if (typeof obj1 === BasicTypes.object && typeof obj2 === BasicTypes.object) {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        // visited.set(obj1, 0)\n        // Check if obj1 and obj2 are both arrays\n        if (isArray(obj1) && isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, maxDepth - 1);\n        }\n        else if (isArray(obj1) || isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        // return isObjectDeepEqual(obj1, obj2, visited)\n        return isObjectDeepEqual(obj1, obj2, maxDepth - 1);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, maxDepth) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = isFunction(fn0) && isFunction(fn1);\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isArray } from '../isInstance.js';\nexport function cloneValueArray(values) {\n    return values.map(cloneTagJsValue);\n}\n/** clones only what is needed to compare differences later */\nexport function cloneTagJsValue(value, maxDepth) {\n    const tag = value;\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.stateRender:\n                return undefined;\n            case ValueTypes.dom:\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n        }\n    }\n    if (isArray(value)) {\n        return cloneValueArray(tag);\n    }\n    return deepClone(value, maxDepth);\n}\n","import { paintContent } from \"../../tag/paint.function.js\";\n// Maybe more performant for updates but seemingly slower for first renders\nexport function howToSetInputValue(element, name, value) {\n    paintContent.push(() => {\n        howToSetFirstInputValue(element, name, value);\n    });\n}\nexport function howToSetFirstInputValue(element, name, value) {\n    if (value === undefined || value === false || value === null) {\n        element.removeAttribute(name);\n        return;\n    }\n    element.setAttribute(name, value);\n}\n","import { paintAfters, paintContent } from \"../../tag/paint.function.js\";\n/** handles init, destroy, autofocus, autoselect, style., class. */\nexport function specialAttribute(name, value, element, specialName, support, counts) {\n    switch (specialName) {\n        // case 'oninit' as any:\n        case 'init': {\n            const stagger = counts.added;\n            // run delayed after elements placed down\n            paintAfters.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                value(event); // call init/oninit\n            });\n            return;\n        }\n        case 'destroy': {\n            const stagger = ++counts.removed;\n            const global = support.subject.global;\n            global.destroys = global.destroys || [];\n            global.destroys.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                return value(event); // call destroy/ondestroy\n            });\n            return;\n        }\n        case 'autofocus':\n            paintAfters.push(() => element.focus());\n            return;\n        case 'autoselect':\n            paintAfters.push(() => element.select());\n            return;\n        case 'style': {\n            const names = name.split('.');\n            paintContent.push(() => element.style[names[1]] = value); // attribute changes should come first\n            return;\n        }\n        case 'class':\n            processSpecialClass(name, value, element);\n            return;\n    }\n    throw new Error(`Invalid special attribute of ${specialName}. ${name}`);\n}\nfunction processSpecialClass(name, value, element) {\n    const names = name.split('.');\n    names.shift(); // remove class\n    // truthy\n    if (value) {\n        for (const name of names) {\n            paintContent.push(() => element.classList.add(name));\n        }\n        return;\n    }\n    // falsy\n    for (const name of names) {\n        paintContent.push(() => element.classList.remove(name));\n    }\n}\n","export function handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    return tagsWithProvider;\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(support, provider, memory = []) {\n    const subject = support.subject;\n    memory.push({\n        support,\n        renderCount: subject.renderCount,\n        provider,\n    });\n    const childTags = provider.children;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const child = childTags[index];\n        const cSubject = child.subject;\n        memory.push({\n            support: child,\n            renderCount: cSubject.renderCount,\n            provider,\n        });\n    }\n    return memory;\n}\n","import { isTagComponent } from \"../../isInstance.js\";\nimport { providersChangeCheck } from \"../../state/providersChangeCheck.function.js\";\nimport { checkRenderUp, isInlineHtml } from \"../../tag/render/renderSupport.function.js\";\nimport { ValueTypes } from \"../../tag/ValueTypes.enum.js\";\nexport function getUpTags(support, supports = []) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        supports.push(support);\n        return supports;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return getUpTags(ownerSupport, supports);\n    }\n    const newSupport = support; // global.newest as AnySupport\n    const isComponent = isTagComponent(newSupport.templater);\n    const tagJsType = support.templater.tagJsType;\n    const canContinueUp = ownerSupport && tagJsType !== ValueTypes.stateRender;\n    const continueUp = canContinueUp && (!isComponent || checkRenderUp(ownerSupport, newSupport.templater, newSupport));\n    const proSupports = providersChangeCheck(newSupport);\n    supports.push(...proSupports);\n    if (continueUp) {\n        getUpTags(ownerSupport, supports);\n        if (isComponent) {\n            supports.push(newSupport);\n        }\n        return supports; // more to keep going up, do not push this child for review\n    }\n    supports.push(newSupport);\n    return supports;\n}\n","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingReadyTag } from './renderExistingTag.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { PropWatches } from '../index.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from '../hasSupportChanged.function.js';\nexport function isInlineHtml(templater) {\n    return ValueTypes.templater === templater.tagJsType;\n}\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderSupport(support) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        global.blocked.push(support);\n        return support;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        const result = renderInlineHtml(ownerSupport, support);\n        return result;\n    }\n    global.locked = true;\n    const subject = support.subject;\n    if (global.blocked.length) {\n        support = global.blocked.pop();\n        global.blocked = [];\n    }\n    const tag = renderExistingReadyTag(global.newest, support, ownerSupport, subject);\n    delete global.locked;\n    return tag;\n}\nexport function renderInlineHtml(ownerSupport, support) {\n    const ownGlobal = ownerSupport.subject.global;\n    if (!ownGlobal || ownGlobal.deleted === true) {\n        return support;\n    }\n    // ??? new change\n    const newest = ownGlobal.newest || ownerSupport;\n    const result = renderSupport(newest);\n    return result;\n}\nexport function checkRenderUp(ownerSupport, templater, support) {\n    const selfPropChange = hasPropsToOwnerChanged(templater, support);\n    // render owner up first and that will cause me to re-render\n    if (ownerSupport && selfPropChange) {\n        return true;\n    }\n    return false;\n}\nfunction hasPropsToOwnerChanged(templater, support) {\n    const nowProps = templater.props;\n    const propsConfig = support.propsConfig;\n    const latestProps = propsConfig.latest;\n    const compareLen = hasPropLengthsChanged(nowProps, latestProps);\n    if (compareLen) {\n        return true;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(nowProps, latestProps);\n        case PropWatches.SHALLOW:\n            return shallowPropMatch(nowProps, latestProps);\n    }\n    return !deepEqual(nowProps, latestProps, deepCompareDepth);\n}\nexport function hasPropLengthsChanged(nowProps, latestProps) {\n    const nowLen = nowProps.length;\n    const latestLen = latestProps.length;\n    /*\n    const noLength = nowProps && nowLen === 0 && latestLen === 0\n  \n    if(noLength) {\n      return false\n    }\n    */\n    return nowLen !== latestLen;\n}\n","import { handleProviderChanges } from './handleProviderChanges.function.js';\nexport function providersChangeCheck(support) {\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (!providers) {\n        return [];\n    }\n    const prosWithChanges = [];\n    // reset clones\n    for (const provider of providers) {\n        const owner = provider.owner;\n        const hasChange = handleProviderChanges(owner, provider);\n        prosWithChanges.push(...hasChange.map(x => x.support));\n    }\n    return prosWithChanges;\n}\n","import { paint, painting } from '../../tag/paint.function.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nexport function renderTagUpdateArray(supports) {\n    ++painting.locks;\n    supports.forEach(mapTagUpdate);\n    --painting.locks;\n    paint();\n}\nfunction mapTagUpdate(support) {\n    const global = support.subject.global;\n    if (!global) {\n        return; // while rendering a parent, a child may have been deleted (pinbowl)\n    }\n    renderSupport(global.newest);\n}\n","// taggedjs-no-compile\n/** File largely responsible for reacting to element events, such as onclick */\nimport { isPromise } from '../../isInstance.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nimport { getUpTags } from './getUpTags.function.js';\nimport { renderTagUpdateArray } from './renderTagArray.function.js';\nimport { getSupportWithState } from './getSupportWithState.function.js';\nconst noData = 'no-data-ever';\nconst promiseNoData = 'promise-no-data-ever';\nexport function bindSubjectCallback(value, support) {\n    const global = support.subject.global;\n    // MAIN EVENT CALLBACK PROCESSOR\n    const subjectFunction = function (element, args) {\n        if (global.deleted === true) {\n            return;\n        }\n        // const newest = global.newest as AnySupport // || subjectFunction.support\n        return runTagCallback(subjectFunction.tagFunction, subjectFunction.support, // newest\n        subjectFunction.states, // newest\n        element, args);\n    };\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    const component = getSupportWithState(support);\n    subjectFunction.support = support;\n    // subjectFunction.otherSupport = component\n    const states = component.states; // ?.[0]\n    subjectFunction.states = states;\n    // subjectFunction.states = [...states]\n    return subjectFunction;\n}\nexport function runTagCallback(value, support, states, bindTo, args) {\n    // get actual component owner not just the html`` support\n    const component = getSupportWithState(support);\n    const subject = component.subject;\n    const global = subject.global; // tag.subject.global as TagGlobal\n    global.locked = true; // prevent another render from re-rendering this tag\n    // sync the new states to the old before the old does any processing\n    // syncStatesArray(component.subject.global.newest.states, states)\n    // ACTUAL CALLBACK TO ORIGINAL FUNCTION\n    const callbackResult = value.apply(bindTo, args);\n    // sync the old states to the new\n    // syncStatesArray(states, component.subject.global.newest.states)\n    delete global.locked;\n    const result = afterTagCallback(callbackResult, component);\n    return result;\n}\nexport function afterTagCallback(callbackResult, eventHandlerSupport) {\n    const global = eventHandlerSupport.subject.global; // tag.subject.global as SupportTagGlobal\n    return renderCallbackSupport(eventHandlerSupport, callbackResult, global);\n}\nfunction renderCallbackSupport(last, callbackResult, global) {\n    const tagsToUpdate = getUpTags(last);\n    renderTagUpdateArray(tagsToUpdate);\n    return checkAfterCallbackPromise(callbackResult, last, global);\n}\nexport function checkAfterCallbackPromise(callbackResult, last, global) {\n    if (isPromise(callbackResult)) {\n        const global0 = last.subject.global;\n        global0.locked = true;\n        return callbackResult.then(() => {\n            if (global.deleted === true) {\n                return promiseNoData; // tag was deleted during event processing\n            }\n            const global1 = last.subject.global;\n            delete global1.locked;\n            const tagsToUpdate = getUpTags(last);\n            renderTagUpdateArray(tagsToUpdate);\n            return promiseNoData;\n        });\n    }\n    return noData;\n}\nexport function runBlocked(tag) {\n    const global = tag.subject.global;\n    const blocked = global.blocked;\n    for (const block of blocked) {\n        const lastResult = renderSupport(block);\n        global.newest = lastResult;\n    }\n    global.blocked = [];\n    return global.newest;\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { processTagCallbackFun } from './processAttribute.function.js';\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nconst actions = ['init', 'destroy']; // oninit ondestroy\nexport function processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial) {\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    if (typeof (value) === BasicTypes.function) {\n        if (isSpecial && actions.includes(attrName)) {\n            specialAttribute(attrName, value, element, attrName, support, counts);\n            return;\n        }\n        return processTagCallbackFun(contextItem, value, support, attrName, element);\n    }\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    contextItem.isSpecial = isSpecial;\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial) {\n    if (isSpecial) {\n        return specialAttribute(attrName, value, element, isSpecial, support, counts);\n    }\n    howToSet(element, attrName, value);\n}\n","export function addSupportEventListener(support, eventName, element, callback) {\n    const elm = support.appElement;\n    // cast events that do not bubble up into ones that do\n    if (eventName === 'blur') {\n        eventName = 'focusout';\n    }\n    const replaceEventName = '_' + eventName;\n    // const replaceEventName = eventName\n    const global = support.subject.global;\n    const eventReg = global.events;\n    if (!eventReg[eventName]) {\n        const listener = function eventCallback(event) {\n            event.originalStopPropagation = event.stopPropagation;\n            bubbleEvent(event, replaceEventName, event.target);\n        };\n        eventReg[eventName] = listener;\n        elm.addEventListener(eventName, listener);\n    }\n    // attach to element but not as \"_click\" and \"_keyup\"\n    ;\n    element[replaceEventName] = callback;\n    element[eventName] = callback;\n}\nfunction bubbleEvent(event, replaceEventName, target) {\n    const callback = target[replaceEventName];\n    if (callback) {\n        let stopped = false;\n        event.stopPropagation = function () {\n            stopped = true;\n            event.originalStopPropagation.call(event);\n        };\n        callback(event);\n        if (event.defaultPrevented || stopped) {\n            return;\n        }\n    }\n    const parentNode = target.parentNode;\n    if (parentNode) {\n        bubbleEvent(event, replaceEventName, parentNode);\n    }\n}\n","import { addSupportEventListener } from './addSupportEventListener.function.js';\nexport function processAttributeFunction(element, newAttrValue, support, attrName) {\n    const fun = function (...args) {\n        return fun.tagFunction(element, args);\n    };\n    // access to original function\n    fun.tagFunction = newAttrValue;\n    fun.support = support;\n    addSupportEventListener(support.appSupport, attrName, element, // support.appSupport.appElement as Element,\n    fun);\n}\n","/** Looking for (class | style) followed by a period */\nexport function isSpecialAttr(attrName) {\n    if (attrName.startsWith('class.')) {\n        return 'class';\n    }\n    const specialAction = isSpecialAction(attrName);\n    if (specialAction !== false) {\n        return true;\n    }\n    if (attrName.startsWith('style.')) {\n        return 'style';\n    }\n    return false;\n}\nexport function isSpecialAction(attrName) {\n    switch (attrName) {\n        case 'autoselect':\n            return 'autoselect';\n        case 'autofocus':\n            return 'autofocus';\n        case 'oninit': // when read in compile process\n        case 'init': // when read in realtime\n            return 'oninit';\n        case 'ondestroy': // when read in compile process\n        case 'destroy': // when read in realtime\n            return 'destroy';\n    }\n    return false;\n}\n","import { processAttributeEmit } from '../interpolations/attributes/processAttribute.function.js';\nimport { updateNameOnlyAttrValue } from '../interpolations/attributes/updateAttribute.function.js';\nconst emptyCounts = { added: 0, removed: 0 };\nexport function processUpdateAttrContext(values, value, contextItem, ownerSupport) {\n    if (contextItem.isNameOnly) {\n        updateNameOnlyAttrValue(values, value, contextItem.value, contextItem.element, // global.element as Element,\n        ownerSupport, contextItem.howToSet, [], // Context, but we dont want to alter current\n        emptyCounts);\n        contextItem.value = value;\n        return;\n    }\n    const element = contextItem.element;\n    processAttributeEmit(value, contextItem.attrName, contextItem, element, ownerSupport, contextItem.howToSet, contextItem.isSpecial, emptyCounts);\n    contextItem.value = value;\n    return;\n}\n","// taggedjs-no-compile\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { isNoDisplayValue, processNameOnlyAttrValue } from './processAttribute.function.js';\nexport function updateNameOnlyAttrValue(values, attrValue, lastValue, element, ownerSupport, howToSet, context, counts) {\n    // check to remove previous attribute(s)\n    if (lastValue) {\n        if (isNoDisplayValue(attrValue)) {\n            element.removeAttribute(lastValue);\n            return;\n        }\n        if (typeof (lastValue) === BasicTypes.object) {\n            const isObStill = typeof (attrValue) === BasicTypes.object;\n            if (isObStill) {\n                for (const name in lastValue) {\n                    // if((attrValue as any)[name]) {\n                    if (name in attrValue) {\n                        continue;\n                    }\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n            else {\n                for (const name in lastValue) {\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n        }\n    }\n    processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts);\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { isFunction, isObject, isSubjectInstance } from '../../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nimport { BasicTypes, ValueTypes, empty } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { processDynamicNameValueAttribute, processNonDynamicAttr } from './processNameValueAttribute.function.js';\nimport { addOneContext, checkSimpleValueChange, deleteSimpleValue } from '../../tag/index.js';\nimport { processAttributeFunction } from './processAttributeCallback.function.js';\nimport { isSpecialAttr } from './isSpecialAttribute.function.js';\nimport { processUpdateAttrContext } from '../../tag/processUpdateAttrContext.function.js';\nimport { blankHandler } from '../optimizers/attachDomElements.function.js';\n/** MAIN FUNCTION. Sets attribute value, subscribes to value updates  */\nexport function processAttribute(values, attrName, element, support, howToSet, //  = howToSetInputValue\ncontext, isSpecial, counts, value) {\n    const nameVar = getTagJsVar(attrName);\n    const isNameVar = nameVar >= 0;\n    if (isNameVar) {\n        const value = values[nameVar];\n        const contextItem = addOneContext(value, context, true);\n        contextItem.isAttr = true;\n        contextItem.element = element;\n        contextItem.howToSet = howToSet;\n        contextItem.isNameOnly = true;\n        // how to process value updates\n        contextItem.handler = (newValue, newValues) => processUpdateAttrContext(newValues, newValue, contextItem, support);\n        processNameOnlyAttrValue(values, value, element, support, howToSet, context, counts);\n        return;\n    }\n    const valueVar = getTagJsVar(value);\n    if (valueVar >= 0) {\n        const value = values[valueVar];\n        const contextItem = {\n            isAttr: true,\n            element,\n            attrName: attrName,\n            checkValueChange: checkSimpleValueChange,\n            delete: deleteSimpleValue,\n            withinOwnerElement: true,\n        };\n        context.push(contextItem);\n        const isSubject = isSubjectInstance(contextItem.value);\n        if (isSubject) {\n            return processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        }\n        contextItem.handler = (newValue, newValues) => processUpdateAttrContext(newValues, newValue, contextItem, support);\n        /*\n        processNameOnlyAttrValue(\n          values,\n          newValue as any,\n          element as Element,\n          support,\n          howToSet as HowToSet,\n          context,\n          counts,\n        )\n        */\n        processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial);\n        contextItem.value = value;\n        return;\n    }\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts) {\n    if (isNoDisplayValue(attrValue)) {\n        return;\n    }\n    // process an object of attributes ${{class:'something, checked:true}}\n    if (typeof attrValue === BasicTypes.object) {\n        for (const name in attrValue) {\n            const value = attrValue[name];\n            processAttribute(values, name, element, ownerSupport, howToSet, context, isSpecialAttr(name), // only object variables are evaluated for is special attr\n            counts, value);\n        }\n        return;\n    }\n    // regular attributes\n    if (attrValue.length === 0) {\n        return; // ignore, do not set at this time\n    }\n    howToSet(element, attrValue, empty);\n}\n/** Processor for flat attributes and object attributes */\nfunction processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts) {\n    if (isSpecial) {\n        paintContent.push(function paintContent() {\n            element.removeAttribute(attrName);\n        });\n    }\n    const contextValueSubject = contextItem.value;\n    if (isSubjectInstance(contextValueSubject)) {\n        contextItem.handler = blankHandler;\n        const callback = function processAttrCallback(newAttrValue) {\n            processAttributeEmit(newAttrValue, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        const global = contextItem.global;\n        const subs = global.subscriptions = global.subscriptions || [];\n        subs.push(sub);\n    }\n    processAttributeEmit(contextItem.value, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n    return;\n}\nexport function processAttributeEmit(newAttrValue, attrName, subject, element, support, howToSet, isSpecial, counts) {\n    // should the function be wrapped so every time its called we re-render?\n    if (isFunction(newAttrValue)) {\n        return callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processAttributeSubjectValue(newAttrValue, element, attrName, special, howToSet, support, counts) {\n    // process adding/removing style. class. (false means remove)\n    if (special !== false) {\n        specialAttribute(attrName, newAttrValue, element, special, // string name of special\n        support, counts);\n        return;\n    }\n    switch (newAttrValue) {\n        case undefined:\n        case false:\n        case null:\n            paintContent.push(function paintContentPush() {\n                element.removeAttribute(attrName);\n            });\n            return;\n    }\n    if (isFunction(newAttrValue)) {\n        return processAttributeFunction(element, newAttrValue, support, attrName);\n    }\n    // value is 0\n    howToSet(element, attrName, newAttrValue);\n}\nfunction callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts) {\n    const wrapper = support.templater.wrapper;\n    const tagJsType = wrapper?.tagJsType || wrapper?.original?.tagJsType;\n    const oneRender = tagJsType === ValueTypes.renderOnce;\n    if (!oneRender) {\n        return processTagCallbackFun(subject, newAttrValue, support, attrName, element);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processTagCallbackFun(subject, newAttrValue, support, attrName, element) {\n    // tag has state and will need all functions wrapped to cause re-renders\n    newAttrValue = bindSubjectCallback(newAttrValue, support);\n    return processAttributeFunction(element, newAttrValue, support, attrName);\n}\nfunction getTagJsVar(attrPart) {\n    if (isObject(attrPart) && 'tagJsVar' in attrPart)\n        return attrPart.tagJsVar;\n    return -1;\n    // return (attrPart as TagVarIdNum)?.tagJsVar || -1\n}\nexport function isNoDisplayValue(attrValue) {\n    return undefined === attrValue || null === attrValue || false === attrValue;\n}\n","// taggedjs-no-compile\nimport { processFirstSubjectValue } from \"../../tag/update/processFirstSubjectValue.function.js\";\nimport { howToSetFirstInputValue } from \"../attributes/howToSetInputValue.function.js\";\nimport { paintAppends, paintInsertBefores } from \"../../tag/paint.function.js\";\nimport { processAttribute } from \"../attributes/processAttribute.function.js\";\nimport { addOneContext } from \"../../tag/index.js\";\nimport { empty } from \"../../tag/ValueTypes.enum.js\";\nimport { updateExistingValue } from \"../../tag/update/updateExistingValue.function.js\";\nexport const blankHandler = () => undefined;\nconst someDiv = (typeof document === 'object' && document.createElement('div')); // used for content cleaning\nexport function attachDomElements(nodes, values, support, counts, // used for animation stagger computing\ncontext, depth, // used to know if dynamic variables live within parent owner tag/support\nappendTo, insertBefore, subs = []) {\n    const dom = [];\n    if (appendTo && insertBefore === undefined) {\n        insertBefore = document.createTextNode(empty);\n        paintAppends.push({\n            element: insertBefore,\n            relative: appendTo,\n        });\n        appendTo = undefined;\n    }\n    for (let index = 0; index < nodes.length; ++index) {\n        const node = nodes[index];\n        const value = node.v;\n        const isNum = !isNaN(value);\n        if (isNum) {\n            const index = context.length;\n            const value = values[index];\n            attachDynamicDom(value, index, context, support, subs, counts, depth, appendTo, insertBefore);\n            continue;\n        }\n        const newNode = {}; // DomObjectText\n        dom.push(newNode);\n        if (node.nn === 'text') {\n            attachDomText(newNode, node, appendTo, insertBefore);\n            continue;\n        }\n        // one single html element\n        const domElement = attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore);\n        if (node.ch) {\n            newNode.ch = attachDomElements(node.ch, values, support, counts, context, depth + 1, domElement, insertBefore, subs).dom;\n        }\n    }\n    return { subs, dom, context };\n}\nfunction attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore) {\n    const domElement = newNode.domElement = document.createElement(node.nn);\n    // attributes that may effect style, come first for performance\n    if (node.at) {\n        node.at.forEach(attr => {\n            const name = attr[0];\n            const value = attr[1];\n            const isSpecial = attr[2] || false;\n            processAttribute(values, name, domElement, support, \n            // howToSetInputValue, // maybe more performant for updates but not first renders\n            howToSetFirstInputValue, context, isSpecial, counts, value);\n        });\n    }\n    if (appendTo) {\n        paintAppends.push({\n            element: domElement,\n            relative: appendTo,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: domElement,\n            relative: insertBefore,\n        });\n    }\n    return domElement;\n}\nfunction attachDomText(newNode, node, owner, insertBefore) {\n    const textNode = newNode;\n    const string = textNode.tc = node.tc;\n    someDiv.innerHTML = string;\n    const domElement = textNode.domElement = document.createTextNode(someDiv.innerText);\n    if (owner) {\n        paintAppends.push({\n            element: domElement,\n            relative: owner,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: domElement,\n            relative: insertBefore,\n        });\n    }\n}\nfunction attachDynamicDom(value, index, context, support, subs, counts, // used for animation stagger computing\ndepth, // used to indicate if variable lives within an owner's element\nappendTo, insertBefore) {\n    const marker = document.createTextNode(empty);\n    const isWithinOwnerElement = depth > 0;\n    const contextItem = addOneContext(value, context, isWithinOwnerElement);\n    contextItem.placeholder = marker;\n    if (appendTo) {\n        paintAppends.push({\n            relative: appendTo,\n            element: marker,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            relative: insertBefore,\n            element: marker,\n        });\n    }\n    // how to handle value updates\n    contextItem.handler = (newValue, _newValues, newSupport, newContextItem) => updateExistingValue(newContextItem, newValue, newSupport);\n    const global = support.subject.global;\n    global.locked = true;\n    processFirstSubjectValue(value, contextItem, support, counts, appendTo, insertBefore);\n    const global2 = support.subject.global;\n    delete global2.locked;\n    contextItem.value = value;\n    return;\n}\n","import { attachDomElements } from '../interpolations/optimizers/attachDomElements.function.js';\nimport { checkSimpleValueChange, deleteSimpleValue, destorySupportByContextItem } from './index.js';\nimport { getDomMeta } from './domMetaCollector.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { painting } from './paint.function.js';\n/** Function that kicks off actually putting tags down as HTML elements */\nexport function buildBeforeElement(support, counts, appendTo, insertBefore) {\n    const subject = support.subject;\n    subject.delete = destorySupportByContextItem;\n    const global = subject.global;\n    global.oldest = support;\n    global.newest = support;\n    ++painting.locks;\n    const result = attachHtmlDomMeta(support, counts, appendTo, insertBefore);\n    global.htmlDomMeta = result.dom;\n    --painting.locks;\n    // ++global.renderCount\n    // return fragment\n    return result;\n}\nfunction attachHtmlDomMeta(support, counts, appendTo, insertBefore) {\n    const domMeta = loadDomMeta(support);\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    const context = [];\n    const global = support.subject.global;\n    global.context = context;\n    const result = attachDomElements(domMeta, values, support, counts, context, 0, appendTo, insertBefore);\n    return result;\n}\nfunction loadDomMeta(support) {\n    const templater = support.templater;\n    const thisTag = templater.tag; // || templater\n    if (thisTag.tagJsType === ValueTypes.dom) {\n        return thisTag.dom;\n    }\n    const strings = thisTag.strings;\n    return getDomMeta(strings, thisTag.values);\n}\nexport function addOneContext(value, context, withinOwnerElement) {\n    const contextItem = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        delete: deleteSimpleValue,\n        withinOwnerElement,\n    };\n    context.push(contextItem);\n    return contextItem;\n}\n","import { isInlineHtml, renderInlineHtml } from './tag/render/renderSupport.function.js';\nimport { renderExistingReadyTag } from './tag/render/renderExistingTag.function.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nimport { deepCompareDepth } from './tag/hasSupportChanged.function.js';\nimport { isArray, isStaticTag } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nimport { setUseMemory } from './state/index.js';\nexport function castProps(props, newSupport, depth) {\n    return props.map(prop => alterProp(prop, newSupport.ownerSupport, newSupport, depth));\n}\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, newSupport, depth) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, newSupport, depth);\n}\nexport function checkProp(value, ownerSupport, newSupport, depth) {\n    if (!value) {\n        return value;\n    }\n    if (value.tagJsType) {\n        return value;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        return getPropWrap(value, ownerSupport);\n    }\n    if (depth === deepCompareDepth) {\n        return value;\n    }\n    const skip = isSkipPropValue(value);\n    if (skip) {\n        return value; // no children to crawl through\n    }\n    if (isArray(value)) {\n        return checkArrayProp(value, newSupport, ownerSupport, depth);\n    }\n    return checkObjectProp(value, newSupport, ownerSupport, depth);\n}\nfunction checkArrayProp(value, newSupport, ownerSupport, depth) {\n    for (let index = value.length - 1; index >= 0; --index) {\n        const subValue = value[index];\n        value[index] = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        if (typeof (subValue) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, index, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction checkObjectProp(value, newSupport, ownerSupport, depth) {\n    const keys = Object.keys(value);\n    for (const name of keys) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        const newSubValue = value[name];\n        if (newSubValue === result) {\n            continue;\n        }\n        const getset = Object.getOwnPropertyDescriptor(value, name);\n        const hasSetter = getset?.get || getset?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n        if (typeof (result) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, name, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction afterCheckProp(depth, index, originalValue, newProp, newSupport) {\n    // restore object to have original function on destroy\n    if (depth > 0) {\n        const global = newSupport.subject.global;\n        newProp[index].subscription = global.destroy$.toCallback(function alterCheckProcessor() {\n            newProp[index] = originalValue;\n        });\n    }\n}\nexport function getPropWrap(value, ownerSupport) {\n    const already = value.mem;\n    // already previously converted by a parent?\n    if (already) {\n        return value;\n    }\n    const wrap = function wrapRunner(...args) {\n        return wrap.toCall(...args);\n    }; // what gets called can switch over parent state changes\n    wrap.original = value;\n    wrap.mem = value;\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = function toCallRunner(...args) {\n        return callbackPropOwner(wrap.mem, args, ownerSupport);\n    };\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport) {\n    const global = ownerSupport.subject.global;\n    const newest = global?.newest || ownerSupport;\n    const supportInCycle = getSupportInCycle();\n    const noCycle = supportInCycle === undefined;\n    const callbackResult = toCall(...callWith);\n    const run = function propCallbackProcessor() {\n        const global = newest.subject.global;\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            const allMatched = global.locked === true;\n            if (allMatched) {\n                return callbackResult; // owner did not change\n            }\n        }\n        safeRenderSupport(newest, ownerSupport);\n        return callbackResult;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUseMemory.tagClosed$.toCallback(run);\n    return callbackResult;\n}\nexport function isSkipPropValue(value) {\n    return typeof (value) !== BasicTypes.object || !value || value.tagJsType;\n}\nexport function safeRenderSupport(newest, ownerSupport) {\n    const subject = newest.subject;\n    const isInline = isInlineHtml(newest.templater);\n    if (isInline) {\n        const result = renderInlineHtml(ownerSupport, newest);\n        return result;\n    }\n    const global = subject.global;\n    global.locked = true;\n    renderExistingReadyTag(global.newest, newest, ownerSupport, subject);\n    delete global.locked;\n}\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nexport function executeWrap(templater, result, useSupport, castedProps) {\n    const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n    const stateless = templater.tagJsType === ValueTypes.stateRender;\n    const config = setUseMemory.stateConfig;\n    config.support = useSupport;\n    let tag;\n    if (stateless) {\n        tag = templater();\n    }\n    else {\n        tag = originalFunction(...castedProps);\n        // CALL ORIGINAL COMPONENT FUNCTION\n        if (typeof (tag) === BasicTypes.function) {\n            tag = tag();\n        }\n    }\n    tag.templater = templater;\n    templater.tag = tag;\n    useSupport.state = config.stateArray;\n    useSupport.states = config.states;\n    // useSupport.states = [...config.states]\n    return useSupport;\n}\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nexport function isLikeTags(support0, // new\nsupport1) {\n    const templater0 = support0.templater;\n    const templater1 = support1.templater;\n    const tag0 = templater0?.tag || support0;\n    const tag1 = templater1.tag; // || (support1 as any)\n    if (templater0?.tagJsType === ValueTypes.stateRender) {\n        return templater0.dom === templater1.dom;\n    }\n    switch (tag0.tagJsType) {\n        case ValueTypes.dom: {\n            if (tag1?.tagJsType !== ValueTypes.dom) {\n                return false; // tag0 is not even same type\n            }\n            return isLikeDomTags(tag0, tag1);\n        }\n        case ValueTypes.tag: {\n            const like = isLikeStringTags(tag0, tag1, support0, support1);\n            return like;\n        }\n    }\n    throw new Error(`unknown tagJsType of ${tag0.tagJsType}`);\n}\n// used when compiler was used\nexport function isLikeDomTags(tag0, tag1) {\n    const domMeta0 = tag0.dom;\n    const domMeta1 = tag1.dom;\n    return domMeta0 === domMeta1;\n}\n// used for no compiling\nfunction isLikeStringTags(tag0, tag1, support0, // new\nsupport1) {\n    const strings0 = tag0.strings;\n    const strings1 = tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index].length === string.length // performance, just compare length of strings // TODO: Document this\n    );\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = support0.templater.values || tag0.values;\n    const values1 = support1.templater.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = typeof (value) === BasicTypes.function && typeof (compareTo) === BasicTypes.function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n","import { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { tryUpdateToTag } from './update/updateExistingValue.function.js';\nimport { paint, paintAfters } from './paint.function.js';\nexport function checkTagValueChange(newValue, contextItem) {\n    const global = contextItem.global;\n    const lastSupport = global?.newest;\n    const isValueTag = isStaticTag(newValue);\n    const newTag = newValue;\n    if (isValueTag) {\n        // its a different tag now\n        const likeTags = isLikeTags(newTag, lastSupport);\n        if (!likeTags) {\n            destroySupport(lastSupport, global);\n            getNewGlobal(contextItem);\n            return 7; // 'tag-swap'\n        }\n        return false;\n    }\n    const isTag = newValue?.tagJsType;\n    if (isTag) {\n        const support = global.newest;\n        const ownerSupport = support.ownerSupport;\n        const result = tryUpdateToTag(contextItem, newValue, ownerSupport);\n        return result === true ? -1 : false;\n    }\n    // A subject could have emitted twice in one render cycle\n    if (lastSupport.subject.renderCount === 0) {\n        delete contextItem.global;\n        contextItem.renderCount = 0;\n        paintAfters.push(() => {\n            destroySupport(lastSupport, global);\n            paintAfters.shift(); // prevent endless recursion\n            paint();\n        });\n        return 8; // never rendered\n    }\n    destorySupportByContextItem(contextItem);\n    return 8; // 'no-longer-tag'\n}\nexport function destorySupportByContextItem(contextItem) {\n    const global = contextItem.global;\n    const lastSupport = global?.newest;\n    // destroy old component, value is not a component\n    destroySupport(lastSupport, global);\n    delete contextItem.global;\n    contextItem.renderCount = 0;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends, paintInsertBefores } from '../paint.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nexport function processNewSubjectTag(templater, subject, // could be tag via result.tag\nownerSupport, // owner\ncounts, appendTo, insertBefore) {\n    subject.checkValueChange = checkTagValueChange;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    support.ownerSupport = ownerSupport;\n    const result = buildBeforeElement(support, counts, appendTo, appendTo ? undefined : insertBefore);\n    for (const dom of result.dom) {\n        if (dom.marker) {\n            if (appendTo) {\n                paintAppends.push({\n                    element: dom.marker,\n                    relative: appendTo, // ph.parentNode as Element,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: dom.marker,\n                    relative: insertBefore, // ph.parentNode as Element,\n                });\n            }\n        }\n        if (dom.domElement) {\n            /*\n            paintAppends.push({\n              element: dom.domElement,\n              relative: appendTo as Element, // ph.parentNode as Element,\n            })\n            */\n            if (appendTo) {\n                paintAppends.push({\n                    element: dom.domElement,\n                    relative: appendTo, // ph.parentNode as Element,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: dom.domElement,\n                    relative: insertBefore, // ph.parentNode as Element,\n                });\n            }\n        }\n    }\n    let index = -1;\n    const length = result.subs.length - 1;\n    //++painting.locks\n    while (index++ < length) {\n        const sub = result.subs[index];\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","import { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { processTag } from './processTag.function.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processTagInit(value, contextItem, ownerSupport, counts, appendTo, insertBefore) {\n    contextItem.checkValueChange = checkTagValueChange;\n    if (appendTo) {\n        return processNewSubjectTag(value, contextItem, ownerSupport, counts, appendTo, insertBefore);\n    }\n    return processTag(ownerSupport, contextItem, counts);\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nimport { processTagInit } from './update/processTagInit.function.js';\nexport function getTemplaterResult(propWatch, props) {\n    const templater = {\n        tagJsType: ValueTypes.templater,\n        processInit: processTagInit,\n        propWatch,\n        props,\n        key: function keyTemplate(arrayValue) {\n            templater.arrayValue = arrayValue;\n            return templater;\n        }\n    };\n    return templater;\n}\n","export const tags = [];\n","import { getTemplaterResult } from '../getTemplaterResult.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nimport { PropWatches } from '../tag.function.js';\nexport function oneRenderToSupport(wrapper, subject, ownerSupport) {\n    const templater = getTemplaterResult(PropWatches.DEEP);\n    templater.tagJsType = wrapper.tagJsType;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    function wrap() {\n        templater.tag = tag || wrapper();\n        return support;\n    }\n    templater.wrapper = wrap;\n    wrap.tagJsType = wrapper.tagJsType;\n    wrap.original = wrapper.original || wrapper;\n    return support;\n}\n","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n","import { StateMismatchError } from '../errors.js';\nexport function checkStateMismatch(config, support) {\n    const rearray = config.rearray;\n    if (rearray.length && rearray.length !== config.stateArray.length) {\n        throwStateMismatch(rearray, support, config);\n    }\n}\nconst hint = 'State tracking requires same number of state calls on every render. This error typically occurs when a state call is only reachable behind a condition. Also, wrapping tags that have state, with tag(), often helps when tag is only reachable by a condition.';\nfunction throwStateMismatch(rearray, support, config) {\n    const message = `Saved states between renders are inconsistent. Expected ${rearray.length} states got ${config.stateArray.length}.`;\n    const wrapper = support.templater?.wrapper;\n    let tagFunction = wrapper;\n    if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    else if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    const details = {\n        oldStates: config.stateArray,\n        newStates: config.rearray,\n        tagFunction,\n        templater: support.templater,\n    };\n    const error = new StateMismatchError(message, details);\n    console.error(hint, details);\n    throw error;\n}\n","import { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkStateMismatch } from './checkStateMismatch.function.js';\n/** Compares states of previous renders\n * @property support - The workflow that supports a single tag\n * @property ownerSupport - undefined when \"support\" is the app element\n */\nexport function runAfterRender(support, ownerSupport) {\n    const subject = support.subject;\n    ++subject.renderCount;\n    const config = setUseMemory.stateConfig;\n    support.state = config.stateArray;\n    support.states = config.states;\n    subject.global.newest = support;\n    checkStateMismatch(config, support);\n    delete config.prevSupport; // only this one really needed\n    delete config.support;\n    delete config.stateArray;\n    delete config.states;\n    setUseMemory.tagClosed$.next(ownerSupport);\n}\n","import { executeWrap } from '../executeWrap.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { runAfterRender } from '../afterRender.function.js';\nimport { initState, reState } from '../../state/state.utils.js';\nimport { setUseMemory } from '../../state/setUseMemory.object.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function renderTagOnly(newSupport, prevSupport, // causes restate\nsubject, ownerSupport) {\n    const prevState = prevSupport?.state;\n    const config = setUseMemory.stateConfig;\n    if (prevState) {\n        reState(newSupport, prevSupport, setUseMemory.stateConfig, prevState, prevSupport.states);\n    }\n    else {\n        initState(newSupport, config);\n    }\n    const templater = newSupport.templater;\n    let reSupport;\n    // NEW TAG CREATED HERE\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = templater; // .wrapper as any// || {original: templater} as any\n        reSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject);\n        executeWrap(templater, result, reSupport);\n    }\n    else {\n        // functions wrapped in tag()\n        const wrapper = templater.wrapper;\n        // calls the function returned from getTagWrap()\n        reSupport = wrapper(newSupport, subject, prevSupport);\n    }\n    runAfterRender(reSupport, ownerSupport);\n    return reSupport;\n}\n","import { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { oneRenderToSupport } from './oneRenderToSupport.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processRenderOnceInit(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    getNewGlobal(contextItem);\n    const support = oneRenderToSupport(value, contextItem, ownerSupport);\n    renderTagOnly(support, undefined, contextItem, ownerSupport);\n    const result = processNewSubjectTag(support.templater, contextItem, ownerSupport, counts, appendTo, insertBefore);\n    contextItem.checkValueChange = checkTagValueChange;\n    return result;\n}\n","import { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { processFirstSubjectComponent, processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nexport function processTagComponentInit(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo) {\n    getNewGlobal(contextItem);\n    contextItem.checkValueChange = checkTagValueChange;\n    if (appendTo) {\n        const processResult = processFirstSubjectComponent(value, contextItem, ownerSupport, counts, appendTo);\n        return processResult;\n    }\n    const processResult = processReplacementComponent(value, contextItem, ownerSupport, counts);\n    return processResult;\n}\n","import { processFirstTagResult, processReplaceTagResult } from './processTagResult.function.js';\nimport { renderWithSupport } from '../render/renderWithSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getCastedProps } from '../getTagWrap.function.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processReplacementComponent(templater, subject, ownerSupport, counts) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag\n    subject, ownerSupport);\n    processReplaceTagResult(support, counts, subject);\n    return support;\n}\nexport function processFirstSubjectComponent(templater, subject, ownerSupport, counts, appendTo) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag   \n    subject, ownerSupport);\n    processFirstTagResult(support, counts, appendTo);\n    return support;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { checkTagValueChange } from '../index.js';\nexport function processReplaceTagResult(support, counts, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const ph = contextItem.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, // element for append child\n    ph);\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function processFirstTagResult(support, counts, appendTo) {\n    let appendIndex = paintAppends.length;\n    const result = buildBeforeElement(support, counts, appendTo, undefined);\n    for (const dom of result.dom) {\n        if (dom.domElement) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.domElement,\n                relative: appendTo,\n            });\n        }\n        if (dom.marker) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.marker,\n                relative: appendTo,\n            });\n        }\n    }\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","// taggedjs-no-compile\nimport { setUseMemory } from '../state/index.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { processRenderOnceInit } from './update/processRenderOnceInit.function.js';\nimport { processTagComponentInit } from './update/processTagComponentInit.function.js';\nlet tagCount = 0;\n/** How to handle checking for prop changes aka argument changes */\nexport var PropWatches;\n(function (PropWatches) {\n    PropWatches[\"DEEP\"] = \"deep\";\n    /** checks all values up to 2 levels deep */\n    PropWatches[\"SHALLOW\"] = \"shallow\";\n    PropWatches[\"NONE\"] = \"none\";\n    PropWatches[\"IMMUTABLE\"] = \"immutable\";\n})(PropWatches || (PropWatches = {}));\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent, propWatch = PropWatches.SHALLOW) {\n    /** function developer triggers */\n    const parentWrap = function tagWrapper(...props) {\n        const templater = getTemplaterResult(propWatch, props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        templater.processInit = processTagComponentInit;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        innerTagWrap.original = tagComponent;\n        /*\n            if(!innerTagWrap.parentWrap) {\n              innerTagWrap.parentWrap = parentWrap as TagWrapper<unknown>\n            }\n        */\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }; // we override the function provided and pretend original is what's returned\n    const tag = tagComponent;\n    parentWrap.original = tagComponent;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUseMemory;\n    tag.ValueTypes = ValueTypes;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\ntag.renderOnce = renderOnceFn;\nfunction renderOnceFn() {\n    throw new Error('Do not call tag.renderOnce as a function but instead set it as: `(props) => tag.renderOnce = () => html`` `');\n}\n/** Used to create variable scoping when calling a function that lives within a prop container function */\nfunction tagUseFn() {\n    throw new Error('Do not call tag.use as a function but instead set it as: `(props) => tag.use = (use) => html`` `');\n}\n/** @deprecated use tag.use() instead */\n;\ntag.state = tagUseFn;\ntag.use = tagUseFn;\ntag.route = routeFn;\nfunction routeFn(_routeProps) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n}\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\n;\ntag.app = function (_routeTag) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\ntag.deepPropWatch = tag;\ntag.immutableProps = function immutableProps(tagComponent) {\n    return tag(tagComponent, PropWatches.IMMUTABLE);\n};\ntag.watchProps = function watchProps(tagComponent) {\n    return tag(tagComponent, PropWatches.SHALLOW);\n};\n/* BELOW: Cast functions into setters with no getters */\nObject.defineProperty(tag, 'renderOnce', {\n    set(oneRenderFunction) {\n        ;\n        oneRenderFunction.tagJsType = ValueTypes.renderOnce;\n        oneRenderFunction.processInit = processRenderOnceInit;\n    },\n});\n// TODO: deprecate this in favor of tag.use\nObject.defineProperty(tag, 'state', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n        renderFunction.processInit = processTagComponentInit;\n    },\n});\nObject.defineProperty(tag, 'use', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n        renderFunction.processInit = processTagComponentInit;\n    },\n});\n","import { castProps } from '../alterProp.function.js';\nimport { syncFunctionProps } from './update/updateExistingTagComponent.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { getSupport } from './getSupport.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    // this function gets called by taggedjs\n    const wrapper = function tagFunWrap(newSupport, subject, lastSupport // subject.global.newest\n    ) {\n        // wrap any prop functions that are passed in\n        const castedProps = getCastedProps(templater, newSupport, lastSupport);\n        const ownerSupport = newSupport.ownerSupport;\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject, castedProps);\n        return executeWrap(templater, result, useSupport, castedProps);\n    };\n    return wrapper;\n}\nexport function getCastedProps(templater, newSupport, lastSupport) {\n    const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n    const props = templater.props;\n    const propsConfig = newSupport.propsConfig;\n    // When defined, this must be an update where my new props have already been made for me\n    let preCastedProps = propsConfig.castProps;\n    const lastPropsConfig = lastSupport?.propsConfig;\n    const lastCastProps = lastPropsConfig?.castProps;\n    if (lastCastProps) {\n        propsConfig.castProps = lastCastProps;\n        preCastedProps = syncFunctionProps(newSupport, lastSupport, lastSupport.ownerSupport, props, maxDepth);\n    }\n    const castedProps = preCastedProps || castProps(props, newSupport, 0);\n    return castedProps;\n}\n","import { isSkipPropValue } from '../../alterProp.function.js';\nimport { BasicTypes } from '../ValueTypes.enum.js';\nimport { isArray } from '../../isInstance.js';\nimport { updateExistingObject } from './updateExistingObject.function.js';\nimport { updateExistingArray } from './updateExistingArray.function.js';\nexport function syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth) {\n    if (priorProp === undefined || priorProp === null) {\n        return prop;\n    }\n    // prevent infinite recursion\n    if (depth > maxDepth) {\n        return prop;\n    }\n    if (typeof (priorProp) === BasicTypes.function) {\n        // the prop i am receiving, is already being monitored/controlled by another parent\n        if (prop.mem) {\n            priorProp.mem = prop.mem;\n            return prop;\n        }\n        priorProp.mem = prop;\n        return priorProp;\n    }\n    if (isSkipPropValue(prop)) {\n        return prop; // no children to crawl through\n    }\n    if (isArray(prop)) {\n        return updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n    }\n    return updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n}\n","import { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    for (let index = prop.length - 1; index >= 0; --index) {\n        const x = prop[index];\n        const oldProp = priorProp[index];\n        prop[index] = syncPriorPropFunction(oldProp, x, newSupport, ownerSupport, maxDepth, depth + 1);\n    }\n    return prop;\n}\n","import { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    const keys = Object.keys(prop);\n    for (const name of keys) {\n        const subValue = prop[name];\n        const oldProp = priorProp[name];\n        const result = syncPriorPropFunction(oldProp, subValue, newSupport, ownerSupport, maxDepth, depth + 1);\n        if (subValue === result) {\n            continue;\n        }\n        const hasSetter = Object.getOwnPropertyDescriptor(prop, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        prop[name] = result;\n    }\n    return prop;\n}\n","import { deepCompareDepth, hasSupportChanged, shallowCompareDepth } from '../hasSupportChanged.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { castProps } from '../../alterProp.function.js';\nimport { renderSupport } from '../render/renderSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { destroySupport } from '../destroySupport.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { PropWatches } from '../tag.function.js';\nimport { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingTagComponent(ownerSupport, support, // lastest\nsubject) {\n    const global = subject.global;\n    const lastSupport = global.newest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = support.templater.wrapper;\n    let isSameTag = false;\n    const tagJsType = support.templater.tagJsType;\n    const skipComparing = ValueTypes.stateRender === tagJsType || ValueTypes.renderOnce === tagJsType;\n    if (skipComparing) {\n        isSameTag = support.templater.tagJsType === ValueTypes.renderOnce || isLikeTags(lastSupport, support);\n    }\n    else if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.original;\n        const newFunction = newWrapper.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = support.templater;\n    if (!isSameTag) {\n        swapTags(subject, templater, ownerSupport);\n        return;\n    }\n    const hasChanged = skipComparing || hasSupportChanged(lastSupport, templater);\n    // everyhing has matched, no display needs updating.\n    if (!hasChanged) {\n        const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n        syncSupports(templater, support, lastSupport, ownerSupport, maxDepth);\n        return;\n    }\n    if (global.locked) {\n        global.blocked.push(support);\n        return;\n    }\n    renderSupport(support);\n    ++subject.renderCount;\n    return;\n}\nexport function syncFunctionProps(newSupport, lastSupport, ownerSupport, newPropsArray, // templater.props\nmaxDepth, depth = -1) {\n    if (maxDepth === 0) {\n        throw new Error('before here');\n    }\n    const global = lastSupport.subject.global;\n    const newest = global.newest;\n    if (!newest) {\n        const castedProps = castProps(newPropsArray, newSupport, depth);\n        newPropsArray.push(...castedProps);\n        const propsConfig = newSupport.propsConfig;\n        propsConfig.castProps = castedProps;\n        return newPropsArray;\n    }\n    lastSupport = newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.castProps;\n    const newArray = [];\n    for (let index = 0; index < newPropsArray.length; ++index) {\n        const prop = newPropsArray[index];\n        const priorProp = priorPropsArray[index];\n        const newValue = syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth + 1);\n        newArray.push(newValue);\n    }\n    const newPropsConfig = newSupport.propsConfig;\n    newPropsConfig.castProps = newArray;\n    return newArray;\n}\nexport function moveProviders(lastSupport, newSupport) {\n    const global = lastSupport.subject.global;\n    let pIndex = -1;\n    const providers = global.providers = global.providers || [];\n    const pLen = providers.length - 1;\n    while (pIndex++ < pLen) {\n        const provider = providers[pIndex];\n        let index = -1;\n        const pcLen = provider.children.length - 1;\n        while (index++ < pcLen) {\n            const child = provider.children[index];\n            const wasSameGlobals = global === child.subject.global;\n            if (wasSameGlobals) {\n                provider.children.splice(index, 1);\n                provider.children.push(newSupport);\n                return;\n            }\n        }\n    }\n}\n/** Exchanges entire propsConfigs */\nfunction syncSupports(templater, support, lastSupport, ownerSupport, maxDepth) {\n    // update function refs to use latest references\n    const newProps = templater.props;\n    const castedProps = syncFunctionProps(support, lastSupport, ownerSupport, newProps, maxDepth);\n    const propsConfig = support.propsConfig;\n    // When new support actually makes call to real function, use these pre casted props\n    propsConfig.castProps = castedProps;\n    const lastPropsConfig = lastSupport.propsConfig;\n    // update support to think it has different cloned props\n    lastPropsConfig.latest = propsConfig.latest;\n    return lastSupport; // its the same tag component  \n}\n/** Was tag, will be tag */\nfunction swapTags(subject, templater, // new tag\nownerSupport) {\n    const global = subject.global;\n    const oldestSupport = global.oldest;\n    destroySupport(oldestSupport, global);\n    getNewGlobal(subject);\n    const newSupport = processReplacementComponent(templater, subject, ownerSupport, { added: 0, removed: 0 });\n    return newSupport;\n}\n","import { isArray } from '../isInstance.js';\nimport { hasPropChanges } from './hasPropChanges.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function hasSupportChanged(lastSupport, newTemplater) {\n    const latestProps = newTemplater.props;\n    const propsConfig = lastSupport.propsConfig;\n    const pastCloneProps = propsConfig.latest;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps, lastSupport.templater.propWatch);\n    return propsChanged;\n}\nexport function immutablePropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (prop !== pastProp) {\n            return 2;\n        }\n    }\n    return false; // false means has not changed\n}\nexport function shallowPropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (isArray(prop) && isArray(pastProp)) {\n            if (prop === pastProp) {\n                continue;\n            }\n            return 3.0; // not equal array\n        }\n        if (typeof (prop) === BasicTypes.function && typeof (pastProp) === BasicTypes.function) {\n            continue; // considered good\n        }\n        if (typeof (prop) === BasicTypes.object) {\n            if (typeof (pastCloneProps) === BasicTypes.object) {\n                const obEntries = Object.entries(prop);\n                for (const subItem of obEntries) {\n                    const result = objectItemMatches(subItem, pastProp);\n                    if (!result) {\n                        return 3.1;\n                    }\n                }\n            }\n            continue; // all sub objects matched\n        }\n        if (prop === pastProp) {\n            continue; // matched good\n        }\n        return 3.3; // not equal\n    }\n    return false; // false means has not changed\n}\nexport const shallowCompareDepth = 3;\nexport const deepCompareDepth = 10;\nfunction objectItemMatches([name, value], pastProp) {\n    const pastValue = pastProp[name];\n    if (typeof (value) === BasicTypes.function && typeof (pastValue) === BasicTypes.function) {\n        return true;\n    }\n    return pastValue === value;\n}\n","import { getChildTagsToSoftDestroy } from '../getChildTagsToDestroy.function.js';\nimport { getNewGlobal } from '../update/getNewGlobal.function.js';\nimport { smartRemoveKids } from '../smartRemoveKids.function.js';\n/** used when a tag swaps content returned */\nexport function softDestroySupport(lastSupport) {\n    const subject = lastSupport.subject;\n    const global = subject.global;\n    const { subs, tags } = getChildTagsToSoftDestroy(global.context);\n    softDestroyOne(global);\n    for (const child of tags) {\n        const cGlobal = child.subject.global;\n        if (cGlobal.deleted === true) {\n            return;\n        }\n        softDestroyOne(cGlobal);\n    }\n    const mySubs = global.subscriptions;\n    if (mySubs) {\n        subs.forEach(sub => sub.unsubscribe());\n    }\n    getNewGlobal(subject);\n}\nfunction softDestroyOne(global) {\n    global.deleted = true; // the children are truly destroyed but the main support will be swapped\n    smartRemoveKids(global, []);\n}\n","import { moveProviders } from '../update/updateExistingTagComponent.function.js';\nimport { softDestroySupport } from './softDestroySupport.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** TODO: This seems to support both new and updates and should be separated? */\nexport function renderWithSupport(newSupport, lastSupport, // previous (global.newest)\nsubject, // events & memory\nownerSupport) {\n    const lastTemplater = lastSupport?.templater;\n    const lastTag = lastTemplater?.tag;\n    const reSupport = renderTagOnly(newSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        moveProviders(lastSupport, reSupport);\n        softDestroySupport(lastSupport);\n        const global = reSupport.subject.global;\n        global.oldest = reSupport;\n        global.newest = reSupport;\n    }\n    else if (lastSupport) {\n        const tag = lastSupport.templater.tag;\n        if (tag && subject.renderCount > 0) {\n            checkTagSoftDestroy(tag, lastSupport, lastTag);\n        }\n    }\n    const lastOwnerSupport = lastSupport?.ownerSupport;\n    reSupport.ownerSupport = (ownerSupport || lastOwnerSupport);\n    return { support: reSupport, wasLikeTags: isLikeTag };\n}\nfunction checkTagSoftDestroy(tag, lastSupport, lastTag) {\n    if (tag.tagJsType === ValueTypes.dom) {\n        const lastDom = lastTag?.dom;\n        const newDom = tag.dom;\n        if (lastDom !== newDom) {\n            softDestroySupport(lastSupport);\n        }\n        return;\n    }\n    if (lastTag) {\n        const lastStrings = lastTag.strings;\n        if (lastStrings) {\n            const oldLength = lastStrings?.length;\n            const newLength = tag.strings.length;\n            if (oldLength !== newLength) {\n                softDestroySupport(lastSupport);\n            }\n        }\n    }\n}\n","export function processUpdateContext(support, context) {\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    let index = 0;\n    const len = values.length;\n    while (index < len) {\n        processUpdateOneContext(values, index, context, support);\n        ++index;\n    }\n    return context;\n}\n/** returns boolean of did render */\nexport function processUpdateOneContext(values, // the interpolated values\nindex, context, ownerSupport) {\n    const value = values[index];\n    // is something already there?\n    const contextItem = context[index];\n    // Do not continue if the value is just the same\n    if (value === contextItem.value) {\n        return;\n    }\n    const handler = contextItem.handler;\n    handler(value, values, ownerSupport, contextItem);\n    contextItem.value = value;\n}\n","import { paint, painting } from './paint.function.js';\nimport { processUpdateContext } from './processUpdateContext.function.js';\nexport function updateSupportBy(olderSupport, newerSupport) {\n    const global = olderSupport.subject.global;\n    const context = global.context;\n    updateSupportValuesBy(olderSupport, newerSupport);\n    ++painting.locks;\n    processUpdateContext(olderSupport, context);\n    --painting.locks;\n    paint();\n}\nexport function updateSupportValuesBy(olderSupport, newerSupport) {\n    const tempTag = (newerSupport.templater.tag || newerSupport.templater);\n    const values = newerSupport.templater.values || tempTag.values;\n    const tag = olderSupport.templater.tag;\n    tag.values = values;\n}\n","import { renderWithSupport } from './renderWithSupport.function.js';\nimport { processTag } from '../update/processTag.function.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n// TODO: This function is being called for 1st time renders WHEN renderCount === 1\nexport function renderExistingReadyTag(lastSupport, // should be global.newest\nnewSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const global = subject.global;\n    const { support, wasLikeTags } = renderWithSupport(newSupport, lastSupport, // renderCount <= 0 ? undefined : lastSupport\n    subject, ownerSupport);\n    if (wasLikeTags) {\n        updateSupportBy(global.oldest, support);\n        return support;\n    }\n    processTag(ownerSupport, subject, fooCounts);\n    return support;\n}\n","import { deepEqual } from '../deepFunctions.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from './hasSupportChanged.function.js';\nimport { hasPropLengthsChanged } from './render/renderSupport.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nexport function hasPropChanges(props, // natural props\npastCloneProps, // previously cloned props\npropWatch) {\n    const hasLenChanged = hasPropLengthsChanged(props, pastCloneProps);\n    if (hasLenChanged) {\n        return 11;\n    }\n    switch (propWatch) {\n        case PropWatches.NONE:\n            return 1; // always render\n        case PropWatches.SHALLOW: // determining equal is same as immutable, its the previous cloning step thats different\n            return shallowPropMatch(props, pastCloneProps);\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(props, pastCloneProps);\n    }\n    return deepPropChangeCompare(props, pastCloneProps);\n}\nfunction deepPropChangeCompare(props, pastCloneProps) {\n    // DEEP watch\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    castedProps = [...props];\n    castedPastProps = [...(pastCloneProps || [])];\n    const allFunctionsMatch = castedProps.every((value, index) => onePropCompare(value, index, castedProps, castedPastProps));\n    if (!allFunctionsMatch) {\n        return 7; // a change has been detected by function comparisons\n    }\n    return false;\n}\nfunction onePropCompare(value, index, castedProps, castedPastProps) {\n    const compare = castedPastProps[index];\n    if (typeof (value) === BasicTypes.object) {\n        const subCastedProps = { ...value };\n        const subCompareProps = { ...compare || {} };\n        const matched = Object.entries(subCastedProps).every(([key, value]) => compareProps(value, subCompareProps[key], () => {\n            delete subCastedProps[key]; // its a function and not needed to be compared\n            delete subCompareProps[key]; // its a function and not needed to be compared\n        }));\n        return matched;\n    }\n    return compareProps(value, compare, () => {\n        castedProps.splice(index, 1);\n        castedPastProps.splice(index, 1);\n    });\n}\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(typeof (value) === BasicTypes.function)) {\n        return deepEqual(value, compare, deepCompareDepth) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(typeof (compareFn) === BasicTypes.function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 5; // both are function the same\n    }\n    onDelete();\n    return 6;\n}\n","import { clonePropsBy } from './clonePropsBy.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** used only for apps, otherwise use Support */\nexport function getBaseSupport(templater, subject, castedProps) {\n    const baseSupport = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    // baseSupport.appSupport = baseSupport\n    const global = subject.global;\n    global.blocked = [];\n    global.destroy$ = new Subject();\n    return baseSupport;\n}\n/** Sets support states to empty array and clones props */\nexport function upgradeBaseToSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nsupport, appSupport, castedProps) {\n    // ;(support as AnySupport).state = []\n    // ;(support as AnySupport).states = []\n    support.appSupport = appSupport;\n    const props = templater.props; // natural props\n    if (props) {\n        support.propsConfig = clonePropsBy(support, props, castedProps);\n    }\n    return support;\n}\nexport function getHtmlSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\nexport function getSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = getBaseSupport(templater, subject, castedProps);\n    support.ownerSupport = ownerSupport;\n    return upgradeBaseToSupport(templater, support, appSupport, castedProps);\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nimport { cloneTagJsValue } from './cloneValueArray.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { PropWatches } from './tag.function.js';\nexport function clonePropsBy(support, props, castProps) {\n    const templater = support.templater;\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return support.propsConfig = {\n                latest: props,\n                castProps,\n            };\n        case PropWatches.SHALLOW:\n            return support.propsConfig = {\n                latest: props.map(x => cloneTagJsValue(x, shallowCompareDepth)),\n                castProps,\n            };\n    }\n    return support.propsConfig = {\n        latest: props.map(props => cloneTagJsValue(props, deepCompareDepth)),\n        castProps,\n    };\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { getHtmlSupport } from '../getSupport.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { processTagInit } from './processTagInit.function.js';\n/** When first time render, adds to owner childTags\n * Used for BOTH inserts & updates to values that were something else\n * Intended use only for updates\n*/\nexport function processTag(ownerSupport, // owner\nsubject, // could be tag via result.tag\ncounts) {\n    const global = subject.global;\n    const support = global.newest;\n    support.ownerSupport = ownerSupport;\n    subject.checkValueChange = checkTagValueChange;\n    const ph = subject.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, ph);\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        tagJsType: ValueTypes.templater,\n        processInit: processTagInit,\n    };\n    return fake;\n}\n/** Create support for a tag component */\nexport function newSupportByTemplater(templater, ownerSupport, subject) {\n    const support = getHtmlSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const global = subject.global;\n    global.context = [];\n    return support;\n}\n","import { getFakeTemplater, newSupportByTemplater, processTag } from './processTag.function.js';\nimport { processNowRegularValue } from './processRegularValue.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nimport { isArray, isSubjectInstance, isTagComponent } from '../../isInstance.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { getSupport } from '../getSupport.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n/** Checks if value has changed before updating. Used for all tag value updates. Determines if value changed since last render */\nexport function updateExistingValue(contextItem, newValue, // newValue\nownerSupport) {\n    // Do not continue if the value is just the same\n    if (newValue === contextItem.value) {\n        return;\n    }\n    forceUpdateExistingValue(contextItem, newValue, ownerSupport);\n}\n/** Used for all tag value updates. Determines if value changed since last render */\nexport function forceUpdateExistingValue(contextItem, newValue, // newValue\nownerSupport) {\n    // Have the context check itself (avoid having to detect old value)\n    const ignoreOrDestroyed = contextItem.checkValueChange(newValue, contextItem);\n    // ignore\n    if (ignoreOrDestroyed === -1) {\n        return; // do nothing\n    }\n    updateToDiffValue(newValue, contextItem, ownerSupport, ignoreOrDestroyed);\n}\nfunction updateToDiffValue(newValue, contextItem, ownerSupport, ignoreOrDestroyed) {\n    // is new value a tag?\n    const tagJsType = newValue && newValue.tagJsType;\n    if (tagJsType) {\n        if (tagJsType === ValueTypes.renderOnce) {\n            return;\n        }\n        tryUpdateToTag(contextItem, newValue, ownerSupport);\n        return;\n    }\n    if (isArray(newValue)) {\n        processTagArray(contextItem, newValue, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    if (typeof (newValue) === BasicTypes.function) {\n        contextItem.value = newValue; // do not render functions that are not explicity defined as tag html processing\n        return;\n    }\n    /*\n      if(isSubjectInstance(newValue)) {\n        subscribeToTemplate({\n          insertBefore: contextItem.placeholder as Text,\n          // appendTo: undefined,\n          subject: newValue as InterpolateSubject,\n          support: ownerSupport,\n          counts: {added: 0, removed: 0},\n          contextItem,\n        })\n    \n        contextItem.checkValueChange = subjectCheckValueChange\n        return\n      }\n      */\n    if (ignoreOrDestroyed) {\n        processNowRegularValue(newValue, contextItem);\n    }\n}\nexport function subjectCheckValueChange(value, contextItem) {\n    // if (isSubjectInstance(value) && value === newValue) {\n    if (isSubjectInstance(value)) {\n        return -1; // ignore same observable\n    }\n    contextItem.delete(contextItem);\n    return 66;\n}\nfunction updateToTag(value, contextItem, ownerSupport) {\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = getFakeTemplater();\n        tag.templater = templater;\n        templater.tag = tag;\n    }\n    const nowGlobal = (contextItem.global ? contextItem.global : getNewGlobal(contextItem));\n    nowGlobal.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n    processTag(ownerSupport, contextItem, fooCounts);\n}\nfunction handleStillTag(lastSupport, subject, value, ownerSupport) {\n    const templater = value.templater || value;\n    const valueSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const lastSubject = lastSupport.subject;\n    const newGlobal = lastSubject.global;\n    const oldest = newGlobal.oldest;\n    updateSupportBy(oldest, valueSupport);\n}\nexport function prepareUpdateToComponent(templater, contextItem, ownerSupport) {\n    const global = contextItem.global;\n    // When last value was not a component\n    if (!global.newest) {\n        processReplacementComponent(templater, contextItem, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    const support = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    updateExistingTagComponent(ownerSupport, support, // latest value\n    contextItem);\n}\nexport function updateContextItemBySupport(support, contextItem, value, ownerSupport) {\n    if (typeof (value) === BasicTypes.function) {\n        return;\n    }\n    handleStillTag(support, contextItem, value, ownerSupport);\n    return;\n}\n/** result is an indication to ignore further processing but that does not seem in use anymore */\nexport function tryUpdateToTag(contextItem, newValue, // newValue\nownerSupport) {\n    const tagJsType = newValue.tagJsType;\n    const isComp = isTagComponent(newValue);\n    if (isComp) {\n        if (contextItem.global === undefined) {\n            getNewGlobal(contextItem);\n        }\n        prepareUpdateToComponent(newValue, contextItem, ownerSupport);\n        return true;\n    }\n    // detect if previous value was a tag\n    const global = contextItem.global;\n    if (global) {\n        // its html/dom based tag\n        const support = global.newest;\n        if (support) {\n            updateContextItemBySupport(support, contextItem, newValue, ownerSupport);\n            return true;\n        }\n    }\n    switch (tagJsType) {\n        case ValueTypes.templater:\n            processTag(ownerSupport, contextItem, fooCounts);\n            return true;\n        // when value was not a Tag before\n        case ValueTypes.tag:\n        case ValueTypes.dom: {\n            updateToTag(newValue, contextItem, ownerSupport);\n            return true;\n        }\n    }\n    return false;\n}\n","import { getTemplaterResult } from '../getTemplaterResult.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { PropWatches } from '../tag.function.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processNewArrayValue(value, ownerSupport, contextItem) {\n    const tagJsType = value.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater: {\n                const templater = value;\n                const tag = templater.tag;\n                processNewTag(tag, ownerSupport, contextItem);\n                break;\n            }\n            case ValueTypes.tag:\n            case ValueTypes.dom:\n                processNewTag(value, ownerSupport, contextItem);\n                break;\n        }\n    }\n    return contextItem;\n}\nfunction processNewTag(value, ownerSupport, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = getTemplaterResult(PropWatches.DEEP);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const global = contextItem.global = getNewGlobal(contextItem); // contextItem.global as SupportTagGlobal\n    const newest = global.newest = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    global.oldest = newest;\n    return contextItem;\n}\n","// taggedjs-no-compile\nimport { paintAppends, paintInsertBefores } from '../paint.function.js';\nimport { processFirstSubjectValue } from './processFirstSubjectValue.function.js';\nimport { checkSimpleValueChange, deleteSimpleValue } from '../checkDestroyPrevious.function.js';\nimport { updateExistingValue } from './updateExistingValue.function.js';\nimport { processNewArrayValue } from './processNewValue.function.js';\nimport { compareArrayItems } from './compareArrayItems.function.js';\nexport function processTagArray(subject, value, // arry of Tag classes\nownerSupport, counts, appendTo) {\n    const noLast = subject.lastArray === undefined;\n    if (noLast) {\n        subject.lastArray = [];\n    }\n    const lastArray = subject.lastArray;\n    let runtimeInsertBefore = subject.placeholder;\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    const filteredLast = [];\n    // if not first time, then check for deletes\n    if (!noLast) {\n        // on each loop check the new length\n        for (let index = 0; index < lastArray.length; ++index) {\n            const item = lastArray[index];\n            // 👁️ COMPARE & REMOVE\n            const newRemoved = compareArrayItems(value, index, lastArray, removed, counts);\n            if (newRemoved === 0) {\n                filteredLast.push(item);\n                continue;\n            }\n            // do the same number again because it was a mid delete\n            if (newRemoved === 2) {\n                index = index - 1;\n                continue;\n            }\n            removed = removed + newRemoved;\n        }\n        subject.lastArray = filteredLast;\n    }\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const newSubject = reviewArrayItem(value, index, subject.lastArray, ownerSupport, runtimeInsertBefore, counts, appendTo);\n        runtimeInsertBefore = newSubject.placeholder;\n    }\n}\nfunction reviewArrayItem(array, index, lastArray, ownerSupport, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const item = array[index];\n    const previous = lastArray[index];\n    if (previous) {\n        return reviewPreviousArrayItem(item, previous.context, lastArray, ownerSupport, index, runtimeInsertBefore, counts, appendTo);\n    }\n    return processAddTagArrayItem(item, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n}\nfunction reviewPreviousArrayItem(value, itemSubject, lastArray, ownerSupport, index, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const couldBeSame = lastArray.length > index;\n    if (couldBeSame) {\n        updateExistingValue(itemSubject, value, ownerSupport);\n        return itemSubject;\n    }\n    const result = processAddTagArrayItem(value, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n    return result;\n}\nfunction processAddTagArrayItem(value, before, // used during updates\nownerSupport, counts, lastArray, appendTo) {\n    const itemSubject = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        delete: deleteSimpleValue,\n        withinOwnerElement: false,\n    };\n    counts.added = counts.added + 1; // index\n    const subPlaceholder = document.createTextNode('');\n    itemSubject.placeholder = subPlaceholder;\n    if (!appendTo) {\n        paintInsertBefores.push({\n            element: subPlaceholder,\n            relative: before,\n        });\n    }\n    processNewArrayValue(value, ownerSupport, itemSubject);\n    processFirstSubjectValue(value, itemSubject, ownerSupport, counts, appendTo);\n    // after processing\n    itemSubject.value = value;\n    // Added to previous array\n    lastArray.push({\n        context: itemSubject,\n        global: itemSubject.global,\n    });\n    if (appendTo) {\n        paintAppends.push({\n            element: subPlaceholder,\n            relative: appendTo,\n        });\n    }\n    return itemSubject;\n}\n","import { checkArrayValueChange, checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { isArray } from '../../isInstance.js';\nimport { processTagArray } from './processTagArray.js';\nexport function processFirstSubjectValue(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        ++contextItem.renderCount;\n        return value.processInit(value, contextItem, ownerSupport, counts, appendTo, insertBefore);\n    }\n    if (isArray(value)) {\n        processTagArray(contextItem, value, ownerSupport, counts, appendTo);\n        contextItem.checkValueChange = checkArrayValueChange;\n        return;\n    }\n    processFirstRegularValue(value, contextItem, contextItem.placeholder);\n}\nfunction processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    const castedValue = castTextValue(value);\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    subject.simpleValueElm = clone;\n    subject.checkValueChange = checkSimpleValueChange;\n}\n","/**\n * Sync two supports\n * @param support FROM\n * @param newestSupport  ONTO\n * @returns\n */\nexport function syncSupports(support, // from\nnewestSupport) {\n    return syncStatesArray(support.states, newestSupport.states);\n}\nexport function syncStatesArray(from, onto) {\n    for (let index = 0; index < from.length; ++index) {\n        const getter = from[index];\n        const setter = onto[index];\n        syncStates(getter, setter);\n    }\n}\nexport function syncStates(from, onto) {\n    let got;\n    from((...x) => {\n        got = x;\n        return x;\n    }, 1);\n    onto(() => {\n        return got;\n    }, 2);\n}\n/** @deprecated favor using syncSupports */\nexport function oldSyncStates(stateFrom, stateTo, intoStates, statesFrom) {\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const stateFromTarget = stateFrom[index];\n        const fromValue = stateFromTarget.get(); // get without setting\n        // const fromValue = getStateValue(stateFromTarget) // get without setting\n        const stateToTarget = stateTo[index];\n        const callback = stateToTarget.callback; // is it a let state?\n        if (!callback) {\n            continue;\n        }\n        callback(fromValue); // set the value\n    }\n    // loop statesFrom to set on the oldStates\n    for (let index = statesFrom.length - 1; index >= 0; --index) {\n        const oldValues = [];\n        const oldGetCallback = (...args) => {\n            oldValues.push(args);\n            return args;\n        };\n        const stateFromTarget = statesFrom[index];\n        // trigger getting all old values\n        stateFromTarget(oldGetCallback);\n        let getIndex = 0;\n        // This is the \"get\" argument that will be called and all arguments are ignored\n        const newSetCallback = (..._) => {\n            return oldValues[getIndex++];\n        };\n        // trigger setting updated values\n        intoStates[index](newSetCallback);\n    }\n}\n","import { paint } from '../paint.function.js';\nimport { setUseMemory } from '../../state/setUseMemory.object.js';\nimport { processFirstSubjectValue } from './processFirstSubjectValue.function.js';\nimport { syncSupports } from '../../state/syncStates.function.js';\nimport { forceUpdateExistingValue } from './updateExistingValue.function.js';\nimport { getSupportWithState } from '../../interpolations/attributes/getSupportWithState.function.js';\nexport function setupSubscribe(observable, contextItem, ownerSupport, counts, callback, appendTo) {\n    const setup = setupSubscribeCallbackProcessor(observable, contextItem, ownerSupport, counts, callback, appendTo);\n    contextItem.delete = () => {\n        setup.subscription.unsubscribe();\n    };\n    contextItem.handler = (value, values, newSupport) => {\n        if (!setup.hasEmitted) {\n            return;\n        }\n        setup.callback = value.callback;\n        setup.handler(setup.getLastValue());\n        const newComponent = getSupportWithState(newSupport);\n        setup.states = newComponent.states;\n    };\n}\nexport function setupSubscribeCallbackProcessor(observable, contextItem, support, // ownerSupport ?\ncounts, // used for animation stagger computing\ncallback, appendTo) {\n    const component = getSupportWithState(support);\n    let lastValue = undefined;\n    const getLastValue = () => lastValue;\n    let onValue = function onSubValue(value) {\n        if (memory.callback) {\n            value = memory.callback(value);\n        }\n        memory.hasEmitted = true;\n        processFirstSubjectValue(value, contextItem, support, { ...counts }, syncRun ? appendTo : undefined);\n        if (!syncRun && !setUseMemory.stateConfig.support) {\n            paint();\n        }\n        // from now on just run update\n        onValue = function subscriptionUpdate(value) {\n            // processSubUpdate(value, contextItem, support)\n            forceUpdateExistingValue(contextItem, value, support);\n            if (!syncRun && !setUseMemory.stateConfig.support) {\n                paint();\n            }\n            //paint()\n        };\n    };\n    // onValue mutates so function below calls original and mutation\n    const valueChangeHandler = function subValueProcessor(value) {\n        lastValue = value;\n        const newComponent = component.subject.global.newest;\n        syncSupports(newComponent, component);\n        if (memory.callback) {\n            value = memory.callback(value);\n        }\n        onValue(value);\n    }; // as unknown as (ValueSubjectSubscriber<Callback> & ValueSubjectSubscriber<unknown>)\n    // aka setup\n    const memory = {\n        hasEmitted: false,\n        handler: valueChangeHandler,\n        getLastValue,\n        callback,\n        // states: [...component.states],\n        states: component.states,\n    };\n    let syncRun = true;\n    memory.subscription = observable.subscribe(valueChangeHandler);\n    // contextItem.subject = value.Observable as any\n    syncRun = false;\n    return memory;\n}\n","import { setupSubscribe } from './setupSubscribe.function.js';\nexport function processSubscribe(value, contextItem, ownerSupport, counts, // {added:0, removed:0}\nappendTo) {\n    return setupSubscribe(value.Observable, contextItem, ownerSupport, counts, value.callback, appendTo);\n}\nexport function processSignal(value, contextItem, ownerSupport, counts, // {added:0, removed:0}\nappendTo) {\n    setupSubscribe(value, contextItem, ownerSupport, counts, undefined, appendTo);\n}\n","import { state } from '../state/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { processSignal } from '../tag/update/processSubscribe.function.js';\nimport { ValueTypes } from '../tag/ValueTypes.enum.js';\n/** Checks if rendering cycle in process. Then creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function signal(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => Signal(initialValue));\n    }\n    return Signal(initialValue);\n}\n/** Creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function Signal(initialValue) {\n    let value = initialValue;\n    const subscribers = new Set();\n    return {\n        tagJsType: ValueTypes.signal,\n        processInit: processSignal,\n        get value() {\n            return value;\n        },\n        set value(newValue) {\n            if (value !== newValue) {\n                value = newValue;\n                // Notify all subscribers\n                subscribers.forEach(callback => callback(newValue));\n            }\n        },\n        subscribe(callback) {\n            callback(value); // emit initial value\n            subscribers.add(callback);\n            // Return an unsubscribe function\n            const unsub = () => subscribers.delete(callback);\n            // support traditional unsubscribe\n            unsub.unsubscribe = unsub;\n            return unsub;\n        },\n    };\n}\n","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this.value, subscription);\n        return subscription;\n    }\n}\nexport class ValueSubjective extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        this._value = value;\n        defineValueOn(this); // if you extend this AND have a constructor, you must call this in your extension\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n","export function willCallback(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        });\n        callback(lastValue, utils.next);\n    });\n}\n/** .pipe( promise((x) => Promise.resolve(44)) ) */\nexport function willPromise(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        result.then(x => utils.next(x));\n    });\n}\n/** .pipe( willSubscribe((x) => new ValueSubject(44)) ) */\nexport const willSubscribe = (callback) => {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        const subscription = result.subscribe(x => {\n            subscription.unsubscribe();\n            utils.next(x);\n        });\n    });\n};\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    return setUseMemory.stateConfig.handlers.handler(defaultValue);\n}\n","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { oldSyncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered.\n * Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before, final = defaultFinally, } = {}) => {\n    const previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (before && !before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (before && !before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const firstSupport = state(() => getSupportInCycle());\n            const subject = state(() => new ValueSubject(undefined));\n            const oldState = state(() => ({\n                stateArray: setUseMemory.stateConfig.stateArray,\n                states: setUseMemory.stateConfig.states,\n            }));\n            const method = (currentValues, callback) => {\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowSupport !== firstSupport) {\n                        const newestState = oldState.stateArray;\n                        const global = firstSupport.subject.global;\n                        const oldest = global.oldest;\n                        const oldestState = oldest.state;\n                        const newStates = oldState.states;\n                        const oldStates = oldest.states;\n                        oldSyncStates(newestState, oldestState, newStates, oldStates);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { oldSyncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => new Subject(initialValue));\n    }\n    return new Subject(initialValue);\n}\nsubject._value = (value) => {\n    const oldestState = state(function subjectValue() {\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectValue() {\n        const subject = new ValueSubject(value).pipe(x => {\n            oldSyncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => ({\n        stateArray: setUseMemory.stateConfig.stateArray,\n        states: setUseMemory.stateConfig.states,\n    }));\n    const nowSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        oldSyncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n        return x;\n    });\n}\nsubject.all = all;\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function states(setter) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.statesHandler(setter);\n}\n","import { signal } from '../subject/signal.function.js';\nimport { states } from './states.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(setter) {\n    const propStates2 = signal([]);\n    const passes = signal(0);\n    const passedOn = signal(0);\n    let nowValues = [];\n    let passed = 0;\n    passedOn.value = passes.value;\n    setter((...values) => {\n        nowValues = values;\n        return propStates2.value;\n    });\n    // When the watched variable changes, then the local prop variable has to update\n    watch(nowValues, () => {\n        ++passed; // first time values and changed values cause new state\n        propStates2.value = nowValues;\n        setter(() => nowValues);\n    });\n    // called and only used during sync'ing processes\n    states((_x, direction) => {\n        // now its collection of variables time\n        if (passed) {\n            setter((...values) => {\n                if (!direction || direction === 1) {\n                    propStates2.value = values;\n                }\n                return propStates2.value;\n            });\n            passedOn.value = passes.value;\n            ++passes.value;\n            return;\n        }\n        // this in an insync call, we do not care about the values here\n        setter(() => {\n            return propStates2.value;\n        });\n    });\n    ++passed;\n    return propStates2.value;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nexport const providers = {\n    create: (constructMethod) => {\n        const stateDiffMemory = state(() => ({ stateDiff: 0, provider: undefined }));\n        // mimic how many states were called the first time\n        if (stateDiffMemory.stateDiff) {\n            let x = stateDiffMemory.stateDiff;\n            while (x--) {\n                state(undefined);\n            }\n            const result = state(undefined);\n            return result;\n        }\n        const result = state(() => {\n            const stateConfig = setUseMemory.stateConfig;\n            const oldStateCount = stateConfig.stateArray.length;\n            // Providers with provider requirements just need to use providers.create() and providers.inject()\n            const instance = constructMethod.prototype ? new constructMethod() : constructMethod();\n            const support = stateConfig.support;\n            const stateDiff = stateConfig.stateArray.length - oldStateCount;\n            const provider = {\n                constructMethod,\n                instance,\n                stateDiff,\n                owner: support,\n                children: [],\n            };\n            stateDiffMemory.provider = provider;\n            const global = support.subject.global;\n            const providers = global.providers = global.providers || [];\n            providers.push(provider);\n            stateDiffMemory.stateDiff = stateDiff;\n            return instance;\n        });\n        const cm = constructMethod;\n        const compareTo = cm.compareTo = cm.toString();\n        stateDiffMemory.provider.constructMethod.compareTo = compareTo;\n        return result;\n    },\n    /**\n     * @template T\n     * @param {(new (...args: any[]) => T) | () => T} constructor\n     * @returns {T}\n     */\n    inject: (constructor) => {\n        // find once, return same every time after\n        return state(() => {\n            // const memory = setUse.memory\n            const cm = constructor;\n            const compareTo = cm.compareTo = cm.compareTo || constructor.toString();\n            const support = getSupportInCycle(); // memory.stateConfig.support as AnySupport\n            const providers = [];\n            let owner = {\n                ownerSupport: support.ownerSupport\n            };\n            while (owner.ownerSupport) {\n                const ownGlobal = owner.ownerSupport.subject.global;\n                const ownerProviders = ownGlobal.providers;\n                if (!ownerProviders) {\n                    owner = owner.ownerSupport; // cause reloop checking next parent\n                    continue;\n                }\n                const provider = ownerProviders.find(provider => {\n                    providers.push(provider);\n                    const constructorMatch = provider.constructMethod.compareTo === compareTo;\n                    if (constructorMatch) {\n                        return true;\n                    }\n                });\n                if (provider) {\n                    const global = support.subject.global;\n                    const providers = global.providers = global.providers || [];\n                    providers.push(provider);\n                    provider.children.push(support);\n                    return provider.instance;\n                }\n                owner = owner.ownerSupport; // cause reloop checking next parent\n            }\n            const msg = `Could not inject provider: ${constructor.name} ${constructor}`;\n            console.warn(`${msg}. Available providers`, providers);\n            throw new Error(msg);\n        });\n    }\n};\n","import callbackStateUpdate from './callbackStateUpdate.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { syncError } from './callbackMaker.function.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\n/** Wrap a function that will be called back. After the wrapper and function are called, a rendering cycle will update display */\nexport function callback(callback) {\n    const support = getSupportInCycle();\n    if (!support) {\n        throw syncError;\n    }\n    return createTrigger(support, setUseMemory.stateConfig, // setUseMemory.stateConfig.stateArray\n    callback);\n}\nexport function createTrigger(support, oldState, toCallback) {\n    // const oldStates = [...oldState.states]\n    const oldStates = oldState.states;\n    return function trigger(...args) {\n        const callbackMaker = support.subject.renderCount > 0;\n        if (callbackMaker) {\n            return callbackStateUpdate(support, oldStates, toCallback, ...args);\n        }\n        // we are in sync with rendering, just run callback naturally\n        return toCallback(...args);\n    };\n}\n","import { renderSupport } from '../tag/render/renderSupport.function.js';\nimport { syncStatesArray } from './syncStates.function.js';\nimport { isPromise } from '../isInstance.js';\nexport default function callbackStateUpdate(support, oldStates, callback, ...args) {\n    const global = support.subject.global;\n    const newestSupport = global.newest;\n    // NEWEST UPDATE OLDEST: ensure that the oldest has the latest values first\n    syncStatesArray(newestSupport.states, oldStates);\n    // run the callback\n    const maybePromise = callback(...args);\n    // OLDEST UPDATE NEWEST: send the oldest state changes into the newest\n    syncStatesArray(oldStates, newestSupport.states);\n    renderSupport(newestSupport);\n    if (isPromise(maybePromise)) {\n        maybePromise.finally(() => {\n            // send the oldest state changes into the newest\n            syncStatesArray(oldStates, newestSupport.states);\n            renderSupport(newestSupport);\n        });\n    }\n    // return undefined as T\n    return maybePromise;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { createTrigger } from './callback.function.js';\nexport const callbackMaker = () => {\n    const support = getSupportInCycle();\n    // callback as typeof innerCallback\n    if (!support) {\n        throw syncError;\n    }\n    const oldState = setUseMemory.stateConfig; // .stateArray\n    return function triggerMaker(callback) {\n        return createTrigger(support, oldState, callback);\n    };\n};\nexport const syncError = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n","import { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { state } from \"./state.function.js\";\nexport function onDestroy(callback) {\n    state(function stateDestroy() {\n        const support = getSupportInCycle();\n        const global = support.subject.global;\n        global.destroy$.toCallback(callback);\n    });\n}\n","import { getSupportWithState } from \"../interpolations/attributes/getSupportWithState.function.js\";\nimport { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { ValueTypes } from \"../tag/index.js\";\nimport { processSubscribe } from \"../tag/update/processSubscribe.function.js\";\nexport function subscribe(Observable, callback) {\n    return {\n        tagJsType: ValueTypes.subscribe,\n        processInit: processSubscribe,\n        Observable,\n        callback,\n        states: getSupportWithState(getSupportInCycle()).states,\n    };\n}\n","import { setUseMemory } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUseMemory.stateConfig.support;\n}\n","import { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { newSupportByTemplater, processTag, tagFakeTemplater } from './processTag.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processDomTagInit(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = tagFakeTemplater(tag);\n    }\n    const global = getNewGlobal(contextItem);\n    if (appendTo) {\n        return processNewSubjectTag(templater, contextItem, ownerSupport, counts, appendTo, insertBefore);\n    }\n    global.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n    contextItem.checkValueChange = checkTagValueChange;\n    return processTag(ownerSupport, contextItem, counts);\n}\n","// taggedjs-no-compile\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\nimport { processDomTagInit } from './update/processDomTagInit.function.js';\nexport const variablePrefix = ':tagvar';\nexport const variableSuffix = ':';\nexport function getStringTag(strings, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        tagJsType: ValueTypes.tag,\n        processInit: processDomTagInit,\n        strings,\n        /** Used within an array.map() that returns html aka array.map(x => html``.key(x)) */\n        key(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: function html(strings, values) {\n            tag.children = { strings, values };\n            return tag;\n        }\n    };\n    return tag;\n}\nexport function getDomTag(dom, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        dom,\n        tagJsType: ValueTypes.dom,\n        processInit: processDomTagInit,\n        key: function keyFun(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: {\n            dom: function dom(dom, // ObjectChildren\n            values) {\n                tag.children = { dom: dom, values };\n                return tag;\n            }\n        }\n    };\n    return tag;\n}\n","import { variablePrefix, variableSuffix } from \"../../tag/getDomTag.function.js\";\nimport { isSpecialAttr } from \"../attributes/isSpecialAttribute.function.js\";\nconst fragFindAny = /(:tagvar\\d+:)/;\nconst ondoubleclick = 'ondoubleclick';\nconst regexAttr = /([:_a-zA-Z0-9\\-.]+)\\s*(?:=\\s*\"([^\"]*)\"|=\\s*(\\S+))?/g;\nconst regexTagOrg = /<\\/?([a-zA-Z0-9-]+)((?:\\s+[a-zA-Z_:*][\\w:.-]*(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+))?)+\\s*|\\s*)\\/?>/g;\n/** Main start of string parsing */\nexport function parseHTML(html) {\n    const valuePositions = [];\n    const elements = [];\n    const stack = [];\n    let currentElement = null;\n    let valueIndex = -1;\n    let position = 0;\n    const regexTag = new RegExp(regexTagOrg, 'g');\n    html = preprocessTagsInComments(html);\n    while (position < html.length) {\n        const tagMatch = regexTag.exec(html);\n        if (!tagMatch) {\n            break;\n        }\n        const [fullMatch, tagName, attrString] = tagMatch;\n        const isClosingTag = fullMatch.startsWith('</');\n        const isSelfClosing = fullMatch.endsWith('/>');\n        if (position < tagMatch.index) {\n            const textContent = html.slice(position, tagMatch.index);\n            if (textContent.trim()) {\n                const textVarMatches = splitByTagVar(textContent);\n                textVarMatches.forEach(textContent => {\n                    if (textContent.startsWith(variablePrefix)) {\n                        textContent = variablePrefix + (++valueIndex) + variableSuffix;\n                    }\n                    pushTextTo(currentElement, elements, textContent);\n                });\n            }\n        }\n        position = tagMatch.index + fullMatch.length;\n        if (isClosingTag) {\n            currentElement = stack.pop() || null;\n            continue;\n        }\n        const attributes = [];\n        let attrMatch;\n        while ((attrMatch = regexAttr.exec(attrString)) !== null) {\n            const attrName = attrMatch[1] || attrMatch[3] || attrMatch[5];\n            const attrChoice = attrMatch[2] || attrMatch[4] || attrMatch[6];\n            let attrValue = attrChoice;\n            if (attrName === undefined) {\n                continue;\n            }\n            const notEmpty = attrMatch[2] !== '';\n            const noValue = attrValue === undefined && notEmpty;\n            const lowerName = attrName.toLowerCase();\n            const fixedName = lowerName.startsWith('on') ? cleanEventName(lowerName) : lowerName;\n            if (noValue) {\n                const standAloneVar = attrName.slice(0, variablePrefix.length) === variablePrefix;\n                if (standAloneVar) {\n                    const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                    valuePositions.push(['at', valueName]);\n                    attributes.push([valueName]); // the name itself is dynamic\n                    continue;\n                }\n                const startMatched = attrMatch[0].startsWith(attrName);\n                const standAloneAttr = startMatched && attrMatch[0].slice(attrName.length, attrMatch[0].length).search(/\\s+$/) >= 0;\n                if (standAloneAttr) {\n                    attributes.push([fixedName]);\n                    continue;\n                }\n                const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                attrValue = valueName;\n            }\n            if (!notEmpty) {\n                attrValue = attrMatch[2];\n            }\n            const attrSet = [fixedName, attrValue];\n            const isSpecial = isSpecialAttr(lowerName); // check original name for \"oninit\" or \"autofocus\"\n            if (isSpecial) {\n                attrSet.push(isSpecial);\n            }\n            attributes.push(attrSet);\n        }\n        const element = {\n            nn: tagName, // nodeName\n        };\n        if (attributes.length) {\n            element.at = attributes;\n        }\n        if (currentElement) {\n            if (!currentElement.ch) {\n                currentElement.ch = [];\n            }\n            currentElement.ch.push(element);\n        }\n        else {\n            elements.push(element);\n        }\n        if (!isSelfClosing) {\n            stack.push(currentElement);\n            currentElement = element;\n        }\n    }\n    if (position < html.length) {\n        const textContent = html.slice(position);\n        if (textContent.trim()) {\n            const textVarMatches = splitByTagVar(textContent);\n            textVarMatches.forEach(textContent => {\n                if (textContent.startsWith(variablePrefix)) {\n                    ++valueIndex;\n                }\n                return pushTextTo(currentElement, elements, textContent);\n            });\n        }\n    }\n    return elements;\n}\nconst removeCommentRegX = new RegExp('(<!--[\\\\s\\\\S]*?-->)', 'g');\nfunction preprocessTagsInComments(html) {\n    // Use a regex to find all HTML comments\n    return html.replace(removeCommentRegX, function (match) {\n        // For each comment found, replace < and > inside it\n        return match.replace(/\\[l t\\]/g, '[l&nbsp;t]').replace(/\\[g t\\]/g, '[g&nbsp;t]').replace(/</g, '[l t]').replace(/>/g, '[g t]');\n    });\n}\nfunction cleanEventName(eventName) {\n    if (eventName.startsWith('on')) {\n        const couldByDblClick = eventName.length === ondoubleclick.length && eventName === ondoubleclick;\n        if (couldByDblClick) {\n            return 'dblclick';\n        }\n        return eventName.slice(2, eventName.length);\n    }\n    return eventName;\n}\nfunction pushTextTo(currentElement, elements, textContent) {\n    const textNode = {\n        nn: 'text', // nodeName\n        tc: postprocessTagsInComments(textContent), // textContent\n    };\n    pushTo(currentElement, elements, textNode);\n}\nfunction postprocessTagsInComments(html) {\n    // Use a regex to find all segments that look like processed comments\n    return html.replace(/(\\[l t\\]!--[\\s\\S]*?--\\[g t\\])/g, function (match) {\n        // For each processed comment found, replace *lt* and *gt* back to < and >\n        return match.replace(/\\[l t\\]/g, '<').replace(/\\[g t\\]/g, '>').replace(/\\[l&nbsp;t\\]/g, '[l t]').replace(/\\[g&nbsp;t\\]/g, '[g t]');\n    });\n}\nfunction pushTo(currentElement, elements, textNode) {\n    if (currentElement) {\n        if (!currentElement.ch) {\n            currentElement.ch = [];\n        }\n        currentElement.ch.push(textNode);\n    }\n    else {\n        elements.push(textNode);\n    }\n}\nfunction splitByTagVar(inputString) {\n    // Split the string using the regular expression, keep delimiters in the output\n    const parts = inputString.split(fragFindAny);\n    // Filter out any empty strings from the results\n    const filteredParts = parts.filter(part => part !== '');\n    return filteredParts;\n}\n","import { variablePrefix, variableSuffix } from \"../../tag/getDomTag.function.js\";\nimport { parseHTML } from \"./parseHTML.function.js\";\nconst fragReplacer = /(^:tagvar\\d+:|:tagvar\\d+:$)/g;\nconst safeVar = '__safeTagVar';\n/** Run only during compile step OR when no compile step occurred at runtime */\nexport function htmlInterpolationToDomMeta(strings, values) {\n    htmlInterpolationToPlaceholders(strings, values);\n    // Parse the modified fragments\n    const htmlString = htmlInterpolationToPlaceholders(strings, values).join('');\n    const domMeta = parseHTML(htmlString);\n    return domMeta;\n}\nexport function htmlInterpolationToPlaceholders(strings, values) {\n    // Sanitize placeholders in the fragments\n    const sanitizedFragments = sanitizePlaceholders(strings);\n    // Add placeholders to the fragments\n    return addPlaceholders(sanitizedFragments, values);\n}\nfunction sanitizePlaceholders(fragments) {\n    return fragments.map(fragment => fragment.replace(fragReplacer, (match, index) => safeVar + index));\n}\nfunction addPlaceholders(strings, values) {\n    const results = strings.map((fragment, index) => {\n        if (index < values.length) {\n            return fragment + variablePrefix + index + variableSuffix;\n        }\n        return fragment;\n    });\n    balanceArrayByArrays(results, strings, values);\n    return results;\n}\nexport function balanceArrayByArrays(results, strings, values) {\n    const diff = values.length - strings.length;\n    if (diff > 0) {\n        for (let x = diff; x > 0; --x) {\n            results.push(variablePrefix + (strings.length + x - 1) + variableSuffix);\n        }\n    }\n}\n","// taggedjs-no-compile\nimport { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nconst placeholderRegex = new RegExp(variablePrefix + '(\\\\d+)' + variableSuffix, 'g');\nconst ch = 'ch'; // short for children\nexport function replacePlaceholders(dom, valueCount, valuePositions = [], currentTail = []) {\n    const elements = dom;\n    for (let i = 0; i < elements.length; i++) {\n        const loopTail = [...currentTail, i];\n        const element = elements[i];\n        if (element.at) {\n            const attrs = element.at;\n            element.at = processAttributes(attrs, valueCount);\n        }\n        if (element.ch) {\n            const children = element.ch;\n            const innerLoopTail = [...loopTail, ch];\n            element.ch = replacePlaceholders(children, valueCount, valuePositions, innerLoopTail);\n        }\n        i = examineChild(element, valueCount, elements, i);\n    }\n    return elements;\n}\nfunction examineChild(child, valueCount, children, index) {\n    if (child.nn !== 'text') {\n        return index;\n    }\n    const textChild = child;\n    let textContent = textChild.tc;\n    if (typeof textContent !== ImmutableTypes.string) {\n        return index;\n    }\n    let match;\n    while ((match = placeholderRegex.exec(textContent)) !== null) {\n        const secondMatch = match[1];\n        const wIndex = parseInt(secondMatch, 10);\n        const examine = !isNaN(wIndex) && wIndex < valueCount;\n        if (examine) {\n            const varContent = variablePrefix + wIndex + variableSuffix;\n            const after = textContent.slice(match.index + varContent.length);\n            children.splice(index, 1, ...[{\n                    nn: 'text',\n                    v: wIndex\n                }]);\n            textContent = after;\n            placeholderRegex.lastIndex = 0; // Reset regex index due to split\n        }\n    }\n    textChild.tc = textContent;\n    return index;\n}\nfunction processAttributes(attributes, valueCount) {\n    return attributes.map(attrSet => {\n        const [key, value, isSpecial] = attrSet;\n        if (key.startsWith(variablePrefix)) {\n            const index = parseInt(key.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [{ tagJsVar: index }];\n            }\n        }\n        if (typeof value === ImmutableTypes.string && value.startsWith(variablePrefix)) {\n            const index = parseInt(value.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [key, { tagJsVar: index }, isSpecial];\n            }\n        }\n        return attrSet;\n    });\n}\n","import { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nexport const safeVar = '__safeTagVar';\nexport function restorePlaceholders(elements) {\n    elements.forEach(traverseAndRestore);\n}\nconst safeReplacer = /__safeTagVar(\\d+)/g;\nfunction traverseAndRestore(element) {\n    if (element.at) {\n        element.at = element.at ? element.at.map(attr => {\n            if (attr.length === 1) {\n                return attr;\n            }\n            const [, value] = attr;\n            if (typeof value === ImmutableTypes.string && value.startsWith(safeVar)) {\n                const index = parseInt(value.replace(safeVar, ''), 10);\n                attr[1] = variablePrefix + index + variableSuffix;\n            }\n            return attr;\n        }) : [];\n    }\n    if (element.ch) {\n        const children = element.ch;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child.nn === 'text') {\n                if (typeof child.tc !== ImmutableTypes.string) {\n                    return;\n                }\n                child.tc = child.tc.replace(safeReplacer, (_match, index) => variablePrefix + index + variableSuffix);\n            }\n            traverseAndRestore(child);\n        }\n        // Remove empty children array\n        if (children.length === 0) {\n            delete element.ch;\n        }\n    }\n}\n","// taggedjs-no-compile\nimport { htmlInterpolationToDomMeta } from '../interpolations/optimizers/htmlInterpolationToDomMeta.function.js';\nimport { replacePlaceholders } from '../interpolations/optimizers/replacePlaceholders.function.js';\nimport { restorePlaceholders } from '../interpolations/optimizers/restorePlaceholders.function.js';\nimport { isLastRunMatched } from './isLastRunMatched.function.js';\nimport { getStringsId } from './getStringsId.function.js';\nconst lastRuns = {};\n/** Converts strings & values into dom meta */\nexport function getDomMeta(strings, values) {\n    const stringId = getStringsId(strings);\n    const lastRun = lastRuns[stringId];\n    const matches = lastRun && isLastRunMatched(strings, values, lastRun);\n    if (matches) {\n        return lastRun.domMetaMap;\n    }\n    const domMeta = htmlInterpolationToDomMeta(strings, values);\n    const map = replacePlaceholders(domMeta, values.length);\n    // Restore any sanitized placeholders in text nodes\n    restorePlaceholders(map);\n    const template = {\n        interpolation: undefined,\n        string: undefined,\n        strings,\n        values,\n        domMetaMap: map,\n    };\n    lastRuns[stringId] = template;\n    return map;\n}\n","export function getStringsId(strings) {\n    const array = strings.map(x => x.length);\n    array.push(strings.length);\n    return Number(array.join(''));\n}\n","export function isLastRunMatched(strings, values, lastRun) {\n    if (lastRun) {\n        if (lastRun.strings.length === strings.length) {\n            const stringsMatch = lastRun.strings.every((string, index) => \n            // string.length === strings[index].length\n            string === strings[index]);\n            if (stringsMatch && lastRun.values.length === values.length) {\n                return true; // performance savings using the last time this component was rendered\n            }\n        }\n    }\n    return false;\n}\n","import { getStringTag, getDomTag } from './getDomTag.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\n/** Used as html`<div></div>` */\nexport function html(strings, ...values) {\n    const stringTag = getStringTag(strings, values);\n    const templater = getTemplaterResult(PropWatches.NONE);\n    templater.tag = stringTag;\n    stringTag.templater = templater;\n    return stringTag;\n}\nhtml.dom = function (dom, ...values) {\n    return getDomTag(dom, values);\n};\n","import { getBaseSupport, getSupport, upgradeBaseToSupport } from './getSupport.function.js';\nimport { subscribeToTemplate } from '../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from './buildBeforeElement.function.js';\nimport { tags } from './tag.utils.js';\nimport { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { PropWatches } from './index.js';\nimport { runAfterRender } from './afterRender.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { paint, painting } from './paint.function.js';\nimport { initState, reState } from '../state/state.utils.js';\nimport { isTagComponent } from '../isInstance.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkTagValueChange, destorySupportByContextItem } from './checkTagValueChange.function.js';\nconst appElements = [];\n/**\n *\n * @param app taggedjs tag\n * @param element HTMLElement\n * @param props object\n * @returns\n */\nexport function tagElement(app, element, props) {\n    const appElmIndex = appElements.findIndex(appElm => appElm.element === element);\n    if (appElmIndex >= 0) {\n        const support = appElements[appElmIndex].support;\n        destroySupport(support, support.subject.global);\n        appElements.splice(appElmIndex, 1);\n        // an element already had an app on it\n        console.warn('Found and destroyed app element already rendered to element', { element });\n    }\n    // Create the app which returns [props, runOneTimeFunction]\n    let templater = (() => templater2(props));\n    templater.propWatch = PropWatches.NONE;\n    templater.tagJsType = ValueTypes.stateRender;\n    // todo: props should be an array\n    templater.props = [props];\n    templater.isApp = true;\n    // create observable the app lives on\n    const subject = getNewSubject(templater, element);\n    const global = subject.global;\n    initState(global.newest, setUseMemory.stateConfig);\n    let templater2 = app(props);\n    const isAppFunction = typeof templater2 == BasicTypes.function;\n    if (!isAppFunction) {\n        if (!isTagComponent(templater2)) {\n            templater.tag = templater2;\n            templater2 = app;\n        }\n        else {\n            global.newest.propsConfig = {\n                latest: [props],\n                castProps: [props],\n            };\n            templater.propWatch = templater2.propWatch;\n            templater.tagJsType = templater2.tagJsType;\n            templater.wrapper = templater2.wrapper;\n            templater = templater2;\n        }\n    }\n    const placeholder = document.createTextNode('');\n    tags.push((templater.wrapper || { original: templater }));\n    const support = runWrapper(templater, placeholder, element, subject, isAppFunction);\n    global.isApp = true;\n    if (isAppFunction) {\n        templater2.tag = support.templater.tag;\n    }\n    if (!element) {\n        throw new Error(`Cannot tagElement, element received is type ${typeof element} and not type Element`);\n    }\n    // enables hmr destroy so it can control entire app\n    ;\n    element.destroy = function () {\n        const events = global.events;\n        for (const eventName in events) {\n            const callback = events[eventName];\n            element.removeEventListener(eventName, callback);\n        }\n        global.events = {};\n        ++painting.locks;\n        const toAwait = destroySupport(support, global); // never return anything here\n        --painting.locks;\n        paint();\n        return toAwait;\n    };\n    ++painting.locks;\n    const newFragment = registerTagElement(support, element, global, templater, app, placeholder);\n    --painting.locks;\n    paint();\n    element.appendChild(newFragment);\n    return {\n        support,\n        tags,\n        ValueTypes,\n    };\n}\nfunction registerTagElement(support, element, global, templater, app, placeholder) {\n    const result = buildBeforeElement(support, { added: 0, removed: 0 }, element, undefined);\n    global.oldest = support;\n    global.newest = support;\n    let setUse = templater.setUse;\n    if (templater.tagJsType !== ValueTypes.stateRender) {\n        const wrap = app;\n        const original = wrap.original;\n        setUse = original.setUse;\n        original.isApp = true;\n    }\n    ;\n    element.setUse = setUse;\n    element.ValueTypes = ValueTypes;\n    appElements.push({ element, support });\n    const newFragment = document.createDocumentFragment();\n    newFragment.appendChild(placeholder);\n    for (const domItem of result.dom) {\n        putOneDomDown(domItem, newFragment);\n    }\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    return newFragment;\n}\nfunction getNewSubject(templater, appElement) {\n    const subject = {\n        value: templater,\n        checkValueChange: checkTagValueChange,\n        delete: destorySupportByContextItem,\n        withinOwnerElement: false, // i am the highest owner\n        renderCount: 0,\n        global: undefined, // gets set below in getNewGlobal()\n    };\n    const global = getNewGlobal(subject);\n    global.events = {};\n    loadNewBaseSupport(templater, subject, appElement);\n    return subject;\n}\nfunction loadNewBaseSupport(templater, subject, appElement) {\n    const global = subject.global;\n    const newSupport = getBaseSupport(templater, subject);\n    upgradeBaseToSupport(templater, newSupport, newSupport);\n    newSupport.appElement = appElement;\n    global.oldest = global.oldest || newSupport;\n    global.newest = newSupport;\n    return newSupport;\n}\nexport function runWrapper(templater, placeholder, appElement, subject, isAppFunction) {\n    subject.placeholder = placeholder;\n    const global = subject.global;\n    const oldest = global.oldest;\n    const isFirstRender = global.newest === oldest;\n    const newSupport = getSupport(templater, global.newest, global.newest.appSupport, // ownerSupport.appSupport as AnySupport,\n    subject);\n    if (!isFirstRender) {\n        reState(newSupport, global.newest, // global.oldest, // global.newest,\n        setUseMemory.stateConfig, oldest.state, oldest.states);\n    }\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return executeStateWrap(templater, isAppFunction, newSupport, subject, appElement);\n    }\n    // Call the apps function for our tag templater\n    const wrapper = templater.wrapper;\n    const nowSupport = wrapper(newSupport, subject);\n    runAfterRender(newSupport);\n    return nowSupport;\n}\nfunction putOneDomDown(dom, newFragment) {\n    if (dom.domElement) {\n        newFragment.appendChild(dom.domElement);\n    }\n    if (dom.marker) {\n        newFragment.appendChild(dom.marker);\n    }\n}\nfunction executeStateWrap(templater, isAppFunction, newSupport, subject, appElement) {\n    const result = (templater.wrapper || { original: templater });\n    if (!isAppFunction) {\n        const newSupport = loadNewBaseSupport(templater, subject, appElement);\n        runAfterRender(newSupport);\n        return newSupport;\n    }\n    executeWrap(templater, result, newSupport);\n    runAfterRender(newSupport);\n    return newSupport;\n}\n","export * from './tag/index.js';\nexport * from './errors.js';\nexport * from './isInstance.js';\nexport * from './state/index.js';\nexport { states } from './state/states.function.js';\nexport * from './subject/index.js';\nexport * from './interpolations/index.js';\nexport * from './tag/getSupport.function.js';\nexport * from './interpolations/attributes/howToSetInputValue.function.js';\nexport * from './interpolations/attributes/ElementTargetEvent.interface.js';\nimport { renderTagOnly } from './tag/render/renderTagOnly.function.js';\nimport { renderSupport } from './tag/render/renderSupport.function.js';\nimport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nimport { tagElement } from './tag/tagElement.js';\nimport { paint } from './tag/paint.function.js';\nexport { tagElement, renderWithSupport, renderSupport, renderTagOnly, paint, };\nexport const hmr = {\n    tagElement, renderWithSupport, renderSupport,\n    renderTagOnly, paint,\n};\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNewGlobal","subject","renderCount","global","RouteQuery","_name","empty","ImmutableTypes","BasicTypes","ValueTypes","tag","dom","templater","tagComponent","tagArray","subscribe","signal","renderOnce","stateRender","version","Date","now","paintRemoves","paintContent","setContent","paintAppends","paintInsertBefores","paintAfters","painting","locks","paint","index","length","toRemove","parentNode","removeChild","content","text","textNode","textContent","relative","appendChild","element","insertBefore","isSimpleType","value","string","number","boolean","isStaticTag","tagJsType","isTagComponent","tagType","isObject","function","isPromise","isFunction","then","object","isArray","Array","getSupportWithState","support","component","ownerSupport","newest","firstStatesHandler","setter","config","setUseMemory","stateConfig","states","statesIndex","args","reStatesHandler","oldStates","prevSupport","lastValues","_args","initState","handlers","handler","runFirstState","statesHandler","rearray","stateArray","reState","newSupport","prevState","prevStates","runRestate","StateEchoBack","getStateValue","state","callback","defaultValue","checkValue","getCallbackValue","restate","push","initValue","original","combineLatest","subjects","output","Subject","subscribeWith","valuesSeen","values","setValue","x","item","subscription","clones","shift","subscriptions","map","getSubscription","subscribers","countSubject","globalSubCount$","next","unsubscribe","findIndex","sub","splice","removeSubFromArray","valSub","add","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","newValue","methodResponse","setHandler","onSubscription","isSubject","constructor","this","orgCallback","lastValue","emit","set","bind","subs","toPromise","Promise","res","toCallback","runtimeSub","tagJsUnsub","setTimeout","pipe","operations","setMethods","all","arg","static","Subjective","_value","super","defineValueOn","tagClosed$","undefined","getSupportInCycle","updateBeforeTemplate","lastFirstChild","document","createTextNode","castTextValue","runBeforeDestroy","providers","provider","children","destroy$","getChildTagsToDestroy","childTags","child","lastArray","context","iSubs","forEach","iSub","getChildTagsToSoftDestroy","tags","subTags","smartRemoveKids","allPromises","destroys","promises","destroy","maybePromise","lastPromise","smartRemoveByContext","destroyClones","processContextDestroys","withinOwnerElement","destroyArray","elm","simpleValueElm","subGlobal","deleted","oldest","htmlDomMeta","clone","marker","domElement","destroySupport","compareArrayItems","removed","counts","newLength","at","lessLength","prevContext","destroyArrayItem","result","oldKey","newValueTag","isDiff","arrayValue","runArrayItemDiff","destroyArrayItemByGlobal","checkArrayValueChange","added","checkSimpleValueChange","contextItem","castedValue","oldClone","processUpdateRegularValue","deleteSimpleValue","processSubUpdate","updateExistingValue","subscribeToTemplate","appendTo","observable","onValue","processFirstSubjectValue","syncRun","setupSubscribeCallbackProcessor","deepClone","maxDepth","makeDeepClone","RegExp","create","getPrototypeOf","i","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","toString","getTime","isArrayDeepEqual","keys1","keys","keys2","includes","isObjectDeepEqual","cloneValueArray","cloneTagJsValue","howToSetInputValue","name","howToSetFirstInputValue","setAttribute","removeAttribute","specialAttribute","specialName","stagger","target","focus","select","names","split","style","classList","remove","processSpecialClass","Error","handleProviderChanges","appSupport","tagsWithProvider","memory","cSubject","getTagsWithProvider","getUpTags","supports","inlineHtml","isInlineHtml","locked","isComponent","continueUp","selfPropChange","nowProps","props","propsConfig","latestProps","latest","hasPropLengthsChanged","propWatch","PropWatches","IMMUTABLE","immutablePropMatch","SHALLOW","shallowPropMatch","deepCompareDepth","hasPropsToOwnerChanged","checkRenderUp","proSupports","prosWithChanges","hasChange","owner","providersChangeCheck","renderTagUpdateArray","mapTagUpdate","noData","promiseNoData","bindSubjectCallback","subjectFunction","bindTo","callbackResult","apply","eventHandlerSupport","last","checkAfterCallbackPromise","renderCallbackSupport","afterTagCallback","runTagCallback","tagFunction","actions","processNonDynamicAttr","attrName","howToSet","isSpecial","addSupportEventListener","eventName","appElement","replaceEventName","eventReg","events","listener","event","originalStopPropagation","stopPropagation","bubbleEvent","addEventListener","stopped","defaultPrevented","processAttributeFunction","newAttrValue","fun","isSpecialAttr","startsWith","specialAction","isSpecialAction","emptyCounts","processUpdateAttrContext","isNameOnly","attrValue","isNoDisplayValue","processNameOnlyAttrValue","updateNameOnlyAttrValue","processAttributeEmit","processAttribute","nameVar","getTagJsVar","addOneContext","isAttr","newValues","valueVar","checkValueChange","delete","contextValueSubject","blankHandler","processNameValueAttributeAttrSubject","processTagCallbackFun","processDynamicNameValueAttribute","wrapper","processAttributeSubjectValue","callbackFun","special","attrPart","tagJsVar","someDiv","createElement","attachDomElements","nodes","depth","node","v","isNaN","attachDynamicDom","newNode","nn","attachDomText","attachDomElement","ch","attr","tc","innerHTML","innerText","placeholder","_newValues","newContextItem","buildBeforeElement","destorySupportByContextItem","domMeta","thisTag","strings","getDomMeta","loadDomMeta","attachHtmlDomMeta","castProps","checkProp","alterProp","already","mem","wrap","toCall","callWith","noCycle","run","isInline","renderInlineHtml","renderExistingReadyTag","safeRenderSupport","callbackPropOwner","assign","getPropWrap","isSkipPropValue","subValue","afterCheckProp","checkArrayProp","getset","getOwnPropertyDescriptor","checkObjectProp","originalValue","newProp","executeWrap","useSupport","castedProps","originalFunction","stateless","isLikeTags","support0","support1","templater0","templater1","tag0","tag1","domMeta0","domMeta1","isLikeDomTags","like","strings0","strings1","every","values0","values1","valuesLengthsMatch","allVarsMatch","compareTo","isLikeValueSets","isLikeStringTags","checkTagValueChange","lastSupport","isTag","tryUpdateToTag","processNewSubjectTag","newSupportByTemplater","processTagInit","processTag","getTemplaterResult","processInit","oneRenderToSupport","DEEP","TagError","details","message","errorCode","ArrayNoKeyError","StateMismatchError","SyncCallbackError","checkStateMismatch","newStates","error","console","hint","throwStateMismatch","runAfterRender","renderTagOnly","reSupport","getSupport","processRenderOnceInit","processTagComponentInit","processResult","newPropsConfig","getCastedProps","renderWithSupport","appendIndex","processFirstTagResult","processFirstSubjectComponent","processReplacementComponent","tagCount","parentWrap","innerTagWrap","getTagWrap","setUse","tagIndex","tagUseFn","shallowCompareDepth","preCastedProps","lastPropsConfig","lastCastProps","syncFunctionProps","processReplaceTagResult","syncPriorPropFunction","priorProp","oldProp","updateExistingArray","hasSetter","updateExistingObject","updateExistingTagComponent","oldWrapper","newWrapper","isSameTag","skipComparing","oldestSupport","swapTags","hasChanged","newTemplater","pastCloneProps","propsChanged","hasPropChanges","hasSupportChanged","blocked","newProps","syncSupports","newPropsArray","priorPropsArray","newArray","softDestroySupport","softDestroyOne","cGlobal","lastTemplater","lastTag","isLikeTag","lastDom","lastStrings","oldLength","checkTagSoftDestroy","pIndex","pLen","pcLen","moveProviders","lastOwnerSupport","wasLikeTags","processUpdateOneContext","updateSupportBy","olderSupport","newerSupport","tempTag","updateSupportValuesBy","len","processUpdateContext","use","route","_routeProps","app","_routeTag","deepPropWatch","immutableProps","watchProps","oneRenderFunction","renderFunction","fooCounts","pop","ownGlobal","NONE","castedPastProps","compare","subCastedProps","subCompareProps","matched","entries","compareProps","onePropCompare","deepPropChangeCompare","onDelete","compareOriginal","pastProp","obEntries","subItem","objectItemMatches","pastValue","getBaseSupport","baseSupport","upgradeBaseToSupport","clonePropsBy","getHtmlSupport","getFakeTemplater","forceUpdateExistingValue","ignoreOrDestroyed","processTagArray","before","processNowRegularValue","updateToDiffValue","updateContextItemBySupport","valueSupport","handleStillTag","prepareUpdateToComponent","updateToTag","processNewTag","noLast","runtimeInsertBefore","filteredLast","newRemoved","reviewArrayItem","array","previous","itemSubject","couldBeSame","processAddTagArrayItem","reviewPreviousArrayItem","subPlaceholder","processNewArrayValue","processFirstRegularValue","syncStatesArray","from","onto","syncStates","got","oldSyncStates","stateFrom","stateTo","intoStates","statesFrom","fromValue","oldValues","oldGetCallback","stateFromTarget","getIndex","newSetCallback","_","setupSubscribe","setup","hasEmitted","valueChangeHandler","newestSupport","getLastValue","newComponent","processSubscribe","Observable","processSignal","initialValue","Signal","Set","unsub","ValueSubject","ValueSubjective","willCallback","utils","willPromise","willSubscribe","watch","currentValues","setupWatch","defaultFinally","init","final","pastResult","previousValues","defineOnMethod","getWatch","attachTo","oldWatch","firstSupport","oldState","method","nowSupport","setTo","newestState","letProp","propStates2","passes","passedOn","nowValues","passed","_x","direction","newWatch","oldestState","constructMethod","stateDiffMemory","stateDiff","oldStateCount","instance","cm","inject","ownerProviders","find","msg","warn","syncError","createTrigger","finally","callbackStateUpdate","callbackMaker","onInit","onDestroy","processDomTagInit","tagFakeTemplater","variablePrefix","variableSuffix","getStringTag","html","getDomTag","fragFindAny","ondoubleclick","regexAttr","regexTagOrg","parseHTML","valuePositions","elements","stack","currentElement","valueIndex","position","regexTag","replace","removeCommentRegX","match","preprocessTagsInComments","tagMatch","exec","fullMatch","tagName","attrString","isClosingTag","isSelfClosing","endsWith","slice","trim","splitByTagVar","pushTextTo","attributes","attrMatch","notEmpty","noValue","lowerName","toLowerCase","fixedName","cleanEventName","valueName","search","attrSet","pushTo","postprocessTagsInComments","inputString","filter","part","fragReplacer","safeVar","htmlInterpolationToPlaceholders","results","fragment","diff","balanceArrayByArrays","addPlaceholders","placeholderRegex","replacePlaceholders","valueCount","currentTail","loopTail","attrs","processAttributes","innerLoopTail","examineChild","textChild","secondMatch","wIndex","parseInt","varContent","after","lastIndex","safeReplacer","traverseAndRestore","_match","lastRuns","stringId","Number","join","getStringsId","lastRun","matches","isLastRunMatched","domMetaMap","htmlInterpolationToDomMeta","template","interpolation","stringTag","appElements","tagElement","appElmIndex","appElm","templater2","isApp","loadNewBaseSupport","getNewSubject","isAppFunction","runWrapper","removeEventListener","toAwait","newFragment","createDocumentFragment","domItem","putOneDomDown","registerTagElement","isFirstRender","executeStateWrap","hmr"],"sourceRoot":""}