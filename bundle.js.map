{"version":3,"file":"bundle.js","mappings":"AACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,KCA3E,SAASI,EAAaC,GAIzB,OAFAA,EAAQC,YAAcD,EAAQC,aAAe,EAEtCD,EAAQE,OAAS,CAAC,CAC7B,C,uvBCLO,MAAMC,EACT,GAAAV,CAAIW,GACA,MAAO,MACX,ECHG,MAAMC,EAAQ,GACd,IAAIC,EAOAC,GANX,SAAWD,GACPA,EAAuB,OAAI,SAC3BA,EAAuB,OAAI,SAC3BA,EAAwB,QAAI,UAC5BA,OAAe,GAAe,WACjC,CALD,CAKGA,IAAmBA,EAAiB,CAAC,IAExC,SAAWC,GACPA,EAAqB,SAAI,WACzBA,EAAiB,KAAI,OACrBA,EAAoB,QAAI,UACxBA,EAAmB,OAAI,QAC1B,CALD,CAKGA,IAAeA,EAAa,CAAC,IAChC,MAEaC,EAAa,CACtBC,IAAK,OACLC,IAAK,MACLC,UAAW,YACXC,aAAc,eACdC,SAAU,WAGVC,UAAW,YACXC,OAAQ,SACRC,WAAY,aACZC,YAAa,cACbC,QAdYC,KAAKC,OCbd,SAASC,EAAmBC,EAASC,EAAMC,GAC9C,GAAaC,MAAK,IAAMC,EAAwBJ,EAASC,EAAMC,IACnE,CACO,SAASE,EAAwBJ,EAASC,EAAMC,QACrCG,IAAVH,IAAiC,IAAVA,GAA6B,OAAVA,EAI9CF,EAAQM,aAAaL,EAAMC,GAHvBF,EAAQO,gBAAgBN,EAIhC,CCTO,SAASO,EAAiBP,EAAMC,EAAOF,EAASS,EAAaC,EAASC,GACzE,OAAQF,GAEJ,IAAK,OAAQ,CACT,MAAMG,EAAUD,EAAOE,MASvB,YAPAC,GAAYX,MAAK,WAKbD,EAJc,CACVa,OAAQf,EACRY,WAGR,GAEJ,CACA,IAAK,UAAW,CACZ,MAAMA,IAAYD,EAAOK,QACnBpC,EAAS8B,EAAQhC,QAAQE,OAS/B,OARAA,EAAOqC,SAAWrC,EAAOqC,UAAY,QACrCrC,EAAOqC,SAASd,MAAK,IAKVD,EAJO,CACVa,OAAQf,EACRY,aAKZ,CACA,IAAK,YAED,YADAE,GAAYX,MAAK,IAAMH,EAAQkB,UAEnC,IAAK,aAED,YADAJ,GAAYX,MAAK,IAAMH,EAAQmB,WAEnC,IAAK,QAAS,CACV,MAAMC,EAAQnB,EAAKoB,MAAM,KAEzB,YADA,GAAalB,MAAK,IAAMH,EAAQsB,MAAMF,EAAM,IAAMlB,GAEtD,CACA,IAAK,QAED,YAIZ,SAA6BD,EAAMC,EAAOF,GACtC,MAAMoB,EAAQnB,EAAKoB,MAAM,KAGzB,GAFAD,EAAMG,QAEFrB,EAAO,CACP,IAAK,MAAMD,KAAQmB,EACf,GAAajB,MAAK,IAAMH,EAAQwB,UAAUC,IAAIxB,KAElD,MACJ,CAEA,IAAK,MAAMA,KAAQmB,EACf,GAAajB,MAAK,IAAMH,EAAQwB,UAAUE,OAAOzB,IAEzD,CAnBY0B,CAAoB1B,EAAMC,EAAOF,GAGzC,MAAM,IAAI4B,MAAM,gCAAgCnB,MAAgBR,IACpE,CC7CO,SAAS4B,EAAa3B,GACzB,OAAQA,GACJ,KAAKlB,EAAe8C,OACpB,KAAK9C,EAAe+C,OACpB,KAAK/C,EAAegD,QAChB,OAAO,EAEf,OAAO,CACX,CAEO,SAASC,EAAY/B,GACxB,IAAKA,EACD,OAAO,EAGX,OADkBA,EAAMgC,WAEpB,KAAKhD,EAAWE,IAChB,KAAKF,EAAWC,IAChB,KAAKD,EAAWG,UACZ,OAAO,EAEf,OAAO,CACX,CAEO,SAAS8C,EAAejC,GAC3B,MAAMkC,EAAUlC,GAAOgC,UACvB,OAAOE,IAAYlD,EAAWI,cAAgB8C,IAAYlD,EAAWS,WACzE,CAEO,SAAS,EAAkBjB,GAC9B,OAAO2D,EAAS3D,WAAmBA,EAAQc,YAAcP,EAAWqD,QACxE,CACO,SAASC,EAAUrC,GACtB,OAAOA,GAASsC,EAAWtC,EAAMuC,KACrC,CACO,SAASD,EAAWtC,GACvB,cAAcA,IAAUjB,EAAWqD,QACvC,CACO,SAASD,EAASnC,GACrB,cAAc,IAAYjB,EAAWyD,QAAoB,OAAVxC,CACnD,CACO,SAASyC,EAAQzC,GACpB,OAAO0C,MAAMD,QAAQzC,EACzB,CC1CO,SAAS2C,EAAUzE,EAAK0E,GAE3B,OAAOC,EAAc3E,EAAK0E,EAC9B,CACA,SAASC,EAAc3E,EAEvB0E,GAEI,GAAY,OAAR1E,UAAuBA,IAAQa,EAAWyD,OAC1C,OAAOtE,EAQX,GAAI0E,EAAW,EACX,OAAO1E,EAGX,GAAIA,aAAeyB,KACf,OAAO,IAAIA,KAAKzB,GAEpB,GAAIA,aAAe4E,OACf,OAAO,IAAIA,OAAO5E,GAGtB,MAAM6E,EAAQN,EAAQvE,GAAO,GAAKJ,OAAOkF,OAAOlF,OAAOmF,eAAe/E,IAEtE,GAAIuE,EAAQvE,GACR,IAAK,IAAIgF,EAAI,EAAGA,EAAIhF,EAAIiF,OAAQD,IAC5BH,EAAMG,GAAKL,EAAc3E,EAAIgF,GAAIN,EAAW,QAIhD,IAAK,MAAMhF,KAAOM,EACVJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKN,KAC1CmF,EAAMnF,GAAOiF,EAAc3E,EAAIN,GAAMgF,EAAW,IAI5D,OAAOG,CACX,CACO,SAASK,EAAUC,EAAMC,EAAMV,GAClC,OAAOW,EAAYF,EAAMC,EAAMV,EACnC,CACA,SAASW,EAAYF,EAAMC,EAE3BV,GAEI,QADoBS,IAASC,IA2DRE,EA1DcH,EA0DTI,EA1DeH,GA2DpBhB,EAAWkB,KAAQlB,EAAWmB,IAC5BD,EAAIE,aAAeD,EAAIC,eAvD1Cd,EAAW,UAGJS,IAAStE,EAAWyD,eAAiBc,IAASvE,EAAWyD,SAE5Da,aAAgB1D,MAAQ2D,aAAgB3D,KACjC0D,EAAKM,YAAcL,EAAKK,UAK/BlB,EAAQY,IAASZ,EAAQa,GA+BrC,SAA0BD,EAAMC,EAAMV,GAClC,GAAIS,EAAKF,SAAWG,EAAKH,OACrB,OAAO,EAEX,IAAK,IAAID,EAAI,EAAGA,EAAIG,EAAKF,OAAQD,IAC7B,IAAKK,EAAYF,EAAKH,GAAII,EAAKJ,GAAIN,EAAW,GAC1C,OAAO,EAGf,OAAO,CACX,CAxCmBgB,CAAiBP,EAAMC,EAAMV,EAAW,IAE1CH,EAAQY,KAASZ,EAAQa,IAS1C,SAA2BD,EAAMC,EAEjCV,GACI,MAAMiB,EAAQ/F,OAAOgG,KAAKT,GACpBU,EAAQjG,OAAOgG,KAAKR,GAC1B,GAAqB,IAAjBO,EAAMV,QAAiC,IAAjBY,EAAMZ,OAC5B,OAAO,EAEX,GAAIU,EAAMV,SAAWY,EAAMZ,OACvB,OAAO,EAEX,IAAK,MAAMvF,KAAOiG,EAAO,CAErB,IADiBE,EAAMC,SAASpG,KACd2F,EAAYF,EAAKzF,GAAM0F,EAAK1F,GAAMgF,EAAW,GAC3D,OAAO,CAEf,CACA,OAAO,CACX,CAtBeqB,CAAkBZ,EAAMC,EAAMV,EAAW,KAkCxD,IAAyBY,EAAKC,CA/B9B,CC/EO,SAASS,EAAiB1D,EAAS9B,GACtC,MAAMyF,EAAYzF,EAAOyF,UACzB,GAAIA,EACA,IAAK,MAAMC,KAAYD,EACnB,IAAK,IAAIE,EAAQD,EAASE,SAASnB,OAAS,EAAGkB,GAAS,IAAKA,EAAO,CAClDD,EAASE,SAASD,GACtB7F,QAAQE,SAAWA,GACzB0F,EAASE,SAASC,OAAOF,EAAO,EAExC,CAGJ3F,EAAO8F,UACP9F,EAAO8F,SAASC,OAEpBjE,EAAQhC,QAAQC,YAAc,CAClC,CCdO,SAASiG,EAAeC,EAAWC,GACtC,IAAK,MAAMC,KAASF,EAAW,CAE3B,MAAMG,EAAYD,EAAMC,UACxB,GAAIA,EAAW,CAEXJ,EAAeI,EAAWF,GAC1B,QACJ,CACA,GAAIC,EAAM7E,OAAOgC,YAAchD,EAAWM,UAAW,CACjDuF,EAAME,OAAOF,EAAOD,GACpB,QACJ,CACA,MAAMlG,EAASmG,EAAMnG,OACrB,IAAKA,EACD,SAEJ,MAAM8B,EAAU9B,EAAOsG,OACjBC,EAAQvG,EAAOwG,cACjBD,GACAA,EAAME,QAAQC,GAEdnD,EAAezB,EAAQrB,YACvB+E,EAAiB1D,EAAS9B,GAI9BgG,EAFgBhG,EAAO2G,QAEC7E,EAC5B,CACJ,CACO,SAAS8E,EAA0BX,EAAWY,EAAO,GAAIC,EAAO,IACnE,IAAK,MAAMX,KAASF,EAAW,CAC3B,MAAMjG,EAASmG,EAAMnG,OACrB,IAAKA,EACD,SAEJ,MAAM8B,EAAU9B,EAAOsG,OACvB,GAAIxE,EAAS,CACT+E,EAAKtF,KAAKO,GACV,MAAMyE,EAAQvG,EAAOwG,cACjBD,GACAO,EAAKvF,QAAQgF,EAErB,CACA,MAAMQ,EAAU/G,EAAO2G,QACnBI,GACAH,EAA0BG,EAASF,EAAMC,EAEjD,CACA,MAAO,CAAED,OAAMC,OACnB,CACO,SAASJ,EAAgBM,GAC5BA,EAAKC,aACT,CCtDO,SAASC,EAAkB5F,EAAOqE,EAAOS,EAAWhE,EAASL,GAChE,MAAMoF,EAAY7F,EAAMmD,OAAS,EAC3B2C,EAAKzB,EAAQvD,EACbiF,EAAaD,EAAK,GAAKD,EAAYC,EACnCE,EAAclB,EAAUT,GAC9B,GAAI0B,EAEA,OADAE,EAAiBD,EAAavF,GACvB,EAEX,MAEMyF,EAGV,SAA0BC,EAAQC,EAAaJ,EAAavF,EAAQqE,EAAWT,GAC3E,MAAMgC,EAASD,GAAeD,IAAWC,EAAYE,WACrD,GAAID,EAGA,OAFAJ,EAAiBD,EAAavF,GAC9BqE,EAAUP,OAAOF,EAAO,GACjB,EAEX,OAAO,CACX,CAXmBkC,CAFAP,EAAYhG,MAAMsG,WACbtG,EAAMqE,GAC2B2B,EAAavF,EAAQqE,EAAWT,GACrF,OAAO6B,CACX,CAUO,SAASD,EAAiBO,EAAM/F,IAKvC,SAAkC/B,EAAQ8H,GACtC,GAAI9H,EAAQ,CAER+H,EADgB/H,EAAOgI,OACChI,EAC5B,KACK,CACD,MAAMoB,EAAU0G,EAAKG,sBACdH,EAAKG,eACZC,GAAc3G,KAAK,CACf4G,UAAWC,GACXC,KAAM,CAACjH,IAEf,CACJ,CAhBIkH,CADeR,EAAK9H,OACa8H,KAC/B/F,EAAOK,OACb,CC1BO,SAASmG,EAAsBC,EAAU1I,GAE5C,IAAKiE,EAAQyE,GAAW,CAGpB,OADAC,EAAa3I,EADKA,EAAQsG,WAEnB,CACX,CACA,OAAO,CACX,CACO,SAASqC,EAAa3I,EAASsG,GAClC,MAAMrE,EAAS,CAAEE,MAAO,EAAGG,QAAS,GACpC,IAAK,IAAIuD,EAAQ,EAAGA,EAAQS,EAAU3B,SAAUkB,EAC5C4B,EAAiBnB,EAAUT,GAAQ5D,UAEhCjC,EAAQsG,SACnB,CCfO,SAASsC,EAAgB1I,EAAQ2I,GACpC,MAAMhC,EAAU3G,EAAO2G,QAGjBtE,EAAWrC,EAAOqC,SACxB,GAAIA,EACA,OAcR,SAAgCA,EAAUrC,EAAQ2I,GAG9C,GAFAC,EAASnE,OAAS,EAClBpC,EAASoE,QAAQoC,GACbD,EAASnE,OAAQ,CACjB,MAAMqE,EAAcC,QAAQC,IAAIJ,GAC3B/E,MAAK,OACJoF,GAASC,MAEXC,EAAqBnJ,EAAO2G,QAASgC,GACrCS,EAAcpJ,KACZiJ,GAASC,MACXG,IAAO,IAIX,YADAV,EAAYpH,KAAKuH,EAErB,GACEG,GAASC,MACXC,EAAqBnJ,EAAO2G,QAASgC,GACrCS,EAAcpJ,KACZiJ,GAASC,MACXG,IACJ,CApCeC,CAAuBjH,EAAUrC,EAAQ2I,GAEpDQ,EAAqBxC,EAASgC,GAC9BS,EAAcpJ,EAClB,CACA,MAAM4I,EAAW,GACjB,SAASC,EAAYU,GACjB,MAAMC,EAAeD,IACHC,aAAwBT,SAEtCH,EAASrH,KAAKiI,EAEtB,CAyBA,SAASL,EAAqBxC,EAASgC,GACnC,IAAK,MAAM7I,KAAW6G,EAAS,CAC3B,GAAI7G,EAAQ2J,mBACR,SAEJ,MAAMrD,EAAYtG,EAAQsG,UAC1B,GAAIA,EAAW,CACXqC,EAAa3I,EAASsG,GACtB,QACJ,CAEA,MAAMsD,EAAM5J,EAAQmI,eACpB,GAAIyB,EAAK,QACE5J,EAAQmI,eACfC,GAAc3G,KAAK,CACf4G,UAAWC,GACXC,KAAM,CAACqB,KAEX,QACJ,CACA,MAAMC,EAAY7J,EAAQE,OAC1B,QAAkByB,IAAdkI,EACA,SAEJ,IAA0B,IAAtBA,EAAUC,QACV,SAEJD,EAAUC,SAAU,EACLD,EAAU3B,QAErBU,EAAgBiB,EAAWhB,EAGnC,CACJ,CAEA,SAASS,EAAcpJ,GACCA,EAAO6J,YAEfpD,QAAQqD,EACxB,CACA,SAASA,EAAazF,GAClB,MAAM0F,EAAS1F,EAAM0F,OACjBA,GACA7B,GAAc3G,KAAK,CACf4G,UAAWC,GACXC,KAAM,CAAC0B,KAGf,MAAMvJ,EAAM6D,EAAM2F,WACbxJ,GAGL0H,GAAc3G,KAAK,CACf4G,UAAWC,GACXC,KAAM,CAAC7H,IAEf,CCpGO,SAASuH,EAAejG,EAAS9B,GACpC,MAAMF,EAAUgC,EAAQhC,QACxBE,EAAO4J,SAAU,EACjB9J,EAAQC,YAAc,EACtB,MAAM6I,EAAW,GAOjB,OALA5C,EADgBhG,EAAO2G,QACC7E,GACpB9B,EAAO8F,UACPN,EAAiB1D,EAAS9B,GAE9B0I,EAAgB1I,EAAQ4I,GACjBA,CACX,CCdO,SAASqB,EAAWC,EAC3BC,GACI,MAAMC,EAAaF,EAASzJ,UACtB4J,EAAaF,EAAS1J,UACtB6J,EAAOF,GAAY7J,KAAO2J,EAC1BK,EAAOF,EAAW9J,IACxB,GAAI6J,GAAY9G,YAAchD,EAAWS,YACrC,OAAOqJ,EAAW5J,MAAQ6J,EAAW7J,IAEzC,OAAQ8J,EAAKhH,WACT,KAAKhD,EAAWE,IACZ,OAAI+J,GAAMjH,YAAchD,EAAWE,KAaxC,SAAuB8J,EAAMC,GAChC,MAAMC,EAAWF,EAAK9J,IAChBiK,EAAWF,EAAK/J,IACtB,OAAOgK,IAAaC,CACxB,CAdmBC,CAAcJ,EAAMC,GAE/B,KAAKjK,EAAWC,IAAK,CACjB,MAAMoK,EAalB,SAA0BL,EAAMC,EAAML,EACtCC,GACI,MAAMS,EAAWN,EAAKO,QAChBC,EAAWP,EAAKM,QACtB,GAAID,EAASnG,SAAWqG,EAASrG,OAC7B,OAAO,EAIX,IAF2BmG,EAASG,OAAM,CAAC7H,EAAQyC,IAAUmF,EAASnF,GAAOlB,SAAWvB,EAAOuB,SAG3F,OAAO,EAEX,MAAMuG,EAAUd,EAASzJ,UAAUwK,QAAUX,EAAKW,OAC5CC,EAAUf,EAAS1J,UAAUwK,QAAUV,EAAKU,OAClD,OAEG,SAAyBD,EAASE,GACrC,MAAMC,EAAqBH,EAAQvG,SAAWyG,EAAQzG,OACtD,IAAK0G,EACD,OAAO,EAEX,MAAMC,EAAeF,EAAQH,OAAM,SAA2BzJ,EAAOqE,GACjE,MAAM0F,EAAYL,EAAQrF,GAE1B,UAD2B,IAAYtF,EAAWqD,iBAAmB,IAAgBrD,EAAWqD,SAC/E,CAEb,SADoBpC,EAAM0D,aAAeqG,EAAUrG,WAKvD,CACA,OAAO,CACX,IACA,GAAIoG,EACA,OAAO,EAEX,OAAO,CACX,CAvBWE,CAAgBN,EAASE,EACpC,CA5ByBK,CAAiBjB,EAAMC,EAAML,EAAUC,GACpD,OAAOQ,CACX,EAEJ,MAAM,IAAI3H,MAAM,wBAAwBsH,EAAKhH,YACjD,CCpBO,SAASkI,EAAgBP,GAC5B,OAAOA,EAAOQ,IAAIC,EACtB,CAEO,SAASA,EAAgBpK,EAAO4C,GACnC,MAAM3D,EAAMe,EACNgC,EAAYhC,GAAOgC,UACzB,GAAIA,EACA,OAAQA,GACJ,KAAKhD,EAAWO,OAChB,KAAKP,EAAWM,UAChB,KAAKN,EAAWS,YACZ,OACJ,KAAKT,EAAWE,IAChB,KAAKF,EAAWC,IAChB,KAAKD,EAAWG,UACZ,OAAO+K,EAAgBjL,EAAI0K,QAGvC,OAAIlH,EAAQzC,GACDkK,EAAgBjL,GAEpB0D,EAAU3C,EAAO4C,EAC5B,CCAA,SAASyH,EAAcC,GACnB,OAAOF,EAAgBE,EAAGC,GAC9B,CACA,SAASC,EAAWC,GAChB,OAAOL,EAAgBK,EAAOC,GAClC,CC9BO,SAASC,EAAcC,GAC1B,MAAMC,EAAS,IAAIC,EA6BnB,OADAD,EAAOE,cA3BYC,IACf,MAAMC,EAAa,GACbtB,EAAS,GACTuB,EAAW,CAACZ,EAAGjG,KACjB4G,EAAW5G,IAAS,EACpBsF,EAAOtF,GAASiG,EAEhB,GADqBW,EAAW9H,SAAWyH,EAASzH,OACpD,CAGA,IAAK,MAAMqD,KAAQyE,EACf,IAAKzE,EACD,OAIRwE,EAASrB,EAAQwB,EAPjB,CAO8B,EAE5BC,EAAS,IAAIR,GAEbO,EADWC,EAAO/J,QACM/B,WAAUgL,GAAKY,EAASZ,EAAG,KACnDpF,EAAgBkG,EAAOjB,KAAI,CAAC3L,EAAS6F,IAChC7F,EAAQc,WAAUgL,GAAKY,EAASZ,EAAGjG,EAAQ,OAGtD,OADA8G,EAAajG,cAAgBA,EACtBiG,CAAY,EAGhBN,CACX,CCzBO,SAASQ,EAAgB7M,EAASwM,EAAUM,GAC/C,MAAMC,EAAeT,EAAQU,gBAC7BV,EAAQU,gBAAgB/G,KAAK8G,EAAavL,MAAQ,GAClD,MAAMmL,EAAe,WACjBA,EAAaxF,aACjB,EAcA,OAbAwF,EAAaH,SAAWA,EACxBG,EAAajG,cAAgB,GAE7BiG,EAAaxF,YAAc,WACvB,OA0BR,SAAqBwF,EAAcG,EAAaN,IA1ChD,SAA4BM,EAAaN,GACrC,MAAM3G,EAAQiH,EAAYG,WAAUC,GAAOA,EAAIV,WAAaA,KAC7C,IAAX3G,GACAiH,EAAY/G,OAAOF,EAAO,EAElC,CAsCIsH,CAAmBL,EAAaN,GAChC,MAAMY,EAASd,EAAQU,gBACvBV,EAAQU,gBAAgB/G,KAAKmH,EAAO5L,MAAQ,GAE5CmL,EAAaxF,YAAc,IAAMwF,EAEjC,MAAMjG,EAAgBiG,EAAajG,cACnC,IAAK,MAAMwG,KAAOxG,EACdwG,EAAI/F,cAER,OAAOwF,CACX,CAtCexF,CAAYwF,EAAcG,EAAaN,EAClD,EACAG,EAAa5J,IAAOmK,IAChBP,EAAajG,cAAcjF,KAAKyL,GACzBP,GAEXA,EAAa1G,KAAQzE,IACjBgL,EAAShL,EAAOmL,EAAa,EAE1BA,CACX,CACO,SAASU,EAAgB7L,EAAO8L,EAASC,GAC5C,MAAMC,EAAe,IAAIF,GACnBG,EAAcD,EAAa3K,QAC3BoD,EAAQyC,IACV,GAAI8E,EAAa7I,OACb,OAAO0I,EAAgB3E,EAAU8E,EAAcD,GAEnDA,EAAW7E,EAAS,EAExB,IAAIgF,EAAUzH,EACd,MAEM0H,EAAiBF,EAAYjM,EADjB,CAAEoM,WADA9B,GAAM4B,EAAU5B,EACJ7F,SAEhCyH,EAAQC,EACZ,CCvCO,MAAMrB,EACT9K,MACAqM,eAEAP,QAAU,GACVQ,WAAY,EAEZhB,YAAc,GACdP,cACA,WAAAwB,CAAYvM,EAEZqM,GACIG,KAAKxM,MAAQA,EACbwM,KAAKH,eAAiBA,CAE1B,CACA,SAAA/M,CAAU0L,GACN,MAAMG,EAAeE,EAAgBmB,EAAMxB,EAAUwB,KAAKlB,aAEpDP,EAAgByB,KAAKzB,cAC3B,GAAIA,EAAe,CAEf,GAAIyB,KAAKV,QAAQ3I,OAAQ,CACrB,MAAMsJ,EAAczB,EACpBA,EAAYhL,IACR6L,EAAgB7L,EAAOwM,KAAKV,SAASY,GAAaD,EAAYC,EAAWvB,IAAc,CAE/F,CACA,OAAOJ,EAAcC,EACzB,CAKA,OAJAwB,KAAKlB,YAAYrL,KAAKkL,GAClBqB,KAAKH,gBACLG,KAAKH,eAAelB,GAEjBA,CACX,CACA,IAAA1G,CAAKzE,GACDwM,KAAKxM,MAAQA,EACbwM,KAAKG,MACT,CACAC,IAAMJ,KAAK/H,KAAKoI,KAAKL,MACrB,IAAAG,GACI,MAAM3M,EAAQwM,KAAKxM,MAGbwF,EAAOgH,KAAKlB,YAElB,IAAK,MAAMI,KAAOlG,EACdkG,EAAIV,SAAShL,EAAO0L,EAE5B,CACA,SAAAoB,GACI,OAAO,IAAIrF,SAAQsF,IACfP,KAAKlN,WAAU,CAACgL,EAAGa,KACfA,EAAaxF,cACboH,EAAIzC,EAAE,GACR,GAEV,CAEA,UAAA0C,CAAWhC,GACP,MAAMG,EAAeqB,KAAKlN,WAAU,CAACgL,EAAG2C,KACpC,MAAMC,EAAaD,GAAYtH,YAC3BuH,EACAA,IAGAC,YAAW,IAAMhC,EAAaxF,eAAe,GAEjDqF,EAASV,EAAE,IAEf,OAAOkC,IACX,CACA,IAAAY,IAAQC,GACJ,MAAM7O,EAAU,IAAIsM,EAAQ0B,KAAKxM,OAIjC,OAHAxB,EAAQ8O,WAAWD,GACnB7O,EAAQuM,cAAiBT,GAAMkC,KAAKlN,UAAUgL,GAC9C9L,EAAQiG,KAAO6F,GAAKkC,KAAK/H,KAAK6F,GACvB9L,CACX,CACA,UAAA8O,CAAWD,GACPb,KAAKV,QAAUuB,CACnB,CACA,UAAO3F,CAAIX,GAWP,OAAO4D,EAVU5D,EAAKoD,KAAIoD,IACtB,GAAI,EAAkBA,GAClB,OAAOA,EAMX,OAJU,IAAIzC,EAAQyC,GAAKpC,IACvBA,EAAa1G,KAAK8I,GACXpC,IAEH,IAGhB,CACAqC,uBAAyB,IAAI1C,EAAQ,GAElC,MAAM2C,UAAmB3C,EAC5B9K,MACAqM,eACAqB,OACA,WAAAnB,CAAYvM,EAEZqM,GACIsB,MAAM3N,EAAOqM,GACbG,KAAKxM,MAAQA,EACbwM,KAAKH,eAAiBA,EACtBG,KAAKkB,OAAS1N,EACd4N,EAAcpB,KAClB,CACA,IAAA/H,CAAKzE,GACDwM,KAAKkB,OAAS1N,EACdwM,KAAKG,MACT,CACA,IAAAA,GACI,MAAM3M,EAAQwM,KAAKkB,OAGblI,EAAOgH,KAAKlB,YAElB,IAAK,MAAMI,KAAOlG,EACdkG,EAAIV,SAAShL,EAAO0L,EAE5B,EAEG,SAASkC,EAAcpP,GAC1BV,OAAOC,eAAeS,EAAS,QAAS,CAEpC,GAAAoO,CAAI5M,GACAxB,EAAQkP,OAAS1N,EACjBxB,EAAQmO,MACZ,EAEA1O,IAAG,IACQO,EAAQkP,QAG3B,CC1IO,SAASG,EAAe1O,EAAWX,EAASsP,GAC/C,MAAMC,EAAc,CAChB5O,YACAX,UACAsP,cACAE,gBAAY7N,GAGVzB,EAASF,EAAQE,OAGvB,OAFAA,EAAOuP,QAAU,GACjBvP,EAAO8F,SAAW,IAAIsG,EACfiD,CACX,CAEO,SAASG,EAAqB/O,EACrCqB,EAASwN,EAAYF,GAGjBtN,EAAQwN,WAAaA,EACrB,MAAMvD,EAAQtL,EAAUsL,MAIxB,OAHIA,IACAjK,EAAQ2N,YJpBT,SAAsB3N,EAASiK,EAAO2D,GACzC,MAAMjP,EAAYqB,EAAQrB,UAC1B,GAAIA,EAAU6C,YAAchD,EAAWS,YAAvC,CAGA,OAAQN,EAAUkP,WACd,KAAKC,GAAYC,UACb,OAAO/N,EAAQ2N,YAAc,CACzBK,OAAQ/D,EACR2D,aAER,KAAKE,GAAYG,QACb,OAAOjO,EAAQ2N,YAAc,CACzBK,OAAQ/D,EAAMN,IAAIE,GAClB+D,aAGZ,OAAO5N,EAAQ2N,YAAc,CACzBK,OAAQ/D,EAAMN,IAAIK,GAClB4D,YAfJ,CAiBJ,CID8BM,CAAalO,EAASiK,EAAOqD,IAEhDtN,CACX,CACO,SAASmO,EAAkBxP,EAClCyF,EAAcoJ,EAAYxP,EAASsP,GAC/B,MAAMtN,EAAU,CACZrB,YACAX,UACAsP,cACAE,gBAAY7N,GAIhB,OAFAK,EAAQoE,aAAeA,EACvBpE,EAAQwN,WAAaA,EACdxN,CACX,CCjCO,SAASoO,EAAmBpO,EAASC,EAAQoO,EAAUC,GAC1D,MAAMtQ,EAAUgC,EAAQhC,QACxBA,EAAQuG,OAASgK,GACjB,MAAMrQ,EAASF,EAAQE,OACvBA,EAAOgI,OAASlG,EAChB9B,EAAOsG,OAASxE,IACdmH,GAASC,MACX,MAAM1B,EAMV,SAA2B1F,EAASC,EAAQoO,EAAUC,GAClD,MAAME,EASV,SAAqBxO,GACjB,MAAMrB,EAAYqB,EAAQrB,UACpB8P,EAAU9P,EAAUF,IAC1B,GAAIgQ,EAAQjN,YAAchD,EAAWE,IACjC,OAAO+P,EAAQ/P,IAEnB,MAAMqK,EAAU0F,EAAQ1F,QACxB,OAAO2F,GAAW3F,EAAS0F,EAAQtF,OACvC,CAjBoBwF,CAAY3O,GACtByO,EAAUzO,EAAQrB,UAAUF,IAC5B0K,EAASsF,EAAQtF,OACjBtE,EAAU,GACV3G,EAAS8B,EAAQhC,QAAQE,OAC/BA,EAAO2G,QAAUA,EACjB,MAAMa,EAASkJ,GAAkBJ,EAASrF,EAAQnJ,EAASC,EAAQ4E,EAAS,EAAGwJ,EAAUC,GACzF,OAAO5I,CACX,CAfmBmJ,CAAkB7O,EAASC,EAAQoO,EAAUC,GAI5D,OAHApQ,EAAO6J,YAAcrC,EAAOhH,MAC1ByI,GAASC,MAEJ1B,CACX,CAoBO,SAASoJ,EAActP,EAAOqF,EAAS8C,GAC1C,MAAMoH,EAAc,CAChBvP,QACAwP,sBAAkBrP,EAClB4E,YAAQ5E,EACRgI,sBAGJ,OADA9C,EAAQpF,KAAKsP,GACNA,CACX,CCtCO,SAASE,GAAW7K,EAC3BpG,EACAiC,GACI,MACMD,EADShC,EAAQE,OACAsG,OACvBxE,EAAQoE,aAAeA,EACvBpG,EAAQgR,iBAAmBE,GAG3B,OADAd,EAAmBpO,EAASC,OAAQN,EADzB3B,EAAQmR,aAEZnP,CACX,CAOO,SAASoP,KAKZ,MAJa,CACT5N,UAAWhD,EAAWG,UACtB0Q,YAAaC,GAGrB,CAEO,SAASC,GAAsB5Q,EAAWyF,EAAcpG,GAC3D,MAAMgC,EAAUmO,EAAkBxP,EAAWyF,EAAcA,EAAaoJ,WAAYxP,GAGpF,OAFeA,EAAQE,OAChB2G,QAAU,GACV7E,CACX,CC3BA,SAASwP,GAAwBrG,EACjCtF,EAAOgB,EAAST,GACZ,MAAM5E,EAAQ2J,EAAOtF,GAEfkL,EAAclK,EAAQhB,GAE5B,GAAIrE,IAAUuP,EAAYvP,MACtB,QAGJkM,EADgBqD,EAAYrD,SACpBlM,EAAO4E,EAAc2K,EAAa5F,GAC1C4F,EAAYvP,MAAQA,CACxB,CCtBO,SAASiQ,GAAgBC,EAAcC,GAC1C,MACM9K,EADS6K,EAAa1R,QAAQE,OACb2G,SAOpB,SAA+B6K,EAAcC,GAChD,MAAMC,EAAcD,EAAahR,UAC3BkR,EAAUF,EAAahR,UAAUF,IACjC0K,EAASyG,EAAYzG,QAAU0G,EAAQ1G,OACvC1K,EAAMiR,EAAa/Q,UAAUF,IACnCA,EAAI0K,OAASA,CACjB,CAZI2G,CAAsBJ,EAAcC,KAClCxI,GAASC,MDNR,SAA8BpH,EAAS6E,GAC1C,MACMsE,EADUnJ,EAAQrB,UAAUF,IACX0K,OACvB,IAAItF,EAAQ,EACZ,MAAMkM,EAAM5G,EAAOxG,OACnB,KAAOkB,EAAQkM,GACXP,GAAwBrG,EAAQtF,EAAOgB,EAAS7E,KAC9C6D,CAGV,CCHImM,CAAqBN,EAAc7K,KACjCsC,GAASC,MACXG,IACJ,CCTO,SAAS0I,GAActR,EAC9ByF,EAAcoJ,EAAYxP,EAASsP,GAC/B,MAAMtN,EAAUqN,EAAe1O,EAAWX,EAASsP,GAEnD,OADAtN,EAAQoE,aAAeA,EAChBsJ,EAAqB/O,EAAWqB,EAASwN,EAAYF,EAChE,CCCO,SAASM,GAAU3D,EAAOiG,EAAYC,GACzC,OAAOlG,EAAMN,KAAI,SAAsBhM,GACnC,OAIR,SAAmBA,EAAMyG,EAAc8L,EAAYC,GAC/C,GAAI5O,EAAY5D,KAAUA,EACtB,OAAOA,EAEX,IAAKyG,EACD,OAAOzG,EAEX,OAAOyS,GAAUzS,EAAMyG,EAAc8L,EAAYC,EACrD,CAZeE,CAAU1S,EAAMuS,EAAW9L,aAAc8L,EAAYC,EAChE,GACJ,CAWO,SAASC,GAAU5Q,EAAO4E,EAAc8L,EAAYC,EAAOG,EAAOC,GACrE,IAAK/Q,EACD,OAAOA,EAEX,GAAIA,EAAMgC,UACN,OAAOhC,EAEX,UAAW,IAAYjB,EAAWqD,SAC9B,OAAIuO,GAAS,EAgEd,SAAqB3Q,EAAO8Q,EAAOlM,EAAcmM,GACpD,MAAMC,EAAUhR,EAAMiR,IAEtB,GAAID,EACA,OAAOhR,EAEX,MAAMkR,EAAO,YAAuBnK,GAChC,OASD,SAA2BoK,EAClCL,EAAOM,EAAUxM,EACjBmM,GACI,MAAMrS,EAASkG,EAAapG,QAAQE,OAC9BsG,EAAStG,GAAQsG,QAAUJ,EAE3ByM,OAA6BlR,IADZmR,KAGjBC,EAAiBJ,EAAOK,MAAMV,EAAOM,GACrCK,EAAM,WACR,MAAM/S,EAASsG,EAAOxG,QAAQE,OAC9B,OAAKA,IAA4B,IAAlBA,EAAOgT,QAGtBC,GAAkB3M,EAAQJ,GACnB2M,GAHIA,CAIf,EACA,GAAIF,EACA,OAAOI,IAGX,OADAG,GAAaC,WAAW7E,WAAWyE,GAC5BF,CACX,CA/BeO,CAAkBZ,EAAKD,IAAKH,EAAO/J,EAAMnC,EACpD,EAKA,OAJAsM,EAAKa,SAAW/R,EAChBkR,EAAKD,IAAMjR,EAEXlC,OAAOkU,OAAOd,EAAMlR,GACbkR,CACX,CA5EmBe,CAAYjS,EAAO8Q,EAAOlM,GAE9B5E,EAEX,GAAI2Q,IAAUjG,GACV,OAAO1K,EAGX,OADakS,GAAgBlS,GAElBA,EAEPyC,EAAQzC,GAKhB,SAAwBA,EAAO0Q,EAAY9L,EAAc+L,GACrD,IAAK,IAAItM,EAAQrE,EAAMmD,OAAS,EAAGkB,GAAS,IAAKA,EAAO,CACpD,MAAM8N,EAAWnS,EAAMqE,GAEvB,GADArE,EAAMqE,GAASuM,GAAUuB,EAAUvN,EAAc8L,EAAYC,EAAQ,EAAG3Q,UAC7D,IAAejB,EAAWqD,SAAU,CAC3C,GAAI+P,EAASlB,IACT,SAEJmB,GAAezB,EAAQ,EAAGtM,EAAO8N,EAAUnS,EAAO0Q,EACtD,CACJ,CACA,OAAO1Q,CACX,CAhBeqS,CAAerS,EAAO0Q,EAAY9L,EAAc+L,GAiB/D,SAAyB3Q,EAAO0Q,EAAY9L,EAAc+L,GACtD,MAAM7M,EAAOhG,OAAOgG,KAAK9D,GACzB,IAAK,MAAMD,KAAQ+D,EAAM,CACrB,MAAMqO,EAAWnS,EAAMD,GACjBmG,EAAS0K,GAAUuB,EAAUvN,EAAc8L,EAAYC,EAAQ,EAAG3Q,EAAOD,GAE/E,GADoBC,EAAMD,KACNmG,EAChB,SAEJ,MAAMoM,EAASxU,OAAOyU,yBAAyBvS,EAAOD,GAEtD,KADkBuS,GAAQrU,KAAOqU,GAAQ1F,OAIzC5M,EAAMD,GAAQmG,SACH,IAAanH,EAAWqD,UAAU,CACzC,GAAI+P,EAASlB,IACT,SAEJmB,GAAezB,EAAQ,EAAG5Q,EAAMoS,EAAUnS,EAAO0Q,EACrD,CACJ,CACA,OAAO1Q,CACX,CAtCWwS,CAAgBxS,EAAO0Q,EAAY9L,EAAc+L,EAC5D,CAsCA,SAASyB,GAAezB,EAAOtM,EAAOoO,EAAeC,EAAShC,GAE1D,GAAIC,EAAQ,EAAG,CACX,MAAMjS,EAASgS,EAAWlS,QAAQE,OAClCgU,EAAQrO,GAAO8G,aAAezM,EAAO8F,SAASwI,YAAW,WACrD0F,EAAQrO,GAASoO,CACrB,GACJ,CACJ,CAwCO,SAASP,GAAgBlS,GAC5B,cAAc,IAAYjB,EAAWyD,SAAWxC,GAASA,EAAMgC,SACnE,CACO,SAAS2P,GAAkB3M,EAAQJ,GACtC,MAAMpG,EAAUwG,EAAOxG,QAEvB,GADiBmU,GAAa3N,EAAO7F,WACvB,CAEV,OADeyT,GAAiBhO,EAAcI,EAElD,CACA,MAAMtG,EAASF,EAAQE,OACvBA,EAAOgT,QAAS,EAChBmB,GAAuBnU,EAAOsG,OAAQA,EAAQJ,EAAcpG,UACrDE,EAAOgT,MAClB,CClJO,SAASoB,GAAoBtS,GAEhC,IAAIuS,EAAYvS,EAChB,KAAOuS,EAAUnO,eAAiB3C,EAAe8Q,EAAU5T,YACvD4T,EAAYA,EAAUnO,aAE1B,OAAOmO,EAAUvU,QAAQE,OAAOsG,QAAU+N,CAC9C,CCNA,SAASC,MAAcjM,GACnB,OAAOA,CACX,CACO,SAASkM,GAAmBC,GAC/B,MAAMC,EAASvB,GAAawB,YAG5B,OAFAD,EAAOE,OAAOF,EAAOG,aAAeJ,IAClCC,EAAOG,YACFJ,EAAOF,GAClB,CAEO,SAASO,GAAgBL,GAC5B,MAAMC,EAASvB,GAAawB,YACtBE,EAAcH,EAAOG,YAIrBE,EAHcV,GAAoBK,EAAOM,aAChBJ,OAEFC,GAC7B,IAAII,EAAa,GACjBF,GAAU,YAAqBzM,GAE3B,OADA2M,EAAa3M,EACNA,CACX,IAMA,OAFAoM,EAAOE,OAAOF,EAAOG,aAAeJ,IAClCC,EAAOG,YACFJ,GALU,YAA0BS,GACvC,OAAOD,CACX,GAIJ,CC5BO,SAASE,GAAUpT,EAAS2S,GAC/BA,EAAOU,SAAS3H,QAAU4H,GAC1BX,EAAOU,SAASE,cAAgBd,GAChCE,EAAOa,QAAU,GACjBb,EAAOc,WAAa,GACpBd,EAAOE,OAAS,GAChBF,EAAOG,YAAc,EACrBH,EAAO3S,QAAUA,CACrB,CACO,SAAS0T,GAAQxD,EAAY+C,EAAaN,EAAQgB,GAErDhB,EAAOa,QAAUG,EACjBhB,EAAOc,WAAa,GACpBd,EAAOE,OAAS,GAChBF,EAAOG,YAAc,EACrBH,EAAOU,SAAS3H,QAAUkI,GAC1BjB,EAAOU,SAASE,cAAgBR,GAChCJ,EAAOM,YAAcA,CACzB,CACO,MAAMY,ICpBN,SAASC,GAAcC,GAC1B,MAAMvJ,EAAWuJ,EAAMvJ,SACvB,IAAKA,EACD,OAAOuJ,EAAMC,aAEjB,MAAOxU,GDkBJ,SAA0BgL,GAC7B,MAAOhL,GAASgL,EAASqJ,KAClBI,GAAczJ,EAAShL,GAC9B,MAAO,CAACA,EAAOyU,EACnB,CCtBoBC,CAAiB1J,GACjC,OAAOhL,CACX,CCLO,SAASoU,KACZ,MAAMjB,EAASvB,GAAawB,YAEtBuB,EADUxB,EAAOa,QACCb,EAAOc,WAAW9Q,QAE1C,OADAgQ,EAAOc,WAAWhU,KAAK0U,GAChBA,EAAQH,YACnB,CACO,SAASV,GAAcU,GAC1B,MAAMrB,EAASvB,GAAawB,YAE5B,IAAIwB,EAAYJ,EAKhB,UAJW,IAAmBzV,EAAWqD,WACrCwS,EAAYJ,YAGL,IAAgBzV,EAAWqD,SAAU,CAC5C,MAAM2P,EAAW6C,EACjBA,EAAY,YAAyB7N,GAEjC,OADegL,KAAYhL,EAE/B,EACA6N,EAAU7C,SAAWA,CACzB,CACA,MAAM9R,EAAO,CACThC,IAAK,WACD,OAAOqW,GAAcrU,EACzB,EACAuU,aAAcI,GAGlB,OADAzB,EAAOc,WAAWhU,KAAKA,GAChB2U,CACX,CC/BO,MAAM/C,GAAa,IAAI/G,OAAQ3K,GAAW,SAAmBgL,GAC3DmG,MACDnG,EAAa1G,MAErB,ICJamN,GAAe,CACxBwB,YAAa,CACTa,WAAY,GACZvU,QAASC,KAAKC,MACdiU,SAAU,CACN3H,QAAS4H,GACTC,cAAed,KAGvBpB,WAAU,ICVP,SAASgD,GAAY1V,EAAW+G,EAAQ4O,EAAYhH,GACvD,MAAMiH,EAAmB7O,EAAO6L,SAC1BiD,EAAY7V,EAAU6C,YAAchD,EAAWS,YAC/C0T,EAASvB,GAAawB,YAE5B,IAAInU,EAgBJ,OAjBAkU,EAAO3S,QAAUsU,EAEbE,EACA/V,EAAME,KAGNF,EAAM8V,KAAoBjH,UAEf,IAAU/O,EAAWqD,WAC5BnD,EAAMA,MAGdA,EAAIE,UAAYA,EAChBA,EAAUF,IAAMA,EAChB6V,EAAWP,MAAQpB,EAAOc,WAC1Ba,EAAWzB,OAASF,EAAOE,OAEpByB,CACX,CCFO,SAASG,GAAe9V,EAAWuR,EAAYwE,GAClD,MAAMtS,EAAWzD,EAAUkP,YAAcC,GAAY6G,KAAOzK,GAAmBH,GACzEE,EAAQtL,EAAUsL,MAClB0D,EAAcuC,EAAWvC,YAE/B,IAAIiH,EAAiBjH,EAAYC,UACjC,MAAMiH,EAAkBH,GAAa/G,YAC/BmH,EAAgBD,GAAiBjH,UACnCkH,IACAnH,EAAYC,UAAYkH,EACxBF,EAAiBG,GAAkB7E,EAAYwE,EAAaA,EAAYtQ,aAAc6F,EAAO7H,IAGjG,OADoBwS,GAAkBhH,GAAU3D,EAAOiG,EAAY,EAEvE,CC/BO,SAAS8E,GAA4BrW,EAAWX,EAASoG,EAAcnE,GAG1E,MAAMiQ,EAAaD,GAActR,EAAWyF,EAAcA,EAAaoJ,WAAYxP,GAC7EiX,EAAiB/E,EAAWvC,YAClC,GAAIsH,EAAgB,CAChB,MAAM3H,EAAc3O,EAAU6C,YAAchD,EAAWI,aAAe,GAAK6V,GAAe9V,EAAWuR,GACrG+E,EAAerH,UAAYN,CAC/B,CACA,MAAMpP,EAASF,EAAQE,QACjB,QAAE8B,GAAYkV,GAAkBhF,EAAYhS,EAAOsG,OACzDxG,EAASoG,GAET,OCfG,SAAiCpE,EAASC,EAAQ8O,GACrDA,EAAYC,iBAAmBE,GAE/Bd,EAAmBpO,EAASC,OAAQN,EADzBoP,EAAYI,YAI3B,CDQIgG,CAAwBnV,EAASC,EAAQjC,GAClCgC,CACX,CACO,SAASoV,GAA6BzW,EAAWX,EAASoG,EAAcnE,EAAQoO,GAGnF,MAAM6B,EAAaD,GAActR,EAAWyF,EAAcA,EAAaoJ,WAAYxP,GAC7EiX,EAAiB/E,EAAWvC,YAClC,GAAIsH,EAAgB,CAChB,MAAM3H,EAAc3O,EAAU6C,YAAchD,EAAWI,aAAe,GAAK6V,GAAe9V,EAAWuR,GACrG+E,EAAerH,UAAYN,CAC/B,CACA,MAAMpP,EAASF,EAAQE,QACjB,QAAE8B,GAAYkV,GAAkBhF,EAAYhS,EAAOsG,OACzDxG,EAASoG,GAET,OCvBG,SAA+BpE,EAASC,EAAQoO,GACnD,IAAIgH,EAAcC,GAAa3S,OAC/B,MAAM+C,EAAS0I,EAAmBpO,EAASC,EAAQoO,OAAU1O,GAC7D,IAAK,MAAMjB,KAAOgH,EAAOhH,IACjBA,EAAIwJ,YACJoN,GAAavR,OAAOsR,IAAe,EAAG,CAClC9O,KAAM,CAAC8H,EAAU3P,EAAIwJ,YACrB7B,UAAWkP,KAGf7W,EAAIuJ,QACJqN,GAAavR,OAAOsR,IAAe,EAAG,CAClC9O,KAAM,CAAC8H,EAAU3P,EAAIuJ,QACrB5B,UAAWkP,IAK3B,CDIIC,CAAsBxV,EAASC,EAAQoO,GAChCrO,CACX,CEjCO,SAASyV,GAAcjW,GAC1B,OAAQA,GACJ,UAAKG,EACL,KAAK,EACL,KAAK,KACD,OAAOtB,EAEf,OAAOmB,CACX,CCLO,SAASkW,GAAuBhP,EAAUqI,GAE7C,OADmBrI,gBACQ,IAAenI,EAAWyD,QCHlD,SAAmCxC,EAAOuP,GAC7C,MAAM4G,EAAcF,GAAcjW,GAClC,GAAIuP,EAAYxH,MAGZ,YADAwH,EAAYxH,MAAMhB,KAAK,GAAKoP,GAGhC,MAAMC,EAAW7G,EAAY5I,eAC7B0P,GAAWpW,KAAK,CAACkW,EAAaC,GAClC,CDJQE,CAA0BpP,EAAUqI,IAC5B,IAEZgH,GAAkBhH,GACX,EACX,CACO,SAASgH,GAAkBhH,GAC9B,MAAMnH,EAAMmH,EAAY5I,eAGxB,UAFO4I,EAAY5I,sBACZ4I,EAAYC,kBACdpH,EACD,MAAM,IAAI1G,MAAM,yBAEpBkF,GAAc3G,KAAK,CACf4G,UAAWC,GACXC,KAAM,CAACqB,IAEf,CEnBO,SAASoO,GAAyBxW,EAAOuP,EAChD3K,EACAnE,EACAoO,EAAUC,GACN,MAAM9M,EAAYhC,GAAOgC,UACzB,OAAIA,EACOhC,EAAM6P,YAAY7P,EAAOuP,EAAa3K,EAAcnE,EAAQoO,EAAUC,GAE7ErM,EAAQzC,IACRyW,GAAgBlH,EAAavP,EAAO4E,EAAcnE,EAAQoO,QAC1DU,EAAYC,iBAAmBvI,SAKvC,SAAkCjH,EAAOxB,EACzCsQ,GACI,MAAMqH,EAAcF,GAAcjW,GAC5B+H,EAAQvJ,EAAQuJ,MAAQ,CAC1BlB,UAAW6P,GACX3P,KAAM,CAAC+H,EAAcqH,EAAc7L,IAC3B9L,EAAQmI,eAAiB2D,SAClB9L,EAAQuJ,KAAK,IAGhCnB,GAAc3G,KAAK8H,GACnBvJ,EAAQgR,iBAAmB0G,GAC3B1X,EAAQuG,OAASwR,EACrB,CAfII,CAAyB3W,EAAOuP,EAAaA,EAAYI,YAC7D,CCjBO,SAASiH,GAAsB5W,EAAOQ,EAAS+O,EAAa9O,EACnEoO,EAAUC,GAENS,EAAYrD,QAAU2K,GACPrW,EAAQhC,QAAQE,OACxBgT,QAAS,EAChB8E,GAAyBxW,EAAOuP,EAAa/O,EAASC,EAAQoO,EAAUC,UACxDtO,EAAQhC,QAAQE,OACjBgT,OACfnC,EAAYvP,MAAQA,CACxB,CCTO,SAAS8W,GAA4B9W,EAAO4E,EAAcnE,EAAQqO,EACzED,GACI,MAAM/O,EAAUiX,SAASC,eAAe,IAClCzH,EAAc,CAChBvP,QACAwP,sBAAkBrP,EAClB4E,YAAQ5E,EACRgI,oBAAoB,EACpBwH,YAAa7P,GAgBjB,OAdAW,EAAOE,MAAQF,EAAOE,MAAQ,EACzBkO,GACDjI,GAAc3G,KAAK,CACf4G,UAAWoQ,GACXlQ,KAAM,CAAC+H,EAAchP,KAG7B8W,GAAsB5W,EAAO4E,EAAc2K,EAAa9O,EAAQoO,EAAUC,GACtED,GACAiH,GAAa7V,KAAK,CACd4G,UAAWkP,GACXhP,KAAM,CAAC8H,EAAU/O,KAGlByP,CACX,CCzBO,SAASkH,GAAgBjY,EAASwB,EACzC4E,EAAcnE,EAAQoO,GAClB,MAAMqI,OAA+B/W,IAAtB3B,EAAQsG,UACnBoS,IACA1Y,EAAQsG,UAAY,IAExB,MAAMA,EAAYtG,EAAQsG,UAC1B,IAAIqS,EAAsB3Y,EAAQmR,YAC9B7O,EAAU,EAEd,MAAMsW,EAAe,GAErB,IAAKF,EAAQ,CAET,IAAK,IAAI7S,EAAQ,EAAGA,EAAQS,EAAU3B,SAAUkB,EAAO,CACnD,MAAMmC,EAAO1B,EAAUT,GAEjBgT,EAAazR,EAAkB5F,EAAOqE,EAAOS,EAAWhE,EAASL,GACpD,IAAf4W,EAKe,IAAfA,EAIJvW,GAAoBuW,EAHhBhT,GAAgB,EALhB+S,EAAanX,KAAKuG,EAS1B,CACAhI,EAAQsG,UAAYsS,CACxB,CACA,MAAMjU,EAASnD,EAAMmD,OACrB,IAAK,IAAIkB,EAAQ,EAAGA,EAAQlB,IAAUkB,EAAO,CAEzC8S,EADmBG,GAAgBtX,EAAOqE,EAAO7F,EAAQsG,UAAWF,EAAcuS,EAAqB1W,EAAQoO,GAC9Ec,WACrC,CACJ,CACA,SAAS2H,GAAgBC,EAAOlT,EAAOS,EAAWF,EAAcuS,EAChE1W,EAAQoO,GACJ,MAAMrI,EAAO+Q,EAAMlT,GACbmT,EAAW1S,EAAUT,GAC3B,GAAImT,EACA,OAOR,SAAiCxX,EAAOyX,EAAa3S,EAAWF,EAAcP,EAAO8S,EACrF1W,EAAQoO,GACJ,MAAM6I,EAAc5S,EAAU3B,OAASkB,EACvC,GAAIqT,EAEA,OADAb,GAAsB7W,EAAO4E,EAAc6S,GACpCA,EAEX,MAAMlI,EAAcuH,GAA4B9W,EAAO4E,EAAcnE,EAAQ0W,EAAqBtI,GAGlG,OADA/J,EAAU7E,KAAKsP,GACRA,CACX,CAlBeoI,CAAwBnR,EAAMgR,EAAU1S,EAAWF,EAAcP,EAAO8S,EAAqB1W,EAAQoO,GAEhH,MAAMU,EAAcuH,GAA4BtQ,EAAM5B,EAAcnE,EAAQ0W,EAAqBtI,GAGjG,OADA/J,EAAU7E,KAAKsP,GACRA,CACX,CC/CO,SAASqI,GAAkB1Q,EAAUqI,EAAa3K,EAAciT,GAEnE,MAAM7V,EAAYkF,GAAYA,EAASlF,UACvC,GAAIA,EAAJ,CACI,GAAIA,IAAchD,EAAWQ,WACzB,OAEJsY,GAAevI,EAAarI,EAAUtC,EAE1C,MACInC,EAAQyE,GACRuP,GAAgBlH,EAAarI,EAAUtC,EAAc,CAAEjE,MAAO,EAAGG,QAAS,WAGnE,IAAe/B,EAAWqD,SAIjCyV,GLTD,SAAgC7X,EAAOxB,GAC1CA,EAAQgR,iBAAmB0G,GAC3B1X,EAAQuG,OAASwR,GACjB,MAAMwB,EAASvZ,EAAQmR,YACjBwG,EAAcF,GAAcjW,GAC5B+H,EAAQvJ,EAAQuJ,MAAQ,CAC1BlB,UAAW6P,GACX3P,KAAM,CAACgR,EAAQ5B,EAAc7L,IACrB9L,EAAQmI,eAAiB2D,EACzB9L,EAAQmI,eAAiB2D,SAClB9L,EAAQuJ,KAAK,IAGhCnB,GAAc3G,KAAK8H,EACvB,CKJQiQ,CAAuB9Q,EAAUqI,GAJjCA,EAAYvP,MAAQkH,CAM5B,CCxBO,SAAS+Q,GAAyB1I,EAAarI,EACtDtC,GAEI,MAAMiT,EAAoBtI,EAAYC,iBAAiBtI,EAAUqI,IAEtC,IAAvBsI,GAGJD,GAAkB1Q,EAAUqI,EAAa3K,EAAciT,EAC3D,CCNO,SAAShB,GAAsB3P,EACtCtC,EAAc2K,GAENrI,IAAaqI,EAAYvP,OAG7BiY,GAAyB1I,EAAarI,EAAUtC,EACpD,CACO,SAASsT,GAAyB/Y,EAAWoQ,EAAa3K,GAG7D,IAFe2K,EAAY7Q,OAEfsG,OAER,YADAwQ,GAA4BrW,EAAWoQ,EAAa3K,EAAc,CAAEjE,MAAO,EAAGG,QAAS,KCPxF,SAAoC8D,EAAcpE,EACzDhC,GACI,MAAME,EAASF,EAAQE,OACjBwW,EAAcxW,EAAOsG,OACrBmT,EAAajD,EAAY/V,UAAUiZ,QACnCC,EAAa7X,EAAQrB,UAAUiZ,QACrC,IAAIE,GAAY,EAChB,MAAMtW,EAAYxB,EAAQrB,UAAU6C,UAC9BuW,EAAgBvZ,EAAWS,cAAgBuC,GAAahD,EAAWQ,aAAewC,EACxF,GAAIuW,EACAD,EAAY9X,EAAQrB,UAAU6C,YAAchD,EAAWQ,YAAcmJ,EAAWuM,EAAa1U,QAE5F,GAAI2X,GAAcE,EAAY,CAI/BC,EAHoBH,EAAWpG,WACXsG,EAAWtG,QAGnC,CACA,MAAM5S,EAAYqB,EAAQrB,UAC1B,IAAKmZ,EAED,YA6ER,SAAkB9Z,EAASW,EAC3ByF,GACI,MAAMlG,EAASF,EAAQE,OACjB8Z,EAAgB9Z,EAAOgI,OAC7BD,EAAe+R,EAAe9Z,GAC9BH,EAAaC,GACb,MAAMkS,EAAa8E,GAA4BrW,EAAWX,EAASoG,EAAc,CAAEjE,MAAO,EAAGG,QAAS,GAE1G,CAtFQ2X,CAASja,EAASW,EAAWyF,GAGjC,MAAM8T,EAAaH,GC7BhB,SAA2BrD,EAAayD,GAC3C,MAAMC,EAAcD,EAAalO,MAC3B0D,EAAc+G,EAAY/G,YAC1B0K,EAAiB1K,EAAYK,OAC7BsK,EAAeC,GAAeH,EAAaC,EAAgB3D,EAAY/V,UAAUkP,WACvF,OAAOyK,CACX,CDuBwCE,CAAkB9D,EAAa/V,GAEnE,IAAKuZ,EAAY,CAGb,YAyDR,SAAsBvZ,EAAWqB,EAAS0U,EAAatQ,EAAchC,GAEjE,MAAMqW,EAAW9Z,EAAUsL,MACrBqD,EAAcyH,GAAkB/U,EAAS0U,EAAatQ,EAAcqU,EAAUrW,GAC9EuL,EAAc3N,EAAQ2N,YAE5BA,EAAYC,UAAYN,EACxB,MAAMuH,EAAkBH,EAAY/G,YAEpCkH,EAAgB7G,OAASL,EAAYK,MAEzC,CArEQ0K,CAAa/Z,EAAWqB,EAAS0U,EAAatQ,EAD7BzF,EAAUkP,YAAcC,GAAY6G,KAAOzK,GAAmBH,GAGnF,CACA,GAAI7L,EAAOgT,OAEP,YADAhT,EAAOuP,QAAQhO,KAAKO,GAGxB,GAAcA,KACZhC,EAAQC,WAEd,CD1BI0a,CAA2BvU,EADX6L,GAActR,EAAWyF,EAAcA,EAAaoJ,WAAYuB,GAEhFA,EACJ,CGjBA,MAAM6J,GAAY,CAAEzY,MAAO,EAAGG,QAAS,GAEhC,SAASgX,GAAevI,EAAarI,EAC5CtC,GACI,MAAM5C,EAAYkF,EAASlF,UAE3B,GADeC,EAAeiF,GAM1B,YAJ2B/G,IAAvBoP,EAAY7Q,QACZH,EAAagR,GAEjB2I,GAAyBhR,EAAUqI,EAAa3K,IACzC,EAGX,MAAMlG,EAAS6Q,EAAY7Q,OAC3B,GAAIA,EAAQ,CAER,MAAM8B,EAAU9B,EAAOsG,OACvB,GAAIxE,EACA,cAAW,IAAezB,EAAWqD,UCvB1C,SAAwB8S,EAAa1W,EAASwB,EAAO4E,GACxD,MACMyU,EAAe5I,GADHzQ,EAAMb,WAAaa,EACS4E,EAAcA,EAAaoJ,WAAYxP,GAIrFyR,GAHoBiF,EAAY1W,QACFE,OACLgI,OACD2S,EAC5B,CDmBYC,CAAe9Y,EAAS+O,EAAarI,EAAUtC,IAFpC,CAKnB,CACA,OAAQ5C,GACJ,KAAKhD,EAAWG,UAEZ,OADAsQ,GAAW7K,EAAc2K,EAAa6J,KAC/B,EAEX,KAAKpa,EAAWC,IAChB,KAAKD,EAAWE,IAEZ,OAWZ,SAAqBc,EAAOuP,EAAa3K,GACrC,MAAM3F,EAAMe,EACZ,IAAIb,EAAYF,EAAIE,UACfA,IACDA,EAAYyQ,KACZ3Q,EAAIE,UAAYA,EAChBA,EAAUF,IAAMA,GAEpB,MAAMsa,EAAahK,EAAY7Q,OAAS6Q,EAAY7Q,OAASH,EAAagR,GAC1EgK,EAAUvU,OAAS+K,GAAsB5Q,EAAWyF,EAAc2K,GAClEE,GAAW7K,EAAc2K,EAAa6J,GAC1C,CAvBYI,CAAYtS,EAAUqI,EAAa3K,IAC5B,EAEX,KAAK5F,EAAWM,UAIZ,OAFA4H,EAAS2I,YAAY3I,EAAUqI,EAAa3K,EAAc,CAAEjE,MAAO,EAAGG,QAAS,QAAKX,EACpFoP,EAAYI,cACL,EAGf,OAAO,CACX,CE7CO,SAASD,GAAoBxI,EAAUqI,GAC1C,MAAM7Q,EAAS6Q,EAAY7Q,OAC3B,IAAKA,EACD,OAAO,IAEX,MAAMwW,EAAcxW,GAAQsG,OAG5B,GAFmBjD,EAAYmF,GAEf,CAGZ,OADiByB,EAHNzB,EAGyBgO,GAM7B,IAJHzO,EAAeyO,EAAaxW,GAC5BH,EAAagR,GACN,EAGf,CACA,MAAMkK,EAAQvS,GAAUlF,UACxB,GAAIyX,EAAO,CAKP,OAD+B,IADhB3B,GAAevI,EAAarI,EAF3BxI,EAAOsG,OACMJ,eAIjB,EAEL,EACX,CAEA,OADAmK,GAA4BQ,GACrB,CACX,CACO,SAASR,GAA4BQ,GACxC,MAAM7Q,EAAS6Q,EAAY7Q,OACrBwW,EAAcxW,GAAQsG,OAE5ByB,EAAeyO,EAAaxW,UACrB6Q,EAAY7Q,OACnB6Q,EAAY9Q,YAAc,CAC9B,CCxCO,SAASib,GAAqBva,EAAWX,EAChDoG,EACAnE,EAAQoO,EAAUC,GACdtQ,EAAQgR,iBAAmBE,GAC3B,MAAMlP,EAAUuP,GAAsB5Q,EAAWyF,EAAcpG,GAC/DgC,EAAQoE,aAAeA,EACvB,MAAMsB,EAAS0I,EAAmBpO,EAASC,EAAQoO,EAAUA,OAAW1O,EAAY2O,GACpF,IAAK,MAAM5P,KAAOgH,EAAOhH,IACjBA,EAAIuJ,SACAoG,EACAiH,GAAa7V,KAAK,CACd8G,KAAM,CAAC8H,EAAU3P,EAAIuJ,QACrB5B,UAAWkP,KAIfnP,GAAc3G,KAAK,CACf4G,UAAWoQ,GACXlQ,KAAM,CAAC+H,EAAc5P,EAAIuJ,WAIjCvJ,EAAIwJ,aACAmG,EACAiH,GAAa7V,KAAK,CACd8G,KAAM,CAAC8H,EAAU3P,EAAIwJ,YACrB7B,UAAWkP,KAIfnP,GAAc3G,KAAK,CACf4G,UAAWoQ,GACXlQ,KAAM,CAAC+H,EAAc5P,EAAIwJ,eAKzC,OAAOlI,CACX,CCvCO,SAASsP,GAAe9P,EAAOuP,EAAa3K,EAAcnE,EAAQoO,EAAUC,GAE/E,OADAS,EAAYC,iBAAmBE,GAC3Bb,EACO6K,GAAqB1Z,EAAOuP,EAAa3K,EAAcnE,EAAQoO,EAAUC,GAE7EW,GAAW7K,EAAc2K,EAAa9O,EACjD,CCPO,SAASkZ,GAAmBtL,EAAW5D,GAC1C,MAAMtL,EAAY,CACd6C,UAAWhD,EAAWG,UACtB0Q,YAAaC,GACbzB,YACA5D,QACA7M,IAAK,SAAqB0I,GAEtB,OADAnH,EAAUmH,WAAaA,EAChBnH,CACX,GAEJ,OAAOA,CACX,CCdO,MAAMoG,GAAO,GCGb,SAASqU,GAAmBxB,EAAS5Z,EAASoG,GACjD,MAAMzF,EAAYwa,GAAmBrL,GAAY6G,MACjDhW,EAAU6C,UAAYoW,EAAQpW,UAC9B,MAAMxB,EAAUuP,GAAsB5Q,EAAWyF,EAAcpG,GAE/D,SAAS0S,IAEL,OADA/R,EAAUF,IAAamZ,IAChB5X,CACX,CAIA,OAHArB,EAAUiZ,QAAUlH,EACpBA,EAAKlP,UAAYoW,EAAQpW,UACzBkP,EAAKa,SAAWqG,EAAQrG,UAAYqG,EAC7B5X,CACX,CChBO,MAAMqZ,WAAiBnY,MAC1BoY,QACA,WAAAvN,CAAYwN,EAASC,EAAWF,EAAU,CAAC,GACvCnM,MAAMoM,GACNvN,KAAKzM,KAAO8Z,GAAS9Z,KACrByM,KAAKsN,QAAU,IAAKA,EAASE,YACjC,EAEG,MAAMC,WAAwBJ,GACjC,WAAAtN,CAAYwN,EAASD,GACjBnM,MAAMoM,EAAS,qBAAsBD,GACrCtN,KAAKzM,KAAOka,GAAgBla,IAChC,EAEG,MAAMma,WAA2BL,GACpC,WAAAtN,CAAYwN,EAASD,GACjBnM,MAAMoM,EAAS,uBAAwBD,GACvCtN,KAAKzM,KAAOma,GAAmBna,IACnC,EAEG,MAAMoa,WAA0BN,GACnC,WAAAtN,CAAYwN,EAASD,GACjBnM,MAAMoM,EAAS,sBAAuBD,GACtCtN,KAAKzM,KAAOoa,GAAkBpa,IAClC,ECvBG,SAASqa,GAAmBjH,EAAQ3S,GACvC,MAAMwT,EAAUb,EAAOa,QACnBA,EAAQ7Q,QAAU6Q,EAAQ7Q,SAAWgQ,EAAOc,WAAW9Q,QAK/D,SAA4B6Q,EAASxT,EAAS2S,GAC1C,MAAM4G,EAAU,2DAA2D/F,EAAQ7Q,qBAAqBgQ,EAAOc,WAAW9Q,UACpHiV,EAAU5X,EAAQrB,WAAWiZ,QACnC,IAAIiC,EAAcjC,GACdA,GAASrG,UAGJqG,GAASrG,YAFdsI,EAAcjC,EAAQrG,UAK1B,MAAM+H,EAAU,CACZtG,UAAWL,EAAOc,WAClBqG,UAAWnH,EAAOa,QAClBqG,cACAlb,UAAWqB,EAAQrB,WAEjBob,EAAQ,IAAIL,GAAmBH,EAASD,GAE9C,MADAU,QAAQD,MAAME,GAAMX,GACdS,CACV,CAvBQG,CAAmB1G,EAASxT,EAAS2S,EAE7C,CACA,MAAMsH,GAAO,kQCDN,SAASE,GAAena,EAASoE,GACpC,MAAMpG,EAAUgC,EAAQhC,UACtBA,EAAQC,YACV,MAAM0U,EAASvB,GAAawB,YAC5B5S,EAAQ+T,MAAQpB,EAAOc,WACvBzT,EAAQ6S,OAASF,EAAOE,OACxB7U,EAAQE,OAAOsG,OAASxE,EACxB4Z,GAAmBjH,EAAQ3S,UACpB2S,EAAOM,mBACPN,EAAO3S,eACP2S,EAAOc,kBACPd,EAAOE,OACdzB,GAAaC,WAAWpN,KAAKG,EACjC,CCbO,SAASgW,GAAclK,EAAY+C,EAC1CjV,EAASoG,IAoBT,SAAyB8L,EAAY+C,GACjC,MAAMU,EAAYV,GAAac,MACzBpB,EAASvB,GAAawB,YAC5B,GAAIe,EAEA,YADAD,GAAQxD,EAAY+C,EAAa7B,GAAawB,YAAae,GAG/DP,GAAUlD,EAAYyC,EAC1B,CA3BI0H,CAAgBnK,EAAY+C,GAC5B,MAAMtU,EAAYuR,EAAWvR,UAC7B,IAAI2b,EAEJ,GAAI3b,EAAU6C,YAAchD,EAAWS,YAAa,CAChD,MAAMyG,EAAS/G,EACf2b,EAAYrK,GAActR,EAAWyF,EAAc8L,EAAW1C,WAC9DxP,GACAqW,GAAY1V,EAAW+G,EAAQ4U,EACnC,KACK,CAIDA,GAAY1C,EAFIjZ,EAAUiZ,SAEN1H,EAAYlS,EAASiV,EAC7C,CAEA,OADAkH,GAAeG,EAAWlW,GACnBkW,CACX,CCrBO,SAASC,GAAsB/a,EAAOuP,EAC7C3K,EACAnE,EACAoO,EAAUC,GACNvQ,EAAagR,GACb,MAAM/O,EAAUoZ,GAAmB5Z,EAAOuP,EAAa3K,GACvDgW,GAAcpa,OAASL,EAAWoP,EAAa3K,GAC/C,MAAMsB,EAASwT,GAAqBlZ,EAAQrB,UAAWoQ,EAAa3K,EAAcnE,EAAQoO,EAAUC,GAEpG,OADAS,EAAYC,iBAAmBE,GACxBxJ,CACX,CCZO,SAAS8U,GAAwBhb,EAAOuP,EAC/C3K,EACAnE,EACAoO,GAGI,GAFAtQ,EAAagR,GACbA,EAAYC,iBAAmBE,GAC3Bb,EAAU,CAEV,OADsB+G,GAA6B5V,EAAOuP,EAAa3K,EAAcnE,EAAQoO,EAEjG,CAEA,OADsB2G,GAA4BxV,EAAOuP,EAAa3K,EAAcnE,EAExF,CCPA,IAAIwa,GAAW,EAER,IAAI3M,GAWJ,SAASrP,GAAIG,EAAciP,EAAYC,GAAYG,SAEtD,MAAMyM,EAAa,YAAuBzQ,GACtC,MAAMtL,EAAYwa,GAAmBtL,EAAW5D,GAChDtL,EAAU6C,UAAYhD,EAAWI,aACjCD,EAAU0Q,YAAcmL,GAExB,MAAMG,E7BnBP,SAAoBhc,EAAW+G,GAWlC,OATgB,SAAoBwK,EAAYlS,EAAS0W,GAGrD,MAAMpH,EAAcmH,GAAe9V,EAAWuR,EAAYwE,GACpDtQ,EAAe8L,EAAW9L,aAC1BkQ,EAAarE,GAActR,EAAWyF,EAAc8L,EAAW1C,WACrExP,EAASsP,GACT,OAAO+G,GAAY1V,EAAW+G,EAAQ4O,EAAYhH,EACtD,CAEJ,C6BO6BsN,CAAWjc,EAAW+b,GAQ3C,OAPAC,EAAapJ,SAAW3S,EAMxBD,EAAUiZ,QAAU+C,EACbhc,CACX,EACMF,EAAMG,EAQZ,OAPA8b,EAAWnJ,SAAW3S,EAEtBH,EAAIsG,KAAOA,GACXtG,EAAIoc,OAASzJ,GACb3S,EAAID,WAAaA,EACjBC,EAAIqc,SAAWL,KACf1V,GAAKtF,KAAKib,GACHA,CACX,CAMA,SAASK,KACL,MAAM,IAAI7Z,MAAM,mGACpB,CC5CO,SAASqX,GAAetO,EAC/BoO,EACAxK,GAEI,GADsBmN,GAAsB/Q,EAAOoO,GAE/C,OAAO,GAEX,OAAQxK,GACJ,KAAKC,GAAYmN,KACb,OAAO,EACX,KAAKnN,GAAYG,QACb,OAAOiN,GAAiBjR,EAAOoO,GACnC,KAAKvK,GAAYC,UACb,OAAOoN,GAAmBlR,EAAOoO,GAEzC,OAEJ,SAA+BpO,EAAOoO,GAElC,IAAI/K,EAAcrD,EACdmR,EAAkB/C,EACtB/K,EAAc,IAAIrD,GAClBmR,EAAkB,IAAK/C,GAAkB,IAEzC,IAD0B/K,EAAYrE,OAAM,CAACzJ,EAAOqE,IAMxD,SAAwBrE,EAAOqE,EAAOyJ,EAAa8N,GAC/C,MAAMC,EAAUD,EAAgBvX,GAChC,UAAW,IAAYtF,EAAWyD,OAAQ,CACtC,MAAMsZ,EAAiB,IAAK9b,GACtB+b,EAAkB,IAAKF,GAAW,CAAC,GACnCG,EAAUle,OAAOme,QAAQH,GAAgBrS,OAAM,EAAE7L,EAAKoC,KAAWkc,GAAalc,EAAO+b,EAAgBne,IAAM,YACtGke,EAAele,UACfme,EAAgBne,EAAI,MAE/B,OAAOoe,CACX,CACA,OAAOE,GAAalc,EAAO6b,GAAS,WAChC/N,EAAYvJ,OAAOF,EAAO,GAC1BuX,EAAgBrX,OAAOF,EAAO,EAClC,GACJ,CArBkE8X,CAAenc,EAAOqE,EAAOyJ,EAAa8N,KAEpG,OAAO,EAEX,OAAO,CACX,CAbWQ,CAAsB3R,EAAOoO,EACxC,CA8BA,SAASqD,GAAalc,EAAO6b,EAASQ,GAClC,UAAa,IAAYtd,EAAWqD,SAChC,QAAOgB,EAAUpD,EAAO6b,EAASnR,KAAoB,EAGzD,UADkBmR,IACW9c,EAAWqD,SACpC,OAAO,EAGX,MAAMka,EAAkBT,GAAS9J,SAC7BuK,IACAT,EAAUS,GAEGtc,EAAM+R,WAEnB/R,EAAQA,EAAM+R,UAIlB,OAFoB/R,EAAM0D,aACJmY,EAAQnY,YAE1B2Y,IACO,IAEXA,IACO,EACX,ChBvEO,SAASV,GAAmBlR,EAAOoO,GAEtC,MAAMtI,EAAM9F,EAAMtH,OAClB,IAAK,IAAIkB,EAAQ,EAAGA,EAAQkM,IAAOlM,EAAO,CAGtC,GAFaoG,EAAMpG,KACFwU,EAAexU,GAE5B,OAAO,CAEf,CACA,OAAO,CACX,CACO,SAASqX,GAAiBjR,EAAOoO,GAEpC,MAAMtI,EAAM9F,EAAMtH,OAClB,IAAK,IAAIkB,EAAQ,EAAGA,EAAQkM,IAAOlM,EAAO,CACtC,MAAMlG,EAAOsM,EAAMpG,GACbkY,EAAW1D,EAAexU,GAChC,GAAI5B,EAAQtE,IAASsE,EAAQ8Z,GAAW,CACpC,GAAIpe,IAASoe,EACT,SAEJ,OAAO,CACX,CACA,UAAW,IAAWxd,EAAWqD,iBAAmB,IAAerD,EAAWqD,SAG9E,UAAW,IAAWrD,EAAWyD,QAYjC,GAAIrE,IAASoe,EAGb,OAAO,SAdH,UAAW,IAAqBxd,EAAWyD,OAAQ,CAC/C,MAAMga,EAAY1e,OAAOme,QAAQ9d,GACjC,IAAK,MAAMse,KAAWD,EAAW,CAE7B,IADeE,GAAkBD,EAASF,GAEtC,OAAO,GAEf,CACJ,CAOR,CACA,OAAO,CACX,Ee7CA,SAAWjO,GACPA,EAAkB,KAAI,OAEtBA,EAAqB,QAAI,UACzBA,EAAkB,KAAI,OACtBA,EAAuB,UAAI,WAC9B,CAND,CAMGA,KAAgBA,GAAc,CAAC,IA+BlCrP,GAAIO,WACJ,WACI,MAAM,IAAIkC,MAAM,8GACpB,EAOAzC,GAAIsV,MAAQgH,GACZtc,GAAI0d,IAAMpB,GACVtc,GAAI2d,MACJ,SAAiBC,GACb,MAAM,IAAInb,MAAM,0HACpB,EAKAzC,GAAI6d,IAAM,SAAUC,GAChB,MAAM,IAAIrb,MAAM,0HACpB,EACAzC,GAAI+d,cAAgB/d,GACpBA,GAAIge,eAAiB,SAAwB7d,GACzC,OAAOH,GAAIG,EAAckP,GAAYC,UACzC,EACAtP,GAAIie,WAAa,SAAoB9d,GACjC,OAAOH,GAAIG,EAAckP,GAAYG,QACzC,EAEA3Q,OAAOC,eAAekB,GAAK,aAAc,CACrC,GAAA2N,CAAIuQ,GAEAA,EAAkBnb,UAAYhD,EAAWQ,WACzC2d,EAAkBtN,YAAckL,EACpC,IAGJjd,OAAOC,eAAekB,GAAK,QAAS,CAChC,GAAA2N,CAAIwQ,GAEAA,EAAerL,SAAW,CACtBsJ,OAAQzJ,GACRrM,KAAI,IAER6X,EAAepb,UAAYhD,EAAWS,YACtC2d,EAAevN,YAAcmL,EACjC,IAEJld,OAAOC,eAAekB,GAAK,MAAO,CAC9B,GAAA2N,CAAIwQ,GAEAA,EAAerL,SAAW,CACtBsJ,OAAQzJ,GACRrM,KAAI,IAER6X,EAAepb,UAAYhD,EAAWS,YACtC2d,EAAevN,YAAcmL,EACjC,IflDG,MAAMzQ,GAAsB,EACtBG,GAAmB,GAChC,SAASgS,IAAmB3c,EAAMC,GAAQuc,GACtC,MAAMc,EAAYd,EAASxc,GAC3B,cAAW,IAAYhB,EAAWqD,iBAAmB,IAAgBrD,EAAWqD,UAGzEib,IAAcrd,CACzB,CiB5DO,SAASsd,GAAsBC,EAAWpf,EAAMuS,EAAY9L,EAAchC,EAAU+N,GACvF,OAAI4M,SAIA5M,EAAQ/N,EAHDzE,SAMA,IAAgBY,EAAWqD,SAE9BjE,EAAK8S,KACLsM,EAAUtM,IAAM9S,EAAK8S,IACd9S,IAEXof,EAAUtM,IAAM9S,EACTof,GAEPrL,GAAgB/T,GACTA,EAEPsE,EAAQtE,GCxBT,SAA6BA,EAAMof,EAAW7M,EAAY9L,EAAc+L,EAAO/N,GAClF,IAAK,IAAIyB,EAAQlG,EAAKgF,OAAS,EAAGkB,GAAS,IAAKA,EAAO,CACnD,MAAMiG,EAAInM,EAAKkG,GACTmZ,EAAUD,EAAUlZ,GAC1BlG,EAAKkG,GAASiZ,GAAsBE,EAASlT,EAAGoG,EAAY9L,EAAchC,EAAU+N,EAAQ,EAChG,CACA,OAAOxS,CACX,CDkBesf,CAAoBtf,EAAMof,EAAW7M,EAAY9L,EAAc+L,EAAO/N,GEzB9E,SAA8BzE,EAAMof,EAAW7M,EAAY9L,EAAc+L,EAAO/N,GACnF,MAAMkB,EAAOhG,OAAOgG,KAAK3F,GACzB,IAAK,MAAM4B,KAAQ+D,EAAM,CACrB,MAAMqO,EAAWhU,EAAK4B,GAEhBmG,EAASoX,GADCC,EAAUxd,GACoBoS,EAAUzB,EAAY9L,EAAchC,EAAU+N,EAAQ,GACpG,GAAIwB,IAAajM,EACb,SAEJ,MAAMwX,EAAY5f,OAAOyU,yBAAyBpU,EAAM4B,IAAO6M,IAC3D8Q,IAGJvf,EAAK4B,GAAQmG,EACjB,CACA,OAAO/H,CACX,CFWWwf,CAAqBxf,EAAMof,EAAW7M,EAAY9L,EAAc+L,EAAO/N,EAClF,ClBmBO,SAAS2S,GAAkB7E,EAAYwE,EAAatQ,EAAcgZ,EACzEhb,EAAU+N,GAAQ,GACd,MAEM3L,EAFUkQ,EAAY1W,QACLE,OACDsG,OACtB,IAAKA,EAAQ,CACT,MAAM8I,EAAcM,GAAUwP,EAAelN,EAAYC,GACzDiN,EAAc3d,QAAQ6N,GAGtB,OAFoB4C,EAAWvC,YACnBC,UAAYN,EACjB8P,CACX,CAEA,MACMC,GAFN3I,EAAclQ,GAAUkQ,GACY/G,YACIC,UAClC0P,EAAW,GACjB,IAAK,IAAIzZ,EAAQ,EAAGA,EAAQuZ,EAAcza,SAAUkB,EAAO,CACvD,MAAMlG,EAAOyf,EAAcvZ,GAErB6C,EAAWoW,GADCO,EAAgBxZ,GACgBlG,EAAMuS,EAAY9L,EAAchC,EAAU+N,EAAQ,GACpGmN,EAAS7d,KAAKiH,EAClB,CAGA,OAFuBwJ,EAAWvC,YACnBC,UAAY0P,EACpBA,CACX,CqBrEO,SAASC,GAAmB7I,GAC/B,MAAM1W,EAAU0W,EAAY1W,QACtBE,EAASF,EAAQE,QACjB,KAAE8G,EAAI,KAAED,GAASD,EAA0B5G,EAAO2G,SACxD2Y,GAAetf,GACf,IAAK,MAAMmG,KAASU,EAAM,CACtB,MAAM0Y,EAAUpZ,EAAMrG,QAAQE,OAC9B,IAAwB,IAApBuf,EAAQ3V,QACR,OAEJ0V,GAAeC,EACnB,CACevf,EAAOwG,eAElBM,EAAKL,QAAQC,GAEjB7G,EAAaC,EACjB,CACA,SAASwf,GAAetf,GACpBA,EAAO4J,SAAU,EACjBlB,EAAgB1I,EAAQ,GAC5B,CCnBO,SAASgX,GAAkBhF,EAAYwE,EAC9C1W,EACAoG,GACI,MAAMsZ,EAAgBhJ,GAAa/V,UAC7Bgf,EAAUD,GAAejf,IACzB6b,EAAYF,GAAclK,EAAYwE,EAAa1W,EAASoG,GAC5DwZ,GAAalJ,GAAevM,EAAWuM,EAAa4F,GAC1D,GAAKsD,GAOA,GAAIlJ,EAAa,CAClB,MAAMjW,EAAMiW,EAAY/V,UAAUF,IAC9BA,GAAOT,EAAQC,YAAc,GAQzC,SAA6BQ,EAAKiW,EAAaiJ,GAC3C,GAAIlf,EAAI+C,YAAchD,EAAWE,IAAK,CAClC,MAAMmf,EAAUF,GAASjf,IAKzB,YAHImf,IADWpf,EAAIC,KAEf6e,GAAmB7I,GAG3B,CACA,GAAIiJ,EAAS,CACT,MAAMG,EAAcH,EAAQ5U,QAC5B,GAAI+U,EAAa,CACb,MAAMC,EAAYD,GAAanb,OAE3Bob,IADctf,EAAIsK,QAAQpG,QAE1B4a,GAAmB7I,EAE3B,CACJ,CACJ,CA1BYsJ,CAAoBvf,EAAKiW,EAAaiJ,EAE9C,MAZgB,EtB6Db,SAAuBjJ,EAAaxE,GACvC,MAAMhS,EAASwW,EAAY1W,QAAQE,OACnC,IAAI+f,GAAU,EACd,MAAMta,EAAYzF,EAAOyF,UAAYzF,EAAOyF,WAAa,GACnDua,EAAOva,EAAUhB,OAAS,EAChC,KAAOsb,IAAWC,GAAM,CACpB,MAAMta,EAAWD,EAAUsa,GAC3B,IAAIpa,GAAS,EACb,MAAMsa,EAAQva,EAASE,SAASnB,OAAS,EACzC,KAAOkB,IAAUsa,GAGb,GADuBjgB,IADT0F,EAASE,SAASD,GACQ7F,QAAQE,OAI5C,OAFA0F,EAASE,SAASC,OAAOF,EAAO,QAChCD,EAASE,SAASrE,KAAKyQ,EAInC,CACJ,CsB/EQkO,CAAc1J,EAAa4F,GAC3BiD,GAAmB7I,GACnB,MAAMxW,EAASoc,EAAUtc,QAAQE,OACjCA,EAAOgI,OAASoU,EAChBpc,EAAOsG,OAAS8V,CACpB,CAOA,MAAM+D,EAAmB3J,GAAatQ,aAEtC,OADAkW,EAAUlW,aAAgBA,GAAgBia,EACnC,CAAEre,QAASsa,EAAWgE,YAAaV,EAC9C,CC1BA,MAAM,GAAY,CAAEzd,MAAO,EAAGG,QAAS,GAEhC,SAAS+R,GAAuBqC,EACvCxE,EACA9L,EACApG,GACI,MAAME,EAASF,EAAQE,QACjB,QAAE8B,EAAO,YAAEse,GAAgBpJ,GAAkBhF,EAAYwE,EAC/D1W,EAASoG,GACT,OAAIka,GACA7O,GAAgBvR,EAAOgI,OAAQlG,GACxBA,IAEXiP,GAAW7K,EAAcpG,EAAS,IAC3BgC,EACX,CCbO,SAASmS,GAAaxT,GACzB,OAAOH,EAAWG,YAAcA,EAAU6C,SAC9C,CAEO,SAAS,GAAcxB,GAC1B,MAAM9B,EAAS8B,EAAQhC,QAAQE,OAEzBqgB,EAAapM,GADDnS,EAAQrB,WAEpByF,EAAepE,EAAQoE,aAC7B,GAAIlG,EAAOgT,OAEP,OADAhT,EAAOuP,QAAQhO,KAAKO,GACbA,EAGX,GAAIue,EAAY,CAEZ,OADenM,GAAiBhO,EAAcpE,EAElD,CACA9B,EAAOgT,QAAS,EAChB,MAAMlT,EAAUgC,EAAQhC,QACpBE,EAAOuP,QAAQ9K,SACf3C,EAAU9B,EAAOuP,QAAQ+Q,MACzBtgB,EAAOuP,QAAU,IAErB,MAAMhP,EAAM4T,GAAuBnU,EAAOsG,OAAQxE,EAASoE,EAAcpG,GAEzE,cADOE,EAAOgT,OACPzS,CACX,CACO,SAAS2T,GAAiBhO,EAAcpE,GAC3C,MAAMye,EAAYra,EAAapG,QAAQE,OACvC,IAAKugB,IAAmC,IAAtBA,EAAU3W,QACxB,OAAO9H,EAKX,OADe,GADAye,EAAUja,QAAUJ,EAGvC,CACO,SAASsa,GAActa,EAAczF,EAAWqB,GACnD,MAAM2e,EAQV,SAAgChgB,EAAWqB,GACvC,MAAM4e,EAAWjgB,EAAUsL,MACrB0D,EAAc3N,EAAQ2N,YACtByK,EAAczK,EAAYK,OAEhC,GADmBgN,GAAsB4D,EAAUxG,GAE/C,OAAO,EAEX,OAAQzZ,EAAUkP,WACd,KAAKC,GAAYC,UACb,OAAOoN,GAAmByD,EAAUxG,GACxC,KAAKtK,GAAYG,QACb,OAAOiN,GAAiB0D,EAAUxG,GAE1C,OAAQxV,EAAUgc,EAAUxG,EAAalO,GAC7C,CAvB2B2U,CAAuBlgB,EAAWqB,GAEzD,SAAIoE,IAAgBua,EAIxB,CAkBO,SAAS3D,GAAsB4D,EAAUxG,GAU5C,OATewG,EAASjc,SACNyV,EAAYzV,MASlC,CC/EO,SAASmc,GAAsBtR,EAAY5J,GAC9C,MAAMmb,EAIV,SAA6B/e,EAAS4D,EAAUob,EAAS,IACrD,MAAMhhB,EAAUgC,EAAQhC,QACxBghB,EAAOvf,KAAK,CACRO,UACA/B,YAAaD,EAAQC,YACrB2F,aAEJ,MAAMO,EAAYP,EAASE,SAC3B,IAAK,IAAID,EAAQM,EAAUxB,OAAS,EAAGkB,GAAS,IAAKA,EAAO,CACxD,MAAMQ,EAAQF,EAAUN,GAClBob,EAAW5a,EAAMrG,QACvBghB,EAAOvf,KAAK,CACRO,QAASqE,EACTpG,YAAaghB,EAAShhB,YACtB2F,YAER,CACA,OAAOob,CACX,CAtB6BE,CAAoB1R,EAAY5J,GACzD,OAAOmb,CACX,CCaA,SAASI,GAAarV,GAClB,OAAOA,EAAE9J,OACb,CCdO,SAASof,GAAUpf,EAASqf,EAAW,IAC1C,MAAMnhB,EAAS8B,EAAQhC,QAAQE,OAEzBqgB,EAAapM,GADDnS,EAAQrB,WAEpByF,EAAepE,EAAQoE,aAC7B,GAAIlG,EAAOgT,OAEP,OADAmO,EAAS5f,KAAKO,GACPqf,EAGX,GAAId,EACA,OAAOa,GAAUhb,EAAcib,GAEnC,MAAMnP,EAAalQ,EACbsf,EAAc7d,EAAeyO,EAAWvR,WACxC6C,EAAYxB,EAAQrB,UAAU6C,UAE9B+d,EADgBnb,GAAgB5C,IAAchD,EAAWS,eACzBqgB,GAAeZ,GAActa,EAAc8L,EAAWvR,UAAWuR,IACjGsP,EDrBH,SAA8Bxf,GACjC,MACM2D,EADS3D,EAAQhC,QAAQE,OACNyF,UACzB,IAAKA,EACD,MAAO,GAEX,MAAM8b,EAAkB,GAExB,IAAK,MAAM7b,KAAYD,EAAW,CAC9B,MACM+b,EAAYZ,GADJlb,EAAS0M,MACwB1M,GAC/C6b,EAAgBhgB,QAAQigB,EAAU/V,IAAIwV,IAC1C,CACA,OAAOM,CACX,CCOwBE,CAAqBzP,GAEzC,OADAmP,EAAS5f,QAAQ+f,GACbD,GACAH,GAAUhb,EAAcib,GACpBC,GACAD,EAAS5f,KAAKyQ,GAEXmP,IAEXA,EAAS5f,KAAKyQ,GACPmP,EACX,CC/BO,SAASO,GAAqBP,KAC/BlY,GAASC,MACXiY,EAAS1a,QAAQkb,MACf1Y,GAASC,MACXG,IACJ,CACA,SAASsY,GAAa7f,GAClB,MAAM9B,EAAS8B,EAAQhC,QAAQE,OAC1BA,GAGL,GAAcA,EAAOsG,OACzB,CCPA,MAAMsb,GAAS,eACTC,GAAgB,uBACf,SAASC,GAAoBxgB,EAAOQ,GACvC,MAAM9B,EAAS8B,EAAQhC,QAAQE,OAEzB+hB,EAAkB,SAAU3gB,EAASiH,GACvC,IAAuB,IAAnBrI,EAAO4J,QAIX,OAcD,SAAwBtI,EAAOQ,EAAS6S,EAAQqN,EAAQ3Z,GAE3D,MAAMgM,EAAYD,GAAoBtS,GAChChC,EAAUuU,EAAUvU,QACpBE,EAASF,EAAQE,OACvBA,EAAOgT,QAAS,EAIhB,MAAMH,EAAiBvR,EAAMwR,MAAMkP,EAAQ3Z,UAGpCrI,EAAOgT,OACd,MAAMxL,EAGH,SAA0BqL,EAAgBoP,GAC7C,MAAMjiB,EAASiiB,EAAoBniB,QAAQE,OAC3C,OAEJ,SAA+BkiB,EAAMrP,EAAgB7S,GAGjD,OADA0hB,GADqBR,GAAUgB,IAI5B,SAAmCrP,EAAgBqP,EAAMliB,GAC5D,GAAI2D,EAAUkP,GAAiB,CAG3B,OAFgBqP,EAAKpiB,QAAQE,OACrBgT,QAAS,EACVH,EAAehP,MAAK,KACvB,IAAuB,IAAnB7D,EAAO4J,QACP,OAAOiY,UAEKK,EAAKpiB,QAAQE,OACdgT,OAGf,OADA0O,GADqBR,GAAUgB,IAExBL,EAAa,GAE5B,CACA,OAAOD,EACX,CAlBWO,CAA0BtP,EAAgBqP,EAAMliB,EAC3D,CANWoiB,CAAsBH,EAAqBpP,EAAgB7S,EACtE,CANmBqiB,CAAiBxP,EAAgBwB,GAChD,OAAO7M,CACX,CA7Be8a,CAAeP,EAAgBpG,YAAaoG,EAAgBjgB,QACnEigB,EAAgBpN,OAChBvT,EAASiH,EACb,EAEA0Z,EAAgBpG,YAAcra,EAC9B,MAAM+S,EAAYD,GAAoBtS,GACtCigB,EAAgBjgB,QAAUA,EAE1B,MAAM6S,EAASN,EAAUM,OAGzB,OAFAoN,EAAgBpN,OAASA,EAElBoN,CACX,CC1BA,MAAMQ,GAAU,CAAC,OAAQ,WAkBlB,SAASC,GAAsBC,EAAUnhB,EAAOF,EAASshB,EAAU3gB,EAAQD,EAAS6gB,GACvF,GAAIA,EACA,OAAO/gB,EAAiB6gB,EAAUnhB,EAAOF,EAASuhB,EAAW7gB,EAASC,GAE1E2gB,EAASthB,EAASqhB,EAAUnhB,EAChC,CC3BO,SAASshB,GAAwB9gB,EAAS+gB,EAAWzhB,EAASkL,GACjE,MAAM5C,EAAM5H,EAAQghB,WAEF,SAAdD,IACAA,EAAY,YAEhB,MAAME,EAAmB,IAAMF,EAGzBG,EADSlhB,EAAQhC,QAAQE,OACPijB,OACxB,IAAKD,EAASH,GAAY,CACtB,MAAMK,EAAW,SAAuBC,GACpCA,EAAMC,wBAA0BD,EAAME,gBACtCC,GAAYH,EAAOJ,EAAkBI,EAAMhhB,OAC/C,EACA6gB,EAASH,GAAaK,EACtBxZ,EAAI6Z,iBAAiBV,EAAWK,EACpC,CAGA9hB,EAAQ2hB,GAAoBzW,EAC5BlL,EAAQyhB,GAAavW,CACzB,CACA,SAASgX,GAAYH,EAAOJ,EAAkB5gB,GAC1C,MAAMmK,EAAWnK,EAAO4gB,GACxB,GAAIzW,EAAU,CACV,IAAIkX,GAAU,EAMd,GALAL,EAAME,gBAAkB,WACpBG,GAAU,EACVL,EAAMC,wBAAwBxjB,KAAKujB,EACvC,EACA7W,EAAS6W,GACLA,EAAMM,kBAAoBD,EAC1B,MAER,CACA,MAAME,EAAavhB,EAAOuhB,WACtBA,GACAJ,GAAYH,EAAOJ,EAAkBW,EAE7C,CCvCO,SAASC,GAAyBviB,EAASwiB,EAAc9hB,EAAS2gB,GACrE,MAAMoB,EAAM,YAAaxb,GACrB,OAAOwb,EAAIlI,YAAYva,EAASiH,EACpC,EAEAwb,EAAIlI,YAAciI,EAClBC,EAAI/hB,QAAUA,EACd8gB,GAAwB9gB,EAAQwN,WAAYmT,EAAUrhB,EACtDyiB,EACJ,CCTO,SAASC,GAAcrB,GAC1B,GAAIA,EAASsB,WAAW,UACpB,MAAO,QAEX,MAAMC,EASH,SAAyBvB,GAC5B,OAAQA,GACJ,IAAK,aACD,MAAO,aACX,IAAK,YACD,MAAO,YACX,IAAK,SACL,IAAK,OACD,MAAO,SACX,IAAK,YACL,IAAK,UACD,MAAO,UAEf,OAAO,CACX,CAvB0BwB,CAAgBxB,GACtC,OAAsB,IAAlBuB,KAGAvB,EAASsB,WAAW,WACb,OAGf,CCXA,MAAMG,GAAc,CAAEjiB,MAAO,EAAGG,QAAS,GAClC,SAAS+hB,GAAyB7iB,EAAO4E,EAAc2K,EAAa5F,GACvE,GAAI4F,EAAYuT,WAKZ,OCLD,SAAiCnZ,EAAQoZ,EAAWrW,EAAW5M,EAAS8E,EAAcwc,EAAU/b,EAAS5E,GAE5G,GAAIiM,EAAW,CACX,GAAIsW,GAAiBD,GAEjB,YADAjjB,EAAQO,gBAAgBqM,GAG5B,UAAW,IAAgB3N,EAAWyD,OAElC,UADyB,IAAgBzD,EAAWyD,OAEhD,IAAK,MAAMzC,KAAQ2M,EAEX3M,KAAQgjB,GAGZ,GAAa9iB,MAAK,WACdH,EAAQO,gBAAgBN,EAC5B,SAIJ,IAAK,MAAMA,KAAQ2M,EACf,GAAazM,MAAK,WACdH,EAAQO,gBAAgBN,EAC5B,GAIhB,CACAkjB,GAAyBtZ,EAAQoZ,EAAWjjB,EAAS8E,EAAcwc,EAAU/b,EAAS5E,EAC1F,CD7BQyiB,CAAwBvZ,EAAQ3J,EAAOuP,EAAYvP,MAAOuP,EAAYzP,QACtE8E,EAAc2K,EAAY6R,SAAU,GACpCwB,SACArT,EAAYvP,MAAQA,GAGxB,MAAMF,EAAUyP,EAAYzP,QAC5BqjB,GAAqBnjB,EAAOuP,EAAY4R,SAAU5R,EAAazP,EAAS8E,EAAc2K,EAAY6R,SAAU7R,EAAY8R,UAAWuB,IACnIrT,EAAYvP,MAAQA,CAExB,CEFO,SAASojB,GAAiBzZ,EAAQwX,EAAUrhB,EAASU,EAAS4gB,EACrE/b,EAASgc,EAAW5gB,EAAQT,GACxB,MAAMqjB,EAAUC,GAAYnC,GAE5B,GADkBkC,GAAW,EACd,CACX,MAAMrjB,EAAQ2J,EAAO0Z,GACf9T,EAAcD,EAActP,EAAOqF,GAAS,GAQlD,OAPAkK,EAAYgU,QAAS,EACrBhU,EAAYzP,QAAUA,EACtByP,EAAY6R,SAAWA,EACvB7R,EAAYuT,YAAa,EAEzBvT,EAAYrD,QAAU2W,QACtBI,GAAyBtZ,EAAQ3J,EAAOF,EAASU,EAAS4gB,EAAU/b,EAAS5E,EAEjF,CACA,MAAM+iB,EAAWF,GAAYtjB,GAC7B,GAAIwjB,GAAY,EAAG,CACf,MAAMxjB,EAAQ2J,EAAO6Z,GACfjU,EAAc,CAChBgU,QAAQ,EACRzjB,UACAqhB,SAAUA,EAGVhZ,oBAAoB,GAoBxB,OAlBA9C,EAAQpF,KAAKsP,GAebA,EAAYrD,QAAU2W,GNlDvB,SAA0C1B,EAAUnhB,EAAOuP,EAAazP,EAASshB,EAAU5gB,EAASC,EAAQ4gB,GAC/G9R,EAAY4R,SAAWA,EACvB5R,EAAYzP,QAAUA,EACtByP,EAAY6R,SAAWA,SACZ,IAAYriB,EAAWqD,SAC1Bif,GAAaJ,GAAQjd,SAASmd,GAC9B7gB,EAAiB6gB,EAAUnhB,EAAOF,EAASqhB,EAAU3gB,EAASC,GAG3DgjB,GAAsBlU,EAAavP,EAAOQ,EAAS2gB,EAAUrhB,IAExEyP,EAAY4R,SAAWA,EACvB5R,EAAYzP,QAAUA,EACtByP,EAAY6R,SAAWA,EACvB7R,EAAY8R,UAAYA,EACjBH,GAAsBC,EAAUnhB,EAAOF,EAASshB,EAAU3gB,EAAQD,EAAS6gB,GACtF,CMmCQqC,CAAiCvC,EAAUnhB,EAAOuP,EAAazP,EAASshB,EAAU5gB,EAASC,EAAQ4gB,QACnG9R,EAAYvP,MAAQA,EAExB,CACA,OAAOkhB,GAAsBC,EAAUnhB,EAAOF,EAASshB,EAAU3gB,EAAQD,EAAS6gB,EACtF,CACO,SAAS4B,GAAyBtZ,EAAQoZ,EAAWjjB,EAAS8E,EAAcwc,EAAU/b,EAAS5E,GAClG,IAAIuiB,GAAiBD,GAIrB,UAAWA,IAAchkB,EAAWyD,OASX,IAArBugB,EAAU5f,QAGdie,EAASthB,EAASijB,EAAWlkB,QAXzB,IAAK,MAAMkB,KAAQgjB,EAAW,CAC1B,MAAM/iB,EAAQ+iB,EAAUhjB,GACxBqjB,GAAiBzZ,EAAQ5J,EAAMD,EAAS8E,EAAcwc,EAAU/b,EAASmd,GAAcziB,GACvFU,EAAQT,EACZ,CAQR,CAwBO,SAASmjB,GAAqBb,EAAcnB,EAAU3iB,EAASsB,EAASU,EAAS4gB,EAAUC,EAAW5gB,GAEzG,OAAI6B,EAAWggB,GA2BnB,SAAqB9hB,EAAS8hB,EAAcxiB,EAASqhB,EAAUE,EAAWD,EAAU5iB,EAASiC,GACzF,MAAM2X,EAAU5X,EAAQrB,UAAUiZ,QAGlC,IAFkBA,GAASpW,WAAaoW,GAASrG,UAAU/P,aAC3BhD,EAAWQ,WAEvC,OAAOikB,GAAsBjlB,EAAS8jB,EAAc9hB,EAAS2gB,EAAUrhB,GAE3E,OAAO6jB,GAA6BrB,EAAcxiB,EAASqhB,EAAUE,EAAWD,EAAU5gB,EAASC,EACvG,CAlCemjB,CAAYpjB,EAAS8hB,EAAcxiB,EAASqhB,EAAUE,EAAWD,EAAU5iB,EAASiC,GAExFkjB,GAA6BrB,EAAcxiB,EAASqhB,EAAUE,EAAWD,EAAU5gB,EAASC,EACvG,CACO,SAASkjB,GAA6BrB,EAAcxiB,EAASqhB,EAAU0C,EAASzC,EAAU5gB,EAASC,GAEtG,IAAgB,IAAZojB,EAAJ,CAKA,OAAQvB,GACJ,UAAKniB,EACL,KAAK,EACL,KAAK,KAID,YAHA,GAAaF,MAAK,WACdH,EAAQO,gBAAgB8gB,EAC5B,IAGR,GAAI7e,EAAWggB,GACX,OAAOD,GAAyBviB,EAASwiB,EAAc9hB,EAAS2gB,GAGpEC,EAASthB,EAASqhB,EAAUmB,EAd5B,MAHIhiB,EAAiB6gB,EAAUmB,EAAcxiB,EAAS+jB,EAClDrjB,EAASC,EAiBjB,CAUO,SAASgjB,GAAsBjlB,EAAS8jB,EAAc9hB,EAAS2gB,EAAUrhB,GAG5E,OAAOuiB,GAAyBviB,EADhCwiB,EAAe9B,GAAoB8B,EAAc9hB,GACMA,EAAS2gB,EACpE,CACA,SAASmC,GAAYQ,GACjB,OAAI3hB,EAAS2hB,IAAa,aAAcA,EAC7BA,EAASC,UACZ,CAEZ,CACO,SAASf,GAAiBD,GAC7B,OAAO5iB,MAAc4iB,IAAmC,IAAUA,CACtE,CCtJO,SAASiB,GAAiBhkB,EAAOqF,EAAS7E,EACjDC,EACAkQ,EACA9B,EAAUC,GACN,MAAMrG,EAASsO,SAASC,eAAenY,GAEjC0Q,EAAcD,EAActP,EAAOqF,EADZsL,EAAQ,GAErCpB,EAAYI,YAAclH,EACtBoG,EACAiH,GAAa7V,KAAK,CACd4G,UAAWkP,GACXhP,KAAM,CAAC8H,EAAUpG,KAIrB7B,GAAc3G,KAAK,CACf4G,UAAWoQ,GACXlQ,KAAM,CAAC+H,EAAcrG,KAG7BmO,GAAsB5W,EAAOQ,EAAS+O,EAAa9O,EAAQoO,EAAUC,EACzE,CCpBO,MAAM,GAAe,WAE5B,EACO,SAASM,GAAkB6U,EAAOta,EAAQnJ,EAASC,EAC1D4E,EAASsL,EACT9B,EAAUC,GACN,MAAM5P,EAAM,GACR2P,QAA6B1O,IAAjB2O,IACZA,EAAeiI,SAASC,eAAenY,GACvCiX,GAAa7V,KAAK,CACd8G,KAAM,CAAC8H,EAAUC,GACjBjI,UAAWkP,KAEflH,OAAW1O,GAEf,IAAK,IAAIkE,EAAQ,EAAGA,EAAQ4f,EAAM9gB,SAAUkB,EAAO,CAC/C,MAAM6f,EAAOD,EAAM5f,GACbrE,EAAQkkB,EAAKC,EAEnB,IADeC,MAAMpkB,GACV,CAGPgkB,GADcra,EADAtE,EAAQlC,QAEEkC,EAAS7E,EAASC,EAAQkQ,EAAO9B,EAAUC,GACnE,QACJ,CACA,MAAMuV,EAAU,CAAC,EAEjB,GADAnlB,EAAIe,KAAKokB,GACO,SAAZH,EAAKI,GAAe,CACpBC,GAAcF,EAASH,EAAMrV,EAAUC,GACvC,QACJ,CAEA,MAAMpG,EAAa8b,GAAiBH,EAASH,EAAMva,EAAQnJ,EAAS6E,EAAS5E,EAAQoO,EAAUC,GAC3FoV,EAAKO,KACLJ,EAAQI,GAAKrV,GAAkB8U,EAAKO,GAAI9a,EAAQnJ,EAASC,EAAQ4E,EAASsL,EAAQ,EAAGjI,EAAYoG,GAAc5P,IAEvH,CACA,MAAO,CAAEA,MAAKmG,UAClB,CACA,SAASmf,GAAiBH,EAASH,EAAMva,EAAQnJ,EAAS6E,EAAS5E,EAAQoO,EAAUC,GACjF,MAAMpG,EAAa2b,EAAQ3b,WAAaqO,SAAS2N,cAAcR,EAAKI,IAEpE,GAAIJ,EAAKpe,GACL,IAAK,MAAM6e,KAAQT,EAAKpe,GAAI,CACxB,MAAM/F,EAAO4kB,EAAK,GACZ3kB,EAAQ2kB,EAAK,GAEnBvB,GAAiBzZ,EAAQ5J,EAAM2I,EAAYlI,EAASN,EAAyBmF,EAD3Dsf,EAAK,KAAM,EACoElkB,EAAQT,EAC7G,CAcJ,OAZI6O,EACAiH,GAAa7V,KAAK,CACd8G,KAAM,CAAC8H,EAAUnG,GACjB7B,UAAWkP,KAIfnP,GAAc3G,KAAK,CACf4G,UAAWoQ,GACXlQ,KAAM,CAAC+H,EAAcpG,KAGtBA,CACX,CACA,SAAS6b,GAAcF,EAASH,EAAMpT,EAAOhC,GACzC,MAAM8V,EAAWP,EACXziB,EAASgjB,EAASC,GAAKX,EAAKW,GAC9B/T,EACAgF,GAAa7V,KAAK,CACd4G,UAAWie,GACX/d,KAAM,CAAC+J,EAAOlP,EAASwG,GAAQwc,EAASlc,WAAaN,KAIzDxB,GAAc3G,KAAK,CACf4G,UAAW6P,GACX3P,KAAM,CAAC+H,EAAclN,EAASwG,GAAQwc,EAASlc,WAAaN,IAGxE,CCpFO,IAAIxB,GAAgB,GAChB,GAAe,GACfyP,GAAa,GACbP,GAAe,GACflV,GAAc,GAClB,MAAM+G,GAAW,CACpBC,MAAO,GAEJ,SAASG,KACZ,KAAIJ,GAASC,MAAQ,GAArB,CAGA,IAAK,MAAMmd,KAAW,GAClBA,IAEJ,IAAK,MAAOC,EAAMJ,KAAavO,GAC3BuO,EAASK,YAAcD,EAE3B,IAAK,MAAMplB,KAAOkW,GACdlW,EAAIiH,aAAajH,EAAImH,MAEzB,IAAK,MAAMP,KAAQI,GACfJ,EAAKK,aAAaL,EAAKO,MAS3BH,GAAgB,GAChB,GAAe,GACfkP,GAAe,GACfO,GAAa,GATb,IAAK,MAAMzW,KAAOgB,GACdhB,IAEJgB,GAAc,EAjBd,CAkBJ,CAOO,SAASkG,GAAahH,GACNA,EAAQsiB,WAChB8C,YAAYplB,EAC3B,CACO,SAASmX,GAAYkO,EAAUrlB,GAClCqlB,EAAS/C,WAAWtT,aAAahP,EAASqlB,EAC9C,CACO,SAASpP,GAAYoP,EAAUrlB,GAClCqlB,EAASC,YAAYtlB,EACzB,CACA,MAAMulB,GAA+B,iBAAbtO,UAAyBA,SAAS2N,cAAc,OACjE,SAAShO,GAAgByO,EAAUH,EAAMha,EAAW,IACvDqa,GAAQC,UAAYN,EACpB,MAAMO,EAAUxO,SAASC,eAAeqO,GAAQC,WAChDrO,GAAYkO,EAAUI,GACtBva,EAASua,EACb,CACO,SAAST,GAAgBK,EAAUH,EAAMha,GAC5Cqa,GAAQC,UAAYN,EACpB,MAAMO,EAAUxO,SAASC,eAAeqO,GAAQJ,aAChDlP,GAAYoP,EAAUI,GACtBva,EAASua,EACb,CCjDO,SAASC,GAAgB9f,EAAM+f,GAClC,IAAK,IAAIphB,EAAQ,EAAGA,EAAQqB,EAAKvC,SAAUkB,EAAO,CAG9CqhB,GAFehgB,EAAKrB,GACLohB,EAAKphB,GAExB,CACJ,CACA,IAAIshB,GACJ,SAASC,MAAiBtb,GAEtB,OADAqb,GAAMrb,EACCA,CACX,CACA,SAASub,KACL,OAAOF,EACX,CACO,SAASD,GAAWhgB,EAAM+f,GAC7B/f,EAAKkgB,GAAe,GACpBH,EAAKI,GAAe,EACxB,CAEO,SAASC,GAAcC,EAAWC,EAASC,EAAYC,GAC1D,IAAK,IAAI7hB,EAAQ0hB,EAAU5iB,OAAS,EAAGkB,GAAS,IAAKA,EAAO,CACxD,MACM8hB,EADkBJ,EAAU1hB,GACApG,MAG5B+M,EADgBgb,EAAQ3hB,GACC2G,SAC1BA,GAGLA,EAASmb,EACb,CAEA,IAAK,IAAI9hB,EAAQ6hB,EAAW/iB,OAAS,EAAGkB,GAAS,IAAKA,EAAO,CACzD+hB,GAAUjjB,OAAS,EACnBkjB,GAAW,GAGXC,EAFwBJ,EAAW7hB,IAEnBkiB,IAEhBN,EAAW5hB,GAAOmiB,GACtB,CACJ,CACA,IAAIH,GAAW,EACf,MAAMD,GAAY,GAClB,SAASG,MAAkBxf,GAEvB,OADAqf,GAAUnmB,KAAK8G,GACRA,CACX,CAEA,SAASyf,MAAkBC,GACvB,OAAOL,GAAUC,KACrB,CCrDO,SAASK,GAAeC,EAAYpX,EAAa3K,EAAcnE,EAAQuK,EAAU6D,EAAUC,GAC9F,IAAI8X,EAEA/X,IACA+X,EAAe9X,EAAeiI,SAASC,eAAenY,GACtDiX,GAAa7V,KAAK,CACd4G,UAAWkP,GACXhP,KAAM,CAAC8H,EAAUC,MAGzB,MAAM3D,EAOH,SAAyCwb,EAAY/hB,EAC5DnE,EACAuK,EAAU8D,GACN,MAAMiE,EAAYD,GAAoBlO,GACtC,IAAIiiB,EAAU,SAAoB7mB,GAC9BmL,EAAa2b,YAAa,EAC1B3b,EAAaoE,YAAcuH,GAA4B9W,EAAO4E,EAAcnE,EAAQqO,GAOpF+X,EAAU,SAA4B7mB,GAClCiY,GAAyB9M,EAAaoE,YAAavP,EAAO4E,GACrDmiB,GAAYnV,GAAawB,YAAY5S,SACtCuH,IAER,CACJ,EAEA,MAAMif,EAAqB,SAA2BhnB,GAClDmL,EAAauB,UAAY1M,EACzB,MAAMinB,EAAelU,EAAUvU,QAAQE,OAAOsG,OD3C/C,IACPkiB,IC2CmCnU,ED1CxByS,GC0CUyB,ED1Cc5T,OAAQ6T,EAAc7T,QC2C7ClI,EAAaH,WACbhL,EAAQmL,EAAaH,SAAShL,IAElC6mB,EAAQ7mB,EACZ,EACA,IAAI+mB,GAAU,EAEd,MAAM5b,EAAe,CACjB2b,YAAY,EACZ5a,QAAS8a,EACThc,WACAqI,OAAQN,EAAUM,OAClB3G,eAAWvM,EACXgL,kBAAchL,GAIlB,OAFAgL,EAAaA,aAAewb,EAAWrnB,UAAU0nB,GACjDD,GAAU,EACH5b,CACX,CAlDyBgc,CAAgCR,EAAY/hB,EAAcnE,EAAQuK,EAAU8D,GAKjG,OAJA3D,EAAayb,aAAeA,EAC5BrX,EAAYpE,aAAeA,EAC3BoE,EAAYxK,OAASqiB,GACrB7X,EAAYrD,QAAUmb,GACflc,CACX,CA6CA,SAASkc,GAAmBngB,EAAUtC,EAAc2K,GAChD,IAAKrI,IAAaA,EAASlF,WAAakF,EAASlF,YAAchD,EAAWM,UAGtE,OAFAiQ,EAAYxK,OAAOwK,EAAa3K,GAChCgT,GAAkB1Q,EAAUqI,EAAa3K,EAAc,IAChD,GAEX,MAAMuG,EAAeoE,EAAYpE,aACjC,IAAKA,EAAa2b,WACd,OAAQ,EAEZ3b,EAAaH,SAAW9D,EAAS8D,SACjCG,EAAae,QAAQf,EAAauB,WAClC,MAAMua,EAAenU,GAAoBlO,GAEzC,OADAuG,EAAakI,OAAS4T,EAAa5T,QAC3B,CACZ,CACA,SAAS+T,GAAgB7X,EAAa3K,GAClC,MAAMuG,EAAeoE,EAAYpE,aACjCA,EAAa7C,SAAU,SAChBiH,EAAYpE,aACnBA,EAAaA,aAAaxF,cAC1B,MAAMihB,EAAezb,EAAayb,aAWlC,GAVIA,IACAhgB,GAAc3G,KAAK,CACf4G,UAAWC,GACXC,KAAM,CAAC6f,YAEJzb,EAAayb,qBAEjBrX,EAAYxK,OAEnBwK,EAAYrD,QAAU2K,GACjB1L,EAAa2b,WAIlB,OADA3b,EAAaoE,YAAYxK,OAAOoG,EAAaoE,YAAa3K,GACnD,EACX,CC1GO,SAAS0iB,GAAiBtnB,EAAOuP,EAAa3K,EAAcnE,EACnEoO,EAAUC,GACN,OAAO4X,GAAe1mB,EAAMunB,WAAYhY,EAAa3K,EAAcnE,EAAQT,EAAMgL,SAAU6D,EAAUC,EACzG,CACO,SAAS0Y,GAAqBxnB,EAAOuP,EAAa3K,EAAcnE,EACvEoO,EAAUC,GACN,MAAM6X,EAAa3mB,EAAMunB,WACnBpc,EAAeub,GAAeC,EAAYpX,EAAa3K,EAAcnE,EAAQT,EAAMgL,SAAU6D,EAAUC,GAI7G,OAHK3D,EAAa2b,YACd3b,EAAae,QAASya,EAAW3mB,OAASA,EAAMynB,aAE7Ctc,CACX,CACO,SAASuc,GAAc1nB,EAAOuP,EAAa3K,EAAcnE,EAChEoO,GACI6X,GAAe1mB,EAAOuP,EAAa3K,EAAcnE,OAAQN,EAAW0O,EACxE,CCZO,SAAStP,GAAOooB,GAEnB,OADgBrW,KAELiD,IAAM,IAAMqT,GAAOD,KAEvBC,GAAOD,EAClB,CAEO,SAASC,GAAOD,GACnB,IAAI3nB,EAAQ2nB,EACZ,MAAMrc,EAAc,IAAIuc,IACxB,MAAO,CACH7lB,UAAWhD,EAAWO,OACtBsQ,YAAa6X,GACb,SAAI1nB,GACA,OAAOA,CACX,EACA,SAAIA,CAAMkH,GACFlH,IAAUkH,IACVlH,EAAQkH,EAERoE,EAAYnG,SAAQ6F,GAAYA,EAAS9D,KAEjD,EACA,SAAA5H,CAAU0L,GACNA,EAAShL,GACTsL,EAAY/J,IAAIyJ,GAEhB,MAAM8c,EAAQ,IAAMxc,EAAYvG,OAAOiG,GAGvC,OADA8c,EAAMniB,YAAcmiB,EACbA,CACX,EAER,CCtCO,MAAMC,WAAqBjd,EAC9B9K,MACA,WAAAuM,CAAYvM,GACR2N,MAAM3N,GACNwM,KAAKxM,MAAQA,CACjB,CACA,SAAAV,CAAU0L,GACN,MAAMG,EAAewC,MAAMrO,UAAU0L,GAGrC,OADAA,EAASwB,KAAKxM,MAAOmL,GACdA,CACX,EAEG,MAAM6c,WAAwBld,EACjC9K,MACA,WAAAuM,CAAYvM,GACR2N,MAAM3N,GACNwM,KAAKxM,MAAQA,EACbwM,KAAKkB,OAAS1N,EACd4N,EAAcpB,KAClB,CACA,SAAAlN,CAAU0L,GACN,MAAMG,EAAewC,MAAMrO,UAAU0L,GAGrC,OADAA,EAASwB,KAAKkB,OAAQvC,GACfA,CACX,EC3BG,SAAS8c,GAAajd,GACzB,MAAO,CAAE0B,EAAWwb,KAChBA,EAAM9b,YAAW,KACG,IAEpBpB,EAAS0B,EAAWwb,EAAMzjB,KAC7B,CACL,CAEO,SAAS0jB,GAAYnd,GACxB,MAAO,CAAE0B,EAAWwb,KAChBA,EAAM9b,YAAW,KACG,IAELpB,EAAS0B,GACjBnK,MAAK+H,GAAK4d,EAAMzjB,KAAK6F,IAC/B,CACL,CAEO,MAAM8d,GAAiBpd,GACnB,CAAE0B,EAAWwb,KAChBA,EAAM9b,YAAW,KACG,IAEpB,MACMjB,EADSH,EAAS0B,GACIpN,WAAUgL,IAClCa,EAAaxF,cACbuiB,EAAMzjB,KAAK6F,EAAE,GAEpB,EC3BE,SAASiK,GAAMC,GAClB,OAAO5C,GAAawB,YAAYS,SAAS3H,QAAQsI,EACrD,CCQO,MAAM6T,GAAQ,CAAEC,EAAetd,IAC3Bud,GAAWD,EAAetd,GAE/Bwd,GAAkBle,GAAMA,EAgB9B,MAAMie,GAAa,CAACD,EAAetd,GAAYyd,OAAM1Q,SAAQ2Q,QAAQF,IAAoB,CAAC,KACtF,MAAMhR,EAAWjD,GAAM,CACnBoU,gBAAYxoB,EACZwJ,YAAQxJ,IAENyoB,EAAiBpR,EAAS7N,OAEhC,QAAuBxJ,IAAnByoB,EAA8B,CAC9B,GAAI7Q,IAAWA,EAAOuQ,GAElB,OADA9Q,EAAS7N,OAAS2e,EACX9Q,EAASmR,WAEpB,MACMziB,GADauiB,GAAQzd,GACDsd,EAAeM,GAGzC,OAFApR,EAASmR,WAAaD,EAAMxiB,GAC5BsR,EAAS7N,OAAS2e,EACX9Q,EAASmR,UACpB,CAEA,GADiBL,EAAc7e,OAAM,CAACjD,EAAMnC,IAAUmC,IAASoiB,EAAevkB,KAE1E,OAAOmT,EAASmR,WAEpB,GAAI5Q,IAAWA,EAAOuQ,GAElB,OADA9Q,EAAS7N,OAAS2e,EACX9Q,EAASmR,WAEpB,MAAMziB,EAAS8E,EAASsd,EAAeM,GAIvC,OAHApR,EAASmR,WAAaD,EAAMxiB,GAC5B0iB,EAAezlB,OAAS,EACxBylB,EAAe3oB,QAAQqoB,GAChB9Q,EAASmR,UAAU,EAE9B,SAASE,GAAeC,EAAUC,GA8C9B,OA7CAjrB,OAAOC,eAAegrB,EAAU,SAAU,CACtC,GAAA9qB,GACI,MAAMoqB,EAAQS,IAEd,OADAT,EAAMW,MAAMP,KAAO,KAAe,EAC3BJ,CACX,IAEJvqB,OAAOC,eAAegrB,EAAU,YAAa,CACzC,GAAA9qB,GACI,MAAMgrB,EAAWH,IACXI,EAAe3U,IAAM,IAAMjD,OAC3B9S,EAAU+V,IAAM,IAAM,IAAIwT,QAAa5nB,KACvCgpB,EAAW5U,IAAM,KAAM,CACzBN,WAAYrC,GAAawB,YAAYa,WACrCZ,OAAQzB,GAAawB,YAAYC,WAE/B+V,EAAS,CAACd,EAAetd,KAC3Bud,GAAWD,GAAe,CAACA,EAAeM,KACtC,MAAMS,EAAa/X,KACbgY,EAAQte,EAASsd,EAAeM,GACtC,GAAIS,IAAeH,EAAc,CAC7B,MAAMK,EAAcJ,EAASlV,WAEvBvN,EADSwiB,EAAa1qB,QAAQE,OACdgI,OAItBof,GAAcyD,EAHM7iB,EAAO6N,MACT4U,EAAS9V,OACT3M,EAAO2M,OAE7B,CACA7U,EAAQiG,KAAK6kB,EAAM,GACpBL,EAASD,OACLxqB,GAIX,OAFA4qB,EAAOJ,MAAQC,EAASD,MACxBH,IAAe,IAAMO,GAAQA,GACtBA,CACX,IAEJtrB,OAAOC,eAAegrB,EAAU,SAAU,CACtC,GAAA9qB,GACI,MAAMoqB,EAAQS,IAEd,OADAT,EAAMW,MAAMjR,OAAUuQ,GAAkBA,EAAc7e,OAAMa,GAAKA,IAC1D+d,CACX,IAEGU,CACX,CCxGO,SAASvqB,GAAQmpB,GAEpB,OADgBrW,KAELiD,IAAM,IAAM,IAAIzJ,EAAQ6c,KAE5B,IAAI7c,EAAQ6c,EACvB,CCVO,SAAStU,GAAOH,GAEnB,OADetB,GAAawB,YACdS,SAASE,cAAcb,EACzC,CCGO,SAASsW,GAAQtW,GACpB,MAAMuW,EAAclqB,GAAO,IACrBmqB,EAASnqB,GAAO,GAChBoqB,EAAWpqB,GAAO,GACxB,IAAIqqB,EAAY,GACZC,EAAS,EAgCb,OA/BAF,EAAS3pB,MAAQ0pB,EAAO1pB,MACxBkT,GAAO,IAAIvJ,KACPigB,EAAYjgB,EACL8f,EAAYzpB,SAGvBqoB,GAAMuB,GAAW,OACXC,EACFJ,EAAYzpB,MAAQ4pB,EACpB1W,GAAO,IAAM0W,GAAU,IAG3BvW,IAAO,CAACyW,EAAIC,KAER,GAAIF,EASA,OARA3W,GAAO,IAAIvJ,KACFogB,GAA2B,IAAdA,IACdN,EAAYzpB,MAAQ2J,GAEjB8f,EAAYzpB,SAEvB2pB,EAAS3pB,MAAQ0pB,EAAO1pB,YACtB0pB,EAAO1pB,MAIbkT,GAAO,IACIuW,EAAYzpB,OACrB,MAEJ6pB,EACKJ,EAAYzpB,KACvB,CC3CA,SAASgqB,KACL,MAAO,CAAEC,UAAW,EAAG7lB,cAAUjE,EACrC,CJ0GA0oB,IAAe,IA/Ff,SAAkBG,GACd,MAAMI,EAAS,CAACd,EAAetd,IACpBud,GAAWD,EAAetd,EAAUge,GAI/C,OAFAI,EAAOJ,MAAQA,EACfH,IAAe,IAAMO,GAAQA,GACtBA,CACX,CAwFqBc,CAAS,CAAC,IAAI7B,IClGnC7pB,GAAQkP,OAAU1N,IACd,MAAMmqB,EAAc5V,IAAM,WACtB,MAAO,CACHN,WAAYrC,GAAawB,YAAYa,WACrCZ,OAAQzB,GAAawB,YAAYC,OAEzC,IACMgW,EAAa/X,KACnB,OAAOiD,IAAM,WAKT,OAJgB,IAAIwT,GAAa/nB,GAAOoN,MAAK9C,IACzCwb,GAAcuD,EAAW9U,MAAO4V,EAAYlW,WAAYoV,EAAWhW,OAAQ8W,EAAY9W,QAChF/I,IAGf,GAAE,EAaN9L,GAAQkJ,IAXR,SAAaX,GACT,MAAMojB,EAAc5V,IAAM,KAAM,CAC5BN,WAAYrC,GAAawB,YAAYa,WACrCZ,OAAQzB,GAAawB,YAAYC,WAE/BgW,EAAa/X,KACnB,OAAOxG,EAAQpD,IAAIX,GAAMqG,MAAK9C,IAC1Bwb,GAAcuD,EAAW9U,MAAO4V,EAAYlW,WAAYoV,EAAWhW,OAAQ8W,EAAY9W,QAChF/I,IAEf,EGjCO,MAAMnG,GAAY,CACrBnB,OAASonB,IACL,MAAMC,EAAkB9V,GAAMyV,IAE9B,GAAIK,EAAgBJ,UAAW,CAC3B,IAAI3f,EAAI+f,EAAgBJ,UACxB,KAAO3f,KACHiK,QAAMpU,GAGV,OADeoU,QAAMpU,EAEzB,CACA,MAAM+F,EAASqO,IAAM,KACjB,MAAMnB,EAAcxB,GAAawB,YAC3BkX,EAAgBlX,EAAYa,WAAW9Q,OAEvConB,EAAWH,EAAgBhsB,UAAY,IAAIgsB,EAAoBA,IAC/D5pB,EAAU4S,EAAY5S,QACtBypB,EAAY7W,EAAYa,WAAW9Q,OAASmnB,EAC5ClmB,EAAW,CACbgmB,kBACAG,WACAN,YACAnZ,MAAOtQ,EACP8D,SAAU,IAEd+lB,EAAgBjmB,SAAWA,EAC3B,MAAM1F,EAAS8B,EAAQhC,QAAQE,OAI/B,OAHkBA,EAAOyF,UAAYzF,EAAOyF,WAAa,IAC/ClE,KAAKmE,GACfimB,EAAgBJ,UAAYA,EACrBM,CAAQ,IAEbC,EAAKJ,EACLrgB,EAAYygB,EAAGzgB,UAAYygB,EAAG9mB,WAEpC,OADA2mB,EAAgBjmB,SAASgmB,gBAAgBrgB,UAAYA,EAC9C7D,CAAM,EAOjBukB,OAEJ,SAAwBle,GAEpB,OAAOgI,IAAM,WAET,MAAMiW,EAAKje,EACLxC,EAAYygB,EAAGzgB,UAAYygB,EAAGzgB,WAAawC,EAAY7I,WACvDlD,EAAU8Q,KACVnN,EAAY,GAClB,IAAI2M,EAAQ,CACRlM,aAAcpE,EAAQoE,cAE1B,KAAOkM,EAAMlM,cAAc,CACvB,MACM8lB,EADY5Z,EAAMlM,aAAapG,QAAQE,OACZyF,UACjC,IAAKumB,EAAgB,CACjB5Z,EAAQA,EAAMlM,aACd,QACJ,CACA,MAAMR,EAAWsmB,EAAeC,MAAKvmB,IACjCD,EAAUlE,KAAKmE,GAEf,GADyBA,EAASgmB,gBAAgBrgB,YAAcA,EAE5D,OAAO,CACX,IAEJ,GAAI3F,EAAU,CACV,MAAM1F,EAAS8B,EAAQhC,QAAQE,OAI/B,OAHkBA,EAAOyF,UAAYzF,EAAOyF,WAAa,IAC/ClE,KAAKmE,GACfA,EAASE,SAASrE,KAAKO,GAChB4D,EAASmmB,QACpB,CACAzZ,EAAQA,EAAMlM,YAClB,CACA,MAAMgmB,EAAM,8BAA8Bre,EAAYxM,QAAQwM,IAE9D,MADAiO,QAAQqQ,KAAK,GAAGD,yBAA4BzmB,GACtC,IAAIzC,MAAMkpB,EACpB,GACJ,GCpFO,SAAS5f,GAASA,GACrB,MAAMxK,EAAU8Q,KAChB,IAAK9Q,EACD,MAAMsqB,GAEV,OAAOC,GAAcvqB,EAASoR,GAAawB,YAC3CpI,EACJ,CACO,SAAS+f,GAAcvqB,EAAS2oB,EAAUnc,GAE7C,MAAMwG,EAAY2V,EAAS9V,OAC3B,OAAO,YAAoBtM,GAEvB,OADsBvG,EAAQhC,QAAQC,YAAc,ECf7C,SAA6B+B,EAASgT,EAAWxI,KAAajE,GACzE,MACMmgB,EADS1mB,EAAQhC,QAAQE,OACFsG,OAIvBkD,EAAe8C,KAAYjE,GAYjC,OATA,GAAcmgB,GACV7kB,EAAU6F,IACVA,EAAa8iB,SAAQ,KAGjB,GAAc9D,EAAc,IAI7Bhf,CACX,CDFmB+iB,CAAoBzqB,EAASgT,EAAWxG,KAAejG,GAG3DiG,KAAcjG,EACzB,CACJ,CEpBO,MAAMmkB,GAAgB,KACzB,MAAM1qB,EAAU8Q,KAEhB,IAAK9Q,EACD,MAAMsqB,GAEV,MAAM3B,EAAWvX,GAAawB,YAC9B,OAAO,SAAsBpI,GACzB,OAAO+f,GAAcvqB,EAAS2oB,EAAUne,EAC5C,CAAC,EAEQ8f,GAAY,IAAI3Q,GAAkB,iKCbxC,SAASgR,GAAOngB,GACnBuJ,GAAMvJ,EACV,CCFO,SAASogB,GAAUpgB,GACtBuJ,IAAM,WACcjD,KACO9S,QAAQE,OACxB8F,SAASwI,WAAWhC,EAC/B,GACJ,CCHO,SAAS1L,GAAUioB,EAAYvc,GAClC,MAAO,CACHhJ,UAAWhD,EAAWM,UACtBuQ,YAAayX,GACbC,aACAvc,WACAqI,OAAQP,GAAoBxB,MAAqB+B,OAEzD,CCRO,SAAStI,GAAcwc,EAAYE,EAAazc,GACnD,MAAO,CACHhJ,UAAWhD,EAAWM,UACtBuQ,YAAa2X,GACbD,aACAvc,WACAyc,cACApU,OAAQP,GAAoBxB,MAAqB+B,OAEzD,CCbO,SAAS/B,KACZ,OAAOM,GAAawB,YAAY5S,OACpC,CCCO,SAAS6qB,GAAkBrrB,EAAOuP,EACzC3K,EACAnE,EACAoO,EAAUC,GACNS,EAAYC,iBAAmBE,GAC/B,MAAMzQ,EAAMe,EACZ,IAAIb,EAAYF,EAAIE,UACfA,IACDA,EtFQD,SAA0BF,GAC7B,MAAME,EAAYyQ,KAGlB,OAFAzQ,EAAUF,IAAMA,EAChBA,EAAIE,UAAYA,EACTA,CACX,CsFboBmsB,CAAiBrsB,IAEjC,MAAMP,EAASH,EAAagR,GAC5B,OAAIV,EACO6K,GAAqBva,EAAWoQ,EAAa3K,EAAcnE,EAAQoO,EAAUC,IAExFpQ,EAAOsG,OAAS+K,GAAsB5Q,EAAWyF,EAAc2K,GAC/DA,EAAYC,iBAAmBE,GACxBD,GAAW7K,EAAc2K,EAAa9O,GACjD,CCjBO,MAAM8qB,GAAiB,UACjBC,GAAiB,IACvB,SAASC,GAAaliB,EAASI,GAClC,MAAM1K,EAAM,CACR0K,SACA/E,aAAc0M,KACdtP,UAAWhD,EAAWC,IACtB4Q,YAAawb,GACb9hB,UAEA3L,IAAI0I,IACArH,EAAIqH,WAAaA,EACVrH,GAEXysB,KAAM,SAAcniB,EAASI,GAEzB,OADA1K,EAAIqF,SAAW,CAAEiF,UAASI,UACnB1K,CACX,GAEJ,OAAOA,CACX,CACO,SAAS0sB,GAAUzsB,EAAKyK,GAC3B,MAAM1K,EAAM,CACR0K,SACA/E,aAAc0M,KACdpS,MACA8C,UAAWhD,EAAWE,IACtB2Q,YAAawb,GACbztB,IAAK,SAAgB0I,GAEjB,OADArH,EAAIqH,WAAaA,EACVrH,CACX,EACAysB,KAAM,CACFxsB,IAAK,SAAaA,EAClByK,GAEI,OADA1K,EAAIqF,SAAW,CAAEpF,IAAKA,EAAKyK,UACpB1K,CACX,IAGR,OAAOA,CACX,CC3CA,MAAM2sB,GAAc,gBACdC,GAAgB,gBAChBC,GAAY,sDACZC,GAAc,2GAEb,SAASC,GAAUN,GACtB,MAAMO,EAAiB,GACjBC,EAAW,GACXC,EAAQ,GACd,IAAIC,EAAiB,KACjBC,GAAc,EACdC,EAAW,EACf,MAAMC,EAAW,IAAIzpB,OAAOipB,GAAa,KAEzC,IADAL,EAqGJ,SAAkCA,GAE9B,OAAOA,EAAKc,QAAQC,IAAmB,SAAUC,GAE7C,OAAOA,EAAMF,QAAQ,WAAY,cAAcA,QAAQ,WAAY,cAAcA,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAC1H,GACJ,CA3GWG,CAAyBjB,GACzBY,EAAWZ,EAAKvoB,QAAQ,CAC3B,MAAMypB,EAAWL,EAASM,KAAKnB,GAC/B,IAAKkB,EACD,MAEJ,MAAOE,EAAWC,EAASC,GAAcJ,EACnCK,EAAeH,EAAUrK,WAAW,MACpCyK,EAAgBJ,EAAUK,SAAS,MACzC,GAAIb,EAAWM,EAASvoB,MAAO,CAC3B,MAAM4gB,EAAcyG,EAAK0B,MAAMd,EAAUM,EAASvoB,OAClD,GAAI4gB,EAAYoI,OAAQ,CACpB,MAAMC,EAAiBC,GAActI,GACrC,IAAK,IAAIA,KAAeqI,EAChBrI,EAAYxC,WAAW8I,MACvBtG,EAAcsG,MAAoBc,EAAcb,IAEpDgC,GAAWpB,EAAgBF,EAAUjH,EAE7C,CACJ,CAEA,GADAqH,EAAWM,EAASvoB,MAAQyoB,EAAU3pB,OAClC8pB,EAAc,CACdb,EAAiBD,EAAMnN,OAAS,KAChC,QACJ,CACA,MAAMyO,EAAa,GACnB,IAAIC,EACJ,KAAoD,QAA5CA,EAAY5B,GAAUe,KAAKG,KAAuB,CACtD,MAAM7L,EAAWuM,EAAU,IAAMA,EAAU,IAAMA,EAAU,GAE3D,IAAI3K,EADe2K,EAAU,IAAMA,EAAU,IAAMA,EAAU,GAE7D,QAAiBvtB,IAAbghB,EACA,SAEJ,MAAMwM,EAA4B,KAAjBD,EAAU,GACrBE,OAAwBztB,IAAd4iB,GAA2B4K,EACrCE,EAAY1M,EAAS2M,cACrBC,EAAYF,EAAUpL,WAAW,MAAQuL,GAAeH,GAAaA,EAC3E,GAAID,EAAS,CAET,GADsBzM,EAASiM,MAAM,EAAG7B,GAAepoB,UAAYooB,GAChD,CACf,MAAM0C,EAAY1C,MAAoBc,EAAcb,GACpDS,EAAehsB,KAAK,CAAC,KAAMguB,IAC3BR,EAAWxtB,KAAK,CAACguB,IACjB,QACJ,CAGA,GAFqBP,EAAU,GAAGjL,WAAWtB,IACNuM,EAAU,GAAGN,MAAMjM,EAAShe,OAAQuqB,EAAU,GAAGvqB,QAAQ+qB,OAAO,SAAW,EAC9F,CAChBT,EAAWxtB,KAAK,CAAC8tB,IACjB,QACJ,CAEAhL,EADkBwI,MAAoBc,EAAcb,EAExD,CACKmC,IACD5K,EAAY2K,EAAU,IAE1B,MAAMS,EAAU,CAACJ,EAAWhL,GACtB1B,EAAYmB,GAAcqL,GAC5BxM,GACA8M,EAAQluB,KAAKohB,GAEjBoM,EAAWxtB,KAAKkuB,EACpB,CACA,MAAMruB,EAAU,CACZwkB,GAAIyI,GAEJU,EAAWtqB,SACXrD,EAAQgG,GAAK2nB,GAEbrB,GACKA,EAAe3H,KAChB2H,EAAe3H,GAAK,IAExB2H,EAAe3H,GAAGxkB,KAAKH,IAGvBosB,EAASjsB,KAAKH,GAEbotB,IACDf,EAAMlsB,KAAKmsB,GACXA,EAAiBtsB,EAEzB,CACA,GAAIwsB,EAAWZ,EAAKvoB,OAAQ,CACxB,MAAM8hB,EAAcyG,EAAK0B,MAAMd,GAC/B,GAAIrH,EAAYoI,OAAQ,CACpB,MAAMC,EAAiBC,GAActI,GACrC,IAAK,MAAMA,KAAeqI,EAClBrI,EAAYxC,WAAW8I,OACrBc,EAENmB,GAAWpB,EAAgBF,EAAUjH,EAE7C,CACJ,CACA,OAAOiH,CACX,CACA,MAAMO,GAAoB,IAAI3pB,OAAO,4BAAuB,KAQ5D,SAASkrB,GAAezM,GACpB,GAAIA,EAAUkB,WAAW,MAAO,CAE5B,OADwBlB,EAAUpe,SAAW0oB,GAAc1oB,QAAUoe,IAAcsK,GAExE,WAEJtK,EAAU6L,MAAM,EAAG7L,EAAUpe,OACxC,CACA,OAAOoe,CACX,CACA,SAASiM,GAAWpB,EAAgBF,EAAUjH,IAc9C,SAAgBmH,EAAgBF,EAAUtH,GAClCwH,GACKA,EAAe3H,KAChB2H,EAAe3H,GAAK,IAExB2H,EAAe3H,GAAGxkB,KAAK2kB,IAGvBsH,EAASjsB,KAAK2kB,EAEtB,CAnBIwJ,CAAOhC,EAAgBF,EAJN,CACb5H,GAAI,OACJO,GAAIwJ,GAA0BpJ,IAGtC,CACA,SAASoJ,GAA0B3C,GAE/B,OAAOA,EAAKc,QAAQ,kCAAkC,SAAUE,GAE5D,OAAOA,EAAMF,QAAQ,WAAY,KAAKA,QAAQ,WAAY,KAAKA,QAAQ,gBAAiB,SAASA,QAAQ,gBAAiB,QAC9H,GACJ,CAYA,SAASe,GAAce,GAKnB,OAHcA,EAAYntB,MAAMyqB,IAEJ2C,OAAOC,GAEvC,CACA,SAASA,GAAqBC,GAC1B,MAAgB,KAATA,CACX,CCrKA,MAAMC,GAAe,+BACfC,GAAU,eAST,SAASC,GAAgCrlB,EAASI,GAIrD,OAQJ,SAAyBJ,EAASI,GAC9B,MAAMklB,EAAU,GAChB,IAAK,IAAIxqB,EAAQ,EAAGA,EAAQkF,EAAQpG,SAAUkB,EAAO,CACjD,MAAMyqB,EAAWvlB,EAAQlF,GACrBA,EAAQsF,EAAOxG,OACf0rB,EAAQ5uB,KAAK6uB,EAAWvD,GAAiBlnB,EAAQmnB,IAGrDqD,EAAQ5uB,KAAK6uB,EACjB,CAEA,OAEG,SAA8BD,EAAStlB,EAASI,GACnD,MAAMolB,EAAOplB,EAAOxG,OAASoG,EAAQpG,OACrC,GAAI4rB,EAAO,EACP,IAAK,IAAIzkB,EAAIykB,EAAMzkB,EAAI,IAAKA,EACxBukB,EAAQ5uB,KAAKsrB,IAAkBhiB,EAAQpG,OAASmH,EAAI,GAAKkhB,GAGrE,CAVIwD,CAAqBH,EAAStlB,EAASI,GAChCklB,CACX,CApBWI,CAFyC1lB,EAK/BY,IAAI+kB,IAHsBvlB,EAC/C,CAIA,SAASulB,GAAgBJ,GACrB,OAAOA,EAAStC,QAAQkC,IAAc,CAAChC,EAAOroB,IAAUsqB,GAAUtqB,GACtE,CCpBA,MAAM8qB,GAAmB,IAAIrsB,OAAOyoB,GAAiB,SAAWC,GAAgB,KAC1E/G,GAAK,KACJ,SAAS2K,GAAoBlwB,EAAKmwB,EAAYpD,EAAiB,GAAIqD,EAAc,IACpF,MAAMpD,EAAWhtB,EACjB,IAAK,IAAIgE,EAAI,EAAGA,EAAIgpB,EAAS/oB,OAAQD,IAAK,CACtC,MAAMqsB,EAAW,IAAID,EAAapsB,GAC5BpD,EAAUosB,EAAShpB,GACzB,GAAIpD,EAAQgG,GAAI,CACZ,MAAM0pB,EAAQ1vB,EAAQgG,GACtBhG,EAAQgG,GAAK2pB,GAAkBD,EAAOH,EAC1C,CACA,GAAIvvB,EAAQ2kB,GAAI,CACZ,MAAMngB,EAAWxE,EAAQ2kB,GACnBiL,EAAgB,IAAIH,EAAU9K,IACpC3kB,EAAQ2kB,GAAK2K,GAAoB9qB,EAAU+qB,EAAYpD,EAAgByD,EAC3E,CACAxsB,EAAIysB,GAAa7vB,EAASuvB,EAAYnD,EAAUhpB,EACpD,CACA,OAAOgpB,CACX,CACA,SAASyD,GAAa9qB,EAAOwqB,EAAY/qB,EAAUD,GAC/C,GAAiB,SAAbQ,EAAMyf,GACN,OAAOjgB,EAEX,MAAMurB,EAAY/qB,EAClB,IAII6nB,EAJAzH,EAAc2K,EAAU/K,GAC5B,UAAWI,IAAgBnmB,EAAe8C,OACtC,OAAOyC,EAGX,KAAwD,QAAhDqoB,EAAQyC,GAAiBtC,KAAK5H,KAAwB,CAC1D,MAAM4K,EAAcnD,EAAM,GACpBoD,EAASC,SAASF,EAAa,IAErC,IADiBzL,MAAM0L,IAAWA,EAAST,EAC9B,CACT,MAAMW,EAAazE,GAAiBuE,EAAStE,GACvCyE,EAAQhL,EAAYmI,MAAMV,EAAMroB,MAAQ2rB,EAAW7sB,QACzDmB,EAASC,OAAOF,EAAO,EAAO,CACtBigB,GAAI,OACJH,EAAG2L,IAEX7K,EAAcgL,EACdd,GAAiBe,UAAY,CACjC,CACJ,CAEA,OADAN,EAAU/K,GAAKI,EACR5gB,CACX,CACA,SAASorB,GAAkBhC,EAAY4B,GACnC,MAAMc,EAAS,GACf,IAAK,MAAMhC,KAAWV,EAAY,CAC9B,MAAO7vB,EAAKoC,EAAOqhB,GAAa8M,EAChC,GAAIvwB,EAAI6kB,WAAW8I,IAAiB,CAChC,MAAMlnB,EAAQ0rB,SAASnyB,EAAI4uB,QAAQjB,GAAgB,IAAK,IACxD,IAAKnH,MAAM/f,IAAUA,EAAQgrB,EAAY,CACrCc,EAAOlwB,KAAK,CAAC,CAAE8jB,SAAU1f,KACzB,QACJ,CACJ,CACA,UAAWrE,IAAUlB,EAAe8C,QAAU5B,EAAMyiB,WAAW8I,IAAiB,CAC5E,MAAMlnB,EAAQ0rB,SAAS/vB,EAAMwsB,QAAQjB,GAAgB,IAAK,IAC1D,IAAKnH,MAAM/f,IAAUA,EAAQgrB,EAAY,CACrCc,EAAOlwB,KAAK,CAACrC,EAAK,CAAEmmB,SAAU1f,GAASgd,IACvC,QACJ,CACJ,CACA8O,EAAOlwB,KAAKkuB,EAChB,CACA,OAAOgC,CACX,CCtEO,MAAM,GAAU,eAIvB,MAAMC,GAAe,qBACrB,SAASC,GAAmBvwB,GAcxB,GAbIA,EAAQgG,KACRhG,EAAQgG,GAAKhG,EAAQgG,GAAKhG,EAAQgG,GAAGqE,KAAIwa,IACrC,GAAoB,IAAhBA,EAAKxhB,OACL,OAAOwhB,EAEX,MAAO,CAAE3kB,GAAS2kB,EAClB,UAAW3kB,IAAUlB,EAAe8C,QAAU5B,EAAMyiB,WAAW,IAAU,CACrE,MAAMpe,EAAQ0rB,SAAS/vB,EAAMwsB,QAAQ,GAAS,IAAK,IACnD7H,EAAK,GAAK4G,GAAiBlnB,EAAQmnB,EACvC,CACA,OAAO7G,CAAI,IACV,IAEL7kB,EAAQ2kB,GAAI,CACZ,MAAMngB,EAAWxE,EAAQ2kB,GACzB,IAAK,IAAIvhB,EAAI,EAAGA,EAAIoB,EAASnB,OAAQD,IAAK,CACtC,MAAM2B,EAAQP,EAASpB,GACvB,GAAiB,SAAb2B,EAAMyf,GAAe,CACrB,UAAWzf,EAAMggB,KAAO/lB,EAAe8C,OACnC,OAEJiD,EAAMggB,GAAKhgB,EAAMggB,GAAG2H,QAAQ4D,IAAc,CAACE,EAAQjsB,IAAUknB,GAAiBlnB,EAAQmnB,IAC1F,CACA6E,GAAmBxrB,EACvB,CAEwB,IAApBP,EAASnB,eACFrD,EAAQ2kB,EAEvB,CACJ,CCjCA,SAAS8L,GAAajmB,GAClB,OAAOA,EAAEnH,MACb,CCDA,MAAMqtB,GAAW,CAAC,EAEX,SAASthB,GAAW3F,EAASI,GAChC,MAAM8mB,EDTH,SAAsBlnB,GACzB,MAAMgO,EAAQhO,EAAQY,IAAIomB,IAE1B,OADAhZ,EAAMtX,KAAKsJ,EAAQpG,QACZutB,OAAOnZ,EAAMoZ,KAAK,IAC7B,CCKqBC,CAAarnB,GACxBsnB,EAAUL,GAASC,GACnBK,EAAUD,GCXb,SAA0BtnB,EAASI,EAAQknB,GAC9C,GAAIA,GACIA,EAAQtnB,QAAQpG,SAAWoG,EAAQpG,QACd0tB,EAAQtnB,QAAQE,OAAM,CAAC7H,EAAQyC,IAEpDzC,IAAW2H,EAAQlF,MACCwsB,EAAQlnB,OAAOxG,SAAWwG,EAAOxG,OACjD,OAAO,EAInB,OAAO,CACX,CDD+B4tB,CAAiBxnB,EAASI,EAAQknB,GAC7D,GAAIC,EACA,OAAOD,EAAQG,WAEnB,MAAMhiB,EJVH,SAAoCzF,EAASI,GAKhD,OAJAilB,GAAgCrlB,EAASI,GAGzBqiB,GADG4C,GAAgCrlB,EAASI,GAAQgnB,KAAK,IAG7E,CIIoBM,CAA2B1nB,EAASI,GAC9CQ,EAAMilB,GAAoBpgB,EAASrF,EAAOxG,QAE5BgH,EFdXhF,QAAQkrB,IEejB,MAAMa,EAAW,CACbC,mBAAehxB,EACfyB,YAAQzB,EACRoJ,UACAI,SACAqnB,WAAY7mB,GAGhB,OADAqmB,GAASC,GAAYS,EACd/mB,CACX,CExBO,SAASuhB,GAAKniB,KAAYI,GAC7B,MAAMynB,EAAY3F,GAAaliB,EAASI,GAClCxK,EAAYwa,GAAmBrL,GAAYmN,MAGjD,OAFAtc,EAAUF,IAAMmyB,EAChBA,EAAUjyB,UAAYA,EACfiyB,CACX,CCgBA,SAASC,GAAcnyB,EAAKoyB,GACpBpyB,EAAIwJ,YACJ4oB,EAAYlM,YAAYlmB,EAAIwJ,YAE5BxJ,EAAIuJ,QACJ6oB,EAAYlM,YAAYlmB,EAAIuJ,OAEpC,CChCO,SAAS8oB,GAAmBpyB,EAAWX,EAASgjB,GACnD,MAAM9iB,EAASF,EAAQE,OACjBgS,EAAa7C,EAAe1O,EAAWX,GAK7C,OAJA0P,EAAqB/O,EAAWuR,EAAYA,GAC5CA,EAAW8Q,WAAaA,EACxB9iB,EAAOgI,OAAShI,EAAOgI,QAAUgK,EACjChS,EAAOsG,OAAS0L,EACTA,CACX,CCEO,SAAS8gB,GAAiB1U,EAAKpe,EAAQS,EAAWsyB,EAAY3xB,EAAStB,EAASkzB,GACnF,MAAM/hB,EAAcoH,SAASC,eAAe,IAC5CzR,GAAKtF,KAAMd,EAAUiZ,SAAW,CAAErG,SAAU5S,IAC5C,MAAMqB,EAkCH,SAAoBrB,EAAWwQ,EAAa6R,EAAYhjB,EAASkzB,GACpElzB,EAAQmR,YAAcA,EACtB,MAAMjR,EAASF,EAAQE,OACjBgI,EAAShI,EAAOgI,OAChBirB,EAAgBjzB,EAAOsG,SAAW0B,EAClCgK,EAAaD,GAActR,EAAWT,EAAOsG,OAAQtG,EAAOsG,OAAOgJ,WACzExP,GACKmzB,GACDzd,GAAQxD,EAAYhS,EAAOsG,OAC3B4M,GAAawB,YAAa1M,EAAO6N,OAErC,GAAIpV,EAAU6C,YAAchD,EAAWS,YACnC,OAQR,SAA0BN,EAAWuyB,EAAehhB,EAAYlS,EAASgjB,GACrE,MAAMtb,EAAU/G,EAAUiZ,SAAW,CAAErG,SAAU5S,GACjD,IAAKuyB,EAAe,CAChB,MAAMhhB,EAAa6gB,GAAmBpyB,EAAWX,EAASgjB,GAE1D,OADA7G,GAAejK,GACRA,CACX,CAGA,OAFAmE,GAAY1V,EAAW+G,EAAQwK,GAC/BiK,GAAejK,GACRA,CACX,CAlBekhB,CAAiBzyB,EAAWuyB,EAAehhB,EAAYlS,EAASgjB,GAG3E,MAAMpJ,EAAUjZ,EAAUiZ,QACpBiR,EAAajR,EAAQ1H,EAAYlS,GAEvC,OADAmc,GAAejK,GACR2Y,CACX,CArDoBwI,CAAW1yB,EAAWwQ,EAAa7P,EAAStB,EAASkzB,GAKrE,GAJAhzB,EAAOozB,OAAQ,EACXJ,IACAD,EAAWxyB,IAAMuB,EAAQrB,UAAUF,MAElCa,EACD,MAAM,IAAI4B,MAAM,sDAAsD5B,0BAI1EA,EAAQmI,QAAU,WACd,MAAM0Z,EAASjjB,EAAOijB,OACtB,IAAK,MAAMJ,KAAaI,EAAQ,CAC5B,MAAM3W,EAAW2W,EAAOJ,GACxBzhB,EAAQiyB,oBAAoBxQ,EAAWvW,EAC3C,CACAtM,EAAOijB,OAAS,CAAC,IACfha,GAASC,MACX,MAAMoqB,EAAUvrB,EAAejG,EAAS9B,GAGxC,QAFEiJ,GAASC,MACXG,KACOiqB,CACX,IACErqB,GAASC,MACX,MAAM0pB,EFpCH,SAA4B9wB,EAASV,EAASpB,EAAQS,EAAW2d,EAAKnN,GACzE6K,QAAQyX,MAAM,mCAAoC,CAAEnyB,UAASgd,QAC7D,MAAM5W,EAAS0I,EAAmBpO,EAAS,CAAEG,MAAO,EAAGG,QAAS,GAAKhB,OAASK,GAC9EzB,EAAOgI,OAASlG,EAChB9B,EAAOsG,OAASxE,EAChB,IAAI6a,EAASlc,EAAUkc,OACvB,GAAIlc,EAAU6C,YAAchD,EAAWS,YAAa,CAChD,MACMsS,EADO+K,EACS/K,SACtBsJ,EAAStJ,EAASsJ,OAClBtJ,EAAS+f,OAAQ,CACrB,CAEAhyB,EAAQub,OAASA,EACjBvb,EAAQd,WAAaA,EACrBkzB,GAAYjyB,KAAK,CAAEH,UAASU,YAC5B,MAAM8wB,EAAcva,SAASob,yBAC7Bb,EAAYlM,YAAYzV,GACxB,IAAK,MAAMyiB,KAAWlsB,EAAOhH,IACzBmyB,GAAce,EAASd,GAG3B,OADA9W,QAAQyX,MAAM,+BACPX,CACX,CEawBe,CAAmB7xB,EAASV,EAASpB,EAAQS,EAAW2d,EAAKnN,GAIjF,QAHEhI,GAASC,MACXG,KACAjI,EAAQslB,YAAYkM,GACb,CACH9wB,UACA+E,KAAI,GACJvG,WAAU,EAElB,CHpCA0sB,GAAKxsB,IAAM,SAAUA,KAAQyK,GACzB,OAAOgiB,GAAUzsB,EAAKyK,EAC1B,EIHO,MAAMuoB,GAAc,GAQpB,SAASI,GAAWxV,EAAKhd,EAAS2K,GACrC,MAAM8nB,EAAcL,GAAYzmB,WAAU+mB,GAAUA,EAAO1yB,UAAYA,IACvE,GAAIyyB,GAAe,EAAG,CAClB,MAAM/xB,EAAU0xB,GAAYK,GAAa/xB,QACzCiG,EAAejG,EAASA,EAAQhC,QAAQE,QACxCwzB,GAAY3tB,OAAOguB,EAAa,GAEhC/X,QAAQqQ,KAAK,8DAA+D,CAAE/qB,WAClF,CAEA,IAAIX,EAAY,IAAOsyB,EAAWhnB,GAClCtL,EAAUkP,UAAYC,GAAYmN,KAClCtc,EAAU6C,UAAYhD,EAAWS,YAEjCN,EAAUsL,MAAQ,CAACA,GACnBtL,EAAU2yB,OAAQ,EAElB,MAAMtzB,EAuBV,SAAuBW,EAAWqiB,GAC9B,MAAMhjB,EAAU,CACZwB,MAAOb,EACPqQ,iBAAkBE,GAClB3K,OAAQgK,GACR5G,oBAAoB,EACpB1J,YAAa,EACbC,YAAQyB,GAENzB,EAASH,EAAaC,GAG5B,OAFAE,EAAOijB,OAAS,CAAC,EACjB4P,GAAmBpyB,EAAWX,EAASgjB,GAChChjB,CACX,CApCoBi0B,CAActzB,EAAWW,GACnCpB,EAASF,EAAQE,OACvBkV,GAAUlV,EAAOsG,OAAQ4M,GAAawB,aACtC,IAAIqe,EAAa3U,EAAIrS,GACrB,MAAMinB,SAAuBD,GAAc1yB,EAAWqD,SAiBtD,OAhBKsvB,IACIzvB,EAAewvB,IAKhB/yB,EAAOsG,OAAOmJ,YAAc,CACxBK,OAAQ,CAAC/D,GACT2D,UAAW,CAAC3D,IAEhBtL,EAAUkP,UAAYojB,EAAWpjB,UACjClP,EAAU6C,UAAYyvB,EAAWzvB,UACjC7C,EAAUiZ,QAAUqZ,EAAWrZ,QAC/BjZ,EAAYsyB,IAXZtyB,EAAUF,IAAMwyB,EAChBA,EAAa3U,IAad0U,GAAiB1U,EAAKpe,EAAQS,EAAWsyB,EAAY3xB,EAAStB,EAASkzB,EAClF,CCpDO,SAAS7mB,GAAOG,GACnB,IAAKA,EACD,OAAO,GAEX,MAAMxK,EAAU8Q,KAChB,IAAK9Q,EACD,MAAM,IAAIkB,MAAM,8CAEpB,MAAO,IAAIqF,KACP,MAAMnC,EAAepE,EAAQoE,aAEvB8tB,EADc9tB,EAAapG,QAAQE,OACTsG,OAEhCwgB,GAAgBkN,EAAYrf,OAAQzO,EAAayO,QACjD,MAAMsf,EAAI3nB,KAAYjE,GAEtBye,GAAgB5gB,EAAayO,OAAQqf,EAAYrf,QAIjD,OADA1B,GAAkB+gB,EADOA,EAAY9tB,aACWpG,QAAQE,OAAOsG,QACxD2tB,CAAC,CAEhB,CCXO,MAAMC,GAAM,CACfN,WAAU,qBAAmB,iBAAe,GAC5C1X,cAAa,SAAO,I","sources":["webpack://taggedjs/webpack/bootstrap","webpack://taggedjs/webpack/runtime/define property getters","webpack://taggedjs/webpack/runtime/hasOwnProperty shorthand","webpack://taggedjs/./ts/tag/update/getNewGlobal.function.ts","webpack://taggedjs/./ts/tag/tag.types.ts","webpack://taggedjs/./ts/tag/ValueTypes.enum.ts","webpack://taggedjs/./ts/interpolations/attributes/howToSetInputValue.function.ts","webpack://taggedjs/./ts/interpolations/attributes/specialAttribute.ts","webpack://taggedjs/./ts/isInstance.ts","webpack://taggedjs/./ts/deepFunctions.ts","webpack://taggedjs/./ts/tag/tagRunner.ts","webpack://taggedjs/./ts/tag/destroyContext.function.ts","webpack://taggedjs/./ts/tag/update/compareArrayItems.function.ts","webpack://taggedjs/./ts/tag/checkDestroyPrevious.function.ts","webpack://taggedjs/./ts/tag/smartRemoveKids.function.ts","webpack://taggedjs/./ts/render/destroySupport.function.ts","webpack://taggedjs/./ts/tag/isLikeTags.function.ts","webpack://taggedjs/./ts/tag/cloneValueArray.function.ts","webpack://taggedjs/./ts/tag/props/clonePropsBy.function.ts","webpack://taggedjs/./ts/subject/combineLatest.function.ts","webpack://taggedjs/./ts/subject/subject.utils.ts","webpack://taggedjs/./ts/subject/Subject.class.ts","webpack://taggedjs/./ts/tag/createHtmlSupport.function.ts","webpack://taggedjs/./ts/render/buildBeforeElement.function.ts","webpack://taggedjs/./ts/render/update/processTag.function.ts","webpack://taggedjs/./ts/tag/processUpdateContext.function.ts","webpack://taggedjs/./ts/render/update/updateSupportBy.function.ts","webpack://taggedjs/./ts/tag/createSupport.function.ts","webpack://taggedjs/./ts/tag/props/alterProp.function.ts","webpack://taggedjs/./ts/interpolations/attributes/getSupportWithState.function.ts","webpack://taggedjs/./ts/state/states.utils.ts","webpack://taggedjs/./ts/state/state.utils.ts","webpack://taggedjs/./ts/state/getStateValue.function.ts","webpack://taggedjs/./ts/state/stateHandlers.ts","webpack://taggedjs/./ts/state/tagClosed$.subject.ts","webpack://taggedjs/./ts/state/setUseMemory.object.ts","webpack://taggedjs/./ts/render/executeWrap.function.ts","webpack://taggedjs/./ts/tag/getTagWrap.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectComponent.function.ts","webpack://taggedjs/./ts/tag/update/processTagResult.function.ts","webpack://taggedjs/./ts/castTextValue.function.ts","webpack://taggedjs/./ts/tag/checkSimpleValueChange.function.ts","webpack://taggedjs/./ts/tag/update/processRegularValue.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectValue.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/domProcessContextItem.function.ts","webpack://taggedjs/./ts/tag/update/createAndProcessContextItem.function.ts","webpack://taggedjs/./ts/tag/update/processTagArray.ts","webpack://taggedjs/./ts/tag/update/updateToDiffValue.function.ts","webpack://taggedjs/./ts/tag/update/forceUpdateExistingValue.function.ts","webpack://taggedjs/./ts/tag/update/tagValueUpdateHandler.function.ts","webpack://taggedjs/./ts/render/update/updateExistingTagComponent.function.ts","webpack://taggedjs/./ts/tag/hasSupportChanged.function.ts","webpack://taggedjs/./ts/tag/update/tryUpdateToTag.function.ts","webpack://taggedjs/./ts/tag/update/handleStillTag.function.ts","webpack://taggedjs/./ts/tag/checkTagValueChange.function.ts","webpack://taggedjs/./ts/tag/update/processNewSubjectTag.function.ts","webpack://taggedjs/./ts/tag/update/processTagInit.function.ts","webpack://taggedjs/./ts/tag/getTemplaterResult.function.ts","webpack://taggedjs/./ts/tag/tag.utils.ts","webpack://taggedjs/./ts/tag/update/oneRenderToSupport.function.ts","webpack://taggedjs/./ts/errors.ts","webpack://taggedjs/./ts/tag/checkStateMismatch.function.ts","webpack://taggedjs/./ts/render/afterRender.function.ts","webpack://taggedjs/./ts/render/renderTagOnly.function.ts","webpack://taggedjs/./ts/render/update/processRenderOnceInit.function.ts","webpack://taggedjs/./ts/tag/update/processTagComponentInit.function.ts","webpack://taggedjs/./ts/tag/tag.function.ts","webpack://taggedjs/./ts/tag/hasPropChanges.function.ts","webpack://taggedjs/./ts/tag/update/syncPriorPropFunction.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingArray.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingObject.function.ts","webpack://taggedjs/./ts/render/softDestroySupport.function.ts","webpack://taggedjs/./ts/render/renderWithSupport.function.ts","webpack://taggedjs/./ts/render/renderExistingTag.function.ts","webpack://taggedjs/./ts/render/renderSupport.function.ts","webpack://taggedjs/./ts/state/handleProviderChanges.function.ts","webpack://taggedjs/./ts/state/providersChangeCheck.function.ts","webpack://taggedjs/./ts/interpolations/attributes/getUpTags.function.ts","webpack://taggedjs/./ts/interpolations/attributes/renderTagArray.function.ts","webpack://taggedjs/./ts/interpolations/attributes/bindSubjectCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processNameValueAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/addSupportEventListener.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttributeCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/isSpecialAttribute.function.ts","webpack://taggedjs/./ts/render/attributes/processUpdateAttrContext.function.ts","webpack://taggedjs/./ts/interpolations/attributes/updateAttribute.function.ts","webpack://taggedjs/./ts/render/attributes/processAttribute.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/attachDynamicDom.function.ts","webpack://taggedjs/./ts/render/dom/attachDomElements.function.ts","webpack://taggedjs/./ts/render/paint.function.ts","webpack://taggedjs/./ts/state/syncStates.function.ts","webpack://taggedjs/./ts/tag/update/setupSubscribe.function.ts","webpack://taggedjs/./ts/tag/update/processSubscribe.function.ts","webpack://taggedjs/./ts/subject/signal.function.ts","webpack://taggedjs/./ts/subject/ValueSubject.ts","webpack://taggedjs/./ts/subject/will.functions.ts","webpack://taggedjs/./ts/state/state.function.ts","webpack://taggedjs/./ts/state/watch.function.ts","webpack://taggedjs/./ts/state/subject.function.ts","webpack://taggedjs/./ts/state/states.function.ts","webpack://taggedjs/./ts/state/letProp.function.ts","webpack://taggedjs/./ts/state/providers.ts","webpack://taggedjs/./ts/state/callback.function.ts","webpack://taggedjs/./ts/state/callbackStateUpdate.function.ts","webpack://taggedjs/./ts/state/callbackMaker.function.ts","webpack://taggedjs/./ts/state/onInit.ts","webpack://taggedjs/./ts/state/onDestroy.ts","webpack://taggedjs/./ts/state/subscribe.function.ts","webpack://taggedjs/./ts/state/subscribeWith.function.ts","webpack://taggedjs/./ts/tag/getSupportInCycle.function.ts","webpack://taggedjs/./ts/tag/update/processDomTagInit.function.ts","webpack://taggedjs/./ts/tag/getDomTag.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/parseHTML.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/htmlInterpolationToDomMeta.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/replacePlaceholders.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/restorePlaceholders.function.ts","webpack://taggedjs/./ts/tag/getStringsId.function.ts","webpack://taggedjs/./ts/tag/domMetaCollector.ts","webpack://taggedjs/./ts/tag/isLastRunMatched.function.ts","webpack://taggedjs/./ts/tag/html.ts","webpack://taggedjs/./ts/render/registerNewTagElement.function.ts","webpack://taggedjs/./ts/tag/loadNewBaseSupport.function.ts","webpack://taggedjs/./ts/render/renderTagElement.function.ts","webpack://taggedjs/./ts/tag/tagElement.ts","webpack://taggedjs/./ts/tag/output.function.ts","webpack://taggedjs/./ts/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export function getNewGlobal(subject) {\n    ;\n    subject.renderCount = subject.renderCount || 0;\n    // ;(subject as SupportContextItem).renderCount = 0\n    return subject.global = {};\n}\n","export class RouteQuery {\n    get(_name) {\n        return 'todo';\n    }\n}\n","export const empty = '';\nexport var ImmutableTypes;\n(function (ImmutableTypes) {\n    ImmutableTypes[\"string\"] = \"string\";\n    ImmutableTypes[\"number\"] = \"number\";\n    ImmutableTypes[\"boolean\"] = \"boolean\";\n    ImmutableTypes[\"undefined\"] = \"undefined\";\n})(ImmutableTypes || (ImmutableTypes = {}));\nexport var BasicTypes;\n(function (BasicTypes) {\n    BasicTypes[\"function\"] = \"function\";\n    BasicTypes[\"date\"] = \"date\";\n    BasicTypes[\"unknown\"] = \"unknown\";\n    BasicTypes[\"object\"] = \"object\";\n})(BasicTypes || (BasicTypes = {}));\nconst version = Date.now();\n/** Used as direct memory comparisons, the strings are never compared, just the array */\nexport const ValueTypes = {\n    tag: 'html', // html'' aka StringTag | DomTag\n    dom: 'dom', // compiled version of html''\n    templater: 'templater',\n    tagComponent: 'tagComponent',\n    tagArray: 'tagArray',\n    // subject: 'subject',\n    // tagJsSubject: 'tagJsSubject',\n    subscribe: 'subscribe',\n    signal: 'signal',\n    renderOnce: 'renderOnce',\n    stateRender: 'stateRender',\n    version,\n};\n","import { paintContent } from \"../../render/paint.function.js\";\n// Maybe more performant for updates but seemingly slower for first renders\nexport function howToSetInputValue(element, name, value) {\n    paintContent.push(() => howToSetFirstInputValue(element, name, value));\n}\nexport function howToSetFirstInputValue(element, name, value) {\n    if (value === undefined || value === false || value === null) {\n        element.removeAttribute(name);\n        return;\n    }\n    element.setAttribute(name, value);\n}\n","import { paintAfters, paintContent } from \"../../render/paint.function.js\";\n/** handles init, destroy, autofocus, autoselect, style., class. */\nexport function specialAttribute(name, value, element, specialName, support, counts) {\n    switch (specialName) {\n        // case 'oninit' as any:\n        case 'init': {\n            const stagger = counts.added;\n            // run delayed after elements placed down\n            paintAfters.push(function paintSpecialAttribute() {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                value(event); // call init/oninit\n            });\n            return;\n        }\n        case 'destroy': {\n            const stagger = ++counts.removed;\n            const global = support.subject.global;\n            global.destroys = global.destroys || [];\n            global.destroys.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                return value(event); // call destroy/ondestroy\n            });\n            return;\n        }\n        case 'autofocus':\n            paintAfters.push(() => element.focus());\n            return;\n        case 'autoselect':\n            paintAfters.push(() => element.select());\n            return;\n        case 'style': {\n            const names = name.split('.');\n            paintContent.push(() => element.style[names[1]] = value); // attribute changes should come first\n            return;\n        }\n        case 'class':\n            processSpecialClass(name, value, element);\n            return;\n    }\n    throw new Error(`Invalid special attribute of ${specialName}. ${name}`);\n}\nfunction processSpecialClass(name, value, element) {\n    const names = name.split('.');\n    names.shift(); // remove class\n    // truthy\n    if (value) {\n        for (const name of names) {\n            paintContent.push(() => element.classList.add(name));\n        }\n        return;\n    }\n    // falsy\n    for (const name of names) {\n        paintContent.push(() => element.classList.remove(name));\n    }\n}\n","import { BasicTypes, ImmutableTypes, ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isSimpleType(value) {\n    switch (value) {\n        case ImmutableTypes.string:\n        case ImmutableTypes.number:\n        case ImmutableTypes.boolean:\n            return true;\n    }\n    return false;\n}\n/** Indicates if tag() was used */\nexport function isStaticTag(value) {\n    if (!value) {\n        return false;\n    }\n    const tagJsType = value.tagJsType;\n    switch (tagJsType) {\n        case ValueTypes.dom:\n        case ValueTypes.tag:\n        case ValueTypes.templater:\n            return true;\n    }\n    return false;\n}\n/** passed in is expected to be a TemplaterResult */\nexport function isTagComponent(value) {\n    const tagType = value?.tagJsType;\n    return tagType === ValueTypes.tagComponent || tagType === ValueTypes.stateRender;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return isObject(subject) && typeof subject.subscribe === BasicTypes.function;\n}\nexport function isPromise(value) {\n    return value && isFunction(value.then);\n}\nexport function isFunction(value) {\n    return typeof value === BasicTypes.function;\n}\nexport function isObject(value) {\n    return typeof (value) === BasicTypes.object && value !== null;\n}\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n","import { isArray, isFunction } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nexport function deepClone(obj, maxDepth) {\n    // return makeDeepClone(obj, new WeakMap())\n    return makeDeepClone(obj, maxDepth);\n}\nfunction makeDeepClone(obj, \n// visited: WeakMap<any, any>\nmaxDepth) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== BasicTypes.object) {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    /*\n    if (visited.has(obj)) {\n      return visited.get(obj)\n    }\n    */\n    if (maxDepth < 0) {\n        return obj;\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Clone each property or element of the object or array\n    if (isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], maxDepth - 1);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                clone[key] = makeDeepClone(obj[key], maxDepth - 1);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2, maxDepth) {\n    return isDeepEqual(obj1, obj2, maxDepth);\n}\nfunction isDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    // if (visited.has(obj1)) {\n    if (maxDepth < 0) {\n        return true;\n    }\n    if (typeof obj1 === BasicTypes.object && typeof obj2 === BasicTypes.object) {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        // visited.set(obj1, 0)\n        // Check if obj1 and obj2 are both arrays\n        if (isArray(obj1) && isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, maxDepth - 1);\n        }\n        else if (isArray(obj1) || isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        // return isObjectDeepEqual(obj1, obj2, visited)\n        return isObjectDeepEqual(obj1, obj2, maxDepth - 1);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, maxDepth) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = isFunction(fn0) && isFunction(fn1);\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n","// Life cycle 4 - end of life\nexport function runBeforeDestroy(support, global) {\n    const providers = global.providers;\n    if (providers) {\n        for (const provider of providers) {\n            for (let index = provider.children.length - 1; index >= 0; --index) {\n                const child = provider.children[index];\n                if (child.subject.global === global) {\n                    provider.children.splice(index, 1);\n                }\n            }\n        }\n    }\n    if (global.destroy$) {\n        global.destroy$.next();\n    }\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n}\n","import { isTagComponent } from '../isInstance.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nexport function destroyContext(childTags, ownerSupport) {\n    for (const child of childTags) {\n        // deleting arrays\n        const lastArray = child.lastArray;\n        if (lastArray) {\n            // recurse\n            destroyContext(lastArray, ownerSupport);\n            continue;\n        }\n        if (child.value?.tagJsType === ValueTypes.subscribe) {\n            child.delete(child, ownerSupport);\n            continue;\n        }\n        const global = child.global;\n        if (!global) {\n            continue; // not a support contextItem\n        }\n        const support = global.newest;\n        const iSubs = global.subscriptions;\n        if (iSubs) {\n            iSubs.forEach(unsubscribeFrom);\n        }\n        if (isTagComponent(support.templater)) {\n            runBeforeDestroy(support, global);\n        }\n        const subTags = global.context;\n        // recurse\n        destroyContext(subTags, support);\n    }\n}\nexport function getChildTagsToSoftDestroy(childTags, tags = [], subs = []) {\n    for (const child of childTags) {\n        const global = child.global;\n        if (!global) {\n            continue;\n        }\n        const support = global.newest;\n        if (support) {\n            tags.push(support);\n            const iSubs = global.subscriptions;\n            if (iSubs) {\n                subs.push(...iSubs);\n            }\n        }\n        const subTags = global.context;\n        if (subTags) {\n            getChildTagsToSoftDestroy(subTags, tags, subs);\n        }\n    }\n    return { tags, subs };\n}\nexport function unsubscribeFrom(from) {\n    from.unsubscribe();\n}\n","import { paintCommands, paintRemover } from '../../render/paint.function.js';\nimport { destroySupport } from '../../render/destroySupport.function.js';\nexport function compareArrayItems(value, index, lastArray, removed, counts) {\n    const newLength = value.length - 1;\n    const at = index - removed;\n    const lessLength = at < 0 || newLength < at;\n    const prevContext = lastArray[index];\n    if (lessLength) {\n        destroyArrayItem(prevContext, counts);\n        return 1;\n    }\n    const oldKey = prevContext.value.arrayValue;\n    const newValueTag = value[index];\n    const result = runArrayItemDiff(oldKey, newValueTag, prevContext, counts, lastArray, index);\n    return result;\n}\nfunction runArrayItemDiff(oldKey, newValueTag, prevContext, counts, lastArray, index) {\n    const isDiff = newValueTag && oldKey !== newValueTag.arrayValue;\n    if (isDiff) {\n        destroyArrayItem(prevContext, counts);\n        lastArray.splice(index, 1);\n        return 2;\n    }\n    return 0;\n}\nexport function destroyArrayItem(item, counts) {\n    const global = item.global;\n    destroyArrayItemByGlobal(global, item);\n    ++counts.removed;\n}\nfunction destroyArrayItemByGlobal(global, item) {\n    if (global) {\n        const support = global.oldest;\n        destroySupport(support, global);\n    }\n    else {\n        const element = item.simpleValueElm;\n        delete item.simpleValueElm;\n        paintCommands.push({\n            processor: paintRemover,\n            args: [element],\n        });\n    }\n}\n","// Functions in here are attached as ContextItem.checkValueChange\nimport { destroyArrayItem } from './update/compareArrayItems.function.js';\nimport { isArray } from '../isInstance.js';\nexport function checkArrayValueChange(newValue, subject) {\n    // no longer an array?\n    if (!isArray(newValue)) {\n        const lastArray = subject.lastArray;\n        destroyArray(subject, lastArray);\n        return 9; // 'array'\n    }\n    return false;\n}\nexport function destroyArray(subject, lastArray) {\n    const counts = { added: 0, removed: 0 };\n    for (let index = 0; index < lastArray.length; ++index) {\n        destroyArrayItem(lastArray[index], counts);\n    }\n    delete subject.lastArray;\n}\n","import { destroyArray } from './checkDestroyPrevious.function.js';\nimport { paint, paintCommands, painting, paintRemover } from '../render/paint.function.js';\n/** sets global.deleted on support and all children */\nexport function smartRemoveKids(global, allPromises) {\n    const context = global.context;\n    // already set\n    // global.deleted = true\n    const destroys = global.destroys;\n    if (destroys) {\n        return processContextDestroys(destroys, global, allPromises);\n    }\n    smartRemoveByContext(context, allPromises);\n    destroyClones(global);\n}\nconst promises = [];\nfunction destroyCall(destroy) {\n    const maybePromise = destroy();\n    const isPromise = maybePromise instanceof Promise;\n    if (isPromise) {\n        promises.push(maybePromise);\n    }\n}\n// Elements that have a destroy or ondestroy attribute\nfunction processContextDestroys(destroys, global, allPromises) {\n    promises.length = 0;\n    destroys.forEach(destroyCall);\n    if (promises.length) {\n        const lastPromise = Promise.all(promises)\n            .then(() => {\n            ++painting.locks;\n            // continue to remove\n            smartRemoveByContext(global.context, allPromises);\n            destroyClones(global);\n            --painting.locks;\n            paint();\n        });\n        // run destroy animations\n        allPromises.push(lastPromise);\n        return;\n    }\n    ++painting.locks;\n    smartRemoveByContext(global.context, allPromises);\n    destroyClones(global);\n    --painting.locks;\n    paint();\n}\nfunction smartRemoveByContext(context, allPromises) {\n    for (const subject of context) {\n        if (subject.withinOwnerElement) {\n            continue; // i live within my owner variable. I will be deleted with owner\n        }\n        const lastArray = subject.lastArray;\n        if (lastArray) {\n            destroyArray(subject, lastArray);\n            continue;\n        }\n        // regular values, no placeholders\n        const elm = subject.simpleValueElm;\n        if (elm) {\n            delete subject.simpleValueElm;\n            paintCommands.push({\n                processor: paintRemover,\n                args: [elm],\n            });\n            continue;\n        }\n        const subGlobal = subject.global;\n        if (subGlobal === undefined) {\n            continue; // subject\n        }\n        if (subGlobal.deleted === true) {\n            continue; // already deleted\n        }\n        subGlobal.deleted = true;\n        const oldest = subGlobal.oldest;\n        if (oldest) {\n            smartRemoveKids(subGlobal, allPromises);\n            continue;\n        }\n    }\n}\n/** Destroy dom elements and dom space markers */\nfunction destroyClones(global) {\n    const htmlDomMeta = global.htmlDomMeta;\n    // check subjects that may have clones attached to them\n    htmlDomMeta.forEach(destroyClone);\n}\nfunction destroyClone(clone) {\n    const marker = clone.marker;\n    if (marker) {\n        paintCommands.push({\n            processor: paintRemover,\n            args: [marker],\n        });\n    }\n    const dom = clone.domElement;\n    if (!dom) {\n        return;\n    }\n    paintCommands.push({\n        processor: paintRemover,\n        args: [dom],\n    });\n}\n","import { destroyContext } from '../tag/destroyContext.function.js';\nimport { smartRemoveKids } from '../tag/smartRemoveKids.function.js';\nimport { runBeforeDestroy } from '../tag/tagRunner.js';\nexport function destroySupport(support, global) {\n    const subject = support.subject;\n    global.deleted = true;\n    subject.renderCount = 0; // if it comes back, wont be considered an update\n    const promises = [];\n    const context = global.context;\n    destroyContext(context, support);\n    if (global.destroy$) {\n        runBeforeDestroy(support, global);\n    }\n    smartRemoveKids(global, promises);\n    return promises;\n}\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nexport function isLikeTags(support0, // new\nsupport1) {\n    const templater0 = support0.templater;\n    const templater1 = support1.templater;\n    const tag0 = templater0?.tag || support0;\n    const tag1 = templater1.tag; // || (support1 as any)\n    if (templater0?.tagJsType === ValueTypes.stateRender) {\n        return templater0.dom === templater1.dom;\n    }\n    switch (tag0.tagJsType) {\n        case ValueTypes.dom: {\n            if (tag1?.tagJsType !== ValueTypes.dom) {\n                return false; // tag0 is not even same type\n            }\n            return isLikeDomTags(tag0, tag1);\n        }\n        case ValueTypes.tag: {\n            const like = isLikeStringTags(tag0, tag1, support0, support1);\n            return like;\n        }\n    }\n    throw new Error(`unknown tagJsType of ${tag0.tagJsType}`);\n}\n// used when compiler was used\nexport function isLikeDomTags(tag0, tag1) {\n    const domMeta0 = tag0.dom;\n    const domMeta1 = tag1.dom;\n    return domMeta0 === domMeta1;\n}\n// used for no compiling\nfunction isLikeStringTags(tag0, tag1, support0, // new\nsupport1) {\n    const strings0 = tag0.strings;\n    const strings1 = tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index].length === string.length // performance, just compare length of strings // TODO: Document this\n    );\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = support0.templater.values || tag0.values;\n    const values1 = support1.templater.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every(function isEveryValueAlike(value, index) {\n        const compareTo = values0[index];\n        const isFunctions = typeof (value) === BasicTypes.function && typeof (compareTo) === BasicTypes.function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isArray } from '../isInstance.js';\nexport function cloneValueArray(values) {\n    return values.map(cloneTagJsValue);\n}\n/** clones only what is needed to compare differences later */\nexport function cloneTagJsValue(value, maxDepth) {\n    const tag = value;\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.signal:\n            case ValueTypes.subscribe:\n            case ValueTypes.stateRender:\n                return undefined;\n            case ValueTypes.dom:\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n        }\n    }\n    if (isArray(value)) {\n        return cloneValueArray(tag);\n    }\n    return deepClone(value, maxDepth);\n}\n","import { ValueTypes } from '../ValueTypes.enum.js';\nimport { cloneTagJsValue } from '../cloneValueArray.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from '../hasSupportChanged.function.js';\nimport { PropWatches } from '../tag.function.js';\nexport function clonePropsBy(support, props, castProps) {\n    const templater = support.templater;\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return support.propsConfig = {\n                latest: props,\n                castProps,\n            };\n        case PropWatches.SHALLOW:\n            return support.propsConfig = {\n                latest: props.map(shallowMapper),\n                castProps,\n            };\n    }\n    return support.propsConfig = {\n        latest: props.map(deepMapper),\n        castProps,\n    };\n}\nfunction shallowMapper(x) {\n    return cloneTagJsValue(x, shallowCompareDepth);\n}\nfunction deepMapper(props) {\n    return cloneTagJsValue(props, deepCompareDepth);\n}\n","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (const item of valuesSeen) {\n                if (!item) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => {\n            return subject.subscribe(x => setValue(x, index + 1));\n        });\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject.value + 1);\n    const subscription = function () {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = function () {\n        return unsubscribe(subscription, subscribers, callback);\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\nfunction unsubscribe(subscription, subscribers, callback) {\n    removeSubFromArray(subscribers, callback); // each will be called when update comes in\n    const valSub = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(valSub.value - 1);\n    // any double unsubscribes will be ignored\n    subscription.unsubscribe = () => subscription;\n    // unsubscribe from any combined subjects\n    const subscriptions = subscription.subscriptions;\n    for (const sub of subscriptions) {\n        sub.unsubscribe();\n    }\n    return subscription;\n}\n","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    constructor(value, \n    // private? - only used by extending classes\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        // defineValueOn(this)\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this.value = value;\n        this.emit();\n    }\n    set = this.next.bind(this);\n    emit() {\n        const value = this.value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster. Only get called once. No subscription to manage */\n    toCallback(callback) {\n        const subscription = this.subscribe((x, runtimeSub) => {\n            const tagJsUnsub = runtimeSub?.unsubscribe;\n            if (tagJsUnsub) {\n                tagJsUnsub(); // its from taggedjs\n            }\n            else {\n                setTimeout(() => subscription.unsubscribe(), 0);\n            }\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this.value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging}\n}\nexport class Subjective extends Subject {\n    value;\n    onSubscription;\n    _value;\n    constructor(value, \n    // private?\n    onSubscription) {\n        super(value, onSubscription);\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n}\n","import { clonePropsBy } from './props/clonePropsBy.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** used only for apps, otherwise use Support */\nexport function getBaseSupport(templater, subject, castedProps) {\n    const baseSupport = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    // baseSupport.appSupport = baseSupport\n    const global = subject.global;\n    global.blocked = [];\n    global.destroy$ = new Subject();\n    return baseSupport;\n}\n/** Sets support states to empty array and clones props */\nexport function upgradeBaseToSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nsupport, appSupport, castedProps) {\n    // ;(support as AnySupport).state = []\n    // ;(support as AnySupport).states = []\n    support.appSupport = appSupport;\n    const props = templater.props; // natural props\n    if (props) {\n        support.propsConfig = clonePropsBy(support, props, castedProps);\n    }\n    return support;\n}\nexport function createHtmlSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\n","import { attachDomElements } from './dom/attachDomElements.function.js';\nimport { destorySupportByContextItem } from '../tag/index.js';\nimport { getDomMeta } from '../tag/domMetaCollector.js';\nimport { ValueTypes } from '../tag/ValueTypes.enum.js';\nimport { painting } from './paint.function.js';\n/** Function that kicks off actually putting tags down as HTML elements */\nexport function buildBeforeElement(support, counts, appendTo, insertBefore) {\n    const subject = support.subject;\n    subject.delete = destorySupportByContextItem;\n    const global = subject.global;\n    global.oldest = support;\n    global.newest = support;\n    ++painting.locks;\n    const result = attachHtmlDomMeta(support, counts, appendTo, insertBefore);\n    global.htmlDomMeta = result.dom;\n    --painting.locks;\n    // return fragment\n    return result;\n}\nfunction attachHtmlDomMeta(support, counts, appendTo, insertBefore) {\n    const domMeta = loadDomMeta(support);\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    const context = [];\n    const global = support.subject.global;\n    global.context = context;\n    const result = attachDomElements(domMeta, values, support, counts, context, 0, appendTo, insertBefore);\n    return result;\n}\nfunction loadDomMeta(support) {\n    const templater = support.templater;\n    const thisTag = templater.tag; // || templater\n    if (thisTag.tagJsType === ValueTypes.dom) {\n        return thisTag.dom;\n    }\n    const strings = thisTag.strings;\n    return getDomMeta(strings, thisTag.values);\n}\nexport function addOneContext(value, context, withinOwnerElement) {\n    const contextItem = {\n        value,\n        checkValueChange: undefined, // checkSimpleValueChange,\n        delete: undefined, // deleteSimpleValue,\n        withinOwnerElement,\n    };\n    context.push(contextItem);\n    return contextItem;\n}\n","import { createHtmlSupport } from '../../tag/createHtmlSupport.function.js';\nimport { checkTagValueChange } from '../../tag/checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { ValueTypes } from '../../tag/ValueTypes.enum.js';\nimport { processTagInit } from '../../tag/update/processTagInit.function.js';\n/** When first time render, adds to owner childTags\n * Used for BOTH inserts & updates to values that were something else\n * Intended use only for updates\n*/\nexport function processTag(ownerSupport, // owner\nsubject, // could be tag via result.tag\ncounts) {\n    const global = subject.global;\n    const support = global.newest;\n    support.ownerSupport = ownerSupport;\n    subject.checkValueChange = checkTagValueChange;\n    const ph = subject.placeholder;\n    buildBeforeElement(support, counts, undefined, ph);\n    return support;\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        tagJsType: ValueTypes.templater,\n        processInit: processTagInit,\n    };\n    return fake;\n}\n/** Create support for a tag component */\nexport function newSupportByTemplater(templater, ownerSupport, subject) {\n    const support = createHtmlSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const global = subject.global;\n    global.context = [];\n    return support;\n}\n","export function processUpdateContext(support, context) {\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    let index = 0;\n    const len = values.length;\n    while (index < len) {\n        processUpdateOneContext(values, index, context, support);\n        ++index;\n    }\n    return context;\n}\n/** returns boolean of did render */\nfunction processUpdateOneContext(values, // the interpolated values\nindex, context, ownerSupport) {\n    const value = values[index];\n    // is something already there?\n    const contextItem = context[index];\n    // Do not continue if the value is just the same\n    if (value === contextItem.value) {\n        return;\n    }\n    const handler = contextItem.handler;\n    handler(value, ownerSupport, contextItem, values);\n    contextItem.value = value;\n}\n","import { paint, painting } from '../paint.function.js';\nimport { processUpdateContext } from '../../tag/processUpdateContext.function.js';\nexport function updateSupportBy(olderSupport, newerSupport) {\n    const global = olderSupport.subject.global;\n    const context = global.context;\n    updateSupportValuesBy(olderSupport, newerSupport);\n    ++painting.locks;\n    processUpdateContext(olderSupport, context);\n    --painting.locks;\n    paint();\n}\nexport function updateSupportValuesBy(olderSupport, newerSupport) {\n    const newTemplate = newerSupport.templater;\n    const tempTag = newerSupport.templater.tag;\n    const values = newTemplate.values || tempTag.values;\n    const tag = olderSupport.templater.tag;\n    tag.values = values;\n}\n","import { getBaseSupport, upgradeBaseToSupport } from './createHtmlSupport.function.js';\nexport function createSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = getBaseSupport(templater, subject, castedProps);\n    support.ownerSupport = ownerSupport;\n    return upgradeBaseToSupport(templater, support, appSupport, castedProps);\n}\n","import { isInlineHtml, renderInlineHtml } from '../../render/renderSupport.function.js';\nimport { renderExistingReadyTag } from '../../render/renderExistingTag.function.js';\nimport { getSupportInCycle } from '../getSupportInCycle.function.js';\nimport { deepCompareDepth } from '../hasSupportChanged.function.js';\nimport { isArray, isStaticTag } from '../../isInstance.js';\nimport { BasicTypes } from '../ValueTypes.enum.js';\nimport { setUseMemory } from '../../state/index.js';\nexport function castProps(props, newSupport, depth) {\n    return props.map(function eachCastProp(prop) {\n        return alterProp(prop, newSupport.ownerSupport, newSupport, depth);\n    });\n}\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nfunction alterProp(prop, ownerSupport, newSupport, depth) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, newSupport, depth);\n}\nexport function checkProp(value, ownerSupport, newSupport, depth, owner, keyName) {\n    if (!value) {\n        return value;\n    }\n    if (value.tagJsType) {\n        return value;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        if (depth <= 1) {\n            // only wrap function at depth 0 and 1\n            return getPropWrap(value, owner, ownerSupport, keyName);\n        }\n        return value;\n    }\n    if (depth === deepCompareDepth) {\n        return value;\n    }\n    const skip = isSkipPropValue(value);\n    if (skip) {\n        return value; // no children to crawl through\n    }\n    if (isArray(value)) {\n        return checkArrayProp(value, newSupport, ownerSupport, depth);\n    }\n    return checkObjectProp(value, newSupport, ownerSupport, depth);\n}\nfunction checkArrayProp(value, newSupport, ownerSupport, depth) {\n    for (let index = value.length - 1; index >= 0; --index) {\n        const subValue = value[index];\n        value[index] = checkProp(subValue, ownerSupport, newSupport, depth + 1, value);\n        if (typeof (subValue) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, index, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction checkObjectProp(value, newSupport, ownerSupport, depth) {\n    const keys = Object.keys(value);\n    for (const name of keys) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, newSupport, depth + 1, value, name);\n        const newSubValue = value[name];\n        if (newSubValue === result) {\n            continue;\n        }\n        const getset = Object.getOwnPropertyDescriptor(value, name);\n        const hasSetter = getset?.get || getset?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n        if (typeof (result) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, name, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction afterCheckProp(depth, index, originalValue, newProp, newSupport) {\n    // restore object to have original function on destroy\n    if (depth > 0) {\n        const global = newSupport.subject.global;\n        newProp[index].subscription = global.destroy$.toCallback(function alterCheckProcessor() {\n            newProp[index] = originalValue;\n        });\n    }\n}\nexport function getPropWrap(value, owner, ownerSupport, keyName) {\n    const already = value.mem;\n    // already previously converted by a parent?\n    if (already) {\n        return value;\n    }\n    const wrap = function wrapRunner(...args) {\n        return callbackPropOwner(wrap.mem, owner, args, ownerSupport, keyName);\n    }; // what gets called can switch over parent state changes\n    wrap.original = value;\n    wrap.mem = value;\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, // original function\nowner, callWith, ownerSupport, // <-- WHEN called from alterProp its owner OTHERWISE its previous\nkeyName) {\n    const global = ownerSupport.subject.global;\n    const newest = global?.newest || ownerSupport;\n    const supportInCycle = getSupportInCycle();\n    const noCycle = supportInCycle === undefined;\n    // actual function call to original method\n    const callbackResult = toCall.apply(owner, callWith);\n    const run = function propCallbackProcessor() {\n        const global = newest.subject.global;\n        if (!global || global.locked === true) {\n            return callbackResult; // currently in the middle of rendering\n        }\n        safeRenderSupport(newest, ownerSupport);\n        return callbackResult;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUseMemory.tagClosed$.toCallback(run);\n    return callbackResult;\n}\nexport function isSkipPropValue(value) {\n    return typeof (value) !== BasicTypes.object || !value || value.tagJsType;\n}\nexport function safeRenderSupport(newest, ownerSupport) {\n    const subject = newest.subject;\n    const isInline = isInlineHtml(newest.templater);\n    if (isInline) {\n        const result = renderInlineHtml(ownerSupport, newest);\n        return result;\n    }\n    const global = subject.global;\n    global.locked = true;\n    renderExistingReadyTag(global.newest, newest, ownerSupport, subject);\n    delete global.locked;\n}\n","import { isTagComponent } from '../../isInstance.js';\nexport function getSupportWithState(support) {\n    // get actual component owner not just the html`` support\n    let component = support;\n    while (component.ownerSupport && !isTagComponent(component.templater)) {\n        component = component.ownerSupport;\n    }\n    return component.subject.global.newest || component;\n}\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { getSupportWithState } from '../interpolations/attributes/getSupportWithState.function.js';\nfunction returnArgs(...args) {\n    return args;\n}\nexport function firstStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    config.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(returnArgs);\n}\n/** aka statesHandler */\nexport function reStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    const statesIndex = config.statesIndex;\n    const prevSupport = getSupportWithState(config.prevSupport);\n    const prevStates = prevSupport.states;\n    // const prevStates = config.states\n    const oldStates = prevStates[statesIndex];\n    let lastValues = [];\n    oldStates(function regetter(...args) {\n        lastValues = args;\n        return args;\n    });\n    const resetter = function stateResetter(..._args) {\n        return lastValues;\n    };\n    config.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(resetter);\n}\n","import { runFirstState, runRestate } from './stateHandlers.js';\nimport { firstStatesHandler, reStatesHandler } from './states.utils.js';\nexport function initState(support, config) {\n    config.handlers.handler = runFirstState;\n    config.handlers.statesHandler = firstStatesHandler;\n    config.rearray = [];\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.support = support;\n}\nexport function reState(newSupport, prevSupport, config, prevState) {\n    // set previous state memory\n    config.rearray = prevState;\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.handlers.handler = runRestate;\n    config.handlers.statesHandler = reStatesHandler;\n    config.prevSupport = prevSupport;\n}\nexport class StateEchoBack {\n}\n/** sends a fake value and then sets back to received value */\nexport function getCallbackValue(callback) {\n    const [value] = callback(StateEchoBack); // get value and set to undefined\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n","import { getCallbackValue } from './state.utils.js';\nexport function getStateValue(state) {\n    const callback = state.callback;\n    if (!callback) {\n        return state.defaultValue;\n    }\n    const [value] = getCallbackValue(callback);\n    return value;\n}\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nexport function runRestate() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    config.stateArray.push(restate);\n    return restate.defaultValue;\n}\nexport function runFirstState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    let initValue = defaultValue;\n    if (typeof (defaultValue) === BasicTypes.function) {\n        initValue = defaultValue();\n    }\n    // the state is actually intended to be a function\n    if (typeof (initValue) === BasicTypes.function) {\n        const original = initValue;\n        initValue = function initValueFun(...args) {\n            const result = original(...args);\n            return result;\n        };\n        initValue.original = original;\n    }\n    const push = {\n        get: function pushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return initValue;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering  */\nexport const tagClosed$ = new Subject(undefined, function tagCloser(subscription) {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n","import { firstStatesHandler } from './states.utils.js';\nimport { runFirstState } from './stateHandlers.js';\nimport { tagClosed$ } from './tagClosed$.subject.js';\nexport const setUseMemory = {\n    stateConfig: {\n        stateArray: [], // state memory on the first render\n        version: Date.now(),\n        handlers: {\n            handler: runFirstState,\n            statesHandler: firstStatesHandler,\n        }\n    },\n    tagClosed$,\n};\n","import { BasicTypes, ValueTypes } from '../tag/ValueTypes.enum.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nexport function executeWrap(templater, result, useSupport, castedProps) {\n    const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n    const stateless = templater.tagJsType === ValueTypes.stateRender;\n    const config = setUseMemory.stateConfig;\n    config.support = useSupport;\n    let tag;\n    if (stateless) {\n        tag = templater();\n    }\n    else {\n        tag = originalFunction(...castedProps);\n        // CALL ORIGINAL COMPONENT FUNCTION\n        if (typeof (tag) === BasicTypes.function) {\n            tag = tag();\n        }\n    }\n    tag.templater = templater;\n    templater.tag = tag;\n    useSupport.state = config.stateArray;\n    useSupport.states = config.states;\n    // useSupport.states = [...config.states]\n    return useSupport;\n}\n","import { castProps } from './props/alterProp.function.js';\nimport { syncFunctionProps } from '../render/update/updateExistingTagComponent.function.js';\nimport { executeWrap } from '../render/executeWrap.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { createSupport } from './createSupport.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    // this function gets called by taggedjs\n    const wrapper = function tagFunWrap(newSupport, subject, lastSupport // subject.global.newest\n    ) {\n        // wrap any prop functions that are passed in\n        const castedProps = getCastedProps(templater, newSupport, lastSupport);\n        const ownerSupport = newSupport.ownerSupport;\n        const useSupport = createSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject, castedProps);\n        return executeWrap(templater, result, useSupport, castedProps);\n    };\n    return wrapper;\n}\nexport function getCastedProps(templater, newSupport, lastSupport) {\n    const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n    const props = templater.props;\n    const propsConfig = newSupport.propsConfig;\n    // When defined, this must be an update where my new props have already been made for me\n    let preCastedProps = propsConfig.castProps;\n    const lastPropsConfig = lastSupport?.propsConfig;\n    const lastCastProps = lastPropsConfig?.castProps;\n    if (lastCastProps) {\n        propsConfig.castProps = lastCastProps;\n        preCastedProps = syncFunctionProps(newSupport, lastSupport, lastSupport.ownerSupport, props, maxDepth);\n    }\n    const castedProps = preCastedProps || castProps(props, newSupport, 0);\n    return castedProps;\n}\n","import { processFirstTagResult, processReplaceTagResult } from './processTagResult.function.js';\nimport { renderWithSupport } from '../../render/renderWithSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getCastedProps } from '../getTagWrap.function.js';\nimport { createSupport } from '../createSupport.function.js';\nexport function processReplacementComponent(templater, subject, ownerSupport, counts) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = createSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag\n    subject, ownerSupport);\n    processReplaceTagResult(support, counts, subject);\n    return support;\n}\nexport function processFirstSubjectComponent(templater, subject, ownerSupport, counts, appendTo) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = createSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag   \n    subject, ownerSupport);\n    processFirstTagResult(support, counts, appendTo);\n    return support;\n}\n","import { buildBeforeElement } from '../../render/buildBeforeElement.function.js';\nimport { paintAppend, paintAppends } from '../../render/paint.function.js';\nimport { checkTagValueChange } from '../index.js';\nexport function processReplaceTagResult(support, counts, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const ph = contextItem.placeholder;\n    buildBeforeElement(support, counts, undefined, // element for append child\n    ph);\n    return support;\n}\nexport function processFirstTagResult(support, counts, appendTo) {\n    let appendIndex = paintAppends.length;\n    const result = buildBeforeElement(support, counts, appendTo, undefined);\n    for (const dom of result.dom) {\n        if (dom.domElement) {\n            paintAppends.splice(appendIndex++, 0, {\n                args: [appendTo, dom.domElement],\n                processor: paintAppend,\n            });\n        }\n        if (dom.marker) {\n            paintAppends.splice(appendIndex++, 0, {\n                args: [appendTo, dom.marker],\n                processor: paintAppend,\n            });\n        }\n    }\n    return support;\n}\n","import { empty } from './tag/ValueTypes.enum.js';\nexport function castTextValue(value) {\n    switch (value) {\n        case undefined:\n        case false:\n        case null:\n            return empty;\n    }\n    return value;\n}\n","// Functions in here are attached as ContextItem.checkValueChange\nimport { processUpdateRegularValue } from './update/processRegularValue.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nimport { paintCommands, paintRemover } from '../render/paint.function.js';\nexport function checkSimpleValueChange(newValue, contextItem) {\n    const isBadValue = newValue === null || newValue === undefined;\n    if (isBadValue || !(typeof (newValue) === BasicTypes.object)) {\n        // This will cause all other values to render\n        processUpdateRegularValue(newValue, contextItem);\n        return -1; // no need to destroy, just update display\n    }\n    deleteSimpleValue(contextItem);\n    return 6; // 'changed-simple-value'\n}\nexport function deleteSimpleValue(contextItem) {\n    const elm = contextItem.simpleValueElm;\n    delete contextItem.simpleValueElm;\n    delete contextItem.checkValueChange;\n    if (!elm) {\n        throw new Error('how does this happen?');\n    }\n    paintCommands.push({\n        processor: paintRemover,\n        args: [elm],\n    });\n}\n","import { castTextValue } from '../../castTextValue.function.js';\nimport { paintBeforeText, paintCommands, setContent } from '../../render/paint.function.js';\nimport { checkSimpleValueChange, deleteSimpleValue } from '../checkSimpleValueChange.function.js';\nexport function processUpdateRegularValue(value, contextItem) {\n    const castedValue = castTextValue(value);\n    if (contextItem.paint) {\n        // its already painting, just provide new text\n        contextItem.paint.args[1] = castedValue;\n        return;\n    }\n    const oldClone = contextItem.simpleValueElm; // placeholder\n    setContent.push([castedValue, oldClone]);\n}\n/** Used during updates that were another value/tag first but now simple string */\nexport function processNowRegularValue(value, subject) {\n    subject.checkValueChange = checkSimpleValueChange;\n    subject.delete = deleteSimpleValue;\n    const before = subject.placeholder;\n    const castedValue = castTextValue(value);\n    const paint = subject.paint = {\n        processor: paintBeforeText,\n        args: [before, castedValue, (x) => {\n                subject.simpleValueElm = x;\n                subject.simpleValueElm = x;\n                delete subject.paint;\n            }],\n    };\n    paintCommands.push(paint);\n}\n","import { checkArrayValueChange } from '../checkDestroyPrevious.function.js';\nimport { checkSimpleValueChange, deleteSimpleValue } from '../checkSimpleValueChange.function.js';\nimport { castTextValue } from '../../castTextValue.function.js';\nimport { isArray } from '../../isInstance.js';\nimport { processTagArray } from './processTagArray.js';\nimport { paintBeforeText, paintCommands } from '../../render/paint.function.js';\nexport function processFirstSubjectValue(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        return value.processInit(value, contextItem, ownerSupport, counts, appendTo, insertBefore);\n    }\n    if (isArray(value)) {\n        processTagArray(contextItem, value, ownerSupport, counts, appendTo);\n        contextItem.checkValueChange = checkArrayValueChange;\n        return;\n    }\n    processFirstRegularValue(value, contextItem, contextItem.placeholder);\n}\nfunction processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    const castedValue = castTextValue(value);\n    const paint = subject.paint = {\n        processor: paintBeforeText,\n        args: [insertBefore, castedValue, (x) => {\n                subject.simpleValueElm = x;\n                delete subject.paint;\n            }],\n    };\n    paintCommands.push(paint);\n    subject.checkValueChange = checkSimpleValueChange;\n    subject.delete = deleteSimpleValue;\n}\n","// taggedjs-no-compile\nimport { processFirstSubjectValue } from \"../../tag/update/processFirstSubjectValue.function.js\";\nimport { tagValueUpdateHandler } from \"../../tag/update/tagValueUpdateHandler.function.js\";\nexport function domProcessContextItem(value, support, contextItem, counts, // used for animation stagger computing\nappendTo, insertBefore) {\n    // how to handle value updates\n    contextItem.handler = tagValueUpdateHandler;\n    const global = support.subject.global;\n    global.locked = true;\n    processFirstSubjectValue(value, contextItem, support, counts, appendTo, insertBefore);\n    const global2 = support.subject.global;\n    delete global2.locked;\n    contextItem.value = value;\n}\n","// taggedjs-no-compile\nimport { paintAppend, paintAppends, paintBefore, paintCommands } from '../../render/paint.function.js';\nimport { domProcessContextItem } from '../../interpolations/optimizers/domProcessContextItem.function.js';\n/** Must provide insertBefore OR appendTo */\nexport function createAndProcessContextItem(value, ownerSupport, counts, insertBefore, // used during updates\nappendTo) {\n    const element = document.createTextNode('');\n    const contextItem = {\n        value,\n        checkValueChange: undefined, // gets populated in domProcessContextItem\n        delete: undefined, // gets populated in domProcessContextItem\n        withinOwnerElement: false,\n        placeholder: element,\n    };\n    counts.added = counts.added + 1; // index  \n    if (!appendTo) {\n        paintCommands.push({\n            processor: paintBefore,\n            args: [insertBefore, element],\n        });\n    }\n    domProcessContextItem(value, ownerSupport, contextItem, counts, appendTo, insertBefore);\n    if (appendTo) {\n        paintAppends.push({\n            processor: paintAppend,\n            args: [appendTo, element],\n        });\n    }\n    return contextItem;\n}\n","// taggedjs-no-compile\nimport { tagValueUpdateHandler } from './tagValueUpdateHandler.function.js';\nimport { compareArrayItems } from './compareArrayItems.function.js';\nimport { createAndProcessContextItem } from './createAndProcessContextItem.function.js';\nexport function processTagArray(subject, value, // arry of Tag classes\nownerSupport, counts, appendTo) {\n    const noLast = subject.lastArray === undefined;\n    if (noLast) {\n        subject.lastArray = [];\n    }\n    const lastArray = subject.lastArray;\n    let runtimeInsertBefore = subject.placeholder;\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    const filteredLast = [];\n    // if not first time, then check for deletes\n    if (!noLast) {\n        // on each loop check the new length\n        for (let index = 0; index < lastArray.length; ++index) {\n            const item = lastArray[index];\n            // 👁️ COMPARE & REMOVE\n            const newRemoved = compareArrayItems(value, index, lastArray, removed, counts);\n            if (newRemoved === 0) {\n                filteredLast.push(item);\n                continue;\n            }\n            // do the same number again because it was a mid delete\n            if (newRemoved === 2) {\n                index = index - 1;\n                continue;\n            }\n            removed = removed + newRemoved;\n        }\n        subject.lastArray = filteredLast;\n    }\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const newSubject = reviewArrayItem(value, index, subject.lastArray, ownerSupport, runtimeInsertBefore, counts, appendTo);\n        runtimeInsertBefore = newSubject.placeholder;\n    }\n}\nfunction reviewArrayItem(array, index, lastArray, ownerSupport, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const item = array[index];\n    const previous = lastArray[index];\n    if (previous) {\n        return reviewPreviousArrayItem(item, previous, lastArray, ownerSupport, index, runtimeInsertBefore, counts, appendTo);\n    }\n    const contextItem = createAndProcessContextItem(item, ownerSupport, counts, runtimeInsertBefore, appendTo);\n    // Added to previous array\n    lastArray.push(contextItem);\n    return contextItem;\n}\nfunction reviewPreviousArrayItem(value, itemSubject, lastArray, ownerSupport, index, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const couldBeSame = lastArray.length > index;\n    if (couldBeSame) {\n        tagValueUpdateHandler(value, ownerSupport, itemSubject);\n        return itemSubject;\n    }\n    const contextItem = createAndProcessContextItem(value, ownerSupport, counts, runtimeInsertBefore, appendTo);\n    // Added to previous array\n    lastArray.push(contextItem);\n    return contextItem;\n}\n","import { BasicTypes, ValueTypes } from '../index.js';\nimport { tryUpdateToTag } from './tryUpdateToTag.function.js';\nimport { isArray } from '../../isInstance.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processNowRegularValue } from './processRegularValue.function.js';\nexport function updateToDiffValue(newValue, contextItem, ownerSupport, ignoreOrDestroyed) {\n    // is new value a tag?\n    const tagJsType = newValue && newValue.tagJsType;\n    if (tagJsType) {\n        if (tagJsType === ValueTypes.renderOnce) {\n            return;\n        }\n        tryUpdateToTag(contextItem, newValue, ownerSupport);\n        return;\n    }\n    if (isArray(newValue)) {\n        processTagArray(contextItem, newValue, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    if (typeof (newValue) === BasicTypes.function) {\n        contextItem.value = newValue; // do not render functions that are not explicity defined as tag html processing\n        return;\n    }\n    if (ignoreOrDestroyed) {\n        processNowRegularValue(newValue, contextItem);\n    }\n}\n","import { updateToDiffValue } from './updateToDiffValue.function.js';\n/** Used for all tag value updates. Determines if value changed since last render */\nexport function forceUpdateExistingValue(contextItem, newValue, // newValue\nownerSupport) {\n    // Have the context check itself (avoid having to detect old value)\n    const ignoreOrDestroyed = contextItem.checkValueChange(newValue, contextItem);\n    // ignore\n    if (ignoreOrDestroyed === -1) {\n        return; // do nothing\n    }\n    updateToDiffValue(newValue, contextItem, ownerSupport, ignoreOrDestroyed);\n}\n","import { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { updateExistingTagComponent } from '../../render/update/updateExistingTagComponent.function.js';\nimport { forceUpdateExistingValue } from './forceUpdateExistingValue.function.js';\nimport { createSupport } from '../createSupport.function.js';\n/** Checks if value has changed before updating. Used for all tag value updates. Determines if value changed since last render */\nexport function tagValueUpdateHandler(newValue, // newValue\nownerSupport, contextItem) {\n    // Do not continue if the value is just the same\n    if (newValue === contextItem.value) {\n        return;\n    }\n    forceUpdateExistingValue(contextItem, newValue, ownerSupport);\n}\nexport function prepareUpdateToComponent(templater, contextItem, ownerSupport) {\n    const global = contextItem.global;\n    // When last value was not a component\n    if (!global.newest) {\n        processReplacementComponent(templater, contextItem, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    const support = createSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    updateExistingTagComponent(ownerSupport, support, // latest value\n    contextItem);\n}\n","import { deepCompareDepth, hasSupportChanged, shallowCompareDepth } from '../../tag/hasSupportChanged.function.js';\nimport { processReplacementComponent } from '../../tag/update/processFirstSubjectComponent.function.js';\nimport { castProps } from '../../tag/props/alterProp.function.js';\nimport { renderSupport } from '../renderSupport.function.js';\nimport { ValueTypes } from '../../tag/ValueTypes.enum.js';\nimport { destroySupport } from '../destroySupport.function.js';\nimport { getNewGlobal } from '../../tag/update/getNewGlobal.function.js';\nimport { isLikeTags } from '../../tag/isLikeTags.function.js';\nimport { PropWatches } from '../../tag/tag.function.js';\nimport { syncPriorPropFunction } from '../../tag/update/syncPriorPropFunction.function.js';\nexport function updateExistingTagComponent(ownerSupport, support, // lastest\nsubject) {\n    const global = subject.global;\n    const lastSupport = global.newest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = support.templater.wrapper;\n    let isSameTag = false;\n    const tagJsType = support.templater.tagJsType;\n    const skipComparing = ValueTypes.stateRender === tagJsType || ValueTypes.renderOnce === tagJsType;\n    if (skipComparing) {\n        isSameTag = support.templater.tagJsType === ValueTypes.renderOnce || isLikeTags(lastSupport, support);\n    }\n    else if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.original;\n        const newFunction = newWrapper.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = support.templater;\n    if (!isSameTag) {\n        swapTags(subject, templater, ownerSupport);\n        return;\n    }\n    const hasChanged = skipComparing || hasSupportChanged(lastSupport, templater);\n    // everyhing has matched, no display needs updating.\n    if (!hasChanged) {\n        const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n        syncSupports(templater, support, lastSupport, ownerSupport, maxDepth);\n        return;\n    }\n    if (global.locked) {\n        global.blocked.push(support);\n        return;\n    }\n    renderSupport(support);\n    ++subject.renderCount;\n    return;\n}\nexport function syncFunctionProps(newSupport, lastSupport, ownerSupport, newPropsArray, // templater.props\nmaxDepth, depth = -1) {\n    const subject = lastSupport.subject;\n    const global = subject.global;\n    const newest = global.newest;\n    if (!newest) {\n        const castedProps = castProps(newPropsArray, newSupport, depth);\n        newPropsArray.push(...castedProps);\n        const propsConfig = newSupport.propsConfig;\n        propsConfig.castProps = castedProps;\n        return newPropsArray;\n    }\n    lastSupport = newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.castProps;\n    const newArray = [];\n    for (let index = 0; index < newPropsArray.length; ++index) {\n        const prop = newPropsArray[index];\n        const priorProp = priorPropsArray[index];\n        const newValue = syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth + 1);\n        newArray.push(newValue);\n    }\n    const newPropsConfig = newSupport.propsConfig;\n    newPropsConfig.castProps = newArray;\n    return newArray;\n}\nexport function moveProviders(lastSupport, newSupport) {\n    const global = lastSupport.subject.global;\n    let pIndex = -1;\n    const providers = global.providers = global.providers || [];\n    const pLen = providers.length - 1;\n    while (pIndex++ < pLen) {\n        const provider = providers[pIndex];\n        let index = -1;\n        const pcLen = provider.children.length - 1;\n        while (index++ < pcLen) {\n            const child = provider.children[index];\n            const wasSameGlobals = global === child.subject.global;\n            if (wasSameGlobals) {\n                provider.children.splice(index, 1);\n                provider.children.push(newSupport);\n                return;\n            }\n        }\n    }\n}\n/** Exchanges entire propsConfigs */\nfunction syncSupports(templater, support, lastSupport, ownerSupport, maxDepth) {\n    // update function refs to use latest references\n    const newProps = templater.props;\n    const castedProps = syncFunctionProps(support, lastSupport, ownerSupport, newProps, maxDepth);\n    const propsConfig = support.propsConfig;\n    // When new support actually makes call to real function, use these pre casted props\n    propsConfig.castProps = castedProps;\n    const lastPropsConfig = lastSupport.propsConfig;\n    // update support to think it has different cloned props\n    lastPropsConfig.latest = propsConfig.latest;\n    return lastSupport; // its the same tag component  \n}\n/** Was tag, will be tag */\nfunction swapTags(subject, templater, // new tag\nownerSupport) {\n    const global = subject.global;\n    const oldestSupport = global.oldest;\n    destroySupport(oldestSupport, global);\n    getNewGlobal(subject);\n    const newSupport = processReplacementComponent(templater, subject, ownerSupport, { added: 0, removed: 0 });\n    return newSupport;\n}\n","import { isArray } from '../isInstance.js';\nimport { hasPropChanges } from './hasPropChanges.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\n/** Used when deciding if a support will even change (are the arguments the same?) */\nexport function hasSupportChanged(lastSupport, newTemplater) {\n    const latestProps = newTemplater.props;\n    const propsConfig = lastSupport.propsConfig;\n    const pastCloneProps = propsConfig.latest;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps, lastSupport.templater.propWatch);\n    return propsChanged;\n}\nexport function immutablePropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (prop !== pastProp) {\n            return 2;\n        }\n    }\n    return false; // false means has not changed\n}\nexport function shallowPropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (isArray(prop) && isArray(pastProp)) {\n            if (prop === pastProp) {\n                continue;\n            }\n            return 3.0; // not equal array\n        }\n        if (typeof (prop) === BasicTypes.function && typeof (pastProp) === BasicTypes.function) {\n            continue; // considered good\n        }\n        if (typeof (prop) === BasicTypes.object) {\n            if (typeof (pastCloneProps) === BasicTypes.object) {\n                const obEntries = Object.entries(prop);\n                for (const subItem of obEntries) {\n                    const result = objectItemMatches(subItem, pastProp);\n                    if (!result) {\n                        return 3.1;\n                    }\n                }\n            }\n            continue; // all sub objects matched\n        }\n        if (prop === pastProp) {\n            continue; // matched good\n        }\n        return 3.3; // not equal\n    }\n    return false; // false means has not changed\n}\nexport const shallowCompareDepth = 3;\nexport const deepCompareDepth = 10;\nfunction objectItemMatches([name, value], pastProp) {\n    const pastValue = pastProp[name];\n    if (typeof (value) === BasicTypes.function && typeof (pastValue) === BasicTypes.function) {\n        return true;\n    }\n    return pastValue === value;\n}\n","import { getFakeTemplater, newSupportByTemplater, processTag } from '../../render/update/processTag.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { isTagComponent } from '../../isInstance.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { handleStillTag } from './handleStillTag.function.js';\nimport { prepareUpdateToComponent } from './tagValueUpdateHandler.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n/** result is an indication to ignore further processing but that does not seem in use anymore */\nexport function tryUpdateToTag(contextItem, newValue, // newValue\nownerSupport) {\n    const tagJsType = newValue.tagJsType;\n    const isComp = isTagComponent(newValue);\n    if (isComp) {\n        if (contextItem.global === undefined) {\n            getNewGlobal(contextItem);\n        }\n        prepareUpdateToComponent(newValue, contextItem, ownerSupport);\n        return true;\n    }\n    // detect if previous value was a tag\n    const global = contextItem.global;\n    if (global) {\n        // its html/dom based tag\n        const support = global.newest;\n        if (support) {\n            if (typeof (newValue) === BasicTypes.function) {\n                return true;\n            }\n            handleStillTag(support, contextItem, newValue, ownerSupport);\n            return true;\n        }\n    }\n    switch (tagJsType) {\n        case ValueTypes.templater:\n            processTag(ownerSupport, contextItem, fooCounts);\n            return true;\n        // when value was not a Tag before\n        case ValueTypes.tag:\n        case ValueTypes.dom: {\n            updateToTag(newValue, contextItem, ownerSupport);\n            return true;\n        }\n        case ValueTypes.subscribe: {\n            ;\n            newValue.processInit(newValue, contextItem, ownerSupport, { added: 0, removed: 0 }, undefined, // appendTo,\n            contextItem.placeholder);\n            return true;\n        }\n    }\n    return false;\n}\nfunction updateToTag(value, contextItem, ownerSupport) {\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = getFakeTemplater();\n        tag.templater = templater;\n        templater.tag = tag;\n    }\n    const nowGlobal = (contextItem.global ? contextItem.global : getNewGlobal(contextItem));\n    nowGlobal.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n    processTag(ownerSupport, contextItem, fooCounts);\n}\n","import { updateSupportBy } from '../../render/update/updateSupportBy.function.js';\nimport { createSupport } from '../createSupport.function.js';\nexport function handleStillTag(lastSupport, subject, value, ownerSupport) {\n    const templater = value.templater || value;\n    const valueSupport = createSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const lastSubject = lastSupport.subject;\n    const newGlobal = lastSubject.global;\n    const oldest = newGlobal.oldest;\n    updateSupportBy(oldest, valueSupport);\n}\n","import { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { destroySupport } from '../render/destroySupport.function.js';\nimport { isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { tryUpdateToTag } from './update/tryUpdateToTag.function.js';\nexport function checkTagValueChange(newValue, contextItem) {\n    const global = contextItem.global;\n    if (!global) {\n        return 663; // its not a tag this time\n    }\n    const lastSupport = global?.newest;\n    const isValueTag = isStaticTag(newValue);\n    const newTag = newValue;\n    if (isValueTag) {\n        // its a different tag now\n        const likeTags = isLikeTags(newTag, lastSupport);\n        if (!likeTags) {\n            destroySupport(lastSupport, global);\n            getNewGlobal(contextItem);\n            return 7; // 'tag-swap'\n        }\n        return 77; // always cause a redraw of static tags (was false)\n    }\n    const isTag = newValue?.tagJsType;\n    if (isTag) {\n        const support = global.newest;\n        const ownerSupport = support.ownerSupport;\n        const result = tryUpdateToTag(contextItem, newValue, ownerSupport);\n        const doNotRedraw = result === true;\n        if (doNotRedraw) {\n            return -1;\n        }\n        return 88; // its same tag with new values\n    }\n    destorySupportByContextItem(contextItem);\n    return 8; // 'no-longer-tag'\n}\nexport function destorySupportByContextItem(contextItem) {\n    const global = contextItem.global;\n    const lastSupport = global?.newest;\n    // destroy old component, value is not a component\n    destroySupport(lastSupport, global);\n    delete contextItem.global;\n    contextItem.renderCount = 0;\n}\n","import { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../../render/buildBeforeElement.function.js';\nimport { paintAppend, paintAppends, paintBefore, paintCommands } from '../../render/paint.function.js';\nimport { newSupportByTemplater } from '../../render/update/processTag.function.js';\nexport function processNewSubjectTag(templater, subject, // could be tag via result.tag\nownerSupport, // owner\ncounts, appendTo, insertBefore) {\n    subject.checkValueChange = checkTagValueChange;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    support.ownerSupport = ownerSupport;\n    const result = buildBeforeElement(support, counts, appendTo, appendTo ? undefined : insertBefore);\n    for (const dom of result.dom) {\n        if (dom.marker) {\n            if (appendTo) {\n                paintAppends.push({\n                    args: [appendTo, dom.marker],\n                    processor: paintAppend,\n                });\n            }\n            else {\n                paintCommands.push({\n                    processor: paintBefore,\n                    args: [insertBefore, dom.marker],\n                });\n            }\n        }\n        if (dom.domElement) {\n            if (appendTo) {\n                paintAppends.push({\n                    args: [appendTo, dom.domElement],\n                    processor: paintAppend,\n                });\n            }\n            else {\n                paintCommands.push({\n                    processor: paintBefore,\n                    args: [insertBefore, dom.domElement],\n                });\n            }\n        }\n    }\n    return support;\n}\n","import { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { processTag } from '../../render/update/processTag.function.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processTagInit(value, contextItem, ownerSupport, counts, appendTo, insertBefore) {\n    contextItem.checkValueChange = checkTagValueChange;\n    if (appendTo) {\n        return processNewSubjectTag(value, contextItem, ownerSupport, counts, appendTo, insertBefore);\n    }\n    return processTag(ownerSupport, contextItem, counts);\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nimport { processTagInit } from './update/processTagInit.function.js';\nexport function getTemplaterResult(propWatch, props) {\n    const templater = {\n        tagJsType: ValueTypes.templater,\n        processInit: processTagInit,\n        propWatch,\n        props,\n        key: function keyTemplate(arrayValue) {\n            templater.arrayValue = arrayValue;\n            return templater;\n        }\n    };\n    return templater;\n}\n","export const tags = [];\n","import { getTemplaterResult } from '../getTemplaterResult.function.js';\nimport { newSupportByTemplater } from '../../render/update/processTag.function.js';\nimport { PropWatches } from '../tag.function.js';\nexport function oneRenderToSupport(wrapper, subject, ownerSupport) {\n    const templater = getTemplaterResult(PropWatches.DEEP);\n    templater.tagJsType = wrapper.tagJsType;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    function wrap() {\n        templater.tag = tag || wrapper();\n        return support;\n    }\n    templater.wrapper = wrap;\n    wrap.tagJsType = wrapper.tagJsType;\n    wrap.original = wrapper.original || wrapper;\n    return support;\n}\n","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n","import { StateMismatchError } from '../errors.js';\nexport function checkStateMismatch(config, support) {\n    const rearray = config.rearray;\n    if (rearray.length && rearray.length !== config.stateArray.length) {\n        throwStateMismatch(rearray, support, config);\n    }\n}\nconst hint = 'State tracking requires same number of state calls on every render. This error typically occurs when a state call is only reachable behind a condition. Also, wrapping tags that have state, with tag(), often helps when tag is only reachable by a condition.';\nfunction throwStateMismatch(rearray, support, config) {\n    const message = `Saved states between renders are inconsistent. Expected ${rearray.length} states got ${config.stateArray.length}.`;\n    const wrapper = support.templater?.wrapper;\n    let tagFunction = wrapper;\n    if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    else if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    const details = {\n        oldStates: config.stateArray,\n        newStates: config.rearray,\n        tagFunction,\n        templater: support.templater,\n    };\n    const error = new StateMismatchError(message, details);\n    console.error(hint, details);\n    throw error;\n}\n","import { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkStateMismatch } from '../tag/checkStateMismatch.function.js';\n/** Compares states of previous renders\n * @property support - The workflow that supports a single tag\n * @property ownerSupport - undefined when \"support\" is the app element\n */\nexport function runAfterRender(support, ownerSupport) {\n    const subject = support.subject;\n    ++subject.renderCount;\n    const config = setUseMemory.stateConfig;\n    support.state = config.stateArray;\n    support.states = config.states;\n    subject.global.newest = support;\n    checkStateMismatch(config, support);\n    delete config.prevSupport; // only this one really needed\n    delete config.support;\n    delete config.stateArray;\n    delete config.states;\n    setUseMemory.tagClosed$.next(ownerSupport);\n}\n","import { executeWrap } from './executeWrap.function.js';\nimport { ValueTypes } from '../tag/ValueTypes.enum.js';\nimport { runAfterRender } from './afterRender.function.js';\nimport { initState, reState } from '../state/state.utils.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { createSupport } from '../tag/createSupport.function.js';\nexport function renderTagOnly(newSupport, prevSupport, // causes restate\nsubject, ownerSupport) {\n    runBeforeRender(newSupport, prevSupport);\n    const templater = newSupport.templater;\n    let reSupport;\n    // NEW TAG CREATED HERE\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = templater; // .wrapper as any// || {original: templater} as any\n        reSupport = createSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject);\n        executeWrap(templater, result, reSupport);\n    }\n    else {\n        // functions wrapped in tag()\n        const wrapper = templater.wrapper;\n        // calls the function returned from getTagWrap()\n        reSupport = wrapper(newSupport, subject, prevSupport);\n    }\n    runAfterRender(reSupport, ownerSupport);\n    return reSupport;\n}\nfunction runBeforeRender(newSupport, prevSupport) {\n    const prevState = prevSupport?.state;\n    const config = setUseMemory.stateConfig;\n    if (prevState) {\n        reState(newSupport, prevSupport, setUseMemory.stateConfig, prevState);\n        return;\n    }\n    initState(newSupport, config);\n}\n","import { checkTagValueChange } from '../../tag/checkTagValueChange.function.js';\nimport { oneRenderToSupport } from '../../tag/update/oneRenderToSupport.function.js';\nimport { renderTagOnly } from '../renderTagOnly.function.js';\nimport { getNewGlobal } from '../../tag/update/getNewGlobal.function.js';\nimport { processNewSubjectTag } from '../../tag/update/processNewSubjectTag.function.js';\nexport function processRenderOnceInit(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    getNewGlobal(contextItem);\n    const support = oneRenderToSupport(value, contextItem, ownerSupport);\n    renderTagOnly(support, undefined, contextItem, ownerSupport);\n    const result = processNewSubjectTag(support.templater, contextItem, ownerSupport, counts, appendTo, insertBefore);\n    contextItem.checkValueChange = checkTagValueChange;\n    return result;\n}\n","import { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { processFirstSubjectComponent, processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nexport function processTagComponentInit(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo) {\n    getNewGlobal(contextItem);\n    contextItem.checkValueChange = checkTagValueChange;\n    if (appendTo) {\n        const processResult = processFirstSubjectComponent(value, contextItem, ownerSupport, counts, appendTo);\n        return processResult;\n    }\n    const processResult = processReplacementComponent(value, contextItem, ownerSupport, counts);\n    return processResult;\n}\n","// taggedjs-no-compile\nimport { setUseMemory } from '../state/index.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { processRenderOnceInit } from '../render/update/processRenderOnceInit.function.js';\nimport { processTagComponentInit } from './update/processTagComponentInit.function.js';\nlet tagCount = 0;\n/** How to handle checking for prop changes aka argument changes */\nexport var PropWatches;\n(function (PropWatches) {\n    PropWatches[\"DEEP\"] = \"deep\";\n    /** checks all values up to 2 levels deep */\n    PropWatches[\"SHALLOW\"] = \"shallow\";\n    PropWatches[\"NONE\"] = \"none\";\n    PropWatches[\"IMMUTABLE\"] = \"immutable\";\n})(PropWatches || (PropWatches = {}));\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent, propWatch = PropWatches.SHALLOW) {\n    /** function developer triggers */\n    const parentWrap = function tagWrapper(...props) {\n        const templater = getTemplaterResult(propWatch, props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        templater.processInit = processTagComponentInit;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        innerTagWrap.original = tagComponent;\n        /*\n            if(!innerTagWrap.parentWrap) {\n              innerTagWrap.parentWrap = parentWrap as TagWrapper<unknown>\n            }\n        */\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }; // we override the function provided and pretend original is what's returned\n    const tag = tagComponent;\n    parentWrap.original = tagComponent;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUseMemory;\n    tag.ValueTypes = ValueTypes;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\ntag.renderOnce = renderOnceFn;\nfunction renderOnceFn() {\n    throw new Error('Do not call tag.renderOnce as a function but instead set it as: `(props) => tag.renderOnce = () => html`` `');\n}\n/** Used to create variable scoping when calling a function that lives within a prop container function */\nfunction tagUseFn() {\n    throw new Error('Do not call tag.use as a function but instead set it as: `(props) => tag.use = (use) => html`` `');\n}\n/** @deprecated use tag.use() instead */\n;\ntag.state = tagUseFn;\ntag.use = tagUseFn;\ntag.route = routeFn;\nfunction routeFn(_routeProps) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n}\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\n;\ntag.app = function (_routeTag) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\ntag.deepPropWatch = tag;\ntag.immutableProps = function immutableProps(tagComponent) {\n    return tag(tagComponent, PropWatches.IMMUTABLE);\n};\ntag.watchProps = function watchProps(tagComponent) {\n    return tag(tagComponent, PropWatches.SHALLOW);\n};\n/* BELOW: Cast functions into setters with no getters */\nObject.defineProperty(tag, 'renderOnce', {\n    set(oneRenderFunction) {\n        ;\n        oneRenderFunction.tagJsType = ValueTypes.renderOnce;\n        oneRenderFunction.processInit = processRenderOnceInit;\n    },\n});\n// TODO: deprecate this in favor of tag.use\nObject.defineProperty(tag, 'state', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n        renderFunction.processInit = processTagComponentInit;\n    },\n});\nObject.defineProperty(tag, 'use', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n        renderFunction.processInit = processTagComponentInit;\n    },\n});\n","import { deepEqual } from '../deepFunctions.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from './hasSupportChanged.function.js';\nimport { hasPropLengthsChanged } from '../render/renderSupport.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nexport function hasPropChanges(props, // natural props\npastCloneProps, // previously cloned props\npropWatch) {\n    const hasLenChanged = hasPropLengthsChanged(props, pastCloneProps);\n    if (hasLenChanged) {\n        return 11;\n    }\n    switch (propWatch) {\n        case PropWatches.NONE:\n            return 1; // always render\n        case PropWatches.SHALLOW: // determining equal is same as immutable, its the previous cloning step thats different\n            return shallowPropMatch(props, pastCloneProps);\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(props, pastCloneProps);\n    }\n    return deepPropChangeCompare(props, pastCloneProps);\n}\nfunction deepPropChangeCompare(props, pastCloneProps) {\n    // DEEP watch\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    castedProps = [...props];\n    castedPastProps = [...(pastCloneProps || [])];\n    const allFunctionsMatch = castedProps.every((value, index) => onePropCompare(value, index, castedProps, castedPastProps));\n    if (!allFunctionsMatch) {\n        return 7; // a change has been detected by function comparisons\n    }\n    return false;\n}\nfunction onePropCompare(value, index, castedProps, castedPastProps) {\n    const compare = castedPastProps[index];\n    if (typeof (value) === BasicTypes.object) {\n        const subCastedProps = { ...value };\n        const subCompareProps = { ...compare || {} };\n        const matched = Object.entries(subCastedProps).every(([key, value]) => compareProps(value, subCompareProps[key], () => {\n            delete subCastedProps[key]; // its a function and not needed to be compared\n            delete subCompareProps[key]; // its a function and not needed to be compared\n        }));\n        return matched;\n    }\n    return compareProps(value, compare, function propComparer() {\n        castedProps.splice(index, 1);\n        castedPastProps.splice(index, 1);\n    });\n}\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(typeof (value) === BasicTypes.function)) {\n        return deepEqual(value, compare, deepCompareDepth) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(typeof (compareFn) === BasicTypes.function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 5; // both are function the same\n    }\n    onDelete();\n    return 6;\n}\n","import { isSkipPropValue } from '../props/alterProp.function.js';\nimport { BasicTypes } from '../ValueTypes.enum.js';\nimport { isArray } from '../../isInstance.js';\nimport { updateExistingObject } from './updateExistingObject.function.js';\nimport { updateExistingArray } from './updateExistingArray.function.js';\nexport function syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth) {\n    if (priorProp === undefined || priorProp === null) {\n        return prop;\n    }\n    // prevent infinite recursion\n    if (depth > maxDepth) {\n        return prop;\n    }\n    if (typeof (priorProp) === BasicTypes.function) {\n        // the prop i am receiving, is already being monitored/controlled by another parent\n        if (prop.mem) {\n            priorProp.mem = prop.mem;\n            return prop;\n        }\n        priorProp.mem = prop;\n        return priorProp;\n    }\n    if (isSkipPropValue(prop)) {\n        return prop; // no children to crawl through\n    }\n    if (isArray(prop)) {\n        return updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n    }\n    return updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n}\n","import { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    for (let index = prop.length - 1; index >= 0; --index) {\n        const x = prop[index];\n        const oldProp = priorProp[index];\n        prop[index] = syncPriorPropFunction(oldProp, x, newSupport, ownerSupport, maxDepth, depth + 1);\n    }\n    return prop;\n}\n","import { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    const keys = Object.keys(prop);\n    for (const name of keys) {\n        const subValue = prop[name];\n        const oldProp = priorProp[name];\n        const result = syncPriorPropFunction(oldProp, subValue, newSupport, ownerSupport, maxDepth, depth + 1);\n        if (subValue === result) {\n            continue;\n        }\n        const hasSetter = Object.getOwnPropertyDescriptor(prop, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        prop[name] = result;\n    }\n    return prop;\n}\n","import { getChildTagsToSoftDestroy, unsubscribeFrom } from '../tag/destroyContext.function.js';\nimport { getNewGlobal } from '../tag/update/getNewGlobal.function.js';\nimport { smartRemoveKids } from '../tag/smartRemoveKids.function.js';\n/** used when a tag swaps content returned */\nexport function softDestroySupport(lastSupport) {\n    const subject = lastSupport.subject;\n    const global = subject.global;\n    const { subs, tags } = getChildTagsToSoftDestroy(global.context);\n    softDestroyOne(global);\n    for (const child of tags) {\n        const cGlobal = child.subject.global;\n        if (cGlobal.deleted === true) {\n            return;\n        }\n        softDestroyOne(cGlobal);\n    }\n    const mySubs = global.subscriptions;\n    if (mySubs) {\n        subs.forEach(unsubscribeFrom);\n    }\n    getNewGlobal(subject);\n}\nfunction softDestroyOne(global) {\n    global.deleted = true; // the children are truly destroyed but the main support will be swapped\n    smartRemoveKids(global, []);\n}\n","import { moveProviders } from './update/updateExistingTagComponent.function.js';\nimport { softDestroySupport } from './softDestroySupport.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nimport { isLikeTags } from '../tag/isLikeTags.function.js';\nimport { ValueTypes } from '../tag/ValueTypes.enum.js';\n/** TODO: This seems to support both new and updates and should be separated? */\nexport function renderWithSupport(newSupport, lastSupport, // previous (global.newest)\nsubject, // events & memory\nownerSupport) {\n    const lastTemplater = lastSupport?.templater;\n    const lastTag = lastTemplater?.tag;\n    const reSupport = renderTagOnly(newSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        moveProviders(lastSupport, reSupport);\n        softDestroySupport(lastSupport);\n        const global = reSupport.subject.global;\n        global.oldest = reSupport;\n        global.newest = reSupport;\n    }\n    else if (lastSupport) {\n        const tag = lastSupport.templater.tag;\n        if (tag && subject.renderCount > 0) {\n            checkTagSoftDestroy(tag, lastSupport, lastTag);\n        }\n    }\n    const lastOwnerSupport = lastSupport?.ownerSupport;\n    reSupport.ownerSupport = (ownerSupport || lastOwnerSupport);\n    return { support: reSupport, wasLikeTags: isLikeTag };\n}\nfunction checkTagSoftDestroy(tag, lastSupport, lastTag) {\n    if (tag.tagJsType === ValueTypes.dom) {\n        const lastDom = lastTag?.dom;\n        const newDom = tag.dom;\n        if (lastDom !== newDom) {\n            softDestroySupport(lastSupport);\n        }\n        return;\n    }\n    if (lastTag) {\n        const lastStrings = lastTag.strings;\n        if (lastStrings) {\n            const oldLength = lastStrings?.length;\n            const newLength = tag.strings.length;\n            if (oldLength !== newLength) {\n                softDestroySupport(lastSupport);\n            }\n        }\n    }\n}\n","import { renderWithSupport } from './renderWithSupport.function.js';\nimport { processTag } from './update/processTag.function.js';\nimport { updateSupportBy } from './update/updateSupportBy.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n// TODO: This function is being called for 1st time renders WHEN renderCount === 1\nexport function renderExistingReadyTag(lastSupport, // should be global.newest\nnewSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const global = subject.global;\n    const { support, wasLikeTags } = renderWithSupport(newSupport, lastSupport, // renderCount <= 0 ? undefined : lastSupport\n    subject, ownerSupport);\n    if (wasLikeTags) {\n        updateSupportBy(global.oldest, support);\n        return support;\n    }\n    processTag(ownerSupport, subject, fooCounts);\n    return support;\n}\n","import { deepEqual } from '../deepFunctions.js';\nimport { renderExistingReadyTag } from './renderExistingTag.function.js';\nimport { ValueTypes } from '../tag/ValueTypes.enum.js';\nimport { PropWatches } from '../index.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from '../tag/hasSupportChanged.function.js';\nexport function isInlineHtml(templater) {\n    return ValueTypes.templater === templater.tagJsType;\n}\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderSupport(support) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        global.blocked.push(support);\n        return support;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        const result = renderInlineHtml(ownerSupport, support);\n        return result;\n    }\n    global.locked = true;\n    const subject = support.subject;\n    if (global.blocked.length) {\n        support = global.blocked.pop();\n        global.blocked = [];\n    }\n    const tag = renderExistingReadyTag(global.newest, support, ownerSupport, subject);\n    delete global.locked;\n    return tag;\n}\nexport function renderInlineHtml(ownerSupport, support) {\n    const ownGlobal = ownerSupport.subject.global;\n    if (!ownGlobal || ownGlobal.deleted === true) {\n        return support;\n    }\n    // ??? new change\n    const newest = ownGlobal.newest || ownerSupport;\n    const result = renderSupport(newest);\n    return result;\n}\nexport function checkRenderUp(ownerSupport, templater, support) {\n    const selfPropChange = hasPropsToOwnerChanged(templater, support);\n    // render owner up first and that will cause me to re-render\n    if (ownerSupport && selfPropChange) {\n        return true;\n    }\n    return false;\n}\n/** Used when crawling up the chain of child-to-parent tags. See hasSupportChanged for the downward direction */\nfunction hasPropsToOwnerChanged(templater, support) {\n    const nowProps = templater.props;\n    const propsConfig = support.propsConfig;\n    const latestProps = propsConfig.latest;\n    const compareLen = hasPropLengthsChanged(nowProps, latestProps);\n    if (compareLen) {\n        return true;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(nowProps, latestProps);\n        case PropWatches.SHALLOW:\n            return shallowPropMatch(nowProps, latestProps);\n    }\n    return !deepEqual(nowProps, latestProps, deepCompareDepth);\n}\nexport function hasPropLengthsChanged(nowProps, latestProps) {\n    const nowLen = nowProps.length;\n    const latestLen = latestProps.length;\n    /*\n    const noLength = nowProps && nowLen === 0 && latestLen === 0\n  \n    if(noLength) {\n      return false\n    }\n    */\n    return nowLen !== latestLen;\n}\n","export function handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    return tagsWithProvider;\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(support, provider, memory = []) {\n    const subject = support.subject;\n    memory.push({\n        support,\n        renderCount: subject.renderCount,\n        provider,\n    });\n    const childTags = provider.children;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const child = childTags[index];\n        const cSubject = child.subject;\n        memory.push({\n            support: child,\n            renderCount: cSubject.renderCount,\n            provider,\n        });\n    }\n    return memory;\n}\n","import { handleProviderChanges } from './handleProviderChanges.function.js';\nexport function providersChangeCheck(support) {\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (!providers) {\n        return [];\n    }\n    const prosWithChanges = [];\n    // reset clones\n    for (const provider of providers) {\n        const owner = provider.owner;\n        const hasChange = handleProviderChanges(owner, provider);\n        prosWithChanges.push(...hasChange.map(mapToSupport));\n    }\n    return prosWithChanges;\n}\nfunction mapToSupport(x) {\n    return x.support;\n}\n","import { isTagComponent } from \"../../isInstance.js\";\nimport { providersChangeCheck } from \"../../state/providersChangeCheck.function.js\";\nimport { checkRenderUp, isInlineHtml } from \"../../render/renderSupport.function.js\";\nimport { ValueTypes } from \"../../tag/ValueTypes.enum.js\";\nexport function getUpTags(support, supports = []) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        supports.push(support);\n        return supports;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return getUpTags(ownerSupport, supports);\n    }\n    const newSupport = support; // global.newest as AnySupport\n    const isComponent = isTagComponent(newSupport.templater);\n    const tagJsType = support.templater.tagJsType;\n    const canContinueUp = ownerSupport && tagJsType !== ValueTypes.stateRender;\n    const continueUp = canContinueUp && (!isComponent || checkRenderUp(ownerSupport, newSupport.templater, newSupport));\n    const proSupports = providersChangeCheck(newSupport);\n    supports.push(...proSupports);\n    if (continueUp) {\n        getUpTags(ownerSupport, supports);\n        if (isComponent) {\n            supports.push(newSupport);\n        }\n        return supports; // more to keep going up, do not push this child for review\n    }\n    supports.push(newSupport);\n    return supports;\n}\n","import { paint, painting } from '../../render/paint.function.js';\nimport { renderSupport } from '../../render/renderSupport.function.js';\nexport function renderTagUpdateArray(supports) {\n    ++painting.locks;\n    supports.forEach(mapTagUpdate);\n    --painting.locks;\n    paint();\n}\nfunction mapTagUpdate(support) {\n    const global = support.subject.global;\n    if (!global) {\n        return; // while rendering a parent, a child may have been deleted (pinbowl)\n    }\n    renderSupport(global.newest);\n}\n","// taggedjs-no-compile\n/** File largely responsible for reacting to element events, such as onclick */\nimport { isPromise } from '../../isInstance.js';\nimport { renderSupport } from '../../render/renderSupport.function.js';\nimport { getUpTags } from './getUpTags.function.js';\nimport { renderTagUpdateArray } from './renderTagArray.function.js';\nimport { getSupportWithState } from './getSupportWithState.function.js';\nconst noData = 'no-data-ever';\nconst promiseNoData = 'promise-no-data-ever';\nexport function bindSubjectCallback(value, support) {\n    const global = support.subject.global;\n    // MAIN EVENT CALLBACK PROCESSOR\n    const subjectFunction = function (element, args) {\n        if (global.deleted === true) {\n            return;\n        }\n        // const newest = global.newest as AnySupport // || subjectFunction.support\n        return runTagCallback(subjectFunction.tagFunction, subjectFunction.support, // newest\n        subjectFunction.states, // newest\n        element, args);\n    };\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    const component = getSupportWithState(support);\n    subjectFunction.support = support;\n    // subjectFunction.otherSupport = component\n    const states = component.states; // ?.[0]\n    subjectFunction.states = states;\n    // subjectFunction.states = [...states]\n    return subjectFunction;\n}\nexport function runTagCallback(value, support, states, bindTo, args) {\n    // get actual component owner not just the html`` support\n    const component = getSupportWithState(support);\n    const subject = component.subject;\n    const global = subject.global; // tag.subject.global as TagGlobal\n    global.locked = true; // prevent another render from re-rendering this tag\n    // sync the new states to the old before the old does any processing\n    // syncStatesArray(component.subject.global.newest.states, states)\n    // ACTUAL CALLBACK TO ORIGINAL FUNCTION\n    const callbackResult = value.apply(bindTo, args);\n    // sync the old states to the new\n    // syncStatesArray(states, component.subject.global.newest.states)\n    delete global.locked;\n    const result = afterTagCallback(callbackResult, component);\n    return result;\n}\nexport function afterTagCallback(callbackResult, eventHandlerSupport) {\n    const global = eventHandlerSupport.subject.global; // tag.subject.global as SupportTagGlobal\n    return renderCallbackSupport(eventHandlerSupport, callbackResult, global);\n}\nfunction renderCallbackSupport(last, callbackResult, global) {\n    const tagsToUpdate = getUpTags(last);\n    renderTagUpdateArray(tagsToUpdate);\n    return checkAfterCallbackPromise(callbackResult, last, global);\n}\nexport function checkAfterCallbackPromise(callbackResult, last, global) {\n    if (isPromise(callbackResult)) {\n        const global0 = last.subject.global;\n        global0.locked = true;\n        return callbackResult.then(() => {\n            if (global.deleted === true) {\n                return promiseNoData; // tag was deleted during event processing\n            }\n            const global1 = last.subject.global;\n            delete global1.locked;\n            const tagsToUpdate = getUpTags(last);\n            renderTagUpdateArray(tagsToUpdate);\n            return promiseNoData;\n        });\n    }\n    return noData;\n}\nexport function runBlocked(tag) {\n    const global = tag.subject.global;\n    const blocked = global.blocked;\n    for (const block of blocked) {\n        const lastResult = renderSupport(block);\n        global.newest = lastResult;\n    }\n    global.blocked = [];\n    return global.newest;\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { processTagCallbackFun } from '../../render/attributes/processAttribute.function.js';\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nconst actions = ['init', 'destroy']; // oninit ondestroy\nexport function processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial) {\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    if (typeof (value) === BasicTypes.function) {\n        if (isSpecial && actions.includes(attrName)) {\n            specialAttribute(attrName, value, element, attrName, support, counts);\n            return;\n        }\n        return processTagCallbackFun(contextItem, value, support, attrName, element);\n    }\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    contextItem.isSpecial = isSpecial;\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial) {\n    if (isSpecial) {\n        return specialAttribute(attrName, value, element, isSpecial, support, counts);\n    }\n    howToSet(element, attrName, value);\n}\n","export function addSupportEventListener(support, eventName, element, callback) {\n    const elm = support.appElement;\n    // cast events that do not bubble up into ones that do\n    if (eventName === 'blur') {\n        eventName = 'focusout';\n    }\n    const replaceEventName = '_' + eventName;\n    // const replaceEventName = eventName\n    const global = support.subject.global;\n    const eventReg = global.events;\n    if (!eventReg[eventName]) {\n        const listener = function eventCallback(event) {\n            event.originalStopPropagation = event.stopPropagation;\n            bubbleEvent(event, replaceEventName, event.target);\n        };\n        eventReg[eventName] = listener;\n        elm.addEventListener(eventName, listener);\n    }\n    // attach to element but not as \"_click\" and \"_keyup\"\n    ;\n    element[replaceEventName] = callback;\n    element[eventName] = callback;\n}\nfunction bubbleEvent(event, replaceEventName, target) {\n    const callback = target[replaceEventName];\n    if (callback) {\n        let stopped = false;\n        event.stopPropagation = function () {\n            stopped = true;\n            event.originalStopPropagation.call(event);\n        };\n        callback(event);\n        if (event.defaultPrevented || stopped) {\n            return;\n        }\n    }\n    const parentNode = target.parentNode;\n    if (parentNode) {\n        bubbleEvent(event, replaceEventName, parentNode);\n    }\n}\n","import { addSupportEventListener } from './addSupportEventListener.function.js';\nexport function processAttributeFunction(element, newAttrValue, support, attrName) {\n    const fun = function (...args) {\n        return fun.tagFunction(element, args);\n    };\n    // access to original function\n    fun.tagFunction = newAttrValue;\n    fun.support = support;\n    addSupportEventListener(support.appSupport, attrName, element, // support.appSupport.appElement as Element,\n    fun);\n}\n","/** Looking for (class | style) followed by a period */\nexport function isSpecialAttr(attrName) {\n    if (attrName.startsWith('class.')) {\n        return 'class';\n    }\n    const specialAction = isSpecialAction(attrName);\n    if (specialAction !== false) {\n        return true;\n    }\n    if (attrName.startsWith('style.')) {\n        return 'style';\n    }\n    return false;\n}\nexport function isSpecialAction(attrName) {\n    switch (attrName) {\n        case 'autoselect':\n            return 'autoselect';\n        case 'autofocus':\n            return 'autofocus';\n        case 'oninit': // when read in compile process\n        case 'init': // when read in realtime\n            return 'oninit';\n        case 'ondestroy': // when read in compile process\n        case 'destroy': // when read in realtime\n            return 'destroy';\n    }\n    return false;\n}\n","import { processAttributeEmit } from './processAttribute.function.js';\nimport { updateNameOnlyAttrValue } from '../../interpolations/attributes/updateAttribute.function.js';\nconst emptyCounts = { added: 0, removed: 0 };\nexport function processUpdateAttrContext(value, ownerSupport, contextItem, values) {\n    if (contextItem.isNameOnly) {\n        updateNameOnlyAttrValue(values, value, contextItem.value, contextItem.element, // global.element as Element,\n        ownerSupport, contextItem.howToSet, [], // Context, but we dont want to alter current\n        emptyCounts);\n        contextItem.value = value;\n        return;\n    }\n    const element = contextItem.element;\n    processAttributeEmit(value, contextItem.attrName, contextItem, element, ownerSupport, contextItem.howToSet, contextItem.isSpecial, emptyCounts);\n    contextItem.value = value;\n    return;\n}\n","// taggedjs-no-compile\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../render/paint.function.js';\nimport { isNoDisplayValue, processNameOnlyAttrValue } from '../../render/attributes/processAttribute.function.js';\nexport function updateNameOnlyAttrValue(values, attrValue, lastValue, element, ownerSupport, howToSet, context, counts) {\n    // check to remove previous attribute(s)\n    if (lastValue) {\n        if (isNoDisplayValue(attrValue)) {\n            element.removeAttribute(lastValue);\n            return;\n        }\n        if (typeof (lastValue) === BasicTypes.object) {\n            const isObStill = typeof (attrValue) === BasicTypes.object;\n            if (isObStill) {\n                for (const name in lastValue) {\n                    // if((attrValue as any)[name]) {\n                    if (name in attrValue) {\n                        continue;\n                    }\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n            else {\n                for (const name in lastValue) {\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n        }\n    }\n    processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts);\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from '../../interpolations/attributes/specialAttribute.js';\nimport { isFunction, isObject, isSubjectInstance } from '../../isInstance.js';\nimport { bindSubjectCallback } from '../../interpolations/attributes/bindSubjectCallback.function.js';\nimport { BasicTypes, ValueTypes, empty } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../paint.function.js';\nimport { processDynamicNameValueAttribute, processNonDynamicAttr } from '../../interpolations/attributes/processNameValueAttribute.function.js';\nimport { addOneContext } from '../index.js';\nimport { processAttributeFunction } from '../../interpolations/attributes/processAttributeCallback.function.js';\nimport { isSpecialAttr } from '../../interpolations/attributes/isSpecialAttribute.function.js';\nimport { processUpdateAttrContext } from './processUpdateAttrContext.function.js';\nimport { blankHandler } from '../dom/attachDomElements.function.js';\n/** MAIN FUNCTION. Sets attribute value, subscribes to value updates  */\nexport function processAttribute(values, attrName, element, support, howToSet, //  = howToSetInputValue\ncontext, isSpecial, counts, value) {\n    const nameVar = getTagJsVar(attrName);\n    const isNameVar = nameVar >= 0;\n    if (isNameVar) {\n        const value = values[nameVar];\n        const contextItem = addOneContext(value, context, true);\n        contextItem.isAttr = true;\n        contextItem.element = element;\n        contextItem.howToSet = howToSet;\n        contextItem.isNameOnly = true;\n        // how to process value updates\n        contextItem.handler = processUpdateAttrContext;\n        processNameOnlyAttrValue(values, value, element, support, howToSet, context, counts);\n        return;\n    }\n    const valueVar = getTagJsVar(value);\n    if (valueVar >= 0) {\n        const value = values[valueVar];\n        const contextItem = {\n            isAttr: true,\n            element,\n            attrName: attrName,\n            // checkValueChange: undefined as any,\n            // delete: undefined as any,\n            withinOwnerElement: true,\n        };\n        context.push(contextItem);\n        /*\n            const isSubject = isSubjectInstance(contextItem.value)\n            if ( isSubject ) {\n              return processNameValueAttributeAttrSubject(\n                attrName as string,\n                contextItem,\n                element,\n                support,\n                howToSet,\n                isSpecial,\n                counts,\n              )\n            }\n        */\n        contextItem.handler = processUpdateAttrContext;\n        processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial);\n        contextItem.value = value;\n        return;\n    }\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts) {\n    if (isNoDisplayValue(attrValue)) {\n        return;\n    }\n    // process an object of attributes ${{class:'something, checked:true}}\n    if (typeof attrValue === BasicTypes.object) {\n        for (const name in attrValue) {\n            const value = attrValue[name];\n            processAttribute(values, name, element, ownerSupport, howToSet, context, isSpecialAttr(name), // only object variables are evaluated for is special attr\n            counts, value);\n        }\n        return;\n    }\n    // regular attributes\n    if (attrValue.length === 0) {\n        return; // ignore, do not set at this time\n    }\n    howToSet(element, attrValue, empty);\n}\n/** Processor for flat attributes and object attributes */\nfunction processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts) {\n    if (isSpecial) {\n        paintContent.push(function paintContent() {\n            element.removeAttribute(attrName);\n        });\n    }\n    const contextValueSubject = contextItem.value;\n    if (isSubjectInstance(contextValueSubject)) {\n        contextItem.handler = blankHandler;\n        const callback = function processAttrCallback(newAttrValue) {\n            processAttributeEmit(newAttrValue, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        const global = contextItem.global;\n        const subs = global.subscriptions = global.subscriptions || [];\n        subs.push(sub);\n    }\n    processAttributeEmit(contextItem.value, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n    return;\n}\nexport function processAttributeEmit(newAttrValue, attrName, subject, element, support, howToSet, isSpecial, counts) {\n    // should the function be wrapped so every time its called we re-render?\n    if (isFunction(newAttrValue)) {\n        return callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processAttributeSubjectValue(newAttrValue, element, attrName, special, howToSet, support, counts) {\n    // process adding/removing style. class. (false means remove)\n    if (special !== false) {\n        specialAttribute(attrName, newAttrValue, element, special, // string name of special\n        support, counts);\n        return;\n    }\n    switch (newAttrValue) {\n        case undefined:\n        case false:\n        case null:\n            paintContent.push(function paintContentPush() {\n                element.removeAttribute(attrName);\n            });\n            return;\n    }\n    if (isFunction(newAttrValue)) {\n        return processAttributeFunction(element, newAttrValue, support, attrName);\n    }\n    // value is 0\n    howToSet(element, attrName, newAttrValue);\n}\nfunction callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts) {\n    const wrapper = support.templater.wrapper;\n    const tagJsType = wrapper?.tagJsType || wrapper?.original?.tagJsType;\n    const oneRender = tagJsType === ValueTypes.renderOnce;\n    if (!oneRender) {\n        return processTagCallbackFun(subject, newAttrValue, support, attrName, element);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processTagCallbackFun(subject, newAttrValue, support, attrName, element) {\n    // tag has state and will need all functions wrapped to cause re-renders\n    newAttrValue = bindSubjectCallback(newAttrValue, support);\n    return processAttributeFunction(element, newAttrValue, support, attrName);\n}\nfunction getTagJsVar(attrPart) {\n    if (isObject(attrPart) && 'tagJsVar' in attrPart)\n        return attrPart.tagJsVar;\n    return -1;\n    // return (attrPart as TagVarIdNum)?.tagJsVar || -1\n}\nexport function isNoDisplayValue(attrValue) {\n    return undefined === attrValue || null === attrValue || false === attrValue;\n}\n","// taggedjs-no-compile\nimport { paintAppend, paintAppends, paintBefore, paintCommands } from \"../../render/paint.function.js\";\nimport { addOneContext } from \"../../render/index.js\";\nimport { empty } from \"../../tag/ValueTypes.enum.js\";\nimport { domProcessContextItem } from \"./domProcessContextItem.function.js\";\nexport function attachDynamicDom(value, context, support, // owner\ncounts, // used for animation stagger computing\ndepth, // used to indicate if variable lives within an owner's element\nappendTo, insertBefore) {\n    const marker = document.createTextNode(empty);\n    const isWithinOwnerElement = depth > 0;\n    const contextItem = addOneContext(value, context, isWithinOwnerElement);\n    contextItem.placeholder = marker;\n    if (appendTo) {\n        paintAppends.push({\n            processor: paintAppend,\n            args: [appendTo, marker],\n        });\n    }\n    else {\n        paintCommands.push({\n            processor: paintBefore,\n            args: [insertBefore, marker],\n        });\n    }\n    domProcessContextItem(value, support, contextItem, counts, appendTo, insertBefore);\n}\n","// taggedjs-no-compile\nimport { howToSetFirstInputValue } from \"../../interpolations/attributes/howToSetInputValue.function.js\";\nimport { paintAppend, paintAppends, paintAppendText, paintBefore, paintBeforeText, paintCommands } from \"../paint.function.js\";\nimport { processAttribute } from \"../attributes/processAttribute.function.js\";\nimport { empty } from \"../../tag/ValueTypes.enum.js\";\nimport { attachDynamicDom } from \"../../interpolations/optimizers/attachDynamicDom.function.js\";\nexport const blankHandler = function () {\n    return undefined;\n};\nexport function attachDomElements(nodes, values, support, counts, // used for animation stagger computing\ncontext, depth, // used to know if dynamic variables live within parent owner tag/support\nappendTo, insertBefore) {\n    const dom = [];\n    if (appendTo && insertBefore === undefined) {\n        insertBefore = document.createTextNode(empty);\n        paintAppends.push({\n            args: [appendTo, insertBefore],\n            processor: paintAppend,\n        });\n        appendTo = undefined;\n    }\n    for (let index = 0; index < nodes.length; ++index) {\n        const node = nodes[index];\n        const value = node.v;\n        const isNum = !isNaN(value);\n        if (isNum) {\n            const index = context.length;\n            const value = values[index];\n            attachDynamicDom(value, context, support, counts, depth, appendTo, insertBefore);\n            continue;\n        }\n        const newNode = {}; // DomObjectText\n        dom.push(newNode);\n        if (node.nn === 'text') {\n            attachDomText(newNode, node, appendTo, insertBefore);\n            continue;\n        }\n        // one single html element\n        const domElement = attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore);\n        if (node.ch) {\n            newNode.ch = attachDomElements(node.ch, values, support, counts, context, depth + 1, domElement, insertBefore).dom;\n        }\n    }\n    return { dom, context };\n}\nfunction attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore) {\n    const domElement = newNode.domElement = document.createElement(node.nn);\n    // attributes that may effect style, come first for performance\n    if (node.at) {\n        for (const attr of node.at) {\n            const name = attr[0];\n            const value = attr[1];\n            const isSpecial = attr[2] || false;\n            processAttribute(values, name, domElement, support, howToSetFirstInputValue, context, isSpecial, counts, value);\n        }\n    }\n    if (appendTo) {\n        paintAppends.push({\n            args: [appendTo, domElement],\n            processor: paintAppend,\n        });\n    }\n    else {\n        paintCommands.push({\n            processor: paintBefore,\n            args: [insertBefore, domElement],\n        });\n    }\n    return domElement;\n}\nfunction attachDomText(newNode, node, owner, insertBefore) {\n    const textNode = newNode;\n    const string = textNode.tc = node.tc;\n    if (owner) {\n        paintAppends.push({\n            processor: paintAppendText,\n            args: [owner, string, (elm) => textNode.domElement = elm],\n        });\n    }\n    else {\n        paintCommands.push({\n            processor: paintBeforeText,\n            args: [insertBefore, string, (elm) => textNode.domElement = elm]\n        });\n    }\n}\n","import { blankHandler } from \"./dom/attachDomElements.function.js\";\nexport let paintCommands = [];\nexport let paintContent = [];\nexport let setContent = [];\nexport let paintAppends = [];\nexport let paintAfters = []; // callbacks after all painted\nexport const painting = {\n    locks: 0\n};\nexport function paint() {\n    if (painting.locks > 0) {\n        return;\n    }\n    for (const content of paintContent) {\n        content();\n    }\n    for (const [text, textNode] of setContent) {\n        textNode.textContent = text;\n    }\n    for (const now of paintAppends) {\n        now.processor(...now.args);\n    }\n    for (const item of paintCommands) {\n        item.processor(...item.args);\n    }\n    paintReset();\n    for (const now of paintAfters) {\n        now();\n    }\n    paintAfters = [];\n}\nfunction paintReset() {\n    paintCommands = [];\n    paintContent = [];\n    paintAppends = [];\n    setContent = [];\n}\nexport function paintRemover(element) {\n    const parentNode = element.parentNode;\n    parentNode.removeChild(element);\n}\nexport function paintBefore(relative, element) {\n    relative.parentNode.insertBefore(element, relative);\n}\nexport function paintAppend(relative, element) {\n    relative.appendChild(element);\n}\nconst someDiv = (typeof document === 'object' && document.createElement('div')); // used for content cleaning\nexport function paintBeforeText(relative, text, callback = blankHandler) {\n    someDiv.innerHTML = text;\n    const textElm = document.createTextNode(someDiv.innerHTML);\n    paintBefore(relative, textElm);\n    callback(textElm);\n}\nexport function paintAppendText(relative, text, callback) {\n    someDiv.innerHTML = text;\n    const textElm = document.createTextNode(someDiv.textContent);\n    paintAppend(relative, textElm);\n    callback(textElm);\n}\n","/**\n * Sync two supports\n * @param support FROM\n * @param newestSupport  ONTO\n * @returns\n */\nexport function syncSupports(support, // from\nnewestSupport) {\n    return syncStatesArray(support.states, newestSupport.states);\n}\nexport function syncStatesArray(from, onto) {\n    for (let index = 0; index < from.length; ++index) {\n        const getter = from[index];\n        const setter = onto[index];\n        syncStates(getter, setter);\n    }\n}\nlet got;\nfunction syncFromState(...x) {\n    got = x;\n    return x;\n}\nfunction syncOntoState() {\n    return got;\n}\nexport function syncStates(from, onto) {\n    from(syncFromState, 1);\n    onto(syncOntoState, 2);\n}\n/** @deprecated favor using syncSupports */\nexport function oldSyncStates(stateFrom, stateTo, intoStates, statesFrom) {\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const stateFromTarget = stateFrom[index];\n        const fromValue = stateFromTarget.get(); // get without setting\n        // const fromValue = getStateValue(stateFromTarget) // get without setting\n        const stateToTarget = stateTo[index];\n        const callback = stateToTarget.callback; // is it a let state?\n        if (!callback) {\n            continue;\n        }\n        callback(fromValue); // set the value\n    }\n    // loop statesFrom to set on the oldStates\n    for (let index = statesFrom.length - 1; index >= 0; --index) {\n        oldValues.length = 0;\n        getIndex = 0;\n        const stateFromTarget = statesFrom[index];\n        // trigger getting all old values\n        stateFromTarget(oldGetCallback);\n        // trigger setting updated values\n        intoStates[index](newSetCallback);\n    }\n}\nlet getIndex = 0;\nconst oldValues = [];\nfunction oldGetCallback(...args) {\n    oldValues.push(args);\n    return args;\n}\n// This is the \"get\" argument that will be called and all arguments are ignored\nfunction newSetCallback(..._) {\n    return oldValues[getIndex++];\n}\n","import { paint, paintAppend, paintAppends, paintCommands, paintRemover } from '../../render/paint.function.js';\nimport { setUseMemory } from '../../state/setUseMemory.object.js';\nimport { syncSupports } from '../../state/syncStates.function.js';\nimport { forceUpdateExistingValue } from './forceUpdateExistingValue.function.js';\nimport { getSupportWithState } from '../../interpolations/attributes/getSupportWithState.function.js';\nimport { empty, ValueTypes } from '../ValueTypes.enum.js';\nimport { createAndProcessContextItem } from './createAndProcessContextItem.function.js';\nimport { tagValueUpdateHandler } from './tagValueUpdateHandler.function.js';\nimport { updateToDiffValue } from './updateToDiffValue.function.js';\nexport function setupSubscribe(observable, contextItem, ownerSupport, counts, callback, appendTo, insertBefore) {\n    let appendMarker;\n    // do we need to append now but process subscription later?\n    if (appendTo) {\n        appendMarker = insertBefore = document.createTextNode(empty);\n        paintAppends.push({\n            processor: paintAppend,\n            args: [appendTo, insertBefore]\n        });\n    }\n    const subscription = setupSubscribeCallbackProcessor(observable, ownerSupport, counts, callback, insertBefore);\n    subscription.appendMarker = appendMarker;\n    contextItem.subscription = subscription;\n    contextItem.delete = deleteSubscribe;\n    contextItem.handler = checkSubscribeFrom;\n    return subscription;\n}\nexport function setupSubscribeCallbackProcessor(observable, ownerSupport, // ownerSupport ?\ncounts, // used for animation stagger computing\ncallback, insertBefore) {\n    const component = getSupportWithState(ownerSupport);\n    let onValue = function onSubValue(value) {\n        subscription.hasEmitted = true;\n        subscription.contextItem = createAndProcessContextItem(value, ownerSupport, counts, insertBefore);\n        /*\n            if(!syncRun && !setUseMemory.stateConfig.support) {\n              paint()\n            }\n        */\n        // from now on just run update\n        onValue = function subscriptionUpdate(value) {\n            forceUpdateExistingValue(subscription.contextItem, value, ownerSupport);\n            if (!syncRun && !setUseMemory.stateConfig.support) {\n                paint();\n            }\n        };\n    };\n    // onValue mutates so function below calls original and mutation\n    const valueChangeHandler = function subValueProcessor(value) {\n        subscription.lastValue = value;\n        const newComponent = component.subject.global.newest;\n        syncSupports(newComponent, component);\n        if (subscription.callback) {\n            value = subscription.callback(value);\n        }\n        onValue(value);\n    };\n    let syncRun = true;\n    // aka setup\n    const subscription = {\n        hasEmitted: false,\n        handler: valueChangeHandler,\n        callback,\n        states: component.states,\n        lastValue: undefined,\n        subscription: undefined, // must be populated AFTER \"subscription\" variable defined incase called on subscribe\n    };\n    subscription.subscription = observable.subscribe(valueChangeHandler);\n    syncRun = false;\n    return subscription;\n}\nfunction checkSubscribeFrom(newValue, ownerSupport, contextItem) {\n    if (!newValue || !newValue.tagJsType || newValue.tagJsType !== ValueTypes.subscribe) {\n        contextItem.delete(contextItem, ownerSupport);\n        updateToDiffValue(newValue, contextItem, ownerSupport, 99);\n        return 99;\n    }\n    const subscription = contextItem.subscription;\n    if (!subscription.hasEmitted) {\n        return -1;\n    }\n    subscription.callback = newValue.callback;\n    subscription.handler(subscription.lastValue);\n    const newComponent = getSupportWithState(ownerSupport);\n    subscription.states = newComponent.states;\n    return -1;\n}\nfunction deleteSubscribe(contextItem, ownerSupport) {\n    const subscription = contextItem.subscription;\n    subscription.deleted = true;\n    delete contextItem.subscription;\n    subscription.subscription.unsubscribe();\n    const appendMarker = subscription.appendMarker;\n    if (appendMarker) {\n        paintCommands.push({\n            processor: paintRemover,\n            args: [appendMarker],\n        });\n        delete subscription.appendMarker;\n    }\n    delete contextItem.delete;\n    // delete contextItem.handler\n    contextItem.handler = tagValueUpdateHandler;\n    if (!subscription.hasEmitted) {\n        return;\n    }\n    subscription.contextItem.delete(subscription.contextItem, ownerSupport);\n    return 77;\n}\n","import { setupSubscribe } from './setupSubscribe.function.js';\nexport function processSubscribe(value, contextItem, ownerSupport, counts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    return setupSubscribe(value.Observable, contextItem, ownerSupport, counts, value.callback, appendTo, insertBefore);\n}\nexport function processSubscribeWith(value, contextItem, ownerSupport, counts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    const observable = value.Observable;\n    const subscription = setupSubscribe(observable, contextItem, ownerSupport, counts, value.callback, appendTo, insertBefore);\n    if (!subscription.hasEmitted) {\n        subscription.handler((observable.value || value.withDefault));\n    }\n    return subscription;\n}\nexport function processSignal(value, contextItem, ownerSupport, counts, // {added:0, removed:0}\nappendTo) {\n    setupSubscribe(value, contextItem, ownerSupport, counts, undefined, appendTo);\n}\n","import { state } from '../state/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { processSignal } from '../tag/update/processSubscribe.function.js';\nimport { ValueTypes } from '../tag/ValueTypes.enum.js';\n/** Checks if rendering cycle in process. Then creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function signal(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => Signal(initialValue));\n    }\n    return Signal(initialValue);\n}\n/** Creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function Signal(initialValue) {\n    let value = initialValue;\n    const subscribers = new Set();\n    return {\n        tagJsType: ValueTypes.signal,\n        processInit: processSignal,\n        get value() {\n            return value;\n        },\n        set value(newValue) {\n            if (value !== newValue) {\n                value = newValue;\n                // Notify all subscribers\n                subscribers.forEach(callback => callback(newValue));\n            }\n        },\n        subscribe(callback) {\n            callback(value); // emit initial value\n            subscribers.add(callback);\n            // Return an unsubscribe function\n            const unsub = () => subscribers.delete(callback);\n            // support traditional unsubscribe\n            unsub.unsubscribe = unsub;\n            return unsub;\n        },\n    };\n}\n","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this.value, subscription);\n        return subscription;\n    }\n}\nexport class ValueSubjective extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        this._value = value;\n        defineValueOn(this); // if you extend this AND have a constructor, you must call this in your extension\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n","export function willCallback(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        });\n        callback(lastValue, utils.next);\n    });\n}\n/** .pipe( promise((x) => Promise.resolve(44)) ) */\nexport function willPromise(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        result.then(x => utils.next(x));\n    });\n}\n/** .pipe( willSubscribe((x) => new ValueSubject(44)) ) */\nexport const willSubscribe = (callback) => {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        const subscription = result.subscribe(x => {\n            subscription.unsubscribe();\n            utils.next(x);\n        });\n    });\n};\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    return setUseMemory.stateConfig.handlers.handler(defaultValue);\n}\n","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { oldSyncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered.\n * Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before, final = defaultFinally, } = {}) => {\n    const previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (before && !before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (before && !before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const firstSupport = state(() => getSupportInCycle());\n            const subject = state(() => new ValueSubject(undefined));\n            const oldState = state(() => ({\n                stateArray: setUseMemory.stateConfig.stateArray,\n                states: setUseMemory.stateConfig.states,\n            }));\n            const method = (currentValues, callback) => {\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowSupport !== firstSupport) {\n                        const newestState = oldState.stateArray;\n                        const global = firstSupport.subject.global;\n                        const oldest = global.oldest;\n                        const oldestState = oldest.state;\n                        const newStates = oldState.states;\n                        const oldStates = oldest.states;\n                        oldSyncStates(newestState, oldestState, newStates, oldStates);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { oldSyncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => new Subject(initialValue));\n    }\n    return new Subject(initialValue);\n}\nsubject._value = (value) => {\n    const oldestState = state(function subjectValue() {\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectValue() {\n        const subject = new ValueSubject(value).pipe(x => {\n            oldSyncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => ({\n        stateArray: setUseMemory.stateConfig.stateArray,\n        states: setUseMemory.stateConfig.states,\n    }));\n    const nowSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        oldSyncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n        return x;\n    });\n}\nsubject.all = all;\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function states(setter) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.statesHandler(setter);\n}\n","import { signal } from '../subject/signal.function.js';\nimport { states } from './states.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(setter) {\n    const propStates2 = signal([]);\n    const passes = signal(0);\n    const passedOn = signal(0);\n    let nowValues = [];\n    let passed = 0;\n    passedOn.value = passes.value;\n    setter((...values) => {\n        nowValues = values;\n        return propStates2.value;\n    });\n    // When the watched variable changes, then the local prop variable has to update\n    watch(nowValues, () => {\n        ++passed; // first time values and changed values cause new state\n        propStates2.value = nowValues;\n        setter(() => nowValues);\n    });\n    // called and only used during sync'ing processes\n    states((_x, direction) => {\n        // now its collection of variables time\n        if (passed) {\n            setter((...values) => {\n                if (!direction || direction === 1) {\n                    propStates2.value = values;\n                }\n                return propStates2.value;\n            });\n            passedOn.value = passes.value;\n            ++passes.value;\n            return;\n        }\n        // this in an insync call, we do not care about the values here\n        setter(() => {\n            return propStates2.value;\n        });\n    });\n    ++passed;\n    return propStates2.value;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nfunction getBlankDiffMemory() {\n    return { stateDiff: 0, provider: undefined };\n}\nexport const providers = {\n    create: (constructMethod) => {\n        const stateDiffMemory = state(getBlankDiffMemory);\n        // mimic how many states were called the first time\n        if (stateDiffMemory.stateDiff) {\n            let x = stateDiffMemory.stateDiff;\n            while (x--) {\n                state(undefined);\n            }\n            const result = state(undefined);\n            return result;\n        }\n        const result = state(() => {\n            const stateConfig = setUseMemory.stateConfig;\n            const oldStateCount = stateConfig.stateArray.length;\n            // Providers with provider requirements just need to use providers.create() and providers.inject()\n            const instance = constructMethod.prototype ? new constructMethod() : constructMethod();\n            const support = stateConfig.support;\n            const stateDiff = stateConfig.stateArray.length - oldStateCount;\n            const provider = {\n                constructMethod,\n                instance,\n                stateDiff,\n                owner: support,\n                children: [],\n            };\n            stateDiffMemory.provider = provider;\n            const global = support.subject.global;\n            const providers = global.providers = global.providers || [];\n            providers.push(provider);\n            stateDiffMemory.stateDiff = stateDiff;\n            return instance;\n        });\n        const cm = constructMethod;\n        const compareTo = cm.compareTo = cm.toString();\n        stateDiffMemory.provider.constructMethod.compareTo = compareTo;\n        return result;\n    },\n    /**\n     * @template T\n     * @param {(new (...args: any[]) => T) | () => T} constructor\n     * @returns {T}\n     */\n    inject: providerInject\n};\nfunction providerInject(constructor) {\n    // find once, return same every time after\n    return state(function providerInjectState() {\n        // const memory = setUse.memory\n        const cm = constructor;\n        const compareTo = cm.compareTo = cm.compareTo || constructor.toString();\n        const support = getSupportInCycle(); // memory.stateConfig.support as AnySupport\n        const providers = [];\n        let owner = {\n            ownerSupport: support.ownerSupport\n        };\n        while (owner.ownerSupport) {\n            const ownGlobal = owner.ownerSupport.subject.global;\n            const ownerProviders = ownGlobal.providers;\n            if (!ownerProviders) {\n                owner = owner.ownerSupport; // cause reloop checking next parent\n                continue;\n            }\n            const provider = ownerProviders.find(provider => {\n                providers.push(provider);\n                const constructorMatch = provider.constructMethod.compareTo === compareTo;\n                if (constructorMatch) {\n                    return true;\n                }\n            });\n            if (provider) {\n                const global = support.subject.global;\n                const providers = global.providers = global.providers || [];\n                providers.push(provider);\n                provider.children.push(support);\n                return provider.instance;\n            }\n            owner = owner.ownerSupport; // cause reloop checking next parent\n        }\n        const msg = `Could not inject provider: ${constructor.name} ${constructor}`;\n        console.warn(`${msg}. Available providers`, providers);\n        throw new Error(msg);\n    });\n}\n","import callbackStateUpdate from './callbackStateUpdate.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { syncError } from './callbackMaker.function.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\n/** Wrap a function that will be called back. After the wrapper and function are called, a rendering cycle will update display */\nexport function callback(callback) {\n    const support = getSupportInCycle();\n    if (!support) {\n        throw syncError;\n    }\n    return createTrigger(support, setUseMemory.stateConfig, // setUseMemory.stateConfig.stateArray\n    callback);\n}\nexport function createTrigger(support, oldState, toCallback) {\n    // const oldStates = [...oldState.states]\n    const oldStates = oldState.states;\n    return function trigger(...args) {\n        const callbackMaker = support.subject.renderCount > 0;\n        if (callbackMaker) {\n            return callbackStateUpdate(support, oldStates, toCallback, ...args);\n        }\n        // we are in sync with rendering, just run callback naturally\n        return toCallback(...args);\n    };\n}\n","import { renderSupport } from '../render/renderSupport.function.js';\nimport { isPromise } from '../isInstance.js';\nexport default function callbackStateUpdate(support, oldStates, callback, ...args) {\n    const global = support.subject.global;\n    const newestSupport = global.newest;\n    // NEWEST UPDATE OLDEST: ensure that the oldest has the latest values first\n    //syncStatesArray(newestSupport.states, oldStates)\n    // run the callback\n    const maybePromise = callback(...args);\n    // OLDEST UPDATE NEWEST: send the oldest state changes into the newest\n    //syncStatesArray(oldStates, newestSupport.states)\n    renderSupport(newestSupport);\n    if (isPromise(maybePromise)) {\n        maybePromise.finally(() => {\n            // send the oldest state changes into the newest\n            // syncStatesArray(oldStates, newestSupport.states)\n            renderSupport(newestSupport);\n        });\n    }\n    // return undefined as T\n    return maybePromise;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { createTrigger } from './callback.function.js';\nexport const callbackMaker = () => {\n    const support = getSupportInCycle();\n    // callback as typeof innerCallback\n    if (!support) {\n        throw syncError;\n    }\n    const oldState = setUseMemory.stateConfig; // .stateArray\n    return function triggerMaker(callback) {\n        return createTrigger(support, oldState, callback);\n    };\n};\nexport const syncError = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n","import { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { state } from \"./state.function.js\";\nexport function onDestroy(callback) {\n    state(function stateDestroy() {\n        const support = getSupportInCycle();\n        const global = support.subject.global;\n        global.destroy$.toCallback(callback);\n    });\n}\n","import { getSupportWithState } from \"../interpolations/attributes/getSupportWithState.function.js\";\nimport { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { ValueTypes } from \"../tag/index.js\";\nimport { processSubscribe } from \"../tag/update/processSubscribe.function.js\";\n/** Have an html tagged value as value of subscribe emissions. Automatically unsubscribes for you */\nexport function subscribe(Observable, callback) {\n    return {\n        tagJsType: ValueTypes.subscribe,\n        processInit: processSubscribe,\n        Observable,\n        callback,\n        states: getSupportWithState(getSupportInCycle()).states,\n    };\n}\n","import { getSupportWithState } from \"../interpolations/attributes/getSupportWithState.function.js\";\nimport { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { ValueTypes } from \"../tag/index.js\";\nimport { processSubscribeWith } from \"../tag/update/processSubscribe.function.js\";\n/** Have an html tagged value as value of subscribe emissions, with initial default value emission. Automatically unsubscribes for you */\nexport function subscribeWith(Observable, withDefault, callback) {\n    return {\n        tagJsType: ValueTypes.subscribe,\n        processInit: processSubscribeWith,\n        Observable,\n        callback,\n        withDefault,\n        states: getSupportWithState(getSupportInCycle()).states,\n    };\n}\n","import { setUseMemory } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUseMemory.stateConfig.support;\n}\n","import { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { newSupportByTemplater, processTag, tagFakeTemplater } from '../../render/update/processTag.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processDomTagInit(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = tagFakeTemplater(tag);\n    }\n    const global = getNewGlobal(contextItem);\n    if (appendTo) {\n        return processNewSubjectTag(templater, contextItem, ownerSupport, counts, appendTo, insertBefore);\n    }\n    global.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n    contextItem.checkValueChange = checkTagValueChange;\n    return processTag(ownerSupport, contextItem, counts);\n}\n","// taggedjs-no-compile\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\nimport { processDomTagInit } from './update/processDomTagInit.function.js';\nexport const variablePrefix = ':tagvar';\nexport const variableSuffix = ':';\nexport function getStringTag(strings, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        tagJsType: ValueTypes.tag,\n        processInit: processDomTagInit,\n        strings,\n        /** Used within an array.map() that returns html aka array.map(x => html``.key(x)) */\n        key(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: function html(strings, values) {\n            tag.children = { strings, values };\n            return tag;\n        }\n    };\n    return tag;\n}\nexport function getDomTag(dom, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        dom,\n        tagJsType: ValueTypes.dom,\n        processInit: processDomTagInit,\n        key: function keyFun(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: {\n            dom: function dom(dom, // ObjectChildren\n            values) {\n                tag.children = { dom: dom, values };\n                return tag;\n            }\n        }\n    };\n    return tag;\n}\n","import { variablePrefix, variableSuffix } from \"../../tag/getDomTag.function.js\";\nimport { isSpecialAttr } from \"../attributes/isSpecialAttribute.function.js\";\nconst fragFindAny = /(:tagvar\\d+:)/;\nconst ondoubleclick = 'ondoubleclick';\nconst regexAttr = /([:_a-zA-Z0-9\\-.]+)\\s*(?:=\\s*\"([^\"]*)\"|=\\s*(\\S+))?/g;\nconst regexTagOrg = /<\\/?([a-zA-Z0-9-]+)((?:\\s+[a-zA-Z_:*][\\w:.-]*(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+))?)+\\s*|\\s*)\\/?>/g;\n/** Main start of string parsing */\nexport function parseHTML(html) {\n    const valuePositions = [];\n    const elements = [];\n    const stack = [];\n    let currentElement = null;\n    let valueIndex = -1;\n    let position = 0;\n    const regexTag = new RegExp(regexTagOrg, 'g');\n    html = preprocessTagsInComments(html);\n    while (position < html.length) {\n        const tagMatch = regexTag.exec(html);\n        if (!tagMatch) {\n            break;\n        }\n        const [fullMatch, tagName, attrString] = tagMatch;\n        const isClosingTag = fullMatch.startsWith('</');\n        const isSelfClosing = fullMatch.endsWith('/>');\n        if (position < tagMatch.index) {\n            const textContent = html.slice(position, tagMatch.index);\n            if (textContent.trim()) {\n                const textVarMatches = splitByTagVar(textContent);\n                for (let textContent of textVarMatches) {\n                    if (textContent.startsWith(variablePrefix)) {\n                        textContent = variablePrefix + (++valueIndex) + variableSuffix;\n                    }\n                    pushTextTo(currentElement, elements, textContent);\n                }\n            }\n        }\n        position = tagMatch.index + fullMatch.length;\n        if (isClosingTag) {\n            currentElement = stack.pop() || null;\n            continue;\n        }\n        const attributes = [];\n        let attrMatch;\n        while ((attrMatch = regexAttr.exec(attrString)) !== null) {\n            const attrName = attrMatch[1] || attrMatch[3] || attrMatch[5];\n            const attrChoice = attrMatch[2] || attrMatch[4] || attrMatch[6];\n            let attrValue = attrChoice;\n            if (attrName === undefined) {\n                continue;\n            }\n            const notEmpty = attrMatch[2] !== '';\n            const noValue = attrValue === undefined && notEmpty;\n            const lowerName = attrName.toLowerCase();\n            const fixedName = lowerName.startsWith('on') ? cleanEventName(lowerName) : lowerName;\n            if (noValue) {\n                const standAloneVar = attrName.slice(0, variablePrefix.length) === variablePrefix;\n                if (standAloneVar) {\n                    const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                    valuePositions.push(['at', valueName]);\n                    attributes.push([valueName]); // the name itself is dynamic\n                    continue;\n                }\n                const startMatched = attrMatch[0].startsWith(attrName);\n                const standAloneAttr = startMatched && attrMatch[0].slice(attrName.length, attrMatch[0].length).search(/\\s+$/) >= 0;\n                if (standAloneAttr) {\n                    attributes.push([fixedName]);\n                    continue;\n                }\n                const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                attrValue = valueName;\n            }\n            if (!notEmpty) {\n                attrValue = attrMatch[2];\n            }\n            const attrSet = [fixedName, attrValue];\n            const isSpecial = isSpecialAttr(lowerName); // check original name for \"oninit\" or \"autofocus\"\n            if (isSpecial) {\n                attrSet.push(isSpecial);\n            }\n            attributes.push(attrSet);\n        }\n        const element = {\n            nn: tagName, // nodeName\n        };\n        if (attributes.length) {\n            element.at = attributes;\n        }\n        if (currentElement) {\n            if (!currentElement.ch) {\n                currentElement.ch = [];\n            }\n            currentElement.ch.push(element);\n        }\n        else {\n            elements.push(element);\n        }\n        if (!isSelfClosing) {\n            stack.push(currentElement);\n            currentElement = element;\n        }\n    }\n    if (position < html.length) {\n        const textContent = html.slice(position);\n        if (textContent.trim()) {\n            const textVarMatches = splitByTagVar(textContent);\n            for (const textContent of textVarMatches) {\n                if (textContent.startsWith(variablePrefix)) {\n                    ++valueIndex;\n                }\n                pushTextTo(currentElement, elements, textContent);\n            }\n        }\n    }\n    return elements;\n}\nconst removeCommentRegX = new RegExp('(<!--[\\\\s\\\\S]*?-->)', 'g');\nfunction preprocessTagsInComments(html) {\n    // Use a regex to find all HTML comments\n    return html.replace(removeCommentRegX, function (match) {\n        // For each comment found, replace < and > inside it\n        return match.replace(/\\[l t\\]/g, '[l&nbsp;t]').replace(/\\[g t\\]/g, '[g&nbsp;t]').replace(/</g, '[l t]').replace(/>/g, '[g t]');\n    });\n}\nfunction cleanEventName(eventName) {\n    if (eventName.startsWith('on')) {\n        const couldByDblClick = eventName.length === ondoubleclick.length && eventName === ondoubleclick;\n        if (couldByDblClick) {\n            return 'dblclick';\n        }\n        return eventName.slice(2, eventName.length);\n    }\n    return eventName;\n}\nfunction pushTextTo(currentElement, elements, textContent) {\n    const textNode = {\n        nn: 'text', // nodeName\n        tc: postprocessTagsInComments(textContent), // textContent\n    };\n    pushTo(currentElement, elements, textNode);\n}\nfunction postprocessTagsInComments(html) {\n    // Use a regex to find all segments that look like processed comments\n    return html.replace(/(\\[l t\\]!--[\\s\\S]*?--\\[g t\\])/g, function (match) {\n        // For each processed comment found, replace *lt* and *gt* back to < and >\n        return match.replace(/\\[l t\\]/g, '<').replace(/\\[g t\\]/g, '>').replace(/\\[l&nbsp;t\\]/g, '[l t]').replace(/\\[g&nbsp;t\\]/g, '[g t]');\n    });\n}\nfunction pushTo(currentElement, elements, textNode) {\n    if (currentElement) {\n        if (!currentElement.ch) {\n            currentElement.ch = [];\n        }\n        currentElement.ch.push(textNode);\n    }\n    else {\n        elements.push(textNode);\n    }\n}\nfunction splitByTagVar(inputString) {\n    // Split the string using the regular expression, keep delimiters in the output\n    const parts = inputString.split(fragFindAny);\n    // Filter out any empty strings from the results\n    const filteredParts = parts.filter(notEmptyStringMapper);\n    return filteredParts;\n}\nfunction notEmptyStringMapper(part) {\n    return part !== '';\n}\n","import { variablePrefix, variableSuffix } from \"../../tag/getDomTag.function.js\";\nimport { parseHTML } from \"./parseHTML.function.js\";\nconst fragReplacer = /(^:tagvar\\d+:|:tagvar\\d+:$)/g;\nconst safeVar = '__safeTagVar';\n/** Run only during compile step OR when no compile step occurred at runtime */\nexport function htmlInterpolationToDomMeta(strings, values) {\n    htmlInterpolationToPlaceholders(strings, values);\n    // Parse the modified fragments\n    const htmlString = htmlInterpolationToPlaceholders(strings, values).join('');\n    const domMeta = parseHTML(htmlString);\n    return domMeta;\n}\nexport function htmlInterpolationToPlaceholders(strings, values) {\n    // Sanitize placeholders in the fragments\n    const sanitizedFragments = sanitizePlaceholders(strings);\n    // Add placeholders to the fragments\n    return addPlaceholders(sanitizedFragments, values);\n}\nfunction sanitizePlaceholders(fragments) {\n    return fragments.map(santizeFragment);\n}\nfunction santizeFragment(fragment) {\n    return fragment.replace(fragReplacer, (match, index) => safeVar + index);\n}\nfunction addPlaceholders(strings, values) {\n    const results = [];\n    for (let index = 0; index < strings.length; ++index) {\n        const fragment = strings[index];\n        if (index < values.length) {\n            results.push(fragment + variablePrefix + index + variableSuffix);\n            continue;\n        }\n        results.push(fragment);\n    }\n    balanceArrayByArrays(results, strings, values);\n    return results;\n}\nexport function balanceArrayByArrays(results, strings, values) {\n    const diff = values.length - strings.length;\n    if (diff > 0) {\n        for (let x = diff; x > 0; --x) {\n            results.push(variablePrefix + (strings.length + x - 1) + variableSuffix);\n        }\n    }\n}\n","// taggedjs-no-compile\nimport { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nconst placeholderRegex = new RegExp(variablePrefix + '(\\\\d+)' + variableSuffix, 'g');\nconst ch = 'ch'; // short for children\nexport function replacePlaceholders(dom, valueCount, valuePositions = [], currentTail = []) {\n    const elements = dom;\n    for (let i = 0; i < elements.length; i++) {\n        const loopTail = [...currentTail, i];\n        const element = elements[i];\n        if (element.at) {\n            const attrs = element.at;\n            element.at = processAttributes(attrs, valueCount);\n        }\n        if (element.ch) {\n            const children = element.ch;\n            const innerLoopTail = [...loopTail, ch];\n            element.ch = replacePlaceholders(children, valueCount, valuePositions, innerLoopTail);\n        }\n        i = examineChild(element, valueCount, elements, i);\n    }\n    return elements;\n}\nfunction examineChild(child, valueCount, children, index) {\n    if (child.nn !== 'text') {\n        return index;\n    }\n    const textChild = child;\n    let textContent = textChild.tc;\n    if (typeof textContent !== ImmutableTypes.string) {\n        return index;\n    }\n    let match;\n    while ((match = placeholderRegex.exec(textContent)) !== null) {\n        const secondMatch = match[1];\n        const wIndex = parseInt(secondMatch, 10);\n        const examine = !isNaN(wIndex) && wIndex < valueCount;\n        if (examine) {\n            const varContent = variablePrefix + wIndex + variableSuffix;\n            const after = textContent.slice(match.index + varContent.length);\n            children.splice(index, 1, ...[{\n                    nn: 'text',\n                    v: wIndex\n                }]);\n            textContent = after;\n            placeholderRegex.lastIndex = 0; // Reset regex index due to split\n        }\n    }\n    textChild.tc = textContent;\n    return index;\n}\nfunction processAttributes(attributes, valueCount) {\n    const mapped = [];\n    for (const attrSet of attributes) {\n        const [key, value, isSpecial] = attrSet;\n        if (key.startsWith(variablePrefix)) {\n            const index = parseInt(key.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                mapped.push([{ tagJsVar: index }]);\n                continue;\n            }\n        }\n        if (typeof value === ImmutableTypes.string && value.startsWith(variablePrefix)) {\n            const index = parseInt(value.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                mapped.push([key, { tagJsVar: index }, isSpecial]);\n                continue;\n            }\n        }\n        mapped.push(attrSet);\n    }\n    return mapped;\n}\n","import { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nexport const safeVar = '__safeTagVar';\nexport function restorePlaceholders(elements) {\n    elements.forEach(traverseAndRestore);\n}\nconst safeReplacer = /__safeTagVar(\\d+)/g;\nfunction traverseAndRestore(element) {\n    if (element.at) {\n        element.at = element.at ? element.at.map(attr => {\n            if (attr.length === 1) {\n                return attr;\n            }\n            const [, value] = attr;\n            if (typeof value === ImmutableTypes.string && value.startsWith(safeVar)) {\n                const index = parseInt(value.replace(safeVar, ''), 10);\n                attr[1] = variablePrefix + index + variableSuffix;\n            }\n            return attr;\n        }) : [];\n    }\n    if (element.ch) {\n        const children = element.ch;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child.nn === 'text') {\n                if (typeof child.tc !== ImmutableTypes.string) {\n                    return;\n                }\n                child.tc = child.tc.replace(safeReplacer, (_match, index) => variablePrefix + index + variableSuffix);\n            }\n            traverseAndRestore(child);\n        }\n        // Remove empty children array\n        if (children.length === 0) {\n            delete element.ch;\n        }\n    }\n}\n","export function getStringsId(strings) {\n    const array = strings.map(lengthMapper);\n    array.push(strings.length);\n    return Number(array.join(''));\n}\nfunction lengthMapper(x) {\n    return x.length;\n}\n","// taggedjs-no-compile\nimport { htmlInterpolationToDomMeta } from '../interpolations/optimizers/htmlInterpolationToDomMeta.function.js';\nimport { replacePlaceholders } from '../interpolations/optimizers/replacePlaceholders.function.js';\nimport { restorePlaceholders } from '../interpolations/optimizers/restorePlaceholders.function.js';\nimport { isLastRunMatched } from './isLastRunMatched.function.js';\nimport { getStringsId } from './getStringsId.function.js';\nconst lastRuns = {};\n/** Converts strings & values into dom meta */\nexport function getDomMeta(strings, values) {\n    const stringId = getStringsId(strings);\n    const lastRun = lastRuns[stringId];\n    const matches = lastRun && isLastRunMatched(strings, values, lastRun);\n    if (matches) {\n        return lastRun.domMetaMap;\n    }\n    const domMeta = htmlInterpolationToDomMeta(strings, values);\n    const map = replacePlaceholders(domMeta, values.length);\n    // Restore any sanitized placeholders in text nodes\n    restorePlaceholders(map);\n    const template = {\n        interpolation: undefined,\n        string: undefined,\n        strings,\n        values,\n        domMetaMap: map,\n    };\n    lastRuns[stringId] = template;\n    return map;\n}\n","export function isLastRunMatched(strings, values, lastRun) {\n    if (lastRun) {\n        if (lastRun.strings.length === strings.length) {\n            const stringsMatch = lastRun.strings.every((string, index) => \n            // string.length === strings[index].length\n            string === strings[index]);\n            if (stringsMatch && lastRun.values.length === values.length) {\n                return true; // performance savings using the last time this component was rendered\n            }\n        }\n    }\n    return false;\n}\n","import { getStringTag, getDomTag } from './getDomTag.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\n/** Used as html`<div></div>` */\nexport function html(strings, ...values) {\n    const stringTag = getStringTag(strings, values);\n    const templater = getTemplaterResult(PropWatches.NONE);\n    templater.tag = stringTag;\n    stringTag.templater = templater;\n    return stringTag;\n}\nhtml.dom = function (dom, ...values) {\n    return getDomTag(dom, values);\n};\n","import { ValueTypes } from '../tag/ValueTypes.enum.js';\nimport { appElements, buildBeforeElement } from '../index.js';\nexport function registerTagElement(support, element, global, templater, app, placeholder) {\n    console.debug('🏷️ Building element into tag...', { element, app });\n    const result = buildBeforeElement(support, { added: 0, removed: 0 }, element, undefined);\n    global.oldest = support;\n    global.newest = support;\n    let setUse = templater.setUse;\n    if (templater.tagJsType !== ValueTypes.stateRender) {\n        const wrap = app;\n        const original = wrap.original;\n        setUse = original.setUse;\n        original.isApp = true;\n    }\n    ;\n    element.setUse = setUse;\n    element.ValueTypes = ValueTypes;\n    appElements.push({ element, support });\n    const newFragment = document.createDocumentFragment();\n    newFragment.appendChild(placeholder);\n    for (const domItem of result.dom) {\n        putOneDomDown(domItem, newFragment);\n    }\n    console.debug('🏷️ Element Tag DOM built ✅');\n    return newFragment;\n}\nfunction putOneDomDown(dom, newFragment) {\n    if (dom.domElement) {\n        newFragment.appendChild(dom.domElement);\n    }\n    if (dom.marker) {\n        newFragment.appendChild(dom.marker);\n    }\n}\n","import { getBaseSupport, upgradeBaseToSupport } from './createHtmlSupport.function.js';\nexport function loadNewBaseSupport(templater, subject, appElement) {\n    const global = subject.global;\n    const newSupport = getBaseSupport(templater, subject);\n    upgradeBaseToSupport(templater, newSupport, newSupport);\n    newSupport.appElement = appElement;\n    global.oldest = global.oldest || newSupport;\n    global.newest = newSupport;\n    return newSupport;\n}\n","import { tags } from '../tag/tag.utils.js';\nimport { ValueTypes } from '../tag/ValueTypes.enum.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { paint, painting } from './paint.function.js';\nimport { setUseMemory } from '../index.js';\nimport { createSupport } from '../tag/createSupport.function.js';\nimport { runAfterRender } from '../render/afterRender.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { registerTagElement } from './registerNewTagElement.function.js';\nimport { loadNewBaseSupport } from '../tag/loadNewBaseSupport.function.js';\nimport { reState } from '../state/state.utils.js';\nexport function renderTagElement(app, global, templater, templater2, element, subject, isAppFunction) {\n    const placeholder = document.createTextNode('');\n    tags.push((templater.wrapper || { original: templater }));\n    const support = runWrapper(templater, placeholder, element, subject, isAppFunction);\n    global.isApp = true;\n    if (isAppFunction) {\n        templater2.tag = support.templater.tag;\n    }\n    if (!element) {\n        throw new Error(`Cannot tagElement, element received is type ${typeof element} and not type Element`);\n    }\n    // enables hmr destroy so it can control entire app\n    ;\n    element.destroy = function () {\n        const events = global.events;\n        for (const eventName in events) {\n            const callback = events[eventName];\n            element.removeEventListener(eventName, callback);\n        }\n        global.events = {};\n        ++painting.locks;\n        const toAwait = destroySupport(support, global); // never return anything here\n        --painting.locks;\n        paint();\n        return toAwait;\n    };\n    ++painting.locks;\n    const newFragment = registerTagElement(support, element, global, templater, app, placeholder);\n    --painting.locks;\n    paint();\n    element.appendChild(newFragment);\n    return {\n        support,\n        tags,\n        ValueTypes,\n    };\n}\nexport function runWrapper(templater, placeholder, appElement, subject, isAppFunction) {\n    subject.placeholder = placeholder;\n    const global = subject.global;\n    const oldest = global.oldest;\n    const isFirstRender = global.newest === oldest;\n    const newSupport = createSupport(templater, global.newest, global.newest.appSupport, // ownerSupport.appSupport as AnySupport,\n    subject);\n    if (!isFirstRender) {\n        reState(newSupport, global.newest, // global.oldest, // global.newest,\n        setUseMemory.stateConfig, oldest.state);\n    }\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return executeStateWrap(templater, isAppFunction, newSupport, subject, appElement);\n    }\n    // Call the apps function for our tag templater\n    const wrapper = templater.wrapper;\n    const nowSupport = wrapper(newSupport, subject);\n    runAfterRender(newSupport);\n    return nowSupport;\n}\nfunction executeStateWrap(templater, isAppFunction, newSupport, subject, appElement) {\n    const result = (templater.wrapper || { original: templater });\n    if (!isAppFunction) {\n        const newSupport = loadNewBaseSupport(templater, subject, appElement);\n        runAfterRender(newSupport);\n        return newSupport;\n    }\n    executeWrap(templater, result, newSupport);\n    runAfterRender(newSupport);\n    return newSupport;\n}\n","import { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { destroySupport } from '../render/destroySupport.function.js';\nimport { PropWatches } from './index.js';\nimport { initState } from '../state/state.utils.js';\nimport { isTagComponent } from '../isInstance.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkTagValueChange, destorySupportByContextItem } from './checkTagValueChange.function.js';\nimport { renderTagElement } from '../render/renderTagElement.function.js';\nimport { loadNewBaseSupport } from './loadNewBaseSupport.function.js';\nexport const appElements = [];\n/**\n *\n * @param app taggedjs tag\n * @param element HTMLElement\n * @param props object\n * @returns\n */\nexport function tagElement(app, element, props) {\n    const appElmIndex = appElements.findIndex(appElm => appElm.element === element);\n    if (appElmIndex >= 0) {\n        const support = appElements[appElmIndex].support;\n        destroySupport(support, support.subject.global);\n        appElements.splice(appElmIndex, 1);\n        // an element already had an app on it\n        console.warn('Found and destroyed app element already rendered to element', { element });\n    }\n    // Create the app which returns [props, runOneTimeFunction]\n    let templater = (() => templater2(props));\n    templater.propWatch = PropWatches.NONE;\n    templater.tagJsType = ValueTypes.stateRender;\n    // todo: props should be an array\n    templater.props = [props];\n    templater.isApp = true;\n    // create observable the app lives on\n    const subject = getNewSubject(templater, element);\n    const global = subject.global;\n    initState(global.newest, setUseMemory.stateConfig);\n    let templater2 = app(props);\n    const isAppFunction = typeof templater2 == BasicTypes.function;\n    if (!isAppFunction) {\n        if (!isTagComponent(templater2)) {\n            templater.tag = templater2;\n            templater2 = app;\n        }\n        else {\n            global.newest.propsConfig = {\n                latest: [props],\n                castProps: [props],\n            };\n            templater.propWatch = templater2.propWatch;\n            templater.tagJsType = templater2.tagJsType;\n            templater.wrapper = templater2.wrapper;\n            templater = templater2;\n        }\n    }\n    return renderTagElement(app, global, templater, templater2, element, subject, isAppFunction);\n}\nfunction getNewSubject(templater, appElement) {\n    const subject = {\n        value: templater,\n        checkValueChange: checkTagValueChange,\n        delete: destorySupportByContextItem,\n        withinOwnerElement: false, // i am the highest owner\n        renderCount: 0,\n        global: undefined, // gets set below in getNewGlobal()\n    };\n    const global = getNewGlobal(subject);\n    global.events = {};\n    loadNewBaseSupport(templater, subject, appElement);\n    return subject;\n}\n","import { blankHandler } from \"../render/dom/attachDomElements.function.js\";\nimport { syncStatesArray } from \"../state/syncStates.function.js\";\nimport { getSupportInCycle } from \"./getSupportInCycle.function.js\";\nimport { safeRenderSupport } from \"./props/alterProp.function.js\";\n/** Used to call a function that belongs to a calling tag */\nexport function output(callback) {\n    if (!callback) {\n        return blankHandler; // output used on an argument that was not passed in\n    }\n    const support = getSupportInCycle();\n    if (!support) {\n        throw new Error('output must be used in render sync fashion');\n    }\n    return (...args) => {\n        const ownerSupport = support.ownerSupport;\n        const ownerGlobal = ownerSupport.subject.global;\n        const newestOwner = ownerGlobal.newest;\n        // sync the new states to the old before the old does any processing\n        syncStatesArray(newestOwner.states, ownerSupport.states);\n        const c = callback(...args); // call the latest callback\n        // sync the old states to the new\n        syncStatesArray(ownerSupport.states, newestOwner.states);\n        // now render the owner\n        const newestOwnerOwner = newestOwner.ownerSupport;\n        safeRenderSupport(newestOwner, newestOwnerOwner.subject.global.newest);\n        return c;\n    };\n}\n","export * from './tag/index.js';\nexport * from './state/index.js';\nexport * from './render/index.js';\nexport * from './subject/index.js';\nexport * from './interpolations/index.js';\nexport * from './errors.js';\nexport * from './isInstance.js';\nexport { states } from './state/states.function.js';\nexport * from './tag/createHtmlSupport.function.js';\nexport * from './interpolations/attributes/howToSetInputValue.function.js';\nexport * from './interpolations/attributes/ElementTargetEvent.interface.js';\nimport { renderTagOnly } from './render/renderTagOnly.function.js';\nimport { renderSupport } from './render/renderSupport.function.js';\nimport { renderWithSupport } from './render/renderWithSupport.function.js';\nimport { tagElement } from './tag/tagElement.js';\nimport { paint } from './render/paint.function.js';\nexport const hmr = {\n    tagElement, renderWithSupport, renderSupport,\n    renderTagOnly, paint,\n};\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNewGlobal","subject","renderCount","global","RouteQuery","_name","empty","ImmutableTypes","BasicTypes","ValueTypes","tag","dom","templater","tagComponent","tagArray","subscribe","signal","renderOnce","stateRender","version","Date","now","howToSetInputValue","element","name","value","push","howToSetFirstInputValue","undefined","setAttribute","removeAttribute","specialAttribute","specialName","support","counts","stagger","added","paintAfters","target","removed","destroys","focus","select","names","split","style","shift","classList","add","remove","processSpecialClass","Error","isSimpleType","string","number","boolean","isStaticTag","tagJsType","isTagComponent","tagType","isObject","function","isPromise","isFunction","then","object","isArray","Array","deepClone","maxDepth","makeDeepClone","RegExp","clone","create","getPrototypeOf","i","length","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","toString","getTime","isArrayDeepEqual","keys1","keys","keys2","includes","isObjectDeepEqual","runBeforeDestroy","providers","provider","index","children","splice","destroy$","next","destroyContext","childTags","ownerSupport","child","lastArray","delete","newest","iSubs","subscriptions","forEach","unsubscribeFrom","context","getChildTagsToSoftDestroy","tags","subs","subTags","from","unsubscribe","compareArrayItems","newLength","at","lessLength","prevContext","destroyArrayItem","result","oldKey","newValueTag","isDiff","arrayValue","runArrayItemDiff","item","destroySupport","oldest","simpleValueElm","paintCommands","processor","paintRemover","args","destroyArrayItemByGlobal","checkArrayValueChange","newValue","destroyArray","smartRemoveKids","allPromises","promises","destroyCall","lastPromise","Promise","all","painting","locks","smartRemoveByContext","destroyClones","paint","processContextDestroys","destroy","maybePromise","withinOwnerElement","elm","subGlobal","deleted","htmlDomMeta","destroyClone","marker","domElement","isLikeTags","support0","support1","templater0","templater1","tag0","tag1","domMeta0","domMeta1","isLikeDomTags","like","strings0","strings","strings1","every","values0","values","values1","valuesLengthsMatch","allVarsMatch","compareTo","isLikeValueSets","isLikeStringTags","cloneValueArray","map","cloneTagJsValue","shallowMapper","x","shallowCompareDepth","deepMapper","props","deepCompareDepth","combineLatest","subjects","output","Subject","subscribeWith","callback","valuesSeen","setValue","subscription","clones","getSubscription","subscribers","countSubject","globalSubCount$","findIndex","sub","removeSubFromArray","valSub","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","handler","methodResponse","setHandler","onSubscription","isSubject","constructor","this","orgCallback","lastValue","emit","set","bind","toPromise","res","toCallback","runtimeSub","tagJsUnsub","setTimeout","pipe","operations","setMethods","arg","static","Subjective","_value","super","defineValueOn","getBaseSupport","castedProps","baseSupport","appSupport","blocked","upgradeBaseToSupport","propsConfig","castProps","propWatch","PropWatches","IMMUTABLE","latest","SHALLOW","clonePropsBy","createHtmlSupport","buildBeforeElement","appendTo","insertBefore","destorySupportByContextItem","domMeta","thisTag","getDomMeta","loadDomMeta","attachDomElements","attachHtmlDomMeta","addOneContext","contextItem","checkValueChange","processTag","checkTagValueChange","placeholder","getFakeTemplater","processInit","processTagInit","newSupportByTemplater","processUpdateOneContext","updateSupportBy","olderSupport","newerSupport","newTemplate","tempTag","updateSupportValuesBy","len","processUpdateContext","createSupport","newSupport","depth","checkProp","alterProp","owner","keyName","already","mem","wrap","toCall","callWith","noCycle","getSupportInCycle","callbackResult","apply","run","locked","safeRenderSupport","setUseMemory","tagClosed$","callbackPropOwner","original","assign","getPropWrap","isSkipPropValue","subValue","afterCheckProp","checkArrayProp","getset","getOwnPropertyDescriptor","checkObjectProp","originalValue","newProp","isInlineHtml","renderInlineHtml","renderExistingReadyTag","getSupportWithState","component","returnArgs","firstStatesHandler","setter","config","stateConfig","states","statesIndex","reStatesHandler","oldStates","prevSupport","lastValues","_args","initState","handlers","runFirstState","statesHandler","rearray","stateArray","reState","prevState","runRestate","StateEchoBack","getStateValue","state","defaultValue","checkValue","getCallbackValue","restate","initValue","executeWrap","useSupport","originalFunction","stateless","getCastedProps","lastSupport","DEEP","preCastedProps","lastPropsConfig","lastCastProps","syncFunctionProps","processReplacementComponent","newPropsConfig","renderWithSupport","processReplaceTagResult","processFirstSubjectComponent","appendIndex","paintAppends","paintAppend","processFirstTagResult","castTextValue","checkSimpleValueChange","castedValue","oldClone","setContent","processUpdateRegularValue","deleteSimpleValue","processFirstSubjectValue","processTagArray","paintBeforeText","processFirstRegularValue","domProcessContextItem","tagValueUpdateHandler","createAndProcessContextItem","document","createTextNode","paintBefore","noLast","runtimeInsertBefore","filteredLast","newRemoved","reviewArrayItem","array","previous","itemSubject","couldBeSame","reviewPreviousArrayItem","updateToDiffValue","ignoreOrDestroyed","tryUpdateToTag","before","processNowRegularValue","forceUpdateExistingValue","prepareUpdateToComponent","oldWrapper","wrapper","newWrapper","isSameTag","skipComparing","oldestSupport","swapTags","hasChanged","newTemplater","latestProps","pastCloneProps","propsChanged","hasPropChanges","hasSupportChanged","newProps","syncSupports","updateExistingTagComponent","fooCounts","valueSupport","handleStillTag","nowGlobal","updateToTag","isTag","processNewSubjectTag","getTemplaterResult","oneRenderToSupport","TagError","details","message","errorCode","ArrayNoKeyError","StateMismatchError","SyncCallbackError","checkStateMismatch","tagFunction","newStates","error","console","hint","throwStateMismatch","runAfterRender","renderTagOnly","runBeforeRender","reSupport","processRenderOnceInit","processTagComponentInit","tagCount","parentWrap","innerTagWrap","getTagWrap","setUse","tagIndex","tagUseFn","hasPropLengthsChanged","NONE","shallowPropMatch","immutablePropMatch","castedPastProps","compare","subCastedProps","subCompareProps","matched","entries","compareProps","onePropCompare","deepPropChangeCompare","onDelete","compareOriginal","pastProp","obEntries","subItem","objectItemMatches","use","route","_routeProps","app","_routeTag","deepPropWatch","immutableProps","watchProps","oneRenderFunction","renderFunction","pastValue","syncPriorPropFunction","priorProp","oldProp","updateExistingArray","hasSetter","updateExistingObject","newPropsArray","priorPropsArray","newArray","softDestroySupport","softDestroyOne","cGlobal","lastTemplater","lastTag","isLikeTag","lastDom","lastStrings","oldLength","checkTagSoftDestroy","pIndex","pLen","pcLen","moveProviders","lastOwnerSupport","wasLikeTags","inlineHtml","pop","ownGlobal","checkRenderUp","selfPropChange","nowProps","hasPropsToOwnerChanged","handleProviderChanges","tagsWithProvider","memory","cSubject","getTagsWithProvider","mapToSupport","getUpTags","supports","isComponent","continueUp","proSupports","prosWithChanges","hasChange","providersChangeCheck","renderTagUpdateArray","mapTagUpdate","noData","promiseNoData","bindSubjectCallback","subjectFunction","bindTo","eventHandlerSupport","last","checkAfterCallbackPromise","renderCallbackSupport","afterTagCallback","runTagCallback","actions","processNonDynamicAttr","attrName","howToSet","isSpecial","addSupportEventListener","eventName","appElement","replaceEventName","eventReg","events","listener","event","originalStopPropagation","stopPropagation","bubbleEvent","addEventListener","stopped","defaultPrevented","parentNode","processAttributeFunction","newAttrValue","fun","isSpecialAttr","startsWith","specialAction","isSpecialAction","emptyCounts","processUpdateAttrContext","isNameOnly","attrValue","isNoDisplayValue","processNameOnlyAttrValue","updateNameOnlyAttrValue","processAttributeEmit","processAttribute","nameVar","getTagJsVar","isAttr","valueVar","processTagCallbackFun","processDynamicNameValueAttribute","processAttributeSubjectValue","callbackFun","special","attrPart","tagJsVar","attachDynamicDom","nodes","node","v","isNaN","newNode","nn","attachDomText","attachDomElement","ch","createElement","attr","textNode","tc","paintAppendText","content","text","textContent","removeChild","relative","appendChild","someDiv","innerHTML","textElm","syncStatesArray","onto","syncStates","got","syncFromState","syncOntoState","oldSyncStates","stateFrom","stateTo","intoStates","statesFrom","fromValue","oldValues","getIndex","stateFromTarget","oldGetCallback","newSetCallback","_","setupSubscribe","observable","appendMarker","onValue","hasEmitted","syncRun","valueChangeHandler","newComponent","newestSupport","setupSubscribeCallbackProcessor","deleteSubscribe","checkSubscribeFrom","processSubscribe","Observable","processSubscribeWith","withDefault","processSignal","initialValue","Signal","Set","unsub","ValueSubject","ValueSubjective","willCallback","utils","willPromise","willSubscribe","watch","currentValues","setupWatch","defaultFinally","init","final","pastResult","previousValues","defineOnMethod","getWatch","attachTo","setup","oldWatch","firstSupport","oldState","method","nowSupport","setTo","newestState","letProp","propStates2","passes","passedOn","nowValues","passed","_x","direction","getBlankDiffMemory","stateDiff","newWatch","oldestState","constructMethod","stateDiffMemory","oldStateCount","instance","cm","inject","ownerProviders","find","msg","warn","syncError","createTrigger","finally","callbackStateUpdate","callbackMaker","onInit","onDestroy","processDomTagInit","tagFakeTemplater","variablePrefix","variableSuffix","getStringTag","html","getDomTag","fragFindAny","ondoubleclick","regexAttr","regexTagOrg","parseHTML","valuePositions","elements","stack","currentElement","valueIndex","position","regexTag","replace","removeCommentRegX","match","preprocessTagsInComments","tagMatch","exec","fullMatch","tagName","attrString","isClosingTag","isSelfClosing","endsWith","slice","trim","textVarMatches","splitByTagVar","pushTextTo","attributes","attrMatch","notEmpty","noValue","lowerName","toLowerCase","fixedName","cleanEventName","valueName","search","attrSet","pushTo","postprocessTagsInComments","inputString","filter","notEmptyStringMapper","part","fragReplacer","safeVar","htmlInterpolationToPlaceholders","results","fragment","diff","balanceArrayByArrays","addPlaceholders","santizeFragment","placeholderRegex","replacePlaceholders","valueCount","currentTail","loopTail","attrs","processAttributes","innerLoopTail","examineChild","textChild","secondMatch","wIndex","parseInt","varContent","after","lastIndex","mapped","safeReplacer","traverseAndRestore","_match","lengthMapper","lastRuns","stringId","Number","join","getStringsId","lastRun","matches","isLastRunMatched","domMetaMap","htmlInterpolationToDomMeta","template","interpolation","stringTag","putOneDomDown","newFragment","loadNewBaseSupport","renderTagElement","templater2","isAppFunction","isFirstRender","executeStateWrap","runWrapper","isApp","removeEventListener","toAwait","debug","appElements","createDocumentFragment","domItem","registerTagElement","tagElement","appElmIndex","appElm","getNewSubject","newestOwner","c","hmr"],"sourceRoot":""}