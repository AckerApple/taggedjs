{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://taggedjs/webpack/bootstrap","webpack://taggedjs/webpack/runtime/define property getters","webpack://taggedjs/webpack/runtime/hasOwnProperty shorthand","webpack://taggedjs/./ts/tag/update/getNewGlobal.function.ts","webpack://taggedjs/./ts/tag/tag.types.ts","webpack://taggedjs/./ts/tag/ValueTypes.enum.ts","webpack://taggedjs/./ts/isInstance.ts","webpack://taggedjs/./ts/subject/combineLatest.function.ts","webpack://taggedjs/./ts/subject/subject.utils.ts","webpack://taggedjs/./ts/subject/Subject.class.ts","webpack://taggedjs/./ts/subject/ValueSubject.ts","webpack://taggedjs/./ts/subject/will.functions.ts","webpack://taggedjs/./ts/state/stateHandlers.ts","webpack://taggedjs/./ts/state/state.function.ts","webpack://taggedjs/./ts/state/states.utils.ts","webpack://taggedjs/./ts/state/state.utils.ts","webpack://taggedjs/./ts/state/getStateValue.function.ts","webpack://taggedjs/./ts/state/letState.utils.ts","webpack://taggedjs/./ts/state/setUse.function.ts","webpack://taggedjs/./ts/state/syncStates.function.ts","webpack://taggedjs/./ts/state/watch.function.ts","webpack://taggedjs/./ts/state/subject.function.ts","webpack://taggedjs/./ts/state/letState.function.ts","webpack://taggedjs/./ts/state/letProp.function.ts","webpack://taggedjs/./ts/state/providers.ts","webpack://taggedjs/./ts/errors.ts","webpack://taggedjs/./ts/deepFunctions.ts","webpack://taggedjs/./ts/tag/TemplaterResult.class.ts","webpack://taggedjs/./ts/tag/tag.utils.ts","webpack://taggedjs/./ts/tag/cloneValueArray.function.ts","webpack://taggedjs/./ts/tag/Support.class.ts","webpack://taggedjs/./ts/tag/clonePropsBy.function.ts","webpack://taggedjs/./ts/alterProp.function.ts","webpack://taggedjs/./ts/tag/executeWrap.function.ts","webpack://taggedjs/./ts/tag/getTagWrap.function.ts","webpack://taggedjs/./ts/tag/key.ts","webpack://taggedjs/./ts/tag/tag.ts","webpack://taggedjs/./ts/tag/hasSupportChanged.function.ts","webpack://taggedjs/./ts/tag/paint.function.ts","webpack://taggedjs/./ts/updateBeforeTemplate.function.ts","webpack://taggedjs/./ts/interpolations/attributes/howToSetInputValue.function.ts","webpack://taggedjs/./ts/interpolations/attributes/specialAttribute.ts","webpack://taggedjs/./ts/interpolations/attributes/elementInitCheck.ts","webpack://taggedjs/./ts/state/handleProviderChanges.function.ts","webpack://taggedjs/./ts/interpolations/attributes/getUpTags.function.ts","webpack://taggedjs/./ts/tag/render/renderSupport.function.ts","webpack://taggedjs/./ts/state/providersChangeCheck.function.ts","webpack://taggedjs/./ts/interpolations/attributes/renderTagArray.function.ts","webpack://taggedjs/./ts/interpolations/attributes/bindSubjectCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processNameValueAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/addSupportEventListener.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttributeCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/isSpecialAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttribute.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/attachDomElements.function.ts","webpack://taggedjs/./ts/tag/buildBeforeElement.function.ts","webpack://taggedjs/./ts/tag/update/processTag.function.ts","webpack://taggedjs/./ts/tag/processUpdateAttrContext.function.ts","webpack://taggedjs/./ts/tag/processUpdateContext.function.ts","webpack://taggedjs/./ts/tag/updateSupportBy.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingValue.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingTagComponent.function.ts","webpack://taggedjs/./ts/tag/update/processRegularValue.function.ts","webpack://taggedjs/./ts/tag/update/processNewValue.function.ts","webpack://taggedjs/./ts/tag/tagRunner.ts","webpack://taggedjs/./ts/tag/getChildTagsToDestroy.function.ts","webpack://taggedjs/./ts/tag/smartRemoveKids.function.ts","webpack://taggedjs/./ts/tag/elementDestroyCheck.function.ts","webpack://taggedjs/./ts/tag/destroySupport.function.ts","webpack://taggedjs/./ts/tag/update/processTagArray.ts","webpack://taggedjs/./ts/tag/isLikeTags.function.ts","webpack://taggedjs/./ts/tag/checkDestroyPrevious.function.ts","webpack://taggedjs/./ts/tag/update/oneRenderToSupport.function.ts","webpack://taggedjs/./ts/tag/render/beforeRerender.function.ts","webpack://taggedjs/./ts/tag/checkStateMismatch.function.ts","webpack://taggedjs/./ts/tag/afterRender.function.ts","webpack://taggedjs/./ts/tag/render/renderTagOnly.function.ts","webpack://taggedjs/./ts/tag/update/processNewSubjectTag.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectValue.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectComponent.function.ts","webpack://taggedjs/./ts/tag/update/processTagResult.function.ts","webpack://taggedjs/./ts/interpolations/processSubscriptionUpdate.function.ts","webpack://taggedjs/./ts/interpolations/subscribeToTemplate.function.ts","webpack://taggedjs/./ts/tag/render/softDestroySupport.function.ts","webpack://taggedjs/./ts/tag/render/renderWithSupport.function.ts","webpack://taggedjs/./ts/tag/render/renderExistingTag.function.ts","webpack://taggedjs/./ts/state/callback.function.ts","webpack://taggedjs/./ts/state/callbackStateUpdate.function.ts","webpack://taggedjs/./ts/state/callbackMaker.function.ts","webpack://taggedjs/./ts/state/onInit.ts","webpack://taggedjs/./ts/state/onDestroy.ts","webpack://taggedjs/./ts/state/states.function.ts","webpack://taggedjs/./ts/tag/getSupportInCycle.function.ts","webpack://taggedjs/./ts/tag/Tag.class.ts","webpack://taggedjs/./ts/interpolations/optimizers/htmlInterpolationToDomMeta.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/replacePlaceholders.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/restorePlaceholders.function.ts","webpack://taggedjs/./ts/tag/domMetaCollector.ts","webpack://taggedjs/./ts/tag/getStringsId.function.ts","webpack://taggedjs/./ts/tag/isLastRunMatched.function.ts","webpack://taggedjs/./ts/tag/html.ts","webpack://taggedjs/./ts/tag/tagElement.ts","webpack://taggedjs/./ts/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export function getNewGlobal(subject) {\n    ;\n    subject.renderCount = 0;\n    return subject.global = {}; // TODO: makeSupportTagGlobal\n}\n","export class RouteQuery {\n    get(_name) {\n        return 'todo';\n    }\n}\n","export const empty = '';\nexport var ImmutableTypes;\n(function (ImmutableTypes) {\n    ImmutableTypes[\"string\"] = \"string\";\n    ImmutableTypes[\"number\"] = \"number\";\n    ImmutableTypes[\"boolean\"] = \"boolean\";\n    ImmutableTypes[\"undefined\"] = \"undefined\";\n})(ImmutableTypes || (ImmutableTypes = {}));\nexport var BasicTypes;\n(function (BasicTypes) {\n    BasicTypes[\"function\"] = \"function\";\n    BasicTypes[\"date\"] = \"date\";\n    BasicTypes[\"unknown\"] = \"unknown\";\n    BasicTypes[\"object\"] = \"object\";\n})(BasicTypes || (BasicTypes = {}));\nconst version = Date.now();\n/** Used as direct memory comparisons, the strings are never compared, just the array */\nexport const ValueTypes = {\n    tag: ['html'], // html'' aka StringTag | DomTag\n    dom: ['dom'], // compiled version of html''\n    templater: ['templater'],\n    tagComponent: ['tagComponent'],\n    tagArray: ['tagArray'],\n    subject: ['subject'],\n    tagJsSubject: ['tagJsSubject'],\n    renderOnce: ['renderOnce'],\n    stateRender: ['stateRender'],\n    version,\n};\n","import { BasicTypes, ImmutableTypes, ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isSimpleType(value) {\n    switch (value) {\n        case ImmutableTypes.string:\n        case ImmutableTypes.number:\n        case ImmutableTypes.boolean:\n            return true;\n    }\n    return false;\n}\nexport function isStaticTag(value) {\n    switch (value?.tagJsType) {\n        case ValueTypes.dom:\n        case ValueTypes.tag:\n        case ValueTypes.templater:\n            return true;\n    }\n    return false;\n}\n/** passed in is expected to be a TemplaterResult */\nexport function isTagComponent(value) {\n    const tagType = value?.tagJsType;\n    return tagType === ValueTypes.tagComponent || tagType === ValueTypes.stateRender;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return isObject(subject) && typeof subject.subscribe === BasicTypes.function;\n}\nexport function isPromise(value) {\n    return value && isFunction(value.then);\n}\nexport function isFunction(value) {\n    return typeof value === BasicTypes.function;\n}\nexport function isObject(value) {\n    return typeof (value) === BasicTypes.object && value !== null;\n}\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (const item of valuesSeen) {\n                if (!item) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => {\n            return subject.subscribe(x => setValue(x, index + 1));\n        });\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject.value + 1);\n    const subscription = function () {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = function () {\n        return unsubscribe(subscription, subscribers, callback);\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\nfunction unsubscribe(subscription, subscribers, callback) {\n    removeSubFromArray(subscribers, callback); // each will be called when update comes in\n    const valSub = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(valSub.value - 1);\n    // any double unsubscribes will be ignored\n    subscription.unsubscribe = () => subscription;\n    // unsubscribe from any combined subjects\n    const subscriptions = subscription.subscriptions;\n    for (const sub of subscriptions) {\n        sub.unsubscribe();\n    }\n    return subscription;\n}\n","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    constructor(value, \n    // private? - only used by extending classes\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        // defineValueOn(this)\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this.value = value;\n        this.emit();\n    }\n    set = this.next.bind(this);\n    emit() {\n        const value = this.value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster */\n    toCallback(callback) {\n        const subscription = this.subscribe((x, _subscription) => {\n            subscription.unsubscribe();\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this.value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging}\n}\nexport class Subjective extends Subject {\n    value;\n    onSubscription;\n    _value;\n    constructor(value, \n    // private?\n    onSubscription) {\n        super(value, onSubscription);\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n}\n","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this.value, subscription);\n        return subscription;\n    }\n}\nexport class ValueSubjective extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        this._value = value;\n        defineValueOn(this); // if you extend this AND have a constructor, you must call this in your extension\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n","export function willCallback(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        });\n        callback(lastValue, utils.next);\n    });\n}\n/** .pipe( promise((x) => Promise.resolve(44)) ) */\nexport function willPromise(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        result.then(x => utils.next(x));\n    });\n}\n/** .pipe( willSubscribe((x) => new ValueSubject(44)) ) */\nexport const willSubscribe = (callback) => {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        const subscription = result.subscribe(x => {\n            subscription.unsubscribe();\n            utils.next(x);\n        });\n    });\n};\n","import { setUseMemory } from './setUse.function.js';\nimport { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nexport function runRestate() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    config.stateArray.push(restate);\n    return restate.defaultValue;\n}\nexport function runFirstState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    let initValue = defaultValue;\n    if (typeof (defaultValue) === BasicTypes.function) {\n        initValue = defaultValue();\n    }\n    // the state is actually intended to be a function\n    if (typeof (initValue) === BasicTypes.function) {\n        const original = initValue;\n        initValue = function initValueFun(...args) {\n            const result = original(...args);\n            return result;\n        };\n        initValue.original = original;\n    }\n    const push = {\n        get: function pushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return initValue;\n}\n","import { setUseMemory } from './setUse.function.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    return setUseMemory.stateConfig.handlers.handler(defaultValue);\n}\n","import { setUseMemory } from './setUse.function.js';\nimport { state } from './state.function.js';\nexport function firstStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    config.states[config.statesIndex] = setter;\n    const support = config.support;\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(state);\n}\nexport function reStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    const support = config.support;\n    const statesIndex = config.statesIndex;\n    const prevSupport = config.prevSupport;\n    const oldStates = prevSupport?.states[statesIndex];\n    const lastValues = [];\n    const regetter = (value) => {\n        lastValues.push(value);\n        return value;\n    };\n    oldStates(regetter);\n    let index = 0;\n    const resetter = (value) => {\n        // state(value) // fake call and do not care about result\n        // fake state() having been called\n        config.stateArray.push({\n            get: () => value,\n            defaultValue: value,\n        });\n        const lastValue = lastValues[index];\n        ++index;\n        return lastValue;\n    };\n    config.restates = setter;\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(resetter);\n}\n","import { runFirstState, runRestate } from './stateHandlers.js';\nimport { firstLetState, reLetState } from './letState.utils.js';\nimport { firstStatesHandler, reStatesHandler } from './states.utils.js';\nexport function initState(support, config) {\n    config.handlers.handler = runFirstState;\n    config.handlers.letHandler = firstLetState;\n    config.handlers.statesHandler = firstStatesHandler;\n    config.rearray = [];\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.support = support;\n}\nexport function reState(support, config, prevState) {\n    // set previous state memory\n    config.rearray = prevState;\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.handlers.handler = runRestate;\n    config.handlers.letHandler = reLetState;\n    config.handlers.statesHandler = reStatesHandler;\n    config.support = support;\n}\nexport class StateEchoBack {\n}\n// sends a fake value and then sets back to received value\nexport function getCallbackValue(callback) {\n    const oldState = callback(StateEchoBack); // get value and set to undefined\n    const [value] = oldState;\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n","import { getCallbackValue } from './state.utils.js';\n/*\nconst badLetState = 'letState function incorrectly used. Second item in array is not setting expected value.\\n\\n' +\n'For \"let\" state use `let name = state(default)(x => [name, name = x])`\\n\\n' +\n'For \"const\" state use `const name = state(default)()`\\n\\n' +\n'Problem state:\\n'\n*/\nexport function getStateValue(state) {\n    const callback = state.callback;\n    // state()\n    if (!callback) {\n        return state.defaultValue;\n    }\n    // letState()\n    const [value] = getCallbackValue(callback);\n    // TODO: not needed in production, needed in development\n    /*\n    const [value, checkValue] = getCallbackValue(callback)\n    if(checkValue !== StateEchoBack) {\n      const message = badLetState + (callback ? callback.toString() : JSON.stringify(state)) +'\\n'\n      console.error(message, {state, callback, value, checkValue})\n      throw new Error(message)\n    }\n    */\n    return value;\n}\n","import { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nimport { setUseMemory } from './setUse.function.js';\nexport function firstLetState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    const initValue = typeof (defaultValue) === BasicTypes.function ? defaultValue() : defaultValue;\n    const push = {\n        get: function getPushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return makeStateResult(initValue, push);\n}\nexport function reLetState() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    const oldValue = getStateValue(restate);\n    const push = {\n        get: function getLetState() {\n            return getStateValue(push);\n        },\n        defaultValue: restate.defaultValue,\n    };\n    config.stateArray.push(push);\n    return makeStateResult(oldValue, push);\n}\nfunction makeStateResult(initValue, push) {\n    return function msr(y) {\n        push.callback = y;\n        return initValue;\n    };\n}\n","import { firstLetState } from './letState.utils.js';\nimport { firstStatesHandler } from './states.utils.js';\nimport { runFirstState } from './stateHandlers.js';\nexport const setUseMemory = {\n    stateConfig: {\n        stateArray: [], // state memory on the first render\n        version: Date.now(),\n        handlers: {\n            handler: runFirstState,\n            letHandler: firstLetState,\n            statesHandler: firstStatesHandler,\n        }\n    },\n};\n","export function syncStates(stateFrom, stateTo, oldStates, statesFrom) {\n    // sync state() and letState()\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const fromValue = stateFrom[index].get();\n        const callback = stateTo[index].callback; // is it a let state?\n        if (!callback) {\n            continue;\n        }\n        callback(fromValue); // set the value\n    }\n    for (let index = statesFrom.length - 1; index >= 0; --index) {\n        const oldValues = [];\n        const oldGetCallback = (oldValue) => {\n            oldValues.push(oldValue);\n            return oldValue;\n        };\n        // trigger getting all old values\n        statesFrom[index](oldGetCallback);\n        let getIndex = 0;\n        const newSetCallback = (_) => {\n            return oldValues[getIndex++];\n        };\n        // trigger setting updated values\n        oldStates[index](newSetCallback);\n    }\n}\n","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUse.function.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered. Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before, final = defaultFinally, } = {}) => {\n    const previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (before && !before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (before && !before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const firstSupport = state(() => getSupportInCycle());\n            const subject = state(() => new ValueSubject(undefined));\n            const oldState = state(() => ({\n                stateArray: setUseMemory.stateConfig.stateArray,\n                states: setUseMemory.stateConfig.states,\n            }));\n            const method = (currentValues, callback) => {\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowSupport !== firstSupport) {\n                        const newestState = oldState.stateArray;\n                        const global = firstSupport.subject.global;\n                        const oldest = global.oldest;\n                        const oldestState = oldest.state;\n                        const newStates = oldState.states;\n                        const oldStates = oldest.states;\n                        syncStates(newestState, oldestState, newStates, oldStates);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUse.function.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(value, onSubscription) {\n    const oldestState = state(function subjectState() {\n        // return setUseMemory.stateConfig.stateArray\n        // return setUseMemory.stateConfig.support as AnySupport\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectState() {\n        const subject = new Subject(value, onSubscription).pipe(x => {\n            syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n}\nsubject._value = (value) => {\n    const oldestState = state(function subjectValue() {\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectValue() {\n        const subject = new ValueSubject(value).pipe(x => {\n            syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => ({\n        stateArray: setUseMemory.stateConfig.stateArray,\n        states: setUseMemory.stateConfig.states,\n    }));\n    const nowSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n        return x;\n    });\n}\nsubject.all = all;\n","import { setUseMemory } from './setUse.function.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function letState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.letHandler(defaultValue);\n}\n","import { letState } from './letState.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(prop) {\n    return getSetProp => {\n        let myProp = letState(prop)(getSetProp);\n        watch([prop], () => getSetProp(myProp = prop));\n        getSetProp(myProp); // always reset to my value and right await so that the old prop value never slips through\n        return myProp;\n    };\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUse.function.js';\nimport { state } from './state.function.js';\nexport const providers = {\n    create: (constructMethod) => {\n        const stateDiffMemory = state(() => ({ stateDiff: 0, provider: undefined }));\n        // mimic how many states were called the first time\n        if (stateDiffMemory.stateDiff) {\n            let x = stateDiffMemory.stateDiff;\n            while (x--) {\n                state(undefined);\n            }\n            const result = state(undefined);\n            return result;\n        }\n        const result = state(() => {\n            const stateConfig = setUseMemory.stateConfig;\n            const oldStateCount = stateConfig.stateArray.length;\n            // Providers with provider requirements just need to use providers.create() and providers.inject()\n            const instance = constructMethod.prototype ? new constructMethod() : constructMethod();\n            const support = stateConfig.support;\n            const stateDiff = stateConfig.stateArray.length - oldStateCount;\n            const provider = {\n                constructMethod,\n                instance,\n                stateDiff,\n                owner: support,\n                children: [],\n            };\n            stateDiffMemory.provider = provider;\n            const global = support.subject.global;\n            const providers = global.providers = global.providers || [];\n            providers.push(provider);\n            stateDiffMemory.stateDiff = stateDiff;\n            return instance;\n        });\n        const cm = constructMethod;\n        const compareTo = cm.compareTo = cm.toString();\n        stateDiffMemory.provider.constructMethod.compareTo = compareTo;\n        return result;\n    },\n    /**\n     * @template T\n     * @param {(new (...args: any[]) => T) | () => T} constructor\n     * @returns {T}\n     */\n    inject: (constructor) => {\n        // find once, return same every time after\n        return state(() => {\n            // const memory = setUse.memory\n            const cm = constructor;\n            const compareTo = cm.compareTo = cm.compareTo || constructor.toString();\n            const support = getSupportInCycle(); // memory.stateConfig.support as AnySupport\n            const providers = [];\n            let owner = {\n                ownerSupport: support.ownerSupport\n            };\n            while (owner.ownerSupport) {\n                const ownGlobal = owner.ownerSupport.subject.global;\n                const ownerProviders = ownGlobal.providers;\n                if (!ownerProviders) {\n                    owner = owner.ownerSupport; // cause reloop checking next parent\n                    continue;\n                }\n                const provider = ownerProviders.find(provider => {\n                    providers.push(provider);\n                    const constructorMatch = provider.constructMethod.compareTo === compareTo;\n                    if (constructorMatch) {\n                        return true;\n                    }\n                });\n                if (provider) {\n                    const global = support.subject.global;\n                    const providers = global.providers = global.providers || [];\n                    providers.push(provider);\n                    provider.children.push(support);\n                    return provider.instance;\n                }\n                owner = owner.ownerSupport; // cause reloop checking next parent\n            }\n            const msg = `Could not inject provider: ${constructor.name} ${constructor}`;\n            console.warn(`${msg}. Available providers`, providers);\n            throw new Error(msg);\n        });\n    }\n};\n","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n","import { isArray, isFunction } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nexport function deepClone(obj, maxDepth) {\n    // return makeDeepClone(obj, new WeakMap())\n    return makeDeepClone(obj, maxDepth);\n}\nfunction makeDeepClone(obj, \n// visited: WeakMap<any, any>\nmaxDepth) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== BasicTypes.object) {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    /*\n    if (visited.has(obj)) {\n      return visited.get(obj)\n    }\n    */\n    if (maxDepth < 0) {\n        return obj;\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Clone each property or element of the object or array\n    if (isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], maxDepth - 1);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                clone[key] = makeDeepClone(obj[key], maxDepth - 1);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2, maxDepth) {\n    return isDeepEqual(obj1, obj2, maxDepth);\n}\nfunction isDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    // if (visited.has(obj1)) {\n    if (maxDepth < 0) {\n        return true;\n    }\n    if (typeof obj1 === BasicTypes.object && typeof obj2 === BasicTypes.object) {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        // visited.set(obj1, 0)\n        // Check if obj1 and obj2 are both arrays\n        if (isArray(obj1) && isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, maxDepth - 1);\n        }\n        else if (isArray(obj1) || isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        // return isObjectDeepEqual(obj1, obj2, visited)\n        return isObjectDeepEqual(obj1, obj2, maxDepth - 1);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, maxDepth) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = isFunction(fn0) && isFunction(fn1);\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nexport function getTemplaterResult(propWatch, props) {\n    const templater = {\n        propWatch,\n        props,\n        tagJsType: ValueTypes.templater,\n        key: function keyTemplate(arrayValue) {\n            templater.arrayValue = arrayValue;\n            return templater;\n        }\n    };\n    return templater;\n}\n","export const tags = [];\n","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isArray } from '../isInstance.js';\nexport function cloneValueArray(values) {\n    return values.map(cloneTagJsValue);\n}\n/** clones only what is needed to compare differences later */\nexport function cloneTagJsValue(value, maxDepth) {\n    const tag = value;\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.stateRender:\n                return undefined;\n            case ValueTypes.dom:\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n        }\n    }\n    if (isArray(value)) {\n        return cloneValueArray(tag);\n    }\n    return deepClone(value, maxDepth);\n}\n","import { clonePropsBy } from './clonePropsBy.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** used only for apps, otherwise use Support */\nexport function getBaseSupport(templater, subject, castedProps) {\n    const baseSupport = {\n        templater,\n        subject,\n        castedProps,\n        state: [], // TODO: this is not needed for every type of tag\n        states: [], // TODO: this is not needed for every type of tag\n        appSupport: undefined,\n    };\n    baseSupport.appSupport = baseSupport;\n    const global = subject.global;\n    global.blocked = [];\n    global.destroy$ = new Subject();\n    const props = templater.props; // natural props\n    if (props) {\n        baseSupport.propsConfig = clonePropsBy(baseSupport, props, castedProps);\n    }\n    return baseSupport;\n}\nexport function getSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = getBaseSupport(templater, subject, castedProps);\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\nexport function getHtmlSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nimport { cloneTagJsValue } from './cloneValueArray.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { PropWatches } from './tag.js';\nexport function clonePropsBy(support, props, castProps) {\n    const templater = support.templater;\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return support.propsConfig = {\n                latest: props,\n                castProps,\n            };\n        case PropWatches.SHALLOW:\n            return support.propsConfig = {\n                latest: props.map(x => cloneTagJsValue(x, shallowCompareDepth)),\n                castProps,\n            };\n    }\n    return support.propsConfig = {\n        latest: props.map(props => cloneTagJsValue(props, deepCompareDepth)),\n        castProps,\n    };\n}\n","import { isInlineHtml, renderInlineHtml } from './tag/render/renderSupport.function.js';\nimport { renderExistingReadyTag } from './tag/render/renderExistingTag.function.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nimport { deepCompareDepth } from './tag/hasSupportChanged.function.js';\nimport { isArray, isStaticTag } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nimport { setUseMemory } from './state/index.js';\nexport function castProps(props, newSupport, depth) {\n    return props.map(prop => alterProp(prop, newSupport.ownerSupport, newSupport, depth));\n}\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, newSupport, depth) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, newSupport, depth);\n}\nexport function checkProp(value, ownerSupport, newSupport, depth) {\n    if (!value) {\n        return value;\n    }\n    if (value.tagJsType) {\n        return value;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        return getPropWrap(value, ownerSupport);\n    }\n    if (depth === deepCompareDepth) {\n        return value;\n    }\n    const skip = isSkipPropValue(value);\n    if (skip) {\n        return value; // no children to crawl through\n    }\n    if (isArray(value)) {\n        return checkArrayProp(value, newSupport, ownerSupport, depth);\n    }\n    return checkObjectProp(value, newSupport, ownerSupport, depth);\n}\nfunction checkArrayProp(value, newSupport, ownerSupport, depth) {\n    for (let index = value.length - 1; index >= 0; --index) {\n        const subValue = value[index];\n        value[index] = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        if (typeof (subValue) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, index, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction checkObjectProp(value, newSupport, ownerSupport, depth) {\n    const keys = Object.keys(value);\n    for (const name of keys) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        const newSubValue = value[name];\n        if (newSubValue === result) {\n            continue;\n        }\n        const getset = Object.getOwnPropertyDescriptor(value, name);\n        const hasSetter = getset?.get || getset?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n        if (typeof (result) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, name, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction afterCheckProp(depth, index, originalValue, newProp, newSupport) {\n    // restore object to have original function on destroy\n    if (depth > 0) {\n        const global = newSupport.subject.global;\n        newProp[index].subscription = global.destroy$.toCallback(function alterCheckProcessor() {\n            newProp[index] = originalValue;\n        });\n    }\n}\nexport function getPropWrap(value, ownerSupport) {\n    const already = value.mem;\n    // already previously converted by a parent?\n    if (already) {\n        return value;\n    }\n    const wrap = function wrapRunner(...args) {\n        return wrap.toCall(...args);\n    }; // what gets called can switch over parent state changes\n    wrap.original = value;\n    wrap.mem = value;\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = function toCallRunner(...args) {\n        return callbackPropOwner(wrap.mem, args, ownerSupport);\n    };\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport) {\n    const global = ownerSupport.subject.global;\n    const newest = global?.newest || ownerSupport;\n    const supportInCycle = getSupportInCycle();\n    const noCycle = supportInCycle === undefined;\n    const callbackResult = toCall(...callWith);\n    const run = function propCallbackProcessor() {\n        const global = newest.subject.global;\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            const allMatched = global.locked === true;\n            if (allMatched) {\n                return callbackResult; // owner did not change\n            }\n        }\n        safeRenderSupport(newest, ownerSupport);\n        return callbackResult;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUseMemory.tagClosed$.toCallback(run);\n    return callbackResult;\n}\nexport function isSkipPropValue(value) {\n    return typeof (value) !== BasicTypes.object || !value || value.tagJsType;\n}\nexport function safeRenderSupport(newest, ownerSupport) {\n    const subject = newest.subject;\n    const isInline = isInlineHtml(newest.templater);\n    if (isInline) {\n        const result = renderInlineHtml(ownerSupport, newest);\n        // TODO: below maybe never true\n        /*\n        const global = subject.global as TagGlobal\n        if(global) {\n          delete global.locked\n        }\n        */\n        return result;\n    }\n    const global = subject.global;\n    global.locked = true;\n    renderExistingReadyTag(global.newest, newest, ownerSupport, subject);\n    delete global.locked;\n}\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { setUseMemory } from '../state/setUse.function.js';\nexport function executeWrap(templater, result, useSupport, castedProps) {\n    const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n    const stateless = templater.tagJsType === ValueTypes.stateRender;\n    let tag;\n    if (stateless) {\n        tag = templater();\n    }\n    else {\n        tag = originalFunction(...castedProps);\n        // CALL ORIGINAL COMPONENT FUNCTION\n        if (typeof (tag) === BasicTypes.function) {\n            tag = tag();\n        }\n    }\n    tag.templater = templater;\n    templater.tag = tag;\n    const nowState = setUseMemory.stateConfig.stateArray;\n    useSupport.state = nowState;\n    return useSupport;\n}\n","import { getSupport } from './Support.class.js';\nimport { castProps } from '../alterProp.function.js';\nimport { syncFunctionProps } from './update/updateExistingTagComponent.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { PropWatches } from './tag.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    // this function gets called by taggedjs\n    const wrapper = function tagFunWrap(newSupport, subject, lastSupport // subject.global.newest\n    ) {\n        // wrap any prop functions that are passed in\n        const castedProps = getCastedProps(templater, newSupport, lastSupport);\n        const ownerSupport = newSupport.ownerSupport;\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject, castedProps);\n        return executeWrap(templater, result, useSupport, castedProps);\n    };\n    return wrapper;\n}\nexport function getCastedProps(templater, newSupport, lastSupport) {\n    const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n    const props = templater.props;\n    const propsConfig = newSupport.propsConfig;\n    // When defined, this must be an update where my new props have already been made for me\n    let preCastedProps = propsConfig.castProps;\n    const lastPropsConfig = lastSupport?.propsConfig;\n    const lastCastProps = lastPropsConfig?.castProps;\n    if (lastCastProps) {\n        propsConfig.castProps = lastCastProps;\n        preCastedProps = syncFunctionProps(newSupport, lastSupport, lastSupport.ownerSupport, props, maxDepth);\n    }\n    const castedProps = preCastedProps || castProps(props, newSupport, 0);\n    return castedProps;\n}\n","/** Used to give unique value to an array of tag content. Should not be an object */\nexport function key(arrayValue) {\n    return {\n        set html(newValue) {\n            newValue.arrayValue = arrayValue;\n        }\n    };\n}\n","// taggedjs-no-compile\nimport { setUseMemory } from '../state/index.js';\nimport { getTemplaterResult } from './TemplaterResult.class.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { key } from './key.js';\nlet tagCount = 0;\nexport var PropWatches;\n(function (PropWatches) {\n    PropWatches[\"DEEP\"] = \"deep\";\n    PropWatches[\"SHALLOW\"] = \"shallow\";\n    PropWatches[\"NONE\"] = \"none\";\n    PropWatches[\"IMMUTABLE\"] = \"immutable\";\n})(PropWatches || (PropWatches = {}));\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent, propWatch = PropWatches.SHALLOW) {\n    /** function developer triggers */\n    const parentWrap = function tagWrapper(...props) {\n        const templater = getTemplaterResult(propWatch, props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        innerTagWrap.original = tagComponent;\n        /*\n            if(!innerTagWrap.parentWrap) {\n              innerTagWrap.parentWrap = parentWrap as TagWrapper<unknown>\n            }\n        */\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }; // we override the function provided and pretend original is what's returned\n    const tag = tagComponent;\n    parentWrap.original = tagComponent;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUseMemory;\n    tag.ValueTypes = ValueTypes;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\ntag.renderOnce = renderOnceFn;\nfunction renderOnceFn() {\n    throw new Error('Do not call tag.renderOnce as a function but instead set it as: `(props) => tag.renderOnce = () => html`` `');\n}\n/** Used to create variable scoping when calling a function that lives within a prop container function */\nfunction tagUseFn() {\n    throw new Error('Do not call tag.use as a function but instead set it as: `(props) => tag.use = (use) => html`` `');\n}\n/** deprecated */\n;\ntag.state = tagUseFn;\ntag.use = tagUseFn;\ntag.route = routeFn;\nfunction routeFn(_routeProps) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n}\n;\ntag.key = key;\ntag.app = function (_routeTag) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\ntag.deepPropWatch = tag;\ntag.immutableProps = function immutableProps(tagComponent) {\n    return tag(tagComponent, PropWatches.IMMUTABLE);\n};\ntag.watchProps = function watchProps(tagComponent) {\n    return tag(tagComponent, PropWatches.SHALLOW);\n};\n/* BELOW: Cast functions into setters with no getters */\nObject.defineProperty(tag, 'renderOnce', {\n    set(oneRenderFunction) {\n        oneRenderFunction.tagJsType = ValueTypes.renderOnce;\n    },\n});\n// TODO: deprecate this\nObject.defineProperty(tag, 'state', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\nObject.defineProperty(tag, 'use', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\n","import { deepEqual } from '../deepFunctions.js';\nimport { isArray } from '../isInstance.js';\nimport { hasPropLengthsChanged } from './render/renderSupport.function.js';\nimport { PropWatches } from './tag.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function hasSupportChanged(lastSupport, newTemplater) {\n    const latestProps = newTemplater.props;\n    const propsConfig = lastSupport.propsConfig;\n    const pastCloneProps = propsConfig.latest;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps, lastSupport.templater.propWatch);\n    return propsChanged;\n}\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nfunction hasPropChanges(props, // natural props\npastCloneProps, // previously cloned props\npropWatch) {\n    const hasLenChanged = hasPropLengthsChanged(props, pastCloneProps);\n    if (hasLenChanged) {\n        return 11;\n    }\n    switch (propWatch) {\n        case PropWatches.NONE:\n            return 1; // always render\n        case PropWatches.SHALLOW: // determining equal is same as immutable, its the previous cloning step thats different\n            return shallowPropMatch(props, pastCloneProps);\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(props, pastCloneProps);\n    }\n    return deepPropChangeCompare(props, pastCloneProps);\n}\nfunction deepPropChangeCompare(props, pastCloneProps) {\n    // DEEP watch\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    castedProps = [...props];\n    castedPastProps = [...(pastCloneProps || [])];\n    const allFunctionsMatch = castedProps.every((value, index) => onePropCompare(value, index, castedProps, castedPastProps));\n    if (!allFunctionsMatch) {\n        return 7; // a change has been detected by function comparisons\n    }\n    return false;\n}\nexport function immutablePropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (prop !== pastProp) {\n            return 2;\n        }\n    }\n    return false; // false means has not changed\n}\nexport function shallowPropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (isArray(prop) && isArray(pastProp)) {\n            if (prop === pastProp) {\n                continue;\n            }\n            return 3.0; // not equal array\n        }\n        if (typeof (prop) === BasicTypes.function && typeof (pastProp) === BasicTypes.function) {\n            continue; // considered good\n        }\n        if (typeof (prop) === BasicTypes.object) {\n            if (typeof (pastCloneProps) === BasicTypes.object) {\n                const obEntries = Object.entries(prop);\n                for (const subItem of obEntries) {\n                    const result = objectItemMatches(subItem, pastProp);\n                    if (!result) {\n                        return 3.1;\n                    }\n                }\n            }\n            continue; // all sub objects matched\n        }\n        if (prop === pastProp) {\n            continue; // matched good\n        }\n        return 3.3; // not equal\n    }\n    return false; // false means has not changed\n}\nfunction onePropCompare(value, index, castedProps, castedPastProps) {\n    const compare = castedPastProps[index];\n    if (typeof (value) === BasicTypes.object) {\n        const subCastedProps = { ...value };\n        const subCompareProps = { ...compare || {} };\n        const matched = Object.entries(subCastedProps).every(([key, value]) => compareProps(value, subCompareProps[key], () => {\n            delete subCastedProps[key]; // its a function and not needed to be compared\n            delete subCompareProps[key]; // its a function and not needed to be compared\n        }));\n        return matched;\n    }\n    return compareProps(value, compare, () => {\n        castedProps.splice(index, 1);\n        castedPastProps.splice(index, 1);\n    });\n}\nexport const shallowCompareDepth = 3;\nexport const deepCompareDepth = 10;\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(typeof (value) === BasicTypes.function)) {\n        return deepEqual(value, compare, deepCompareDepth) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(typeof (compareFn) === BasicTypes.function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 5; // both are function the same\n    }\n    onDelete();\n    return 6;\n}\nfunction objectItemMatches([name, value], pastProp) {\n    const pastValue = pastProp[name];\n    if (typeof (value) === BasicTypes.function && typeof (pastValue) === BasicTypes.function) {\n        return true;\n    }\n    return pastValue === value;\n}\n","export let paintRemoves = [];\nexport let paintContent = [];\nexport let setContent = [];\nexport let paintAppends = [];\nexport let paintInsertBefores = [];\nexport let paintAfters = [];\nexport const painting = {\n    locks: 0\n};\nexport function paint() {\n    if (painting.locks > 0) {\n        return;\n    }\n    ++painting.locks;\n    for (const toRemove of paintRemoves) {\n        const parentNode = toRemove.parentNode;\n        parentNode.removeChild(toRemove);\n    }\n    for (const content of paintContent) {\n        content();\n    }\n    for (const [text, textNode] of setContent) {\n        textNode.textContent = text;\n    }\n    for (const now of paintAppends) {\n        now.relative.appendChild(now.element);\n    }\n    for (const { element, relative } of paintInsertBefores) {\n        relative.parentNode.insertBefore(element, relative);\n    }\n    for (const now of paintAfters) {\n        now();\n    }\n    paintRemoves = [];\n    paintContent = [];\n    paintAppends = [];\n    paintInsertBefores = [];\n    paintAfters = [];\n    setContent = [];\n    --painting.locks;\n}\n","import { paintInsertBefores } from './tag/paint.function.js';\nimport { empty } from './tag/ValueTypes.enum.js';\n// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const textNode = document.createTextNode(value); // never innerHTML\n    paintInsertBefores.push({\n        element: textNode,\n        relative: lastFirstChild,\n    });\n    return textNode;\n}\nexport function castTextValue(value) {\n    switch (value) {\n        case undefined:\n        case false:\n        case null:\n            return empty;\n    }\n    return value;\n}\n","import { paintContent } from \"../../tag/paint.function.js\";\nexport function howToSetInputValue(element, name, value) {\n    paintContent.push(() => {\n        if (value === undefined || value === false || value === null) {\n            element.removeAttribute(name);\n            return;\n        }\n        element.setAttribute(name, value);\n    });\n}\n","import { paintAfters, paintContent } from \"../../tag/paint.function.js\";\nimport { elementInitCheck } from \"./elementInitCheck.js\";\nexport function specialAttribute(name, value, element, specialName) {\n    switch (specialName) {\n        case 'oninit':\n            paintAfters.push(() => elementInitCheck(element, { added: 0, removed: 0 }));\n            return;\n        case 'autofocus':\n            paintAfters.push(() => element.focus());\n            return;\n        case 'autoselect':\n            paintAfters.push(() => element.select());\n            return;\n        case 'style': {\n            const names = name.split('.');\n            // names.shift() // remove 'style'\n            paintContent.push(() => element.style[names[1]] = value); // attribute changes should come first\n            return;\n        }\n        case 'class':\n            processSpecialClass(name, value, element);\n            return;\n    }\n    throw new Error(`Invalid special attribute of ${specialName}. ${name}`);\n}\nfunction processSpecialClass(name, value, element) {\n    const names = name.split('.');\n    names.shift(); // remove class\n    // truthy\n    if (value) {\n        for (const name of names) {\n            paintContent.push(() => element.classList.add(name));\n        }\n        return;\n    }\n    // falsy\n    for (const name of names) {\n        paintContent.push(() => element.classList.remove(name));\n    }\n}\n","export function elementInitCheck(nextSibling, counts) {\n    const onInitDoubleWrap = nextSibling.oninit;\n    if (!onInitDoubleWrap) {\n        return counts.added;\n    }\n    const onInitWrap = onInitDoubleWrap.tagFunction;\n    if (!onInitWrap) {\n        return counts.added;\n    }\n    const onInit = onInitWrap.tagFunction;\n    if (!onInit) {\n        return counts.added;\n    }\n    const event = { target: nextSibling, stagger: counts.added };\n    onInit(event);\n    return ++counts.added;\n}\n","export function handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    return tagsWithProvider;\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(support, provider, memory = []) {\n    const subject = support.subject;\n    memory.push({\n        support,\n        renderCount: subject.renderCount,\n        provider,\n    });\n    const childTags = provider.children;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const child = childTags[index];\n        const cSubject = child.subject;\n        memory.push({\n            support: child,\n            renderCount: cSubject.renderCount,\n            provider,\n        });\n    }\n    return memory;\n}\n","import { isTagComponent } from \"../../isInstance.js\";\nimport { providersChangeCheck } from \"../../state/providersChangeCheck.function.js\";\nimport { checkRenderUp, isInlineHtml } from \"../../tag/render/renderSupport.function.js\";\nimport { ValueTypes } from \"../../tag/ValueTypes.enum.js\";\nexport function getUpTags(support, supports = []) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        supports.push(support);\n        return supports;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return getUpTags(ownerSupport, supports);\n    }\n    const newSupport = support; // global.newest as AnySupport\n    const isComponent = isTagComponent(newSupport.templater);\n    const tagJsType = support.templater.tagJsType;\n    const canContinueUp = ownerSupport && tagJsType !== ValueTypes.stateRender;\n    const continueUp = canContinueUp && (!isComponent || checkRenderUp(ownerSupport, newSupport.templater, newSupport));\n    const proSupports = providersChangeCheck(newSupport);\n    supports.push(...proSupports);\n    if (continueUp) {\n        getUpTags(ownerSupport, supports);\n        if (isComponent) {\n            supports.push(newSupport);\n        }\n        return supports; // more to keep going up, do not push this child for review\n    }\n    supports.push(newSupport);\n    return supports;\n}\n","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingReadyTag } from './renderExistingTag.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { PropWatches } from '../index.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from '../hasSupportChanged.function.js';\nexport function isInlineHtml(templater) {\n    return ValueTypes.templater === templater.tagJsType;\n}\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderSupport(support) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        global.blocked.push(support);\n        return support;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return renderInlineHtml(ownerSupport, support);\n    }\n    global.locked = true;\n    const subject = support.subject;\n    if (global.blocked.length) {\n        support = global.blocked.pop();\n        global.blocked = [];\n    }\n    delete global.locked;\n    const tag = renderExistingReadyTag(global.newest, support, ownerSupport, subject);\n    return tag;\n}\nexport function renderInlineHtml(ownerSupport, support) {\n    const ownGlobal = ownerSupport.subject.global;\n    if (!ownGlobal || ownGlobal.deleted === true) {\n        return support;\n    }\n    // ??? new change\n    const newest = ownGlobal.newest || ownerSupport;\n    const result = renderSupport(newest);\n    return result;\n}\nexport function checkRenderUp(ownerSupport, templater, support) {\n    const selfPropChange = hasPropsToOwnerChanged(templater, support);\n    // render owner up first and that will cause me to re-render\n    if (ownerSupport && selfPropChange) {\n        return true;\n    }\n    return false;\n}\nfunction hasPropsToOwnerChanged(templater, support) {\n    const nowProps = templater.props;\n    const propsConfig = support.propsConfig;\n    const latestProps = propsConfig.latest;\n    const compareLen = hasPropLengthsChanged(nowProps, latestProps);\n    if (compareLen) {\n        return true;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(nowProps, latestProps);\n        case PropWatches.SHALLOW:\n            return shallowPropMatch(nowProps, latestProps);\n    }\n    return !deepEqual(nowProps, latestProps, deepCompareDepth);\n}\nexport function hasPropLengthsChanged(nowProps, latestProps) {\n    const nowLen = nowProps.length;\n    const latestLen = latestProps.length;\n    /*\n    const noLength = nowProps && nowLen === 0 && latestLen === 0\n  \n    if(noLength) {\n      return false\n    }\n    */\n    return nowLen !== latestLen;\n}\n","import { handleProviderChanges } from './handleProviderChanges.function.js';\nexport function providersChangeCheck(support) {\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (!providers) {\n        return [];\n    }\n    const prosWithChanges = [];\n    // reset clones\n    for (const provider of providers) {\n        const owner = provider.owner;\n        const hasChange = handleProviderChanges(owner, provider);\n        prosWithChanges.push(...hasChange.map(x => x.support));\n    }\n    return prosWithChanges;\n}\n","import { paint, painting } from '../../tag/paint.function.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nexport function renderTagUpdateArray(supports) {\n    ++painting.locks;\n    supports.forEach(mapTagUpdate);\n    --painting.locks;\n    paint();\n}\nfunction mapTagUpdate(support) {\n    const global = support.subject.global;\n    if (!global) {\n        return; // while rendering a parent, a child may have been deleted (pinbowl)\n    }\n    // renderSupport(support)\n    renderSupport(global.newest);\n}\n","// taggedjs-no-compile\n/** File largely responsible for reacting to element events, such as onclick */\nimport { isPromise, isTagComponent } from '../../isInstance.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nimport { getUpTags } from './getUpTags.function.js';\nimport { renderTagUpdateArray } from './renderTagArray.function.js';\nconst noData = 'no-data-ever';\nconst promiseNoData = 'promise-no-data-ever';\nexport function bindSubjectCallback(value, support) {\n    const global = support.subject.global;\n    // MAIN EVENT CALLBACK PROCESSOR\n    const subjectFunction = function (element, args) {\n        if (global.deleted === true) {\n            return;\n        }\n        // const newest = global.newest as AnySupport // || subjectFunction.support\n        return runTagCallback(subjectFunction.tagFunction, subjectFunction.support, // newest\n        element, args);\n    };\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    subjectFunction.support = support;\n    return subjectFunction;\n}\nexport function runTagCallback(value, support, bindTo, args) {\n    // get actual component owner not just the html`` support\n    let component = support;\n    while (component.ownerSupport && !isTagComponent(component.templater)) {\n        component = component.ownerSupport;\n    }\n    const global = component.subject.global; // tag.subject.global as TagGlobal\n    global.locked = true; // prevent another render from re-rendering this tag\n    // ACTUAL CALLBACK TO ORIGINAL FUNCTION\n    const callbackResult = value.apply(bindTo, args);\n    return afterTagCallback(callbackResult, component);\n}\nexport function afterTagCallback(callbackResult, eventHandlerSupport) {\n    const global = eventHandlerSupport.subject.global; // tag.subject.global as SupportTagGlobal\n    delete global.locked;\n    return renderCallbackSupport(eventHandlerSupport, callbackResult, global);\n}\nfunction renderCallbackSupport(last, callbackResult, global) {\n    const tagsToUpdate = getUpTags(last);\n    renderTagUpdateArray(tagsToUpdate);\n    return checkAfterCallbackPromise(callbackResult, last, global);\n}\nexport function checkAfterCallbackPromise(callbackResult, last, global) {\n    if (isPromise(callbackResult)) {\n        const global0 = last.subject.global;\n        global0.locked = true;\n        return callbackResult.then(() => {\n            if (global.deleted === true) {\n                return promiseNoData; // tag was deleted during event processing\n            }\n            const global1 = last.subject.global;\n            delete global1.locked;\n            const tagsToUpdate = getUpTags(last);\n            renderTagUpdateArray(tagsToUpdate);\n            return promiseNoData;\n        });\n    }\n    return noData;\n}\nexport function runBlocked(tag) {\n    const global = tag.subject.global;\n    const blocked = global.blocked;\n    for (const block of blocked) {\n        const lastResult = renderSupport(block);\n        global.newest = lastResult;\n    }\n    global.blocked = [];\n    return global.newest;\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { processTagCallbackFun } from './processAttribute.function.js';\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nexport function processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, isSpecial) {\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    if (typeof (value) === BasicTypes.function) {\n        return processTagCallbackFun(contextItem, value, support, attrName, element);\n    }\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    contextItem.isSpecial = isSpecial;\n    return processNonDynamicAttr(attrName, value, element, howToSet, isSpecial);\n}\nexport function processNonDynamicAttr(attrName, value, element, howToSet, isSpecial) {\n    if (isSpecial) {\n        return specialAttribute(attrName, value, element, isSpecial);\n    }\n    howToSet(element, attrName, value);\n}\n","export function addSupportEventListener(support, eventName, element, callback) {\n    const elm = support.appElement;\n    // cast events that do not bubble up into ones that do\n    if (eventName === 'blur') {\n        eventName = 'focusout';\n    }\n    const replaceEventName = '_' + eventName;\n    // const replaceEventName = eventName\n    const global = support.subject.global;\n    const eventReg = global.events;\n    if (!eventReg[eventName]) {\n        const listener = function eventCallback(event) {\n            event.originalStopPropagation = event.stopPropagation;\n            bubbleEvent(event, replaceEventName, event.target);\n        };\n        eventReg[eventName] = listener;\n        elm.addEventListener(eventName, listener);\n    }\n    // attach to element but not as \"_click\" and \"_keyup\"\n    ;\n    element[replaceEventName] = callback;\n    element[eventName] = callback;\n}\nfunction bubbleEvent(event, replaceEventName, target) {\n    const callback = target[replaceEventName];\n    if (callback) {\n        let stopped = false;\n        event.stopPropagation = function () {\n            stopped = true;\n            event.originalStopPropagation.call(event);\n        };\n        callback(event);\n        if (event.defaultPrevented || stopped) {\n            return;\n        }\n    }\n    const parentNode = target.parentNode;\n    if (parentNode) {\n        bubbleEvent(event, replaceEventName, parentNode);\n    }\n}\n","import { addSupportEventListener } from './addSupportEventListener.function.js';\nexport function processAttributeFunction(element, newAttrValue, support, attrName) {\n    const fun = function (...args) {\n        return fun.tagFunction(element, args);\n    };\n    // access to original function\n    fun.tagFunction = newAttrValue;\n    fun.support = support;\n    addSupportEventListener(support.appSupport, attrName, element, // support.appSupport.appElement as Element,\n    fun);\n}\n","/** Looking for (class | style) followed by a period */\nexport function isSpecialAttr(attrName) {\n    if (attrName.startsWith('class.')) {\n        return 'class';\n    }\n    const specialAction = isSpecialAction(attrName);\n    if (specialAction) {\n        return true;\n    }\n    if (attrName.startsWith('style.')) {\n        return 'style';\n    }\n    return false;\n}\nexport function isSpecialAction(attrName) {\n    switch (attrName) {\n        case 'autoselect':\n            return 'autoselect';\n        case 'autofocus':\n            return 'autofocus';\n        case 'oninit':\n            return 'oninit';\n    }\n    return false;\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { isFunction, isObject, isSubjectInstance } from '../../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nimport { BasicTypes, ValueTypes, empty } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { processDynamicNameValueAttribute, processNonDynamicAttr } from './processNameValueAttribute.function.js';\nimport { addOneContext, checkSimpleValueChange } from '../../tag/index.js';\nimport { processAttributeFunction } from './processAttributeCallback.function.js';\nimport { isSpecialAttr } from './isSpecialAttribute.function.js';\n/** Sets attribute value, subscribes to value updates  */\nexport function processAttribute(values, attrName, element, support, howToSet, //  = howToSetInputValue\ncontext, value, isSpecial) {\n    const nameVar = getTagJsVar(attrName);\n    const isNameVar = nameVar >= 0;\n    if (isNameVar) {\n        const value = values[nameVar];\n        const contextItem = addOneContext(value, context, true);\n        contextItem.isAttr = true;\n        contextItem.element = element;\n        contextItem.howToSet = howToSet;\n        contextItem.isNameOnly = true;\n        processNameOnlyAttrValue(values, value, element, support, howToSet, context);\n        return;\n    }\n    const valueVar = getTagJsVar(value);\n    if (valueVar >= 0) {\n        const value = values[valueVar];\n        const contextItem = {\n            isAttr: true,\n            element,\n            attrName: attrName,\n            checkValueChange: checkSimpleValueChange,\n            withinOwnerElement: true,\n        };\n        context.push(contextItem);\n        const isSubject = isSubjectInstance(contextItem.value);\n        if (isSubject) {\n            return processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial);\n        }\n        processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, isSpecial);\n        contextItem.value = value;\n        return;\n    }\n    return processNonDynamicAttr(attrName, value, element, howToSet, isSpecial);\n}\nexport function updateNameOnlyAttrValue(values, attrValue, lastValue, element, ownerSupport, howToSet, context) {\n    // check to remove previous attribute(s)\n    if (lastValue) {\n        if (isNoDisplayValue(attrValue)) {\n            element.removeAttribute(lastValue);\n            return;\n        }\n        if (typeof (lastValue) === BasicTypes.object) {\n            const isObStill = typeof (attrValue) === BasicTypes.object;\n            if (isObStill) {\n                for (const name in lastValue) {\n                    // if((attrValue as any)[name]) {\n                    if (name in attrValue) {\n                        continue;\n                    }\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n            else {\n                for (const name in lastValue) {\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n        }\n    }\n    processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context);\n}\nexport function processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context) {\n    if (isNoDisplayValue(attrValue)) {\n        return;\n    }\n    // process an object of attributes ${{class:'something, checked:true}}\n    if (typeof attrValue === BasicTypes.object) {\n        for (const name in attrValue) {\n            const value = attrValue[name];\n            processAttribute(values, name, element, ownerSupport, howToSet, context, value, isSpecialAttr(name));\n        }\n        return;\n    }\n    // regular attributes\n    if (attrValue.length === 0) {\n        return; // ignore, do not set at this time\n    }\n    howToSet(element, attrValue, empty);\n}\n/** Processor for flat attributes and object attributes */\nfunction processNameValueAttributeAttrSubject(attrName, result, element, support, howToSet, isSpecial) {\n    if (isSpecial) {\n        paintContent.push(function paintContent() {\n            element.removeAttribute(attrName);\n        });\n    }\n    const contextValueSubject = result.value;\n    if (isSubjectInstance(contextValueSubject)) {\n        const callback = function processAttrCallback(newAttrValue) {\n            processAttributeEmit(newAttrValue, attrName, result, element, support, howToSet, isSpecial);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        const global = result.global;\n        const subs = global.subscriptions = global.subscriptions || [];\n        subs.push(sub);\n    }\n    processAttributeEmit(result.value, attrName, result, element, support, howToSet, isSpecial);\n    return;\n}\nexport function processAttributeEmit(newAttrValue, attrName, subject, element, support, howToSet, isSpecial) {\n    // should the function be wrapped so every time its called we re-render?\n    if (isFunction(newAttrValue)) {\n        return callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support);\n}\nexport function processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support) {\n    if (isFunction(newAttrValue)) {\n        return processAttributeFunction(element, newAttrValue, support, attrName);\n    }\n    if (isSpecial) {\n        specialAttribute(attrName, newAttrValue, element, isSpecial);\n        return;\n    }\n    switch (newAttrValue) {\n        case undefined:\n        case false:\n        case null:\n            paintContent.push(function paintContentPush() {\n                element.removeAttribute(attrName);\n            });\n            return;\n    }\n    // value is 0\n    howToSet(element, attrName, newAttrValue);\n}\nfunction callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject) {\n    const wrapper = support.templater.wrapper;\n    const tagJsType = wrapper?.tagJsType || wrapper?.original?.tagJsType;\n    const oneRender = tagJsType === ValueTypes.renderOnce;\n    if (!oneRender) {\n        return processTagCallbackFun(subject, newAttrValue, support, attrName, element);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support);\n}\nexport function processTagCallbackFun(subject, newAttrValue, support, attrName, element) {\n    const prevFun = subject.value;\n    if (prevFun && prevFun.tagFunction && prevFun.support) {\n        prevFun.tagFunction = newAttrValue;\n        prevFun.support = support;\n        return prevFun;\n    }\n    // tag has state and will need all functions wrapped to cause re-renders\n    newAttrValue = bindSubjectCallback(newAttrValue, support);\n    return processAttributeFunction(element, newAttrValue, support, attrName);\n}\nfunction getTagJsVar(attrPart) {\n    if (isObject(attrPart) && 'tagJsVar' in attrPart)\n        return attrPart.tagJsVar;\n    return -1;\n    // return (attrPart as TagVarIdNum)?.tagJsVar || -1\n}\nexport function isNoDisplayValue(attrValue) {\n    return undefined === attrValue || null === attrValue || false === attrValue;\n}\n","// taggedjs-no-compile\nimport { processFirstSubjectValue } from \"../../tag/update/processFirstSubjectValue.function.js\";\nimport { howToSetInputValue } from \"../attributes/howToSetInputValue.function.js\";\nimport { paintAppends, paintInsertBefores } from \"../../tag/paint.function.js\";\nimport { processAttribute } from \"../attributes/processAttribute.function.js\";\nimport { addOneContext } from \"../../tag/index.js\";\nimport { isSubjectInstance } from \"../../isInstance.js\";\nimport { empty } from \"../../tag/ValueTypes.enum.js\";\n// ??? TODO: This could be done within exchangeParsedForValues to reduce loops\nexport function attachDomElements(nodes, values, support, counts, // used for animation stagger computing\ncontext, depth, // used to know if dynamic variables live within parent owner tag/support\nowner, insertBefore, subs = []) {\n    const x = document.createElement('div');\n    const dom = [];\n    for (const node of nodes) {\n        const newNode = {}; // DomObjectText\n        dom.push(newNode);\n        const value = node.v;\n        const isNum = !isNaN(value);\n        if (isNum) {\n            attachDynamicDom(values, context, owner, support, subs, counts, depth);\n            continue;\n        }\n        if (node.nn === 'text') {\n            const textNode = newNode;\n            const string = textNode.tc = node.tc;\n            x.innerHTML = string;\n            const domElement = textNode.domElement = document.createTextNode(x.innerText);\n            domElement.id = `tp_${context.length}_${values.length}`;\n            if (owner) {\n                paintAppends.push({\n                    element: domElement,\n                    relative: owner,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: domElement,\n                    relative: insertBefore,\n                });\n            }\n            continue;\n        }\n        const domElement = newNode.domElement = document.createElement(node.nn);\n        // attributes that may effect style, come first\n        if (node.at) {\n            node.at.map(attr => processAttribute(values, attr[0], // name\n            domElement, support, howToSetInputValue, context, attr[1], // value\n            attr[2]));\n        }\n        if (owner) {\n            paintAppends.push({\n                element: domElement,\n                relative: owner,\n            });\n        }\n        else {\n            paintInsertBefores.push({\n                element: domElement,\n                relative: insertBefore,\n            });\n        }\n        if (node.ch) {\n            newNode.ch = attachDomElements(node.ch, values, support, counts, context, depth + 1, domElement, insertBefore, subs).dom;\n        }\n    }\n    return { subs, dom, context };\n}\nfunction attachDynamicDom(values, context, owner, support, subs, counts, // used for animation stagger computing\ndepth) {\n    const subVal = values[context.length];\n    const marker = document.createTextNode(empty);\n    marker.id = `dvp_${context.length}_${values.length}`;\n    const contextItem = addOneContext(subVal, context, depth > 0);\n    contextItem.placeholder = marker;\n    if (owner) {\n        paintAppends.push({\n            relative: owner,\n            element: marker,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: marker,\n            relative: support.subject.placeholder,\n        });\n    }\n    if (isSubjectInstance(subVal)) {\n        subs.push({\n            insertBefore: marker,\n            appendTo: owner,\n            subject: subVal,\n            support, // ownerSupport,\n            counts,\n            contextItem,\n        });\n        return;\n    }\n    const global = support.subject.global;\n    global.locked = true;\n    processFirstSubjectValue(subVal, contextItem, support, counts, `rvp_${context.length}_${values.length}`, owner);\n    const global2 = support.subject.global;\n    delete global2.locked;\n    contextItem.value = subVal;\n    return;\n}\n","import { attachDomElements } from '../interpolations/optimizers/attachDomElements.function.js';\nimport { checkSimpleValueChange } from './index.js';\nimport { getDomMeta } from './domMetaCollector.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { painting } from './paint.function.js';\n/** Function that kicks off actually putting tags down as HTML elements */\nexport function buildBeforeElement(support, element, insertBefore, options) {\n    const global = support.subject.global;\n    global.oldest = support;\n    global.newest = support;\n    ++painting.locks;\n    const result = getHtmlDomMeta(support, options, element, insertBefore);\n    global.htmlDomMeta = result.dom;\n    --painting.locks;\n    // return fragment\n    return result;\n}\nfunction getHtmlDomMeta(support, options = {\n    counts: { added: 0, removed: 0 },\n}, appendTo, insertBefore) {\n    const domMeta = loadDomMeta(support);\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    const context = [];\n    const global = support.subject.global;\n    global.context = context;\n    const result = attachDomElements(domMeta, values, support, options.counts, context, 0, appendTo, insertBefore);\n    return result;\n}\nfunction loadDomMeta(support) {\n    const templater = support.templater;\n    const thisTag = templater.tag; // || templater\n    if (thisTag.tagJsType === ValueTypes.dom) {\n        return thisTag.dom;\n    }\n    return getDomMeta(thisTag.strings, thisTag.values);\n}\nexport function addOneContext(value, context, withinOwnerElement) {\n    const contextItem = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement,\n    };\n    context.push(contextItem);\n    return contextItem;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { getHtmlSupport } from '../Support.class.js';\nimport { checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** When first time render, adds to owner childTags\n * Used for BOTH inserts & updates to values that were something else\n * Intended use only for updates\n*/\nexport function processTag(ownerSupport, // owner\nsubject) {\n    const global = subject.global;\n    const support = global.newest;\n    support.ownerSupport = ownerSupport;\n    subject.checkValueChange = checkTagValueChange;\n    const ph = subject.placeholder;\n    const result = buildBeforeElement(support, undefined, ph, { counts: { added: 0, removed: 0 } });\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        tagJsType: ValueTypes.templater,\n    };\n    return fake;\n}\n/** Create support for a tag component */\nexport function newSupportByTemplater(templater, ownerSupport, subject) {\n    const support = getHtmlSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const global = subject.global;\n    global.context = [];\n    return support;\n}\n","import { processAttributeEmit, updateNameOnlyAttrValue } from '../interpolations/attributes/processAttribute.function.js';\nexport function processUpdateAttrContext(values, value, contextItem, ownerSupport) {\n    if (contextItem.isNameOnly) {\n        updateNameOnlyAttrValue(values, value, contextItem.value, contextItem.element, // global.element as Element,\n        ownerSupport, contextItem.howToSet, []);\n        contextItem.value = value;\n        return;\n    }\n    const element = contextItem.element;\n    processAttributeEmit(value, contextItem.attrName, contextItem, element, ownerSupport, contextItem.howToSet, contextItem.isSpecial);\n    contextItem.value = value;\n    return;\n}\n","import { processUpdateAttrContext } from './processUpdateAttrContext.function.js';\nimport { updateExistingValue } from './update/updateExistingValue.function.js';\nimport { isSubjectInstance } from '../isInstance.js';\nexport function processUpdateContext(support, context) {\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    let index = 0;\n    const len = values.length;\n    while (index < len) {\n        processUpdateOneContext(values, index, context, support);\n        ++index;\n    }\n    return context;\n}\n/** returns boolean of did render */\nexport function processUpdateOneContext(values, index, context, ownerSupport) {\n    const value = values[index];\n    // is something already there?\n    const contextItem = context[index];\n    if (isSubjectInstance(value)) {\n        return; // emits on its own\n    }\n    if (contextItem.isAttr) {\n        // Do not continue if the value is just the same\n        if (value === contextItem.value) {\n            return;\n        }\n        processUpdateAttrContext(values, value, contextItem, ownerSupport);\n        contextItem.value = value;\n    }\n    // listeners will evaluate updated values to possibly update display(s)\n    updateExistingValue(contextItem, value, ownerSupport);\n    contextItem.value = value;\n}\n","import { paint, painting } from './paint.function.js';\nimport { processUpdateContext } from './processUpdateContext.function.js';\nexport function updateSupportBy(olderSupport, newerSupport) {\n    const global = olderSupport.subject.global;\n    const context = global.context;\n    updateSupportValuesBy(olderSupport, newerSupport);\n    ++painting.locks;\n    processUpdateContext(olderSupport, context);\n    --painting.locks;\n    paint();\n}\nexport function updateSupportValuesBy(olderSupport, newerSupport) {\n    const tempTag = (newerSupport.templater.tag || newerSupport.templater);\n    const values = newerSupport.templater.values || tempTag.values;\n    const tag = olderSupport.templater.tag;\n    tag.values = values;\n}\n","import { getSupport } from '../Support.class.js';\nimport { getFakeTemplater, newSupportByTemplater, processTag } from './processTag.function.js';\nimport { processNowRegularValue } from './processRegularValue.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nimport { isArray, isTagComponent } from '../../isInstance.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\n/** Used for all tag value updates. Determines if value changed since last render */\nexport function updateExistingValue(contextItem, value, ownerSupport) {\n    // Do not continue if the value is just the same\n    if (value === contextItem.value) {\n        return;\n    }\n    const wasDestroyed = contextItem.checkValueChange(value, contextItem);\n    if (wasDestroyed === -1) {\n        return; // do nothing\n    }\n    // handle already seen tag components\n    const tagJsType = value && value.tagJsType;\n    if (tagJsType) {\n        if (tagJsType === ValueTypes.renderOnce) {\n            return;\n        }\n        const isComp = isTagComponent(value);\n        if (isComp) {\n            if (!contextItem.global) {\n                getNewGlobal(contextItem);\n            }\n            prepareUpdateToComponent(value, contextItem, ownerSupport);\n            return;\n        }\n    }\n    const global = contextItem.global;\n    if (global) {\n        // its html/dom based tag\n        const support = global.newest;\n        if (support) {\n            updateContextItemBySupport(support, contextItem, value, ownerSupport);\n            return;\n        }\n    }\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater:\n                processTag(ownerSupport, contextItem);\n                return;\n            case ValueTypes.tag:\n            case ValueTypes.dom: {\n                const tag = value;\n                let templater = tag.templater;\n                if (!templater) {\n                    templater = getFakeTemplater();\n                    tag.templater = templater;\n                    templater.tag = tag;\n                }\n                const nowGlobal = (contextItem.global ? contextItem.global : getNewGlobal(contextItem));\n                nowGlobal.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n                processTag(ownerSupport, contextItem);\n                return;\n            }\n        }\n    }\n    if (isArray(value)) {\n        processTagArray(contextItem, value, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        contextItem.value = value; // do not render functions that are not explicity defined as tag html processing\n        return;\n    }\n    if (wasDestroyed) {\n        processNowRegularValue(value, contextItem);\n    }\n}\nfunction handleStillTag(lastSupport, subject, value, ownerSupport) {\n    const templater = value.templater || value;\n    const valueSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const lastSubject = lastSupport.subject;\n    const newGlobal = lastSubject.global;\n    const oldest = newGlobal.oldest;\n    updateSupportBy(oldest, valueSupport);\n}\nfunction prepareUpdateToComponent(templater, contextItem, ownerSupport) {\n    const global = contextItem.global;\n    // When last value was not a component\n    if (!global.newest) {\n        processReplacementComponent(templater, contextItem, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    const support = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    updateExistingTagComponent(ownerSupport, support, // latest value\n    contextItem);\n}\n/** Used to destro */\nfunction updateContextItemBySupport(support, contextItem, value, ownerSupport) {\n    if (typeof (value) === BasicTypes.function) {\n        return;\n    }\n    handleStillTag(support, contextItem, value, ownerSupport);\n    return;\n}\n","import { deepCompareDepth, hasSupportChanged, shallowCompareDepth } from '../hasSupportChanged.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { castProps, isSkipPropValue } from '../../alterProp.function.js';\nimport { renderSupport } from '../render/renderSupport.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { destroySupport } from '../destroySupport.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { isArray } from '../../isInstance.js';\nimport { PropWatches } from '../tag.js';\nexport function updateExistingTagComponent(ownerSupport, support, // lastest\nsubject) {\n    const global = subject.global;\n    const lastSupport = global.newest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = support.templater.wrapper;\n    let isSameTag = false;\n    const tagJsType = support.templater.tagJsType;\n    const skipComparing = ValueTypes.stateRender === tagJsType || ValueTypes.renderOnce === tagJsType;\n    if (skipComparing) {\n        isSameTag = support.templater.tagJsType === ValueTypes.renderOnce || isLikeTags(lastSupport, support);\n    }\n    else if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.original;\n        const newFunction = newWrapper.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = support.templater;\n    if (!isSameTag) {\n        swapTags(subject, templater, ownerSupport);\n        return;\n    }\n    const hasChanged = skipComparing || hasSupportChanged(lastSupport, templater);\n    // everyhing has matched, no display needs updating.\n    if (!hasChanged) {\n        const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n        syncSupports(templater, support, lastSupport, ownerSupport, maxDepth);\n        return;\n    }\n    if (global.locked) {\n        global.blocked.push(support);\n        return;\n    }\n    renderSupport(support);\n    return;\n}\nexport function syncFunctionProps(newSupport, lastSupport, ownerSupport, newPropsArray, // templater.props\nmaxDepth, depth = -1) {\n    const global = lastSupport.subject.global;\n    const newest = global.newest;\n    if (!newest) {\n        const castedProps = castProps(newPropsArray, newSupport, depth);\n        newPropsArray.push(...castedProps);\n        const propsConfig = newSupport.propsConfig;\n        propsConfig.castProps = castedProps;\n        return newPropsArray;\n    }\n    lastSupport = newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.castProps;\n    const newArray = [];\n    for (let index = 0; index < newPropsArray.length; ++index) {\n        const prop = newPropsArray[index];\n        const priorProp = priorPropsArray[index];\n        const newValue = syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, depth + 1, maxDepth);\n        newArray.push(newValue);\n    }\n    const newPropsConfig = newSupport.propsConfig;\n    newPropsConfig.castProps = newArray;\n    return newArray;\n}\nfunction syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth) {\n    if (typeof (priorProp) === BasicTypes.function) {\n        // the prop i am receiving, is already being monitored/controlled by another parent\n        if (prop.mem) {\n            priorProp.mem = prop.mem;\n            return prop;\n        }\n        priorProp.mem = prop;\n        return priorProp;\n    }\n    // prevent infinite recursion\n    if (depth === maxDepth) {\n        return prop;\n    }\n    if (isSkipPropValue(prop)) {\n        return prop; // no children to crawl through\n    }\n    if (isArray(prop)) {\n        return updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth);\n    }\n    if (priorProp === undefined) {\n        return prop;\n    }\n    return updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n}\nfunction updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    const keys = Object.keys(prop);\n    for (const name of keys) {\n        const subValue = prop[name];\n        const result = syncPriorPropFunction(priorProp[name], subValue, newSupport, ownerSupport, maxDepth, depth + 1);\n        if (prop[name] === result) {\n            continue;\n        }\n        const hasSetter = Object.getOwnPropertyDescriptor(prop, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        ;\n        prop[name] = result;\n    }\n    return prop;\n}\nfunction updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth) {\n    for (let index = prop.length - 1; index >= 0; --index) {\n        const x = prop[index];\n        prop[index] = syncPriorPropFunction(priorProp[index], x, newSupport, ownerSupport, depth + 1, index);\n    }\n    return prop;\n}\nexport function moveProviders(lastSupport, newSupport) {\n    const global = lastSupport.subject.global;\n    let pIndex = -1;\n    const providers = global.providers = global.providers || [];\n    const pLen = providers.length - 1;\n    while (pIndex++ < pLen) {\n        const provider = providers[pIndex];\n        let index = -1;\n        const pcLen = provider.children.length - 1;\n        while (index++ < pcLen) {\n            const child = provider.children[index];\n            const wasSameGlobals = global === child.subject.global;\n            if (wasSameGlobals) {\n                provider.children.splice(index, 1);\n                provider.children.push(newSupport);\n                return;\n            }\n        }\n    }\n}\nfunction syncSupports(templater, support, lastSupport, ownerSupport, maxDepth) {\n    // update function refs to use latest references\n    const newProps = templater.props;\n    const castedProps = syncFunctionProps(support, lastSupport, ownerSupport, newProps, maxDepth);\n    const propsConfig = support.propsConfig;\n    // When new support actually makes call to real function, use these pre casted props\n    propsConfig.castProps = castedProps;\n    const lastPropsConfig = lastSupport.propsConfig;\n    // update support to think it has different cloned props\n    lastPropsConfig.latest = propsConfig.latest;\n    return lastSupport; // its the same tag component  \n}\n/** Was tag, will be tag */\nfunction swapTags(subject, templater, // new tag\nownerSupport) {\n    const global = subject.global;\n    const oldestSupport = global.oldest;\n    destroySupport(oldestSupport, 0);\n    getNewGlobal(subject);\n    const newSupport = processReplacementComponent(templater, subject, ownerSupport, { added: 0, removed: 0 });\n    return newSupport;\n}\n","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { setContent } from '../paint.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nexport function processUpdateRegularValue(value, contextItem) {\n    const castedValue = castTextValue(value);\n    const oldClone = contextItem.simpleValueElm; // placeholder\n    setContent.push([castedValue, oldClone]);\n}\n/** Used during updates that were another value/tag first but now simple string */\nexport function processNowRegularValue(value, subject) {\n    subject.checkValueChange = checkSimpleValueChange;\n    const before = subject.placeholder;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    subject.simpleValueElm = updateBeforeTemplate(castedValue, before);\n}\n","import { getTemplaterResult } from '../TemplaterResult.class.js';\nimport { checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getSupport } from '../Support.class.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { PropWatches } from '../tag.js';\nexport function processNewArrayValue(value, ownerSupport, contextItem) {\n    const tagJsType = value.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater: {\n                const templater = value;\n                const tag = templater.tag;\n                processNewTag(tag, ownerSupport, contextItem);\n                break;\n            }\n            case ValueTypes.tag:\n            case ValueTypes.dom:\n                processNewTag(value, ownerSupport, contextItem);\n                break;\n        }\n    }\n    return contextItem;\n}\nfunction processNewTag(value, ownerSupport, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const tag = value;\n    let templater = tag.templater;\n    // TODO: Can this ever happen?\n    if (!templater) {\n        templater = getTemplaterResult(PropWatches.DEEP);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const global = contextItem.global = getNewGlobal(contextItem); // contextItem.global as SupportTagGlobal\n    const newest = global.newest = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    global.oldest = newest;\n    return contextItem;\n}\n","import { getSupportInCycle } from './getSupportInCycle.function.js';\nimport { setUseMemory } from '../state/index.js';\nimport { Subject } from '../subject/index.js';\n// Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering\nsetUseMemory.tagClosed$ = new Subject(undefined, function tagCloser(subscription) {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(support) {\n    // TODO: We don't need to remove from parents if parent is being destroyed\n    // remove me from my parents\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (providers) {\n        for (const provider of providers) {\n            for (let index = provider.children.length - 1; index >= 0; --index) {\n                const child = provider.children[index];\n                if (child.subject.global === global) {\n                    provider.children.splice(index, 1);\n                }\n            }\n        }\n    }\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n}\n","import { isTagComponent } from '../isInstance.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function getChildTagsToDestroy(childTags) {\n    for (const child of childTags) {\n        const lastArray = child.lastArray;\n        if (lastArray) {\n            getChildTagsToDestroy(lastArray);\n            continue;\n        }\n        const global = child.global;\n        if (!global) {\n            continue; // not a support contextItem\n        }\n        const support = global.newest;\n        const iSubs = global.subscriptions;\n        if (iSubs) {\n            iSubs.forEach(iSub => iSub.unsubscribe());\n        }\n        if (isTagComponent(support.templater)) {\n            runBeforeDestroy(support);\n        }\n        const subTags = global.context;\n        getChildTagsToDestroy(subTags);\n    }\n}\nexport function getChildTagsToSoftDestroy(childTags, tags = [], subs = []) {\n    for (const child of childTags) {\n        const global = child.global;\n        if (!global) {\n            continue;\n        }\n        const support = global.newest;\n        if (support) {\n            tags.push(support);\n            const iSubs = global.subscriptions;\n            if (iSubs) {\n                subs.push(...iSubs);\n            }\n        }\n        const subTags = global.context;\n        if (subTags) {\n            getChildTagsToSoftDestroy(subTags, tags, subs);\n        }\n    }\n    return { tags, subs };\n}\n","import { destroyArray } from './checkDestroyPrevious.function.js';\nimport { elementDestroyCheck } from './elementDestroyCheck.function.js';\nimport { paint, paintRemoves } from './paint.function.js';\nimport { isPromise } from '../isInstance.js';\n/** sets global.deleted on support and all children */\nexport function smartRemoveKids(support, promises, stagger) {\n    const startStagger = stagger;\n    const subject = support.subject;\n    const thisGlobal = subject.global;\n    const htmlDomMeta = thisGlobal.htmlDomMeta;\n    const context = thisGlobal.context;\n    thisGlobal.deleted = true;\n    for (const subject of context) {\n        if (subject.withinOwnerElement) {\n            continue; // i live within my owner variable. I will be deleted with owner\n        }\n        const lastArray = subject.lastArray;\n        if (lastArray) {\n            destroyArray(subject, lastArray);\n            continue;\n        }\n        // regular values, no placeholders\n        const elm = subject.simpleValueElm;\n        if (elm) {\n            delete subject.simpleValueElm;\n            paintRemoves.push(elm);\n            continue;\n        }\n        const global = subject.global;\n        if (global === undefined) {\n            continue; // subject\n        }\n        if (global.deleted === true) {\n            continue;\n        }\n        global.deleted = true;\n        const oldest = global.oldest;\n        if (oldest) {\n            // recurse\n            stagger = stagger + smartRemoveKids(oldest, promises, stagger);\n            continue;\n        }\n    }\n    destroyClones(htmlDomMeta, startStagger, promises);\n    return stagger;\n}\nfunction destroyClones(oldClones, stagger, promises) {\n    // check subjects that may have clones attached to them\n    const newPromises = oldClones.map(clone => {\n        const marker = clone.marker;\n        if (marker) {\n            paintRemoves.push(marker);\n        }\n        const dom = clone.domElement;\n        if (!dom) {\n            return;\n        }\n        return checkCloneRemoval(dom, stagger);\n    }).filter(x => x); // only return promises\n    if (newPromises.length) {\n        promises.push(Promise.all(newPromises));\n        return stagger;\n    }\n    return stagger;\n}\n/** Reviews elements for the presences of ondestroy */\nfunction checkCloneRemoval(clone, stagger) {\n    const customElm = clone;\n    if (customElm.ondestroy) {\n        const promise = elementDestroyCheck(customElm, stagger);\n        if (isPromise(promise)) {\n            return promise.then(() => {\n                paintRemoves.push(clone);\n                paint();\n            });\n        }\n    }\n    paintRemoves.push(clone);\n}\n","export function elementDestroyCheck(nextSibling, stagger) {\n    const onDestroyDoubleWrap = nextSibling.ondestroy;\n    const onDestroyWrap = onDestroyDoubleWrap.tagFunction;\n    if (!onDestroyWrap) {\n        return;\n    }\n    const onDestroy = onDestroyWrap.tagFunction;\n    const event = {\n        target: nextSibling,\n        stagger\n    };\n    return onDestroy(event);\n}\n","import { getChildTagsToDestroy } from './getChildTagsToDestroy.function.js';\nimport { smartRemoveKids } from './smartRemoveKids.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function destroySupport(support, stagger) {\n    const global = support.subject.global;\n    global.deleted = true;\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n    const context = global.context;\n    getChildTagsToDestroy(context);\n    if (global.destroy$) {\n        global.destroy$.next();\n        runBeforeDestroy(support);\n    }\n    // first paint\n    const promises = [];\n    stagger = smartRemoveKids(support, promises, stagger);\n    if (promises.length) {\n        return Promise.all(promises).then(() => stagger);\n    }\n    return stagger;\n}\n","// taggedjs-no-compile\nimport { paintAppends, paintInsertBefores, paintRemoves } from '../paint.function.js';\nimport { processFirstSubjectValue } from './processFirstSubjectValue.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { updateExistingValue } from './updateExistingValue.function.js';\nimport { processNewArrayValue } from './processNewValue.function.js';\nimport { destroySupport } from '../destroySupport.function.js';\nexport function processTagArray(subject, value, // arry of Tag classes\nownerSupport, counts, appendTo) {\n    if (!subject.lastArray) {\n        subject.lastArray = [];\n    }\n    const lastArray = subject.lastArray;\n    let runtimeInsertBefore = subject.placeholder;\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    const filteredLast = [];\n    for (let index = 0; index < lastArray.length; ++index) {\n        const item = lastArray[index];\n        const newRemoved = reviewLastArrayItem(item, value, index, lastArray, removed, counts);\n        if (newRemoved === 0) {\n            filteredLast.push(item);\n            continue;\n        }\n        removed = removed + newRemoved;\n        // do the same number again because it was a mid delete\n        if (newRemoved === 2) {\n            index = index - 1;\n        }\n    }\n    subject.lastArray = filteredLast;\n    // const eAppendTo = existed ? undefined : appendTo\n    const eAppendTo = appendTo; // existed ? undefined : appendTo\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const newSubject = reviewArrayItem(value, index, filteredLast, ownerSupport, runtimeInsertBefore, counts, eAppendTo);\n        runtimeInsertBefore = newSubject.placeholder;\n    }\n}\nfunction reviewArrayItem(array, index, lastArray, ownerSupport, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const item = array[index];\n    const previous = lastArray[index];\n    if (previous) {\n        return reviewPreviousArrayItem(item, previous, lastArray, ownerSupport, index, runtimeInsertBefore, counts, appendTo);\n    }\n    return processAddTagArrayItem(item, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n}\nfunction reviewPreviousArrayItem(value, itemSubject, lastArray, ownerSupport, index, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const couldBeSame = lastArray.length > index;\n    if (couldBeSame) {\n        updateExistingValue(itemSubject, value, ownerSupport);\n        return itemSubject;\n    }\n    const result = processAddTagArrayItem(value, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n    return result;\n}\nfunction processAddTagArrayItem(value, before, // used during updates\nownerSupport, counts, lastArray, appendTo) {\n    const itemSubject = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement: false, // TODO: we need to pass down depth so we can answer this truthfully\n    };\n    counts.added = counts.added + 1; // index\n    const subPlaceholder = document.createTextNode('');\n    itemSubject.placeholder = subPlaceholder;\n    if (!appendTo) {\n        paintInsertBefores.push({\n            element: subPlaceholder,\n            relative: before,\n        });\n    }\n    processNewArrayValue(value, ownerSupport, itemSubject);\n    processFirstSubjectValue(value, itemSubject, ownerSupport, counts, `rvp_${lastArray.length}_array`, appendTo);\n    // after processing\n    itemSubject.value = value;\n    // Added to previous array\n    lastArray.push(itemSubject);\n    if (appendTo) {\n        paintAppends.push({\n            element: subPlaceholder,\n            relative: appendTo,\n        });\n    }\n    return itemSubject;\n}\nexport function destroyArrayItem(item, counts) {\n    const global = item.global;\n    if (global) {\n        const support = global.oldest;\n        global.deleted = true;\n        destroySupport(support, counts.removed);\n        global.deleted = true;\n    }\n    else {\n        const element = item.simpleValueElm;\n        delete item.simpleValueElm;\n        paintRemoves.push(element);\n    }\n    ++counts.removed;\n}\nfunction reviewLastArrayItem(_subTag, // used to compare arrays\nvalue, index, lastArray, removed, counts) {\n    const newLength = value.length - 1;\n    const at = index - removed;\n    const lessLength = at < 0 || newLength < at;\n    const prev = lastArray[index];\n    if (lessLength) {\n        destroyArrayItem(prev, counts);\n        ++removed;\n        return 1;\n    }\n    if (lastArray[index].value.arrayValue !== value[index].arrayValue) {\n        destroyArrayItem(prev, counts);\n        lastArray.splice(index, 1);\n        ++removed;\n        return 2;\n    }\n    /*\n    const nowValue = getArrayValueByItem(subTag)\n    const lastArrayValue = lastArray.array[index].arrayValue\n    */\n    // check for html``.key()\n    /*\n    const keySet = 'arrayValue' in tag\n    if (!keySet) {\n      const details = {\n        array: value.map(item => item.values || item),\n        vdom: (tag as any)?.support.templater.tag.dom,\n        tag,\n        lastArray: lastArray.array[index]\n      }\n      const message = 'Found Tag in array without key value, during array update. Be sure to use \"html`...`.key(unique)\" OR import TaggedJs \"key\" \"key(unique).html = CustomTag(props)\"'\n      console.error(message, details)\n      const err = new ArrayNoKeyError(message, details)\n      throw err\n    }\n    */\n    /*\n    const destroyItem = nowValue !== lastArrayValue\n    if(destroyItem) {\n      destroyArrayItem(lastArray.array, index, counts)\n      ++removed\n      return 1\n    }\n    */\n    return 0;\n}\n/*\nfunction getArrayValueByItem(item: any) {\n  return item?.arrayValue || item\n}\n*/\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nexport function isLikeTags(support0, // new\nsupport1) {\n    const templater0 = support0.templater;\n    const templater1 = support1.templater;\n    const tag0 = templater0?.tag || support0;\n    const tag1 = templater1.tag; // || (support1 as any)\n    if (templater0?.tagJsType === ValueTypes.stateRender) {\n        return templater0.dom === templater1.dom;\n    }\n    switch (tag0.tagJsType) {\n        case ValueTypes.dom: {\n            if (tag1?.tagJsType !== ValueTypes.dom) {\n                return false; // tag0 is not even same type\n            }\n            return isLikeDomTags(tag0, tag1);\n        }\n        case ValueTypes.tag: {\n            const like = isLikeStringTags(tag0, tag1, support0, support1);\n            return like;\n        }\n    }\n    throw new Error(`unknown tagJsType of ${tag0.tagJsType}`);\n}\n// used when compiler was used\nexport function isLikeDomTags(tag0, tag1) {\n    const domMeta0 = tag0.dom;\n    const domMeta1 = tag1.dom;\n    return domMeta0 === domMeta1;\n}\n// used for no compiling\nfunction isLikeStringTags(tag0, tag1, support0, // new\nsupport1) {\n    const strings0 = tag0.strings;\n    const strings1 = tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index].length === string.length // performance, just compare length of strings // TODO: Document this\n    // strings1[index] === string // slower\n    );\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = support0.templater.values || tag0.values;\n    const values1 = support1.templater.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = typeof (value) === BasicTypes.function && typeof (compareTo) === BasicTypes.function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n","// Functions in here are attached as ContextItem.checkValueChange\nimport { processUpdateRegularValue } from './update/processRegularValue.function.js';\nimport { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { destroyArrayItem } from './update/processTagArray.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { isArray, isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { paintRemoves } from './paint.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function checkArrayValueChange(newValue, subject) {\n    // no longer an array?\n    if (!isArray(newValue)) {\n        const lastArray = subject.lastArray;\n        destroyArray(subject, lastArray);\n        return 9; // 'array'\n    }\n    return false;\n}\nexport function destroyArray(subject, lastArray) {\n    const counts = { added: 0, removed: 0 };\n    for (let index = 0; index < lastArray.length; ++index) {\n        destroyArrayItem(lastArray[index], counts);\n    }\n    delete subject.lastArray;\n}\nexport function checkSimpleValueChange(newValue, subject) {\n    const isBadValue = newValue === null || newValue === undefined;\n    if (isBadValue || !(typeof (newValue) === BasicTypes.object)) {\n        // This will cause all other values to render\n        processUpdateRegularValue(newValue, subject);\n        return -1; // no need to destroy, just update display\n    }\n    const elm = subject.simpleValueElm;\n    delete subject.simpleValueElm;\n    paintRemoves.push(elm);\n    return 6; // 'changed-simple-value'\n}\nexport function checkTagValueChange(newValue, subject) {\n    const global = subject.global;\n    const lastSupport = global?.newest;\n    const isValueTag = isStaticTag(newValue);\n    const newTag = newValue;\n    if (isValueTag) {\n        // its a different tag now\n        const likeTags = isLikeTags(newTag, lastSupport);\n        if (!likeTags) {\n            destroySupport(lastSupport, 0);\n            getNewGlobal(subject);\n            return 7; // 'tag-swap'\n        }\n        return false;\n    }\n    const isTag = newValue?.tagJsType;\n    if (isTag) {\n        return false; // its still a tag component\n    }\n    // destroy old component, value is not a component\n    destroySupport(lastSupport, 0);\n    delete subject.global;\n    subject.renderCount = 0;\n    return 8; // 'no-longer-tag'\n}\n","import { getTemplaterResult } from '../TemplaterResult.class.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nimport { PropWatches } from '../tag.js';\nexport function oneRenderToSupport(wrapper, subject, ownerSupport) {\n    const templater = getTemplaterResult(PropWatches.DEEP);\n    templater.tagJsType = wrapper.tagJsType;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    function wrap() {\n        templater.tag = tag || (wrapper());\n        return support;\n    }\n    templater.wrapper = wrap;\n    wrap.tagJsType = wrapper.tagJsType;\n    wrap.original = wrapper.original || wrapper;\n    return support;\n}\n","import { reState } from '../../state/state.utils.js';\nimport { setUseMemory } from '../../state/setUse.function.js';\nexport function beforeRerender(support, // new\nprevState) {\n    reState(support, setUseMemory.stateConfig, prevState);\n    return;\n}\n","import { StateMismatchError } from '../errors.js';\nexport function checkStateMismatch(config, support) {\n    const rearray = config.rearray;\n    if (rearray.length && rearray.length !== config.stateArray.length) {\n        throwStateMismatch(rearray, support, config);\n    }\n}\nconst hint = 'State tracking requires same number of state calls on every render. This error typically occurs when a state call is only reachable behind a condition. Also, wrapping tags that have state, with tag(), often helps when tag is only reachable by a condition.';\nfunction throwStateMismatch(rearray, support, config) {\n    const message = `Saved states between renders are inconsistent. Expected ${rearray.length} states got ${config.stateArray.length}.`;\n    const wrapper = support.templater?.wrapper;\n    let tagFunction = wrapper;\n    if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    else if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    const details = {\n        oldStates: config.stateArray,\n        newStates: config.rearray,\n        tagFunction,\n        templater: support.templater,\n    };\n    const error = new StateMismatchError(message, details);\n    console.error(hint, details);\n    throw error;\n}\n","import { setUseMemory } from '../state/setUse.function.js';\nimport { checkStateMismatch } from './checkStateMismatch.function.js';\n/** Compares states of previous renders\n * @property support - The workflow that supports a single tag\n * @property ownerSupport - undefined when \"support\" is the app element\n */\nexport function runAfterRender(support, ownerSupport) {\n    const subject = support.subject;\n    ++subject.renderCount;\n    const config = setUseMemory.stateConfig;\n    delete config.support;\n    support.state = config.stateArray;\n    setUseMemory.tagClosed$.next(ownerSupport);\n    checkStateMismatch(config, support);\n    subject.global.newest = support;\n}\n","import { getSupport } from '../Support.class.js';\nimport { beforeRerender } from './beforeRerender.function.js';\nimport { executeWrap } from '../executeWrap.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { runAfterRender } from '../afterRender.function.js';\nimport { initState } from '../../state/state.utils.js';\nimport { setUseMemory } from '../../state/setUse.function.js';\nexport function renderTagOnly(newSupport, prevSupport, // causes restate\nsubject, ownerSupport) {\n    const global = subject.global;\n    const oldRenderCount = subject.renderCount;\n    const prevState = prevSupport?.state;\n    const config = setUseMemory.stateConfig;\n    if (prevState) {\n        config.prevSupport = prevSupport;\n        beforeRerender(newSupport, prevState);\n    }\n    else {\n        initState(newSupport, config);\n    }\n    const templater = newSupport.templater;\n    let reSupport;\n    // NEW TAG CREATED HERE\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = templater; // .wrapper as any// || {original: templater} as any\n        // TODO: Not sure if useSupport could be replaced by just using \"newSupport\"\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject);\n        reSupport = executeWrap(templater, result, useSupport);\n        reSupport.states = newSupport.states;\n    }\n    else {\n        // functions wrapped in tag()\n        const wrapper = templater.wrapper;\n        // calls the function returned from getTagWrap()\n        reSupport = wrapper(newSupport, subject, prevSupport);\n        reSupport.states = newSupport.states;\n    }\n    runAfterRender(reSupport, ownerSupport);\n    // When we rendered, only 1 render should have taken place OTHERWISE rendering caused another render and that is the latest instead\n    // TODO: below most likely not needed\n    if (subject.renderCount > oldRenderCount + 1) {\n        return global.newest;\n    }\n    return reSupport;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nexport function processNewSubjectTag(templater, ownerSupport, // owner\nsubject, // could be tag via result.tag\nappendTo) {\n    subject.checkValueChange = checkTagValueChange;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    support.ownerSupport = ownerSupport;\n    const result = buildBeforeElement(support, appendTo, undefined, { counts: { added: 0, removed: 0 } });\n    for (const dom of result.dom) {\n        if (dom.marker) {\n            paintAppends.push({\n                element: dom.marker,\n                relative: appendTo, // ph.parentNode as Element,\n            });\n        }\n        if (dom.domElement) {\n            paintAppends.push({\n                element: dom.domElement,\n                relative: appendTo, // ph.parentNode as Element,\n            });\n        }\n    }\n    let index = -1;\n    const length = result.subs.length - 1;\n    //++painting.locks\n    while (index++ < length) {\n        const sub = result.subs[index];\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","import { checkArrayValueChange, checkSimpleValueChange, checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { processFirstSubjectComponent, processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { newSupportByTemplater, processTag, tagFakeTemplater } from './processTag.function.js';\nimport { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { oneRenderToSupport } from './oneRenderToSupport.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { isArray, isSubjectInstance } from '../../isInstance.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processFirstSubjectValue(value, subject, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nvalueId, appendTo) {\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            // TODO: Do we ever get in here? because dom, tag, and component are covered below\n            case ValueTypes.templater:\n                subject.checkValueChange = checkTagValueChange;\n                if (appendTo) {\n                    return processNewSubjectTag(value, ownerSupport, subject, appendTo);\n                }\n                return processTag(ownerSupport, subject);\n            case ValueTypes.dom:\n            case ValueTypes.tag: {\n                subject.checkValueChange = checkTagValueChange;\n                const tag = value;\n                let templater = tag.templater;\n                if (!templater) {\n                    templater = tagFakeTemplater(tag); // TODO: most likely a not needed performance hit\n                }\n                const global = getNewGlobal(subject);\n                if (appendTo) {\n                    return processNewSubjectTag(templater, ownerSupport, subject, appendTo);\n                }\n                global.newest = newSupportByTemplater(templater, ownerSupport, subject);\n                subject.checkValueChange = checkTagValueChange;\n                return processTag(ownerSupport, subject);\n            }\n            case ValueTypes.stateRender:\n            case ValueTypes.tagComponent: {\n                getNewGlobal(subject);\n                subject.checkValueChange = checkTagValueChange;\n                if (appendTo) {\n                    const processResult = processFirstSubjectComponent(value, subject, ownerSupport, counts, appendTo);\n                    // ++subject.global.renderCount\n                    return processResult;\n                }\n                const processResult = processReplacementComponent(value, subject, ownerSupport, counts);\n                // ++subject.global.renderCount\n                return processResult;\n            }\n            case ValueTypes.renderOnce: {\n                getNewGlobal(subject);\n                const support = oneRenderToSupport(value, subject, ownerSupport);\n                renderTagOnly(support, undefined, subject, ownerSupport);\n                const result = processNewSubjectTag(support.templater, ownerSupport, subject, appendTo);\n                // ++subject.global.renderCount\n                subject.checkValueChange = checkTagValueChange;\n                return result;\n            }\n        }\n    }\n    if (isArray(value)) {\n        processTagArray(subject, value, ownerSupport, counts, appendTo);\n        subject.checkValueChange = checkArrayValueChange;\n        return;\n    }\n    if (isSubjectInstance(value)) {\n        return; // will be subscribed to for value\n    }\n    processFirstRegularValue(value, subject, subject.placeholder, valueId);\n}\nfunction processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore, // <template end interpolate /> (will be removed)\nvalueId) {\n    const castedValue = castTextValue(value);\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    clone.id = valueId;\n    subject.simpleValueElm = clone;\n    subject.checkValueChange = checkSimpleValueChange;\n}\n","import { processFirstTagResult, processReplaceTagResult } from './processTagResult.function.js';\nimport { getSupport } from '../Support.class.js';\nimport { renderWithSupport } from '../render/renderWithSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getCastedProps } from '../getTagWrap.function.js';\nexport function processReplacementComponent(templater, subject, ownerSupport, counts) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag\n    subject, ownerSupport);\n    processReplaceTagResult(support, counts, subject);\n    return support;\n}\nexport function processFirstSubjectComponent(templater, subject, ownerSupport, counts, appendTo) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag   \n    subject, ownerSupport);\n    processFirstTagResult(support, counts, appendTo);\n    return support;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { checkTagValueChange } from '../index.js';\nexport function processReplaceTagResult(support, counts, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const ph = contextItem.placeholder;\n    const result = buildBeforeElement(support, undefined, // element for append child\n    ph, // placeholder\n    { counts });\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function processFirstTagResult(support, counts, appendTo) {\n    let appendIndex = paintAppends.length;\n    const result = buildBeforeElement(support, appendTo, undefined, { counts });\n    for (const dom of result.dom) {\n        if (dom.domElement) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.domElement,\n                relative: appendTo,\n            });\n        }\n        if (dom.marker) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.marker,\n                relative: appendTo,\n            });\n        }\n    }\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","import { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { setUseMemory } from '../state/setUse.function.js';\nimport { paint } from '../tag/paint.function.js';\nexport function processSubUpdate(value, contextItem, support) {\n    if (value === contextItem.value) {\n        return; // same value emitted\n    }\n    updateExistingValue(contextItem, value, support);\n    if (!setUseMemory.stateConfig.support) {\n        paint();\n    }\n    return;\n}\n","import { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { processSubUpdate } from './processSubscriptionUpdate.function.js';\nimport { setUseMemory } from '../state/setUse.function.js';\nimport { paint } from '../tag/paint.function.js';\nexport function subscribeToTemplate({ subject, support, counts, contextItem, appendTo, }) {\n    let onValue = function onSubValue(value) {\n        processFirstSubjectValue(value, contextItem, support, { ...counts }, `rvp_-1_${support.templater.tag?.values.length}`, syncRun ? appendTo : undefined);\n        if (!syncRun && !setUseMemory.stateConfig.support) {\n            paint();\n        }\n        // from now on just run update\n        onValue = function subscriptionUpdate(value) {\n            processSubUpdate(value, contextItem, support);\n        };\n    };\n    const callback = function subValueProcessor(value) {\n        onValue(value);\n    };\n    let syncRun = true;\n    const sub = subject.subscribe(callback);\n    contextItem.subject = subject;\n    syncRun = false;\n    const global = support.subject.global;\n    const subs = global.subscriptions = global.subscriptions || [];\n    subs.push(sub);\n}\n","import { getChildTagsToSoftDestroy } from '../getChildTagsToDestroy.function.js';\nimport { getNewGlobal } from '../update/getNewGlobal.function.js';\nimport { smartRemoveKids } from '../smartRemoveKids.function.js';\n/** used when a tag swaps content returned */\nexport function softDestroySupport(lastSupport) {\n    const global = lastSupport.subject.global;\n    const { subs, tags } = getChildTagsToSoftDestroy(global.context);\n    softDestroyOne(lastSupport);\n    for (const child of tags) {\n        softDestroyOne(child);\n    }\n    const mySubs = global.subscriptions;\n    if (mySubs) {\n        subs.forEach(sub => sub.unsubscribe());\n    }\n    getNewGlobal(lastSupport.subject);\n}\nfunction softDestroyOne(child) {\n    const subject = child.subject;\n    const global = subject.global;\n    if (global.deleted === true) {\n        return;\n    }\n    global.deleted = true; // the children are truly destroyed but the main support will be swapped\n    subject.renderCount = 0;\n    smartRemoveKids(child, [], 0);\n}\n","import { moveProviders } from '../update/updateExistingTagComponent.function.js';\nimport { softDestroySupport } from './softDestroySupport.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** TODO: This seems to support both new and updates and should be separated? */\nexport function renderWithSupport(newSupport, lastSupport, // previous\nsubject, // events & memory\nownerSupport) {\n    const lastTemplater = lastSupport?.templater;\n    const lastTag = lastTemplater?.tag;\n    const reSupport = renderTagOnly(newSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        moveProviders(lastSupport, reSupport);\n        softDestroySupport(lastSupport);\n        const global = reSupport.subject.global;\n        global.oldest = reSupport;\n        global.newest = reSupport;\n    }\n    else if (lastSupport) {\n        const tag = lastSupport.templater.tag;\n        if (tag && subject.renderCount > 0) {\n            checkTagSoftDestroy(tag, lastSupport, lastTag);\n        }\n    }\n    const lastOwnerSupport = lastSupport?.ownerSupport;\n    reSupport.ownerSupport = (ownerSupport || lastOwnerSupport);\n    return { support: reSupport, wasLikeTags: isLikeTag };\n}\nfunction checkTagSoftDestroy(tag, lastSupport, lastTag) {\n    if (tag.tagJsType === ValueTypes.dom) {\n        const lastDom = lastTag?.dom;\n        const newDom = tag.dom;\n        if (lastDom !== newDom) {\n            softDestroySupport(lastSupport);\n        }\n        return;\n    }\n    if (lastTag) {\n        const lastStrings = lastTag.strings;\n        if (lastStrings) {\n            const oldLength = lastStrings?.length;\n            const newLength = tag.strings.length;\n            if (oldLength !== newLength) {\n                softDestroySupport(lastSupport);\n            }\n        }\n    }\n}\n","import { renderWithSupport } from './renderWithSupport.function.js';\nimport { processTag } from '../update/processTag.function.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\n// TODO: This function is being called for 1st time renders WHEN renderCount === 1\nexport function renderExistingReadyTag(lastSupport, newSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const global = subject.global;\n    const { support, wasLikeTags } = renderWithSupport(newSupport, lastSupport, // renderCount <= 0 ? undefined : lastSupport\n    subject, ownerSupport);\n    if (wasLikeTags) {\n        updateSupportBy(global.oldest, support);\n        return support;\n    }\n    processTag(ownerSupport, subject);\n    return support;\n}\n","import callbackStateUpdate from './callbackStateUpdate.function.js';\nimport { setUseMemory } from './setUse.function.js';\nimport { syncError } from './callbackMaker.function.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\n/** Wrap a function that will be called back. After the wrapper and function are called, a rendering cycle will update display */\nexport function callback(callback) {\n    const support = getSupportInCycle();\n    if (!support) {\n        throw syncError;\n    }\n    return createTrigger(support, setUseMemory.stateConfig, // setUseMemory.stateConfig.stateArray\n    callback);\n}\nexport function createTrigger(support, oldState, toCallback) {\n    const oldStateArray = oldState.stateArray;\n    const oldStates = oldState.states;\n    return function trigger(...args) {\n        const callbackMaker = support.subject.renderCount > 0;\n        if (callbackMaker) {\n            return callbackStateUpdate(support, toCallback, {\n                stateArray: oldStateArray,\n                states: oldStates,\n            }, ...args);\n        }\n        // we are in sync with rendering, just run callback naturally\n        return toCallback(...args);\n    };\n}\n","// import { State } from './state.types.js'\nimport { renderSupport } from '../tag/render/renderSupport.function.js';\nimport { syncStates } from './syncStates.function.js';\nimport { isPromise } from '../isInstance.js';\nexport default function callbackStateUpdate(support, callback, oldState, // State,\n...args) {\n    const global = support.subject.global;\n    support = global.newest;\n    const state = support.state;\n    // ensure that the oldest has the latest values first\n    syncStates(state, oldState.stateArray, support.states, oldState.states);\n    // run the callback\n    const maybePromise = callback(...args);\n    // send the oldest state changes into the newest\n    syncStates(oldState.stateArray, state, oldState.states, support.states);\n    renderSupport(support);\n    if (isPromise(maybePromise)) {\n        maybePromise.finally(() => {\n            // send the oldest state changes into the newest\n            syncStates(oldState.stateArray, state, oldState.states, support.states);\n            renderSupport(support);\n        });\n    }\n    // return undefined as T\n    return maybePromise;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUse.function.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { createTrigger } from './callback.function.js';\nexport const callbackMaker = () => {\n    const support = getSupportInCycle();\n    // callback as typeof innerCallback\n    if (!support) {\n        throw syncError;\n    }\n    const oldState = setUseMemory.stateConfig; // .stateArray\n    // oldState.support = support // TODO: should not be need and already set\n    return function triggerMaker(callback) {\n        return createTrigger(support, oldState, callback);\n    };\n};\nexport const syncError = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n","import { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { state } from \"./state.function.js\";\nexport function onDestroy(callback) {\n    state(function stateDestroy() {\n        const support = getSupportInCycle();\n        const global = support.subject.global;\n        global.destroy$.toCallback(callback);\n    });\n}\n","import { setUseMemory } from './setUse.function.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function states(setter) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.statesHandler(setter);\n}\n","import { setUseMemory } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUseMemory.stateConfig.support;\n}\n","// taggedjs-no-compile\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\nexport const variablePrefix = ':tagvar';\nexport const variableSuffix = ':';\nexport function getStringTag(strings, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        tagJsType: ValueTypes.tag,\n        strings,\n        key(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: function html(strings, values) {\n            tag.children = { strings, values };\n            return tag;\n        }\n    };\n    return tag;\n}\nexport function getDomTag(dom, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        dom,\n        tagJsType: ValueTypes.dom,\n        key: function keyFun(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: {\n            dom: function dom(dom, // ObjectChildren\n            values) {\n                tag.children = { dom: dom, values };\n                return tag;\n            }\n        }\n    };\n    return tag;\n}\n","import { variablePrefix, variableSuffix } from \"../../tag/Tag.class.js\";\nimport { isSpecialAttr } from \"../attributes/isSpecialAttribute.function.js\";\nconst ondoubleclick = 'ondoubleclick';\nconst fragFindAny = /(:tagvar\\d+:)/;\nconst fragReplacer = /(^:tagvar\\d+:|:tagvar\\d+:$)/g;\nconst safeVar = '__safeTagVar';\nconst regexAttr = /([:_a-zA-Z0-9\\-.]+)\\s*(?:=\\s*\"([^\"]*)\"|=\\s*(\\S+))?/g;\nconst regexTagOrg = /<\\/?([a-zA-Z0-9-]+)((?:\\s+[a-zA-Z_:][\\w:.-]*(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+))?)+\\s*|\\s*)\\/?>/g;\nexport function htmlInterpolationToDomMeta(strings, values) {\n    htmlInterpolationToPlaceholders(strings, values);\n    // Parse the modified fragments\n    const htmlString = htmlInterpolationToPlaceholders(strings, values).join('');\n    const domMeta = parseHTML(htmlString);\n    return domMeta;\n}\nexport function htmlInterpolationToPlaceholders(strings, values) {\n    // Sanitize placeholders in the fragments\n    const sanitizedFragments = sanitizePlaceholders(strings);\n    // Add placeholders to the fragments\n    return addPlaceholders(sanitizedFragments, values);\n}\nfunction sanitizePlaceholders(fragments) {\n    return fragments.map(fragment => fragment.replace(fragReplacer, (match, index) => safeVar + index));\n}\nfunction addPlaceholders(strings, values) {\n    const results = strings.map((fragment, index) => {\n        if (index < values.length) {\n            return fragment + variablePrefix + index + variableSuffix;\n        }\n        return fragment;\n    });\n    balanceArrayByArrays(results, strings, values);\n    return results;\n}\nexport function parseHTML(html) {\n    const valuePositions = [];\n    const elements = [];\n    const stack = [];\n    let currentElement = null;\n    let valueIndex = -1;\n    let position = 0;\n    const regexTag = new RegExp(regexTagOrg, 'g');\n    html = preprocessTagsInComments(html);\n    while (position < html.length) {\n        const tagMatch = regexTag.exec(html);\n        if (!tagMatch) {\n            break;\n        }\n        const [fullMatch, tagName, attrString] = tagMatch;\n        const isClosingTag = fullMatch.startsWith('</');\n        const isSelfClosing = fullMatch.endsWith('/>');\n        if (position < tagMatch.index) {\n            const textContent = html.slice(position, tagMatch.index);\n            if (textContent.trim()) {\n                const textVarMatches = splitByTagVar(textContent);\n                textVarMatches.forEach(textContent => {\n                    if (textContent.startsWith(variablePrefix)) {\n                        textContent = variablePrefix + (++valueIndex) + variableSuffix;\n                    }\n                    pushTextTo(currentElement, elements, textContent);\n                });\n            }\n        }\n        position = tagMatch.index + fullMatch.length;\n        if (isClosingTag) {\n            currentElement = stack.pop() || null;\n            continue;\n        }\n        const attributes = [];\n        let attrMatch;\n        while ((attrMatch = regexAttr.exec(attrString)) !== null) {\n            const attrName = attrMatch[1] || attrMatch[3] || attrMatch[5];\n            const attrChoice = attrMatch[2] || attrMatch[4] || attrMatch[6];\n            let attrValue = attrChoice;\n            if (attrName === undefined) {\n                continue;\n            }\n            const notEmpty = attrMatch[2] !== '';\n            const noValue = attrValue === undefined && notEmpty;\n            const lowerName = attrName.toLowerCase();\n            const fixedName = lowerName.startsWith('on') ? cleanEventName(lowerName) : lowerName;\n            if (noValue) {\n                const standAloneVar = attrName.slice(0, variablePrefix.length) === variablePrefix;\n                if (standAloneVar) {\n                    const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                    valuePositions.push(['at', valueName]);\n                    attributes.push([valueName]); // the name itself is dynamic\n                    continue;\n                }\n                const startMatched = attrMatch[0].startsWith(attrName);\n                const standAloneAttr = startMatched && attrMatch[0].slice(attrName.length, attrMatch[0].length).search(/\\s+$/) >= 0;\n                if (standAloneAttr) {\n                    attributes.push([fixedName]);\n                    continue;\n                }\n                const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                attrValue = valueName;\n            }\n            if (!notEmpty) {\n                attrValue = attrMatch[2];\n            }\n            const attrSet = [fixedName, attrValue];\n            const isSpecial = isSpecialAttr(fixedName);\n            if (isSpecial) {\n                attrSet.push(isSpecial);\n            }\n            attributes.push(attrSet);\n        }\n        const element = {\n            nn: tagName, // nodeName\n        };\n        if (attributes.length) {\n            element.at = attributes;\n        }\n        if (currentElement) {\n            if (!currentElement.ch) {\n                currentElement.ch = [];\n            }\n            currentElement.ch.push(element);\n        }\n        else {\n            elements.push(element);\n        }\n        if (!isSelfClosing) {\n            stack.push(currentElement);\n            currentElement = element;\n        }\n    }\n    if (position < html.length) {\n        const textContent = html.slice(position);\n        if (textContent.trim()) {\n            const textVarMatches = splitByTagVar(textContent);\n            textVarMatches.forEach(textContent => {\n                if (textContent.startsWith(variablePrefix)) {\n                    ++valueIndex;\n                }\n                return pushTextTo(currentElement, elements, textContent);\n            });\n        }\n    }\n    return elements;\n}\nexport function balanceArrayByArrays(results, strings, values) {\n    const diff = values.length - strings.length;\n    if (diff > 0) {\n        for (let x = diff; x > 0; --x) {\n            results.push(variablePrefix + (strings.length + x - 1) + variableSuffix);\n        }\n    }\n}\nfunction splitByTagVar(inputString) {\n    // Split the string using the regular expression, keep delimiters in the output\n    const parts = inputString.split(fragFindAny);\n    // Filter out any empty strings from the results\n    const filteredParts = parts.filter(part => part !== '');\n    return filteredParts;\n}\nfunction pushTo(currentElement, elements, textNode) {\n    if (currentElement) {\n        if (!currentElement.ch) {\n            currentElement.ch = [];\n        }\n        currentElement.ch.push(textNode);\n    }\n    else {\n        elements.push(textNode);\n    }\n}\nfunction pushTextTo(currentElement, elements, textContent) {\n    const textNode = {\n        nn: 'text', // nodeName\n        tc: postprocessTagsInComments(textContent), // textContent\n    };\n    pushTo(currentElement, elements, textNode);\n}\nconst removeCommentRegX = new RegExp('(<!--[\\\\s\\\\S]*?-->)', 'g');\nfunction preprocessTagsInComments(html) {\n    // Use a regex to find all HTML comments\n    return html.replace(removeCommentRegX, function (match) {\n        // For each comment found, replace < and > inside it\n        return match.replace(/\\[l t\\]/g, '[l&nbsp;t]').replace(/\\[g t\\]/g, '[g&nbsp;t]').replace(/</g, '[l t]').replace(/>/g, '[g t]');\n    });\n}\nfunction postprocessTagsInComments(html) {\n    // Use a regex to find all segments that look like processed comments\n    return html.replace(/(\\[l t\\]!--[\\s\\S]*?--\\[g t\\])/g, function (match) {\n        // For each processed comment found, replace *lt* and *gt* back to < and >\n        return match.replace(/\\[l t\\]/g, '<').replace(/\\[g t\\]/g, '>').replace(/\\[l&nbsp;t\\]/g, '[l t]').replace(/\\[g&nbsp;t\\]/g, '[g t]');\n    });\n}\nfunction cleanEventName(eventName) {\n    if (eventName.startsWith('on')) {\n        const couldByDblClick = eventName.length === ondoubleclick.length && eventName === ondoubleclick;\n        if (couldByDblClick) {\n            return 'dblclick';\n        }\n        return eventName.slice(2, eventName.length);\n    }\n    return eventName;\n}\n","// taggedjs-no-compile\nimport { variableSuffix, variablePrefix } from \"../../tag/Tag.class.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nconst placeholderRegex = new RegExp(variablePrefix + '(\\\\d+)' + variableSuffix, 'g');\nconst ch = 'ch'; // short for children\nexport function replacePlaceholders(dom, valueCount, valuePositions = [], currentTail = []) {\n    const elements = dom;\n    for (let i = 0; i < elements.length; i++) {\n        const loopTail = [...currentTail, i];\n        const element = elements[i];\n        if (element.at) {\n            const attrs = element.at;\n            element.at = processAttributes(attrs, valueCount);\n        }\n        if (element.ch) {\n            const children = element.ch;\n            const innerLoopTail = [...loopTail, ch];\n            element.ch = replacePlaceholders(children, valueCount, valuePositions, innerLoopTail);\n        }\n        i = examineChild(element, valueCount, elements, i);\n    }\n    return elements;\n}\nfunction examineChild(child, valueCount, children, index) {\n    if (child.nn !== 'text') {\n        return index;\n    }\n    const textChild = child;\n    let textContent = textChild.tc;\n    if (typeof textContent !== ImmutableTypes.string) {\n        return index;\n    }\n    let match;\n    while ((match = placeholderRegex.exec(textContent)) !== null) {\n        const secondMatch = match[1];\n        const wIndex = parseInt(secondMatch, 10);\n        const examine = !isNaN(wIndex) && wIndex < valueCount;\n        if (examine) {\n            const varContent = variablePrefix + wIndex + variableSuffix;\n            const after = textContent.slice(match.index + varContent.length);\n            children.splice(index, 1, ...[{\n                    nn: 'text',\n                    v: wIndex\n                }]);\n            textContent = after;\n            placeholderRegex.lastIndex = 0; // Reset regex index due to split\n        }\n    }\n    textChild.tc = textContent;\n    return index;\n}\nfunction processAttributes(attributes, valueCount) {\n    return attributes.map(attrSet => {\n        const [key, value, isSpecial] = attrSet;\n        if (key.startsWith(variablePrefix)) {\n            const index = parseInt(key.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [{ tagJsVar: index }];\n            }\n        }\n        if (typeof value === ImmutableTypes.string && value.startsWith(variablePrefix)) {\n            const index = parseInt(value.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [key, { tagJsVar: index }, isSpecial];\n            }\n        }\n        return attrSet;\n    });\n}\n","import { variableSuffix, variablePrefix } from \"../../tag/Tag.class.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nexport const safeVar = '__safeTagVar';\nexport function restorePlaceholders(elements) {\n    elements.forEach(traverseAndRestore);\n}\nconst safeReplacer = /__safeTagVar(\\d+)/g;\nfunction traverseAndRestore(element) {\n    if (element.at) {\n        element.at = element.at ? element.at.map(attr => {\n            if (attr.length === 1) {\n                return attr;\n            }\n            const [, value] = attr;\n            if (typeof value === ImmutableTypes.string && value.startsWith(safeVar)) {\n                const index = parseInt(value.replace(safeVar, ''), 10);\n                attr[1] = variablePrefix + index + variableSuffix;\n            }\n            return attr;\n        }) : [];\n    }\n    if (element.ch) {\n        const children = element.ch;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child.nn === 'text') {\n                if (typeof child.tc !== ImmutableTypes.string) {\n                    return;\n                }\n                child.tc = child.tc.replace(safeReplacer, (_match, index) => variablePrefix + index + variableSuffix);\n            }\n            traverseAndRestore(child);\n        }\n        // Remove empty children array\n        if (children.length === 0) {\n            delete element.ch;\n        }\n    }\n}\n","// taggedjs-no-compile\nimport { htmlInterpolationToDomMeta } from '../interpolations/optimizers/htmlInterpolationToDomMeta.function.js';\nimport { replacePlaceholders } from '../interpolations/optimizers/replacePlaceholders.function.js';\nimport { restorePlaceholders } from '../interpolations/optimizers/restorePlaceholders.function.js';\nimport { isLastRunMatched } from './isLastRunMatched.function.js';\nimport { getStringsId } from './getStringsId.function.js';\nconst lastRuns = {};\n/** Converts strings & values into dom meta */\nexport function getDomMeta(strings, values) {\n    const stringId = getStringsId(strings);\n    const lastRun = lastRuns[stringId];\n    const matches = lastRun && isLastRunMatched(strings, values, lastRun);\n    if (matches) {\n        return lastRun.domMetaMap;\n    }\n    const domMeta = htmlInterpolationToDomMeta(strings, values);\n    const map = replacePlaceholders(domMeta, values.length);\n    // Restore any sanitized placeholders in text nodes\n    restorePlaceholders(map);\n    const template = {\n        interpolation: undefined,\n        string: undefined,\n        strings,\n        values,\n        domMetaMap: map,\n    };\n    lastRuns[stringId] = template;\n    return map;\n}\n","export function getStringsId(strings) {\n    const array = strings.map(x => x.length);\n    array.push(strings.length);\n    return Number(array.join(''));\n}\n","export function isLastRunMatched(strings, values, lastRun) {\n    if (lastRun) {\n        if (lastRun.strings.length === strings.length) {\n            const stringsMatch = lastRun.strings.every((string, index) => \n            // string.length === strings[index].length\n            string === strings[index]);\n            if (stringsMatch && lastRun.values.length === values.length) {\n                return true; // performance savings using the last time this component was rendered\n            }\n        }\n    }\n    return false;\n}\n","import { getStringTag, getDomTag } from './Tag.class.js';\nimport { PropWatches } from './tag.js';\nimport { getTemplaterResult } from './TemplaterResult.class.js';\nexport function html(strings, ...values) {\n    const stringTag = getStringTag(strings, values);\n    const templater = getTemplaterResult(PropWatches.NONE);\n    templater.tag = stringTag;\n    stringTag.templater = templater;\n    return stringTag;\n}\nhtml.dom = function (dom, ...values) {\n    return getDomTag(dom, values);\n};\n","import { getBaseSupport } from './Support.class.js';\nimport { subscribeToTemplate } from '../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from './buildBeforeElement.function.js';\nimport { tags } from './tag.utils.js';\nimport { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { checkTagValueChange, PropWatches } from './index.js';\nimport { setUseMemory } from '../state/setUse.function.js';\nimport { runAfterRender } from './afterRender.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { paint, painting } from './paint.function.js';\nimport { initState } from '../state/state.utils.js';\nimport { isTagComponent } from '../isInstance.js';\nimport { beforeRerender } from './render/beforeRerender.function.js';\nconst appElements = [];\n/**\n *\n * @param app taggedjs tag\n * @param element HTMLElement\n * @param props object\n * @returns\n */\nexport function tagElement(app, element, props) {\n    const appElmIndex = appElements.findIndex(appElm => appElm.element === element);\n    if (appElmIndex >= 0) {\n        destroySupport(appElements[appElmIndex].support, 0);\n        appElements.splice(appElmIndex, 1);\n        // an element already had an app on it\n        console.warn('Found and destroyed app element already rendered to element', { element });\n    }\n    // Create the app which returns [props, runOneTimeFunction]\n    let templater = (() => templater2(props));\n    templater.propWatch = PropWatches.NONE;\n    templater.tagJsType = ValueTypes.stateRender;\n    // todo: props should be an array\n    templater.props = [props];\n    templater.isApp = true;\n    // create observable the app lives on\n    const subject = getNewSubject(templater, element);\n    const global = subject.global;\n    initState(global.newest, setUseMemory.stateConfig);\n    let templater2 = app(props);\n    const isAppFunction = typeof templater2 == BasicTypes.function;\n    if (!isAppFunction) {\n        if (!isTagComponent(templater2)) {\n            templater.tag = templater2;\n            templater2 = app;\n        }\n        else {\n            global.newest.propsConfig = {\n                latest: [props],\n                castProps: [props],\n            };\n            templater.propWatch = templater2.propWatch;\n            templater.tagJsType = templater2.tagJsType;\n            templater.wrapper = templater2.wrapper;\n            templater = templater2;\n        }\n    }\n    const placeholder = document.createTextNode('');\n    tags.push((templater.wrapper || { original: templater }));\n    const support = runWrapper(templater, placeholder, element, subject, isAppFunction);\n    global.isApp = true;\n    if (isAppFunction) {\n        templater2.tag = support.templater.tag;\n    }\n    // enables hmr destroy so it can control entire app\n    ;\n    element.destroy = function () {\n        const events = global.events;\n        for (const eventName in events) {\n            const callback = events[eventName];\n            element.removeEventListener(eventName, callback);\n        }\n        global.events = {};\n        destroySupport(support, 0); // never return anything here\n        paint();\n    };\n    ++painting.locks;\n    const result = buildBeforeElement(support, element);\n    global.oldest = support;\n    global.newest = support;\n    let setUse = templater.setUse;\n    if (templater.tagJsType !== ValueTypes.stateRender) {\n        const wrap = app;\n        const original = wrap.original;\n        setUse = original.setUse;\n        original.isApp = true;\n    }\n    ;\n    element.setUse = setUse;\n    element.ValueTypes = ValueTypes;\n    appElements.push({ element, support });\n    const newFragment = document.createDocumentFragment();\n    newFragment.appendChild(placeholder);\n    for (const domItem of result.dom) {\n        putOneDomDown(domItem, newFragment);\n    }\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    --painting.locks;\n    paint();\n    element.appendChild(newFragment);\n    return {\n        support,\n        tags,\n        ValueTypes,\n    };\n}\nfunction getNewSubject(templater, appElement) {\n    const subject = {\n        value: templater,\n        checkValueChange: checkTagValueChange,\n        withinOwnerElement: false, // i am the highest owner\n        renderCount: 0,\n        global: undefined, // gets set below in getNewGlobal()\n    };\n    const global = getNewGlobal(subject);\n    global.events = {};\n    loadNewBaseSupport(templater, subject, appElement);\n    return subject;\n}\nfunction loadNewBaseSupport(templater, subject, appElement) {\n    const global = subject.global;\n    const newSupport = getBaseSupport(templater, subject);\n    newSupport.appElement = appElement;\n    global.oldest = global.oldest || newSupport;\n    global.newest = newSupport;\n    return newSupport;\n}\nexport function runWrapper(templater, placeholder, appElement, subject, isAppFunction) {\n    subject.placeholder = placeholder;\n    const global = subject.global;\n    const useSupport = global.newest;\n    const oldest = global.oldest;\n    const isFirstRender = useSupport === oldest;\n    if (!isFirstRender) {\n        beforeRerender(useSupport, oldest.state);\n    }\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = (templater.wrapper || { original: templater });\n        if (!isAppFunction) {\n            const newSupport = loadNewBaseSupport(templater, subject, appElement);\n            const config = setUseMemory.stateConfig;\n            newSupport.state = config.stateArray;\n            newSupport.states = config.states;\n            runAfterRender(newSupport);\n            return newSupport;\n        }\n        const nowSupport = executeWrap(templater, result, useSupport);\n        runAfterRender(nowSupport);\n        return nowSupport;\n    }\n    // Call the apps function for our tag templater\n    const wrapper = templater.wrapper;\n    const nowSupport = wrapper(useSupport, subject);\n    runAfterRender(nowSupport);\n    return nowSupport;\n}\nfunction putOneDomDown(dom, newFragment) {\n    if (dom.domElement) {\n        newFragment.appendChild(dom.domElement);\n    }\n    if (dom.marker) {\n        newFragment.appendChild(dom.marker);\n    }\n}\n","export * from './tag/index.js';\nexport * from './errors.js';\nexport * from './isInstance.js';\nexport * from './state/index.js';\nexport { states } from './state/states.function.js';\nexport * from './subject/index.js';\nexport * from './interpolations/index.js';\nexport * from './tag/Support.class.js';\nexport * from './interpolations/attributes/howToSetInputValue.function.js';\nexport * from './interpolations/attributes/ElementTargetEvent.interface.js';\nimport { renderTagOnly } from './tag/render/renderTagOnly.function.js';\nimport { renderSupport } from './tag/render/renderSupport.function.js';\nimport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nexport { key } from './tag/key.js';\nimport { tagElement } from './tag/tagElement.js';\nimport { paint } from './tag/paint.function.js';\nexport const hmr = {\n    tagElement, renderWithSupport, renderSupport,\n    renderTagOnly, paint,\n};\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNewGlobal","subject","renderCount","global","RouteQuery","_name","empty","ImmutableTypes","BasicTypes","ValueTypes","tag","dom","templater","tagComponent","tagArray","tagJsSubject","renderOnce","stateRender","version","Date","now","isSimpleType","value","string","number","boolean","isStaticTag","tagJsType","isTagComponent","tagType","isSubjectInstance","isObject","subscribe","function","isPromise","isFunction","then","object","isArray","Array","combineLatest","subjects","output","Subject","subscribeWith","callback","valuesSeen","values","setValue","x","index","length","item","subscription","clones","shift","subscriptions","map","getSubscription","subscribers","countSubject","globalSubCount$","next","unsubscribe","findIndex","sub","splice","removeSubFromArray","valSub","add","push","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","newValue","handler","methodResponse","setHandler","onSubscription","isSubject","constructor","this","orgCallback","lastValue","emit","set","bind","subs","toPromise","Promise","res","toCallback","_subscription","pipe","operations","setMethods","all","args","arg","static","Subjective","_value","super","defineValueOn","ValueSubject","ValueSubjective","willCallback","utils","willPromise","willSubscribe","runRestate","config","setUseMemory","stateConfig","restate","rearray","stateArray","defaultValue","runFirstState","initValue","original","getStateValue","state","handlers","firstStatesHandler","setter","states","statesIndex","support","reStatesHandler","prevSupport","oldStates","lastValues","restates","initState","letHandler","firstLetState","statesHandler","StateEchoBack","oldState","checkValue","getCallbackValue","makeStateResult","reLetState","oldValue","y","syncStates","stateFrom","stateTo","statesFrom","fromValue","oldValues","oldGetCallback","getIndex","newSetCallback","_","watch","currentValues","setupWatch","defaultFinally","init","before","final","previous","pastResult","undefined","previousValues","result","every","defineOnMethod","getWatch","attachTo","setup","oldWatch","firstSupport","getSupportInCycle","method","nowSupport","setTo","newestState","oldest","oldestState","letState","letProp","getSetProp","myProp","newWatch","providers","create","constructMethod","stateDiffMemory","stateDiff","provider","oldStateCount","instance","owner","children","cm","compareTo","toString","inject","ownerSupport","ownerProviders","find","msg","name","console","warn","Error","TagError","details","message","errorCode","ArrayNoKeyError","StateMismatchError","SyncCallbackError","deepClone","maxDepth","makeDeepClone","RegExp","clone","getPrototypeOf","i","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","getTime","isArrayDeepEqual","keys1","keys","keys2","includes","isObjectDeepEqual","getTemplaterResult","propWatch","props","arrayValue","tags","cloneValueArray","cloneTagJsValue","getBaseSupport","castedProps","baseSupport","appSupport","blocked","destroy$","propsConfig","castProps","PropWatches","IMMUTABLE","latest","SHALLOW","shallowCompareDepth","deepCompareDepth","clonePropsBy","getSupport","getHtmlSupport","newSupport","depth","checkProp","alterProp","already","mem","wrap","toCall","callWith","newest","noCycle","callbackResult","run","locked","isInline","isInlineHtml","renderInlineHtml","renderExistingReadyTag","safeRenderSupport","tagClosed$","callbackPropOwner","assign","getPropWrap","isSkipPropValue","subValue","afterCheckProp","checkArrayProp","getset","getOwnPropertyDescriptor","checkObjectProp","originalValue","newProp","executeWrap","useSupport","originalFunction","nowState","getCastedProps","lastSupport","DEEP","preCastedProps","lastPropsConfig","lastCastProps","syncFunctionProps","html","tagCount","parentWrap","innerTagWrap","getTagWrap","wrapper","setUse","tagIndex","tagUseFn","hasSupportChanged","newTemplater","propsChanged","pastCloneProps","hasLenChanged","hasPropLengthsChanged","NONE","shallowPropMatch","immutablePropMatch","castedPastProps","compare","subCastedProps","subCompareProps","matched","entries","compareProps","onePropCompare","deepPropChangeCompare","hasPropChanges","len","pastProp","obEntries","subItem","objectItemMatches","use","route","_routeProps","app","_routeTag","deepPropWatch","immutableProps","watchProps","oneRenderFunction","renderFunction","onDelete","compareOriginal","pastValue","paintRemoves","paintContent","setContent","paintAppends","paintInsertBefores","paintAfters","painting","locks","paint","toRemove","parentNode","removeChild","content","text","textNode","textContent","relative","appendChild","element","insertBefore","updateBeforeTemplate","lastFirstChild","document","createTextNode","castTextValue","howToSetInputValue","setAttribute","removeAttribute","specialAttribute","specialName","nextSibling","counts","onInitDoubleWrap","oninit","added","onInitWrap","tagFunction","onInit","target","stagger","elementInitCheck","removed","focus","select","names","split","style","classList","remove","processSpecialClass","handleProviderChanges","tagsWithProvider","memory","childTags","child","cSubject","getTagsWithProvider","getUpTags","supports","inlineHtml","isComponent","continueUp","selfPropChange","nowProps","latestProps","hasPropsToOwnerChanged","checkRenderUp","proSupports","prosWithChanges","hasChange","providersChangeCheck","renderTagUpdateArray","forEach","mapTagUpdate","noData","promiseNoData","bindSubjectCallback","subjectFunction","deleted","bindTo","component","apply","eventHandlerSupport","last","checkAfterCallbackPromise","renderCallbackSupport","afterTagCallback","runTagCallback","processNonDynamicAttr","attrName","howToSet","isSpecial","addSupportEventListener","eventName","elm","appElement","replaceEventName","eventReg","events","listener","event","originalStopPropagation","stopPropagation","bubbleEvent","addEventListener","stopped","defaultPrevented","processAttributeFunction","newAttrValue","fun","isSpecialAttr","startsWith","specialAction","isSpecialAction","processAttribute","context","nameVar","getTagJsVar","contextItem","addOneContext","isAttr","isNameOnly","processNameOnlyAttrValue","valueVar","checkValueChange","checkSimpleValueChange","withinOwnerElement","contextValueSubject","processAttributeEmit","processNameValueAttributeAttrSubject","processTagCallbackFun","processDynamicNameValueAttribute","attrValue","isNoDisplayValue","processAttributeSubjectValue","callbackFun","prevFun","attrPart","tagJsVar","attachDomElements","nodes","createElement","node","newNode","v","isNaN","attachDynamicDom","nn","tc","innerHTML","domElement","innerText","id","at","attr","ch","subVal","marker","placeholder","appendTo","processFirstSubjectValue","buildBeforeElement","options","domMeta","thisTag","getDomMeta","strings","loadDomMeta","getHtmlDomMeta","htmlDomMeta","processTag","checkTagValueChange","subscribeToTemplate","getFakeTemplater","newSupportByTemplater","processUpdateAttrContext","updateNameOnlyAttrValue","processUpdateOneContext","updateExistingValue","updateSupportBy","olderSupport","newerSupport","tempTag","updateSupportValuesBy","processUpdateContext","wasDestroyed","processReplacementComponent","oldWrapper","newWrapper","isSameTag","skipComparing","isLikeTags","oldestSupport","destroySupport","swapTags","hasChanged","newProps","syncSupports","updateExistingTagComponent","prepareUpdateToComponent","valueSupport","newGlobal","handleStillTag","updateContextItemBySupport","processTagArray","castedValue","simpleValueElm","processNowRegularValue","processNewTag","runBeforeDestroy","getChildTagsToDestroy","lastArray","iSubs","iSub","getChildTagsToSoftDestroy","subTags","smartRemoveKids","promises","startStagger","thisGlobal","destroyArray","oldClones","newPromises","customElm","ondestroy","promise","onDestroyWrap","onDestroy","elementDestroyCheck","checkCloneRemoval","filter","destroyClones","runtimeInsertBefore","filteredLast","newRemoved","reviewLastArrayItem","eAppendTo","reviewArrayItem","array","itemSubject","couldBeSame","processAddTagArrayItem","reviewPreviousArrayItem","subPlaceholder","processNewArrayValue","destroyArrayItem","_subTag","newLength","lessLength","prev","support0","support1","templater0","templater1","tag0","tag1","domMeta0","domMeta1","isLikeDomTags","like","strings0","strings1","values0","values1","valuesLengthsMatch","allVarsMatch","isLikeValueSets","isLikeStringTags","checkArrayValueChange","oldClone","processUpdateRegularValue","isTag","oneRenderToSupport","beforeRerender","prevState","reState","checkStateMismatch","newStates","error","hint","throwStateMismatch","runAfterRender","renderTagOnly","oldRenderCount","reSupport","processNewSubjectTag","valueId","tagFakeTemplater","processResult","newPropsConfig","renderWithSupport","appendIndex","processFirstTagResult","processFirstSubjectComponent","processFirstRegularValue","processSubUpdate","onValue","syncRun","processReplaceTagResult","newPropsArray","priorPropsArray","newArray","syncPriorPropFunction","priorProp","updateExistingArray","hasSetter","updateExistingObject","softDestroySupport","softDestroyOne","lastTemplater","lastTag","isLikeTag","lastDom","lastStrings","oldLength","checkTagSoftDestroy","pIndex","pLen","pcLen","moveProviders","lastOwnerSupport","wasLikeTags","pop","ownGlobal","syncError","createTrigger","oldStateArray","maybePromise","finally","callbackStateUpdate","callbackMaker","variablePrefix","variableSuffix","getStringTag","getDomTag","ondoubleclick","fragFindAny","fragReplacer","safeVar","regexAttr","regexTagOrg","htmlInterpolationToDomMeta","htmlInterpolationToPlaceholders","valuePositions","elements","stack","currentElement","valueIndex","position","regexTag","replace","removeCommentRegX","match","preprocessTagsInComments","tagMatch","exec","fullMatch","tagName","attrString","isClosingTag","isSelfClosing","endsWith","slice","trim","splitByTagVar","pushTextTo","attributes","attrMatch","notEmpty","noValue","lowerName","toLowerCase","fixedName","cleanEventName","valueName","search","attrSet","parseHTML","join","results","fragment","diff","balanceArrayByArrays","addPlaceholders","inputString","part","pushTo","postprocessTagsInComments","placeholderRegex","replacePlaceholders","valueCount","currentTail","loopTail","attrs","processAttributes","innerLoopTail","examineChild","textChild","secondMatch","wIndex","parseInt","varContent","after","lastIndex","safeReplacer","traverseAndRestore","_match","lastRuns","stringId","Number","getStringsId","lastRun","matches","isLastRunMatched","domMetaMap","template","interpolation","stringTag","appElements","tagElement","appElmIndex","appElm","templater2","isApp","loadNewBaseSupport","getNewSubject","isAppFunction","runWrapper","destroy","removeEventListener","newFragment","createDocumentFragment","domItem","putOneDomDown","hmr"],"sourceRoot":""}