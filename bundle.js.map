{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://taggedjs/webpack/bootstrap","webpack://taggedjs/./ts/tag/ValueTypes.enum.ts","webpack://taggedjs/webpack/runtime/define property getters","webpack://taggedjs/webpack/runtime/hasOwnProperty shorthand","webpack://taggedjs/./ts/tag/tag.types.ts","webpack://taggedjs/./ts/isInstance.ts","webpack://taggedjs/./ts/subject/combineLatest.function.ts","webpack://taggedjs/./ts/subject/subject.utils.ts","webpack://taggedjs/./ts/subject/Subject.class.ts","webpack://taggedjs/./ts/subject/ValueSubject.ts","webpack://taggedjs/./ts/subject/will.functions.ts","webpack://taggedjs/./ts/tag/getSupportInCycle.function.ts","webpack://taggedjs/./ts/state/setUse.function.ts","webpack://taggedjs/./ts/errors.ts","webpack://taggedjs/./ts/state/state.utils.ts","webpack://taggedjs/./ts/state/syncStates.function.ts","webpack://taggedjs/./ts/state/state.function.ts","webpack://taggedjs/./ts/state/watch.function.ts","webpack://taggedjs/./ts/state/subject.function.ts","webpack://taggedjs/./ts/state/letState.function.ts","webpack://taggedjs/./ts/state/letProp.function.ts","webpack://taggedjs/./ts/deepFunctions.ts","webpack://taggedjs/./ts/state/providers.ts","webpack://taggedjs/./ts/state/provider.utils.ts","webpack://taggedjs/./ts/tag/isLikeTags.function.ts","webpack://taggedjs/./ts/tag/destroyTag.function.ts","webpack://taggedjs/./ts/tag/tagRunner.ts","webpack://taggedjs/./ts/tag/render/renderTagOnly.function.ts","webpack://taggedjs/./ts/tag/render/renderWithSupport.function.ts","webpack://taggedjs/./ts/tag/render/renderExistingTag.function.ts","webpack://taggedjs/./ts/tag/render/renderTagSupport.function.ts","webpack://taggedjs/./ts/state/callbackStateUpdate.function.ts","webpack://taggedjs/./ts/state/callbackMaker.function.ts","webpack://taggedjs/./ts/state/onInit.ts","webpack://taggedjs/./ts/state/onDestroy.ts","webpack://taggedjs/./ts/state/children.ts","webpack://taggedjs/./ts/tag/Tag.class.ts","webpack://taggedjs/./ts/tag/TemplaterResult.class.ts","webpack://taggedjs/./ts/tag/kidsToTagArraySubject.function.ts","webpack://taggedjs/./ts/tag/tag.utils.ts","webpack://taggedjs/./ts/interpolations/bindSubjectCallback.function.ts","webpack://taggedjs/./ts/insertAfter.function.ts","webpack://taggedjs/./ts/tag/checkDestroyPrevious.function.ts","webpack://taggedjs/./ts/tag/getValueType.function.ts","webpack://taggedjs/./ts/tag/cloneValueArray.function.ts","webpack://taggedjs/./ts/tag/destroy.support.ts","webpack://taggedjs/./ts/tag/update/processNewValue.function.ts","webpack://taggedjs/./ts/tag/setTagPlaceholder.function.ts","webpack://taggedjs/./ts/interpolations/inputAttribute.ts","webpack://taggedjs/./ts/interpolations/processAttribute.function.ts","webpack://taggedjs/./ts/interpolations/interpolateAttributes.ts","webpack://taggedjs/./ts/interpolations/interpolations.ts","webpack://taggedjs/./ts/tag/update/processTagResult.function.ts","webpack://taggedjs/./ts/tag/update/processSubjectComponent.function.ts","webpack://taggedjs/./ts/tag/render/renderSubjectComponent.function.ts","webpack://taggedjs/./ts/tag/update/processTag.function.ts","webpack://taggedjs/./ts/tag/update/processTagArray.ts","webpack://taggedjs/./ts/updateBeforeTemplate.function.ts","webpack://taggedjs/./ts/tag/update/processRegularValue.function.ts","webpack://taggedjs/./ts/tag/update/oneRenderToTagSupport.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectValue.function.ts","webpack://taggedjs/./ts/interpolations/scanTextAreaValue.function.ts","webpack://taggedjs/./ts/tag/hasPropChanges.function.ts","webpack://taggedjs/./ts/tag/hasTagSupportChanged.function.ts","webpack://taggedjs/./ts/alterProp.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingTagComponent.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingValue.function.ts","webpack://taggedjs/./ts/interpolations/interpolateTemplate.ts","webpack://taggedjs/./ts/interpolations/elementInitCheck.ts","webpack://taggedjs/./ts/interpolations/interpolateContentTemplates.ts","webpack://taggedjs/./ts/interpolations/interpolateElement.ts","webpack://taggedjs/./ts/interpolations/afterInterpolateElement.function.ts","webpack://taggedjs/./ts/render.ts","webpack://taggedjs/./ts/tag/TagSupport.class.ts","webpack://taggedjs/./ts/tag/update/updateContextItem.function.ts","webpack://taggedjs/./ts/tag/elementDestroyCheck.function.ts","webpack://taggedjs/./ts/tag/tag.ts","webpack://taggedjs/./ts/tag/getTagWrap.function.ts","webpack://taggedjs/./ts/tag/html.ts","webpack://taggedjs/./ts/tag/tagElement.ts","webpack://taggedjs/./ts/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export var ValueTypes;\n(function (ValueTypes) {\n    ValueTypes[\"unknown\"] = \"unknown\";\n    ValueTypes[\"tag\"] = \"tag\";\n    ValueTypes[\"templater\"] = \"templater\";\n    ValueTypes[\"tagComponent\"] = \"tag-component\";\n    ValueTypes[\"tagArray\"] = \"tag-array\";\n    ValueTypes[\"subject\"] = \"subject\";\n    ValueTypes[\"date\"] = \"date\";\n    ValueTypes[\"string\"] = \"string\";\n    ValueTypes[\"boolean\"] = \"boolean\";\n    ValueTypes[\"function\"] = \"function\";\n    ValueTypes[\"undefined\"] = \"undefined\";\n})(ValueTypes || (ValueTypes = {}));\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export class RouteQuery {\n    get(name) {\n        return 'todo';\n    }\n}\n","import { ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isStaticTag(value) {\n    return [\n        ValueTypes.tag,\n        ValueTypes.templater,\n    ].includes(value?.tagJsType);\n}\nexport function isTagTemplater(value) {\n    return value?.tagJsType === ValueTypes.templater;\n}\n// TODO: whats the difference between isTagClass and isTagComponent\nexport function isTagComponent(value) {\n    return value?.tagJsType === ValueTypes.tagComponent;\n}\nexport function isTagClass(value) {\n    return value?.tagJsType === ValueTypes.tag;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return (subject?.isSubject === true || subject?.subscribe) ? true : false; // subject?.isSubject === true || \n}\nexport function isTagArray(value) {\n    return value instanceof Array && value.every(x => [\n        ValueTypes.tag, ValueTypes.templater, ValueTypes.tag, ValueTypes.tagComponent\n    ].includes(x?.tagJsType));\n}\n","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (let index = valuesSeen.length - 1; index >= 0; --index) {\n                if (!valuesSeen[index]) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => subject.subscribe(x => setValue(x, index + 1)));\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject._value + 1);\n    const subscription = () => {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = () => {\n        removeSubFromArray(subscribers, callback); // each will be called when update comes in\n        // removeSubFromArray(Subject.globalSubs, callback) // 🔬 testing\n        Subject.globalSubCount$.next(countSubject._value - 1);\n        // any double unsubscribes will be ignored\n        subscription.unsubscribe = () => subscription;\n        // unsubscribe from any combined subjects\n        const subscriptions = subscription.subscriptions;\n        for (let index = subscriptions.length - 1; index >= 0; --index) {\n            subscriptions[index].unsubscribe();\n        }\n        return subscription;\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\n","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    _value;\n    // this is overwritten by constructor at runtime. However having it helps editors know of its existence\n    set; // `subject.set = x` equal to `subject.next(x)`\n    constructor(value, \n    // private?\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        // Subject.globalSubs.push(subscription) // 🔬 testing\n        const count = Subject.globalSubCount$.value;\n        Subject.globalSubCount$.next(count + 1); // 🔬 testing\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        const subs = [...this.subscribers]; // subs may change as we call callbacks\n        const length = subs.length;\n        for (let index = 0; index < length; ++index) {\n            const sub = subs[index];\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster */\n    toCallback(callback) {\n        this.subscribe((x, subscription) => {\n            subscription.unsubscribe();\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this._value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n    Object.defineProperty(subject, 'set', {\n        // supports subject.set = x\n        set: (value) => subject.next(value),\n        // supports subject.set(x)\n        get: () => (x) => subject.next(x),\n    });\n}\n","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        defineValueOn(this);\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n","export function willCallback(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        });\n        callback(lastValue, utils.next);\n    });\n}\n/** .pipe( promise((x) => Promise.resolve(44)) ) */\nexport function willPromise(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        result.then(x => utils.next(x));\n    });\n}\n/** .pipe( willSubscribe((x) => new ValueSubject(44)) ) */\nexport const willSubscribe = (callback) => {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        const subscription = result.subscribe(x => {\n            subscription.unsubscribe();\n            utils.next(x);\n        });\n    });\n};\n","import { setUse } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUse.memory.stateConfig.tagSupport;\n}\n","const tagUse = [];\nexport function setUse(use) {\n    // must provide defaults\n    const useMe = {\n        beforeRender: use.beforeRender || (() => undefined),\n        beforeRedraw: use.beforeRedraw || (() => undefined),\n        afterRender: use.afterRender || (() => undefined),\n        beforeDestroy: use.beforeDestroy || (() => undefined),\n    };\n    setUse.tagUse.push(useMe);\n}\nsetUse.tagUse = tagUse;\nsetUse.memory = {};\n","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n","import { StateMismatchError } from '../errors.js';\nimport { setUse } from './setUse.function.js';\nsetUse.memory.stateConfig = {\n    array: [], // state memory on the first render\n    // rearray: [] as State,\n};\nconst beforeRender = (tagSupport) => initState(tagSupport);\nsetUse({\n    beforeRender,\n    beforeRedraw: beforeRender,\n    afterRender: (tagSupport) => {\n        const memory = tagSupport.memory;\n        const config = setUse.memory.stateConfig;\n        const rearray = config.rearray;\n        if (rearray.length) {\n            if (rearray.length !== config.array.length) {\n                const message = `States lengths have changed ${rearray.length} !== ${config.array.length}. State tracking requires the same amount of function calls every render. Typically this errors is thrown when a state like function call occurs only for certain conditions or when a function is intended to be wrapped with a tag() call`;\n                const wrapper = tagSupport.templater?.wrapper;\n                const details = {\n                    oldStates: config.array,\n                    newStates: config.rearray,\n                    tagFunction: wrapper.parentWrap.original,\n                };\n                const error = new StateMismatchError(message, details);\n                console.warn(message, details);\n                throw error;\n            }\n        }\n        delete config.rearray; // clean up any previous runs\n        delete config.tagSupport;\n        memory.state.length = 0;\n        memory.state.push(...config.array);\n        const state = memory.state;\n        for (let index = state.length - 1; index >= 0; --index) {\n            const item = state[index];\n            item.lastValue = getStateValue(item); // set last values\n        }\n        config.array = [];\n    }\n});\nexport function getStateValue(state) {\n    const callback = state.callback;\n    if (!callback) {\n        return state.defaultValue;\n    }\n    const [value, checkValue] = getCallbackValue(callback);\n    if (checkValue !== StateEchoBack) {\n        const message = 'letState function incorrectly used. Second item in array is not setting expected value.\\n\\n' +\n            'For \"let\" state use `let name = state(default)(x => [name, name = x])`\\n\\n' +\n            'For \"const\" state use `const name = state(default)()`\\n\\n' +\n            'Problem state:\\n' + (callback ? callback.toString() : JSON.stringify(state)) + '\\n';\n        console.error(message, { state, callback, value, checkValue });\n        throw new Error(message);\n    }\n    return value;\n}\nexport class StateEchoBack {\n}\nfunction initState(tagSupport) {\n    const memory = tagSupport.memory;\n    const state = memory.state;\n    const config = setUse.memory.stateConfig;\n    config.rearray = [];\n    const stateLength = state?.length;\n    if (stateLength) {\n        for (let index = 0; index < stateLength; ++index) {\n            getStateValue(state[index]);\n        }\n        config.rearray.push(...state);\n    }\n    config.tagSupport = tagSupport;\n}\nexport function getCallbackValue(callback) {\n    const oldState = callback(StateEchoBack); // get value and set to undefined\n    const [value] = oldState;\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n","export function syncStates(stateFrom, stateTo) {\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const state = stateFrom[index];\n        const fromValue = state.get();\n        const callback = stateTo[index].callback;\n        if (callback) {\n            callback(fromValue); // set the value\n        }\n        stateTo[index].lastValue = fromValue; // record the value\n    }\n}\n","import { setUse } from './setUse.function.js';\nimport { getStateValue } from './state.utils.js';\nimport { syncStates } from './syncStates.function.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    const config = setUse.memory.stateConfig;\n    let getSetMethod;\n    const rearray = config.rearray;\n    const restate = rearray[config.array.length];\n    if (restate) {\n        let oldValue = getStateValue(restate);\n        getSetMethod = ((x) => [oldValue, oldValue = x]);\n        const push = {\n            get: () => getStateValue(push),\n            callback: getSetMethod,\n            lastValue: oldValue,\n            defaultValue: restate.defaultValue,\n        };\n        config.array.push(push);\n        return oldValue;\n    }\n    // State first time run\n    const defaultFn = defaultValue instanceof Function ? defaultValue : () => defaultValue;\n    let initValue = defaultFn();\n    // the state is actually intended to be a function\n    if (initValue instanceof Function) {\n        const oldState = config.array;\n        const tagSupport = config.tagSupport;\n        const original = initValue;\n        initValue = ((...args) => {\n            const global = tagSupport.global;\n            const newest = global.newest;\n            const newState = newest.memory.state;\n            syncStates(newState, oldState);\n            const result = original(...args);\n            syncStates(oldState, newState);\n            return result;\n        });\n        initValue.original = original;\n    }\n    getSetMethod = ((x) => [initValue, initValue = x]);\n    const push = {\n        get: () => getStateValue(push),\n        callback: getSetMethod,\n        lastValue: initValue,\n        defaultValue: initValue,\n    };\n    config.array.push(push);\n    return initValue;\n}\n","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUse } from './setUse.function.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered. Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before = () => true, final = defaultFinally, } = {}) => {\n    let previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (!before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (!before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const method = (currentValues, callback) => {\n                const firstSupport = state(() => getSupportInCycle());\n                const subject = state(() => new ValueSubject(undefined));\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowTagSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowTagSupport !== firstSupport) {\n                        const newestState = setUse.memory.stateConfig.array;\n                        syncStates(newestState, firstSupport.memory.state);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUse } from './setUse.function.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(value, onSubscription) {\n    const oldestState = state(() => setUse.memory.stateConfig.array);\n    const nowTagSupport = getSupportInCycle();\n    return state(() => {\n        const subject = new Subject(value, onSubscription).pipe(x => {\n            syncStates(nowTagSupport.memory.state, oldestState);\n            return x;\n        });\n        return subject;\n    });\n}\nsubject._value = (value) => {\n    const oldestState = state(() => setUse.memory.stateConfig.array);\n    const nowTagSupport = getSupportInCycle();\n    return state(() => {\n        const subject = new ValueSubject(value).pipe(x => {\n            syncStates(nowTagSupport.memory.state, oldestState);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => setUse.memory.stateConfig.array);\n    const nowTagSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        syncStates(nowTagSupport.memory.state, oldestState);\n        return x;\n    });\n}\nsubject.all = all;\n","import { getStateValue } from './state.utils.js';\nimport { setUse } from './setUse.function.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function letState(defaultValue) {\n    const config = setUse.memory.stateConfig;\n    const rearray = config.rearray;\n    let getSetMethod;\n    const restate = rearray[config.array.length];\n    if (restate) {\n        let oldValue = getStateValue(restate);\n        getSetMethod = ((x) => [oldValue, oldValue = x]);\n        const push = {\n            get: () => getStateValue(push),\n            callback: getSetMethod,\n            lastValue: oldValue,\n            defaultValue: restate.defaultValue,\n        };\n        config.array.push(push);\n        return makeStateResult(oldValue, push);\n    }\n    // State first time run\n    const defaultFn = defaultValue instanceof Function ? defaultValue : () => defaultValue;\n    let initValue = defaultFn();\n    getSetMethod = ((x) => [initValue, initValue = x]);\n    const push = {\n        get: () => getStateValue(push),\n        callback: getSetMethod,\n        lastValue: initValue,\n        defaultValue: initValue,\n    };\n    config.array.push(push);\n    return makeStateResult(initValue, push);\n}\nfunction makeStateResult(initValue, push) {\n    // return initValue\n    const result = (y) => {\n        push.callback = y || (x => [initValue, initValue = x]);\n        return initValue;\n    };\n    return result;\n}\n","import { letState } from './letState.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(prop) {\n    return getSetProp => {\n        let myProp = letState(prop)(getSetProp);\n        watch([prop], () => getSetProp(myProp = prop));\n        getSetProp(myProp);\n        return myProp;\n    };\n}\n","export function deepClone(obj) {\n    return makeDeepClone(obj, new WeakMap());\n}\nfunction makeDeepClone(obj, visited) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== 'object') {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    if (visited.has(obj)) {\n        return visited.get(obj);\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = Array.isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Register the cloned object to avoid cyclic references\n    visited.set(obj, clone);\n    // Clone each property or element of the object or array\n    if (Array.isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], visited);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                clone[key] = makeDeepClone(obj[key], visited);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2) {\n    return isDeepEqual(obj1, obj2, new WeakMap());\n}\nfunction isDeepEqual(obj1, obj2, visited) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    if (visited.has(obj1)) {\n        return true;\n    }\n    if (typeof obj1 === 'object' && typeof obj2 === 'object') {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        visited.set(obj1, 0);\n        // Check if obj1 and obj2 are both arrays\n        if (Array.isArray(obj1) && Array.isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, visited);\n        }\n        else if (Array.isArray(obj1) || Array.isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        return isObjectDeepEqual(obj1, obj2, visited);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, visited) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], visited)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, visited) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], visited)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = fn0 instanceof Function && fn1 instanceof Function;\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n","import { deepClone } from '../deepFunctions.js';\nimport { setUse } from './setUse.function.js';\nimport { state } from './state.function.js';\nsetUse.memory.providerConfig = {\n    providers: [],\n    ownerSupport: undefined,\n};\nexport const providers = {\n    create: (constructMethod) => {\n        const stateDiffMemory = state(() => ({ stateDiff: 0, provider: undefined }));\n        // mimic how many states were called the first time\n        if (stateDiffMemory.stateDiff) {\n            for (let x = stateDiffMemory.stateDiff; x > 0; --x) {\n                state(undefined);\n            }\n            const result = state(undefined);\n            // stateDiffMemory.provider.constructMethod.compareTo = compareTo\n            return result;\n        }\n        const result = state(() => {\n            const memory = setUse.memory;\n            const stateConfig = memory.stateConfig;\n            const oldStateCount = stateConfig.array.length;\n            // Providers with provider requirements just need to use providers.create() and providers.inject()\n            const instance = 'prototype' in constructMethod ? new constructMethod() : constructMethod();\n            const stateDiff = stateConfig.array.length - oldStateCount;\n            const config = memory.providerConfig;\n            const provider = {\n                constructMethod,\n                instance,\n                clone: deepClone(instance),\n                stateDiff,\n            };\n            stateDiffMemory.provider = provider;\n            config.providers.push(provider);\n            stateDiffMemory.stateDiff = stateDiff;\n            return instance;\n        });\n        const cm = constructMethod;\n        // const compareTo = cm.compareTo = cm.compareTo || cm.toString()\n        const compareTo = cm.compareTo = cm.toString();\n        stateDiffMemory.provider.constructMethod.compareTo = compareTo;\n        return result;\n    },\n    /**\n     * @template T\n     * @param {(new (...args: any[]) => T) | () => T} constructor\n     * @returns {T}\n     */\n    inject: (constructor) => {\n        // find once, return same every time after\n        return state(() => {\n            const config = setUse.memory.providerConfig;\n            const cm = constructor;\n            const compareTo = cm.compareTo = cm.compareTo || constructor.toString();\n            let owner = {\n                ownerTagSupport: config.ownerSupport\n            };\n            while (owner.ownerTagSupport) {\n                const ownerProviders = owner.ownerTagSupport.global.providers;\n                const provider = ownerProviders.find(provider => {\n                    const constructorMatch = provider.constructMethod.compareTo === compareTo;\n                    if (constructorMatch) {\n                        return true;\n                    }\n                });\n                if (provider) {\n                    provider.clone = deepClone(provider.instance); // keep a copy of the latest before any change occur\n                    config.providers.push(provider);\n                    return provider.instance;\n                }\n                owner = owner.ownerTagSupport; // cause reloop checking next parent\n            }\n            const msg = `Could not inject provider: ${constructor.name} ${constructor}`;\n            console.warn(`${msg}. Available providers`, config.providers);\n            throw new Error(msg);\n        });\n    }\n};\nsetUse({\n    beforeRender: (tagSupport, ownerSupport) => {\n        run(tagSupport, ownerSupport);\n    },\n    beforeRedraw: (tagSupport, newTagSupport) => {\n        run(tagSupport, newTagSupport.ownerTagSupport);\n    },\n    afterRender: (tagSupport) => {\n        const config = setUse.memory.providerConfig;\n        tagSupport.global.providers = [...config.providers];\n        config.providers.length = 0;\n    }\n});\nfunction run(tagSupport, ownerSupport) {\n    const config = setUse.memory.providerConfig;\n    config.ownerSupport = ownerSupport;\n    if (tagSupport.global.providers.length) {\n        config.providers.length = 0;\n        config.providers.push(...tagSupport.global.providers);\n    }\n}\n","import { deepClone, deepEqual } from '../deepFunctions.js';\nimport { renderTagSupport } from '../tag/render/renderTagSupport.function.js';\nexport function providersChangeCheck(tagSupport) {\n    const global = tagSupport.global;\n    const providersWithChanges = global.providers.filter(provider => !deepEqual(provider.instance, provider.clone));\n    // reset clones\n    for (let index = providersWithChanges.length - 1; index >= 0; --index) {\n        const provider = providersWithChanges[index];\n        const appSupport = tagSupport.getAppTagSupport();\n        handleProviderChanges(appSupport, provider);\n        provider.clone = deepClone(provider.instance);\n    }\n}\nfunction handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    for (let index = tagsWithProvider.length - 1; index >= 0; --index) {\n        const { tagSupport, renderCount, provider } = tagsWithProvider[index];\n        if (tagSupport.global.deleted) {\n            continue; // i was deleted after another tag processed\n        }\n        const notRendered = renderCount === tagSupport.global.renderCount;\n        if (notRendered) {\n            provider.clone = deepClone(provider.instance);\n            renderTagSupport(tagSupport, false);\n            continue;\n        }\n    }\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(tagSupport, provider, memory = []) {\n    const global = tagSupport.global;\n    const compare = global.providers;\n    const hasProvider = compare.find(xProvider => xProvider.constructMethod.compareTo === provider.constructMethod.compareTo);\n    if (hasProvider) {\n        memory.push({\n            tagSupport,\n            renderCount: global.renderCount,\n            provider: hasProvider,\n        });\n    }\n    const childTags = tagSupport.childTags;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        getTagsWithProvider(childTags[index], provider, memory);\n    }\n    return memory;\n}\n","export function isLikeTags(tagSupport0, // new\ntagSupport1) {\n    const templater0 = tagSupport0.templater;\n    const templater1 = tagSupport1.templater;\n    const tag0 = templater0?.tag || tagSupport0;\n    const tag1 = templater1.tag;\n    const strings0 = tag0.strings;\n    const strings1 = tagSupport1.strings || tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index] === string);\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = tagSupport0.values || tag0.values;\n    const values1 = tagSupport1.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = value instanceof Function && compareTo instanceof Function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true; // deepEqual(value, compareTo)\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n","export function destroyTagMemory(oldTagSupport) {\n    // must destroy oldest which is tag with elements on stage\n    const oldest = oldTagSupport.global.oldest;\n    oldest.destroy();\n    destroyTagSupportPast(oldTagSupport);\n    oldTagSupport.global.context = {};\n}\nexport function destroyTagSupportPast(oldTagSupport) {\n    delete oldTagSupport.global.oldest; // TODO: This appears redundant of oldest.destroy() which clears global already\n    delete oldTagSupport.global.newest;\n}\n","import { setUse } from '../state/index.js';\nimport { Subject } from '../subject/index.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\n// Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering\nsetUse.memory.tagClosed$ = new Subject(undefined, subscription => {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n// Life cycle 1\nexport function runBeforeRender(tagSupport, ownerSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].beforeRender(tagSupport, ownerSupport);\n    }\n}\n// Life cycle 2\nexport function runAfterRender(tagSupport, ownerTagSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        if (!tagSupport.global.oldest) {\n            throw new Error('stop here');\n        }\n        tagUse[index].afterRender(tagSupport, ownerTagSupport);\n    }\n    setUse.memory.tagClosed$.next(ownerTagSupport);\n}\n// Life cycle 3\nexport function runBeforeRedraw(tagSupport, ownerTagSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].beforeRedraw(tagSupport, ownerTagSupport);\n    }\n}\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(tagSupport, ownerTagSupport) {\n    const tagUse = setUse.tagUse;\n    const length = tagUse.length;\n    for (let index = 0; index < length; ++index) {\n        tagUse[index].beforeDestroy(tagSupport, ownerTagSupport);\n    }\n}\n","import { runBeforeRedraw, runBeforeRender } from '../tagRunner.js';\nimport { setUse } from '../../state/index.js';\nimport { runAfterRender } from '../tagRunner.js';\nexport function renderTagOnly(newTagSupport, prevSupport, subject, ownerSupport) {\n    const oldRenderCount = newTagSupport.global.renderCount;\n    beforeWithRender(newTagSupport, ownerSupport, prevSupport);\n    const templater = newTagSupport.templater;\n    // NEW TAG CREATED HERE\n    const wrapper = templater.wrapper;\n    let reSupport = wrapper(newTagSupport, subject);\n    /* AFTER */\n    runAfterRender(newTagSupport, ownerSupport);\n    // When we rendered, only 1 render should have taken place OTHERWISE rendering caused another render and that is the latest instead\n    if (reSupport.global.renderCount > oldRenderCount + 1) {\n        return newTagSupport.global.newest;\n    }\n    newTagSupport.global.newest = reSupport;\n    return reSupport;\n}\nfunction beforeWithRender(tagSupport, // new\nparentSupport, prevSupport) {\n    const lastOwnerSupport = prevSupport?.ownerTagSupport;\n    const runtimeOwnerSupport = lastOwnerSupport || parentSupport;\n    if (prevSupport) {\n        if (prevSupport !== tagSupport) {\n            const lastState = prevSupport.memory.state;\n            const memory = tagSupport.memory;\n            tagSupport.global = prevSupport.global;\n            memory.state.length = 0;\n            memory.state.push(...lastState);\n        }\n        runBeforeRedraw(tagSupport, prevSupport);\n    }\n    else {\n        // first time render\n        runBeforeRender(tagSupport, runtimeOwnerSupport);\n        // TODO: Logic below most likely could live within providers.ts inside the runBeforeRender function\n        const providers = setUse.memory.providerConfig;\n        providers.ownerSupport = runtimeOwnerSupport;\n    }\n}\n","import { isLikeTags } from '../isLikeTags.function.js';\nimport { destroyTagMemory } from '../destroyTag.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nexport function renderWithSupport(newTagSupport, lastSupport, // previous\nsubject, // events & memory\nownerSupport) {\n    const reSupport = renderTagOnly(newTagSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        destroyUnlikeTags(lastSupport, reSupport, subject);\n    }\n    const lastOwnerSupport = lastSupport?.ownerTagSupport;\n    reSupport.ownerTagSupport = (ownerSupport || lastOwnerSupport);\n    return reSupport;\n}\nfunction destroyUnlikeTags(lastSupport, // old\nreSupport, // new\nsubject) {\n    const oldGlobal = lastSupport.global;\n    const insertBefore = oldGlobal.insertBefore;\n    destroyTagMemory(lastSupport);\n    // when a tag is destroyed, disconnect the globals\n    reSupport.global = { ...oldGlobal }; // break memory references\n    const global = reSupport.global;\n    global.insertBefore = insertBefore;\n    global.deleted = false;\n    delete global.oldest; // TODO, maybe set global oldest to replacement instead of destroying it?\n    delete global.newest;\n    delete subject.tagSupport;\n}\n","import { providersChangeCheck } from '../../state/provider.utils.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { renderWithSupport } from './renderWithSupport.function.js';\n/** Returns true when rendering owner is not needed. Returns false when rendering owner should occur */\nexport function renderExistingTag(oldestSupport, // oldest with elements on html\nnewSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const lastSupport = subject.tagSupport;\n    const global = lastSupport.global;\n    // share point between renders\n    newSupport.global = global;\n    const preRenderCount = global.renderCount;\n    providersChangeCheck(oldestSupport);\n    // When the providers were checked, a render to myself occurred and I do not need to re-render again\n    const prevSupport = global.newest;\n    if (preRenderCount !== global.renderCount) {\n        oldestSupport.updateBy(prevSupport);\n        return prevSupport; // already rendered during triggered events\n    }\n    const toRedrawTag = prevSupport || lastSupport || global.oldest;\n    const reSupport = renderWithSupport(newSupport, toRedrawTag, subject, ownerSupport);\n    const oldest = global.oldest || oldestSupport;\n    reSupport.global.oldest = oldest;\n    // TODO: renderWithSupport already does an isLikeTags compare\n    if (isLikeTags(prevSupport, reSupport)) {\n        subject.tagSupport = reSupport;\n        oldest.updateBy(reSupport);\n    }\n    return reSupport;\n}\n","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingTag } from './renderExistingTag.function.js';\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderTagSupport(tagSupport, // must be latest/newest state render\nrenderUp) {\n    const global = tagSupport.global;\n    const templater = tagSupport.templater;\n    // is it just a vanilla tag, not component?\n    if (!templater.wrapper) { // || isTagTemplater(templater) \n        const ownerTag = tagSupport.ownerTagSupport;\n        ++global.renderCount;\n        return renderTagSupport(ownerTag, true);\n    }\n    const subject = tagSupport.subject;\n    let ownerSupport;\n    let selfPropChange = false;\n    const shouldRenderUp = renderUp && tagSupport;\n    if (shouldRenderUp) {\n        ownerSupport = tagSupport.ownerTagSupport;\n        if (ownerSupport) {\n            const nowProps = templater.props;\n            const latestProps = tagSupport.propsConfig.latestCloned;\n            selfPropChange = !nowProps.every((props, index) => deepEqual(props, latestProps[index]));\n        }\n    }\n    const oldest = tagSupport.global.oldest;\n    const tag = renderExistingTag(oldest, tagSupport, ownerSupport, // useTagSupport,\n    subject);\n    const renderOwner = ownerSupport && selfPropChange;\n    if (renderOwner) {\n        const ownerTagSupport = ownerSupport;\n        renderTagSupport(ownerTagSupport, true);\n        return tag;\n    }\n    return tag;\n}\n","import { renderTagSupport } from '../tag/render/renderTagSupport.function.js';\nimport { syncStates } from './syncStates.function.js';\nexport default function callbackStateUpdate(tagSupport, callback, oldState, ...args) {\n    const state = tagSupport.memory.state;\n    // ensure that the oldest has the latest values first\n    syncStates(state, oldState);\n    // run the callback\n    const maybePromise = callback(...args);\n    // send the oldest state changes into the newest\n    syncStates(oldState, state);\n    renderTagSupport(tagSupport, false);\n    if (maybePromise instanceof Promise) {\n        maybePromise.finally(() => {\n            // send the oldest state changes into the newest\n            syncStates(oldState, state);\n            renderTagSupport(tagSupport, false);\n        });\n    }\n    // return undefined as T\n    return maybePromise;\n}\n","import { setUse } from './setUse.function.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport callbackStateUpdate from './callbackStateUpdate.function.js';\nlet innerCallback = (callback) => (a, b, c, d, e, f) => {\n    throw new SyncCallbackError('Callback function was called immediately in sync and must instead be call async');\n};\nexport const callbackMaker = () => innerCallback;\nconst originalGetter = innerCallback; // callbackMaker\nsetUse({\n    beforeRender: tagSupport => initMemory(tagSupport),\n    beforeRedraw: tagSupport => initMemory(tagSupport),\n    afterRender: tagSupport => {\n        ;\n        tagSupport.global.callbackMaker = true;\n        innerCallback = originalGetter; // prevent crossing callbacks with another tag\n    },\n});\nexport function callback(callback) {\n    const tagSupport = getSupportInCycle();\n    if (!tagSupport) {\n        const error = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n        throw error;\n    }\n    const oldState = setUse.memory.stateConfig.array;\n    const trigger = (...args) => {\n        const callbackMaker = tagSupport.global.callbackMaker;\n        if (callbackMaker) {\n            return callbackStateUpdate(tagSupport, callback, oldState, ...args);\n        }\n        return callback(...args);\n    };\n    return trigger;\n}\nfunction initMemory(tagSupport) {\n    const oldState = setUse.memory.stateConfig.array;\n    innerCallback = (callback) => {\n        const trigger = (...args) => {\n            const callbackMaker = tagSupport.global.callbackMaker;\n            if (callbackMaker) {\n                return callbackStateUpdate(tagSupport, callback, oldState, ...args);\n            }\n            return callback(...args);\n        };\n        return trigger;\n    };\n}\n","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n","import { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { state } from \"./state.function.js\";\nexport function onDestroy(callback) {\n    state(() => {\n        const tagSupport = getSupportInCycle();\n        tagSupport?.global.destroy$.toCallback(callback);\n    });\n}\n","import { setUse } from './setUse.function.js';\nfunction setCurrentTagSupport(support) {\n    setUse.memory.childrenCurrentSupport = support;\n}\nexport function children() {\n    const tagSupport = setUse.memory.childrenCurrentSupport;\n    const children = tagSupport.templater.children;\n    return children;\n}\nsetUse({\n    beforeRender: tagSupport => setCurrentTagSupport(tagSupport),\n    beforeRedraw: tagSupport => setCurrentTagSupport(tagSupport),\n});\n","import { ValueTypes } from './ValueTypes.enum.js';\nexport const variablePrefix = '__tagvar';\nexport const escapeVariable = '--' + variablePrefix + '--';\nexport const escapeSearch = new RegExp(escapeVariable, 'g');\nexport class Tag {\n    strings;\n    values;\n    tagJsType = ValueTypes.tag;\n    // present only when an array. Populated by Tag.key()\n    memory = {};\n    templater;\n    constructor(strings, values) {\n        this.strings = strings;\n        this.values = values;\n    }\n    /** Used for array, such as array.map(), calls aka array.map(x => html``.key(x)) */\n    key(arrayValue) {\n        this.memory.arrayValue = arrayValue;\n        return this;\n    }\n    // TODO: Is this just a fake function that can be data typed?\n    children;\n    html(strings, ...values) {\n        this.children = { strings, values };\n        return this;\n    }\n}\n","import { Tag } from './Tag.class.js';\nimport { ValueSubject } from '../subject/index.js';\nimport { kidsToTagArraySubject } from './kidsToTagArraySubject.function.js';\nexport class TemplaterResult {\n    props;\n    tagJsType = 'templater';\n    tagged;\n    wrapper;\n    madeChildIntoSubject;\n    tag;\n    children = new ValueSubject([]);\n    constructor(props) {\n        this.props = props;\n    }\n    html(strings, ...values) {\n        const children = new Tag(strings, values);\n        const childSubject = kidsToTagArraySubject(children, this);\n        this.children = childSubject;\n        return this;\n    }\n}\n","import { isSubjectInstance, isTagArray } from '../isInstance.js';\nimport { ValueSubject } from '../subject/ValueSubject.js';\nexport function kidsToTagArraySubject(children, templaterResult) {\n    if (isSubjectInstance(children)) {\n        return children;\n    }\n    const kidArray = children;\n    if (isTagArray(kidArray)) {\n        templaterResult.madeChildIntoSubject = true; // was converted into a subject\n        return new ValueSubject(children);\n    }\n    const kid = children;\n    if (kid) {\n        templaterResult.madeChildIntoSubject = true; // was converted into a subject\n        kid.memory.arrayValue = 0;\n        return new ValueSubject([kid]);\n    }\n    templaterResult.madeChildIntoSubject = true; // was converted into a subject\n    return new ValueSubject([]);\n}\n","export const tags = [];\n","/** File largely responsible for reacting to element events, such as onclick */\nimport { renderTagSupport } from '../tag/render/renderTagSupport.function.js';\nexport function bindSubjectCallback(value, tagSupport) {\n    // Is this children? No override needed\n    if (value.isChildOverride) {\n        return value;\n    }\n    const subjectFunction = (element, args) => runTagCallback(value, tagSupport, element, args);\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    return subjectFunction;\n}\nexport function runTagCallback(value, tagSupport, bindTo, args) {\n    const myGlobal = tagSupport.global;\n    const renderCount = myGlobal.renderCount;\n    const method = value.bind(bindTo);\n    const callbackResult = method(...args);\n    const sameRenderCount = renderCount === myGlobal.renderCount;\n    const skipRender = !sameRenderCount || myGlobal.deleted;\n    // already rendered OR tag was deleted before event processing\n    if (skipRender) {\n        if (callbackResult instanceof Promise) {\n            return callbackResult.then(() => {\n                return 'promise-no-data-ever'; // tag was deleted during event processing\n            });\n        }\n        return 'no-data-ever'; // already rendered\n    }\n    const newest = renderTagSupport(myGlobal.newest, true);\n    myGlobal.newest = newest;\n    if (callbackResult instanceof Promise) {\n        return callbackResult.then(() => {\n            if (myGlobal.deleted) {\n                return 'promise-no-data-ever'; // tag was deleted during event processing\n            }\n            const newest = renderTagSupport(myGlobal.newest, true);\n            myGlobal.newest = newest;\n            return 'promise-no-data-ever';\n        });\n    }\n    // Caller always expects a Promise\n    return 'no-data-ever';\n}\n","// Function to insert element after reference element\nexport function insertAfter(newNode, referenceNode) {\n    const parentNode = referenceNode.parentNode;\n    parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n","import { isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { destroyTagMemory, destroyTagSupportPast } from './destroyTag.function.js';\nimport { insertAfter } from '../insertAfter.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nexport function checkDestroyPrevious(subject, // existing.value is the old value\nnewValue, insertBefore, valueType) {\n    const displaySubject = subject;\n    const hasLastValue = 'lastValue' in displaySubject;\n    const lastValue = displaySubject.lastValue; // TODO: we maybe able to use displaySubject.value and remove concept of lastValue\n    // was simple value but now something bigger\n    if (hasLastValue && lastValue !== newValue) {\n        // below is faster than using getValueType\n        const newType = typeof (newValue);\n        if (isSimpleType(newType) && typeof (lastValue) === newType) {\n            return false;\n        }\n        if (newValue instanceof Function && lastValue instanceof Function) {\n            return false;\n        }\n        destroySimpleValue(insertBefore, displaySubject);\n        return 'changed-simple-value';\n    }\n    const arraySubject = subject;\n    const wasArray = arraySubject.lastArray;\n    // no longer an array\n    if (wasArray && valueType !== ValueTypes.tagArray) {\n        const placeholderElm = arraySubject.placeholder;\n        delete arraySubject.lastArray;\n        delete arraySubject.placeholder;\n        insertAfter(insertBefore, placeholderElm);\n        for (let index = wasArray.length - 1; index >= 0; --index) {\n            const { tagSupport } = wasArray[index];\n            destroyArrayTag(tagSupport, { added: 0, removed: 0 });\n        }\n        return 'array';\n    }\n    const tagSubject = subject;\n    const lastSupport = tagSubject.tagSupport;\n    // no longer tag or component?\n    if (lastSupport) {\n        const isValueTag = isStaticTag(newValue);\n        const isSubjectTag = isStaticTag(subject._value);\n        if (isSubjectTag && isValueTag) {\n            const newTag = newValue;\n            // its a different tag now\n            if (!isLikeTags(newTag, lastSupport)) {\n                // put template back down\n                restoreTagMarker(lastSupport);\n                destroyTagMemory(lastSupport);\n                return 2;\n            }\n            return false;\n        }\n        if (valueType === ValueTypes.tagComponent) {\n            return false; // its still a tag component\n        }\n        if (newValue && newValue.oneRender) {\n            return false;\n        }\n        // put template back down\n        restoreTagMarker(lastSupport);\n        // destroy old component, value is not a component\n        destroyTagMemory(lastSupport);\n        return 'different-tag';\n    }\n    return false;\n}\nexport function isSimpleType(value) {\n    return ['string', 'number', 'boolean'].includes(value);\n}\nexport function destroyArrayTag(tagSupport, counts) {\n    destroyTagSupportPast(tagSupport);\n    tagSupport.destroy({\n        stagger: counts.removed++,\n    });\n    const insertBefore = tagSupport.global.insertBefore;\n    const parentNode = insertBefore.parentNode;\n    parentNode.removeChild(insertBefore);\n}\nfunction destroySimpleValue(insertBefore, // always a template tag\nsubject) {\n    const clone = subject.clone;\n    const parent = clone.parentNode;\n    // 1 put the template back down\n    parent.insertBefore(insertBefore, clone);\n    parent.removeChild(clone);\n    delete subject.clone;\n    delete subject.lastValue;\n}\nexport function restoreTagMarker(lastSupport) {\n    const insertBefore = lastSupport.global.insertBefore;\n    const global = lastSupport.global;\n    const placeholderElm = global.placeholder;\n    if (placeholderElm) {\n        insertAfter(insertBefore, placeholderElm);\n        delete global.placeholder;\n    }\n}\n","import { isSimpleType } from './checkDestroyPrevious.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isSubjectInstance, isTagArray } from '../isInstance.js';\nexport function getValueType(value) {\n    if (value === undefined || value === null) {\n        return ValueTypes.undefined;\n    }\n    const type = typeof (value);\n    if (value instanceof Function) {\n        return ValueTypes.function;\n    }\n    if (type === 'object') {\n        if (value instanceof Date) {\n            return ValueTypes.date;\n        }\n        if (isSimpleType(type)) {\n            return type;\n        }\n        const tagJsType = value.tagJsType;\n        if (tagJsType) {\n            const included = [\n                ValueTypes.tagComponent,\n                ValueTypes.templater,\n                ValueTypes.tag,\n            ].includes(tagJsType);\n            if (included) {\n                return tagJsType;\n            }\n        }\n        if (isTagArray(value)) {\n            return ValueTypes.tagArray;\n        }\n        if (isSubjectInstance(value)) {\n            return ValueTypes.subject;\n        }\n    }\n    return ValueTypes.unknown;\n}\n","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getValueType } from './getValueType.function.js';\nexport function cloneValueArray(values) {\n    return values.map((value) => {\n        const tag = value;\n        switch (getValueType(value)) {\n            case ValueTypes.tagComponent:\n                const tagComponent = value;\n                return deepClone(tagComponent.props);\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n            case ValueTypes.tagArray:\n                return cloneValueArray(tag);\n        }\n        return deepClone(value);\n    });\n}\n","export function getChildTagsToDestroy(childTags, allTags = []) {\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const cTag = childTags[index];\n        allTags.push(cTag);\n        childTags.splice(index, 1);\n        getChildTagsToDestroy(cTag.childTags, allTags);\n    }\n    return allTags;\n}\n","import { ValueSubject } from '../../subject/ValueSubject.js';\nimport { TemplaterResult } from '../TemplaterResult.class.js';\nimport { TagSupport } from '../TagSupport.class.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getValueType } from '../getValueType.function.js';\nexport function processNewValue(value, ownerSupport) {\n    const valueType = getValueType(value);\n    switch (valueType) {\n        case ValueTypes.tagComponent:\n            const tagSubject = new ValueSubject(value);\n            return tagSubject;\n        case ValueTypes.templater:\n            const templater = value;\n            const tag = templater.tag;\n            return processNewTag(tag, ownerSupport);\n        case ValueTypes.tag:\n            return processNewTag(value, ownerSupport);\n        case ValueTypes.subject:\n            return value;\n    }\n    return new ValueSubject(value);\n}\nfunction processNewTag(value, ownerSupport) {\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = new TemplaterResult([]);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const subject = new ValueSubject(templater);\n    subject.tagSupport = new TagSupport(templater, ownerSupport, subject);\n    return subject;\n}\n","export function setTagPlaceholder(global) {\n    const insertBefore = global.insertBefore;\n    return global.placeholder = swapInsertBefore(insertBefore);\n}\nexport function swapInsertBefore(insertBefore) {\n    const placeholder = document.createTextNode('');\n    const parentNode = insertBefore.parentNode;\n    parentNode.insertBefore(placeholder, insertBefore);\n    parentNode.removeChild(insertBefore);\n    return placeholder;\n}\n","export function inputAttribute(name, value, element) {\n    const names = name.split('.');\n    // style.position = \"absolute\"\n    if (names[0] === 'style') {\n        element.style[names[1]] = value;\n    }\n    // Example: class.width-full = \"true\"\n    if (names[0] === 'class') {\n        names.shift();\n        if (value) {\n            for (let index = 0; index < names.length; ++index) {\n                element.classList.add(names[index]);\n            }\n        }\n        else {\n            for (let index = 0; index < names.length; ++index) {\n                element.classList.remove(names[index]);\n            }\n        }\n    }\n}\n","import { inputAttribute } from './inputAttribute.js';\nimport { isSubjectInstance } from '../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nconst startRegX = /^\\s*{__tagvar/;\nconst endRegX = /}\\s*$/;\nfunction isTagVar(value) {\n    return value && value.search(startRegX) >= 0 && value.search(endRegX) >= 0;\n}\nexport function processAttribute(attrName, value, child, scope, ownerSupport, howToSet) {\n    if (isTagVar(value)) {\n        return processScopedNameValueAttr(attrName, value, child, scope, ownerSupport, howToSet);\n    }\n    if (isTagVar(attrName)) {\n        const contextValueSubject = getContextValueByVarString(scope, attrName);\n        let lastValue;\n        // the above callback gets called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe((value) => {\n            processNameOnlyAttr(value, lastValue, child, ownerSupport, howToSet);\n            lastValue = value;\n        });\n        ownerSupport.global.subscriptions.push(sub); // this is where unsubscribe is picked up\n        child.removeAttribute(attrName);\n        return;\n    }\n    // Non dynamic\n    const isSpecial = isSpecialAttr(attrName);\n    if (isSpecial) {\n        return inputAttribute(attrName, value, child);\n    }\n}\nfunction processScopedNameValueAttr(attrName, value, // {__tagVarN}\nchild, scope, ownerSupport, howToSet) {\n    // get the code inside the brackets like \"variable0\" or \"{variable0}\"\n    const result = getContextValueByVarString(scope, value);\n    return processNameValueAttr(attrName, result, child, ownerSupport, howToSet);\n}\nfunction getContextValueByVarString(scope, value) {\n    const code = value.replace('{', '').split('').reverse().join('').replace('}', '').split('').reverse().join('');\n    return scope[code];\n}\nfunction processNameOnlyAttr(attrValue, lastValue, child, ownerSupport, howToSet) {\n    if (lastValue && lastValue != attrValue) {\n        if (typeof (lastValue) === 'string') {\n            child.removeAttribute(lastValue);\n        }\n        else if (lastValue instanceof Object) {\n            for (const name in lastValue) {\n                child.removeAttribute(name);\n            }\n        }\n    }\n    if (typeof (attrValue) === 'string') {\n        if (!attrValue.length) {\n            return;\n        }\n        processNameValueAttr(attrValue, '', child, ownerSupport, howToSet);\n        return;\n    }\n    if (attrValue instanceof Object) {\n        for (const name in attrValue) {\n            processNameValueAttr(name, attrValue[name], child, ownerSupport, howToSet);\n        }\n    }\n}\nfunction processNameValueAttr(attrName, result, child, ownerSupport, howToSet) {\n    const isSpecial = isSpecialAttr(attrName);\n    if (result instanceof Function) {\n        const action = function (...args) {\n            const result2 = result(child, args);\n            return result2;\n        };\n        child[attrName].action = action;\n    }\n    // Most every variable comes in here since everything is made a ValueSubject\n    if (isSubjectInstance(result)) {\n        child.removeAttribute(attrName);\n        const callback = (newAttrValue) => {\n            // should the function be wrapped so every time its called we re-render?\n            if (newAttrValue instanceof Function) {\n                const wrapper = ownerSupport.templater.wrapper;\n                const parentWrap = wrapper?.parentWrap;\n                const oneRender = parentWrap?.oneRender;\n                if (!oneRender) {\n                    newAttrValue = bindSubjectCallback(newAttrValue, ownerSupport);\n                }\n            }\n            return processAttributeSubjectValue(newAttrValue, child, attrName, isSpecial, howToSet);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = result.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        ownerSupport.global.subscriptions.push(sub);\n        return;\n    }\n    howToSet(child, attrName, result);\n    // child.setAttribute(attrName, result.value)\n    return;\n}\nfunction processAttributeSubjectValue(newAttrValue, child, attrName, isSpecial, howToSet) {\n    if (newAttrValue instanceof Function) {\n        const fun = function (...args) {\n            return newAttrValue(child, args);\n        };\n        // access to original function\n        fun.tagFunction = newAttrValue;\n        child[attrName] = fun;\n        return;\n    }\n    if (isSpecial) {\n        inputAttribute(attrName, newAttrValue, child);\n        return;\n    }\n    if (newAttrValue) {\n        howToSet(child, attrName, newAttrValue);\n        return;\n    }\n    const isDeadValue = [undefined, false, null].includes(newAttrValue);\n    if (isDeadValue) {\n        child.removeAttribute(attrName);\n        return;\n    }\n    // value is 0\n    howToSet(child, attrName, newAttrValue);\n}\n/** Looking for (class | style) followed by a period */\nfunction isSpecialAttr(attrName) {\n    return attrName.search(/^(class|style)(\\.)/) >= 0;\n}\n","import { processAttribute } from './processAttribute.function.js';\nfunction howToSetAttribute(element, name, value) {\n    element.setAttribute(name, value);\n}\nfunction howToSetInputValue(element, name, value) {\n    element[name] = value;\n}\nexport function interpolateAttributes(child, scope, ownerSupport) {\n    const attrNames = child.getAttributeNames();\n    let howToSet = howToSetAttribute;\n    for (let index = 0; index < attrNames.length; ++index) {\n        const attrName = attrNames[index];\n        if (child.nodeName === 'INPUT' && attrName === 'value') {\n            howToSet = howToSetInputValue;\n        }\n        const value = child.getAttribute(attrName);\n        processAttribute(attrName, value, child, scope, ownerSupport, howToSet);\n        howToSet = howToSetAttribute; // put back\n    }\n}\n","// support arrow functions in attributes\nexport const interpolateReplace = /(?:<[^>]*?(?:(?:\\s+\\w+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^>\\s]+)))*\\s*)\\/?>)|({__tagvar[^}]+})/g;\n/** replaces ${x} with <template id=\"x-start\"></template><template id=\"x-end\"></template> */\nexport function interpolateToTemplates(template) {\n    const keys = [];\n    const string = template.replace(interpolateReplace, (match, expression) => {\n        if (match.startsWith('<')) {\n            // If the match is an HTML tag, don't replace\n            return match;\n        }\n        const noBraces = expression.substring(1, expression.length - 1);\n        const id = noBraces;\n        keys.push(id);\n        return `<template interpolate end id=\"${id}\"></template>`;\n    });\n    return { string, keys };\n}\n","export function processTagResult(tagSupport, subject, // used for recording past and current value\ninsertBefore, // <template end interpolate />\n{ counts, }) {\n    // *if appears we already have seen\n    const subjectTag = subject;\n    const lastSupport = subjectTag.tagSupport;\n    const prevSupport = lastSupport?.global.oldest || undefined;\n    const justUpdate = prevSupport;\n    if (prevSupport && justUpdate) {\n        return processTagResultUpdate(tagSupport, subjectTag, prevSupport);\n    }\n    tagSupport.buildBeforeElement(insertBefore, {\n        counts,\n    });\n}\nfunction processTagResultUpdate(tagSupport, subject, // used for recording past and current value\nprevSupport) {\n    // components\n    if (subject instanceof Function) {\n        const newSupport = subject(prevSupport);\n        prevSupport.updateBy(newSupport);\n        subject.tagSupport = newSupport;\n        return;\n    }\n    prevSupport.updateBy(tagSupport);\n    subject.tagSupport = tagSupport;\n    return;\n}\n","import { setUse } from '../../state/index.js';\nimport { processTagResult } from './processTagResult.function.js';\nimport { TagSupport } from '../TagSupport.class.js';\nimport { renderSubjectComponent } from '../render/renderSubjectComponent.function.js';\nexport function processSubjectComponent(templater, subject, insertBefore, ownerSupport, options) {\n    // Check if function component is wrapped in a tag() call\n    // TODO: This below check not needed in production mode\n    if (templater.tagged !== true) {\n        const wrapper = templater.wrapper;\n        const original = wrapper.parentWrap.original;\n        let name = original.name || original.constructor?.name;\n        if (name === 'Function') {\n            name = undefined;\n        }\n        const label = name || original.toString().substring(0, 120);\n        const error = new Error(`Not a tag component. Wrap your function with tag(). Example tag(props => html\\`\\`) on component:\\n\\n${label}\\n\\n`);\n        throw error;\n    }\n    const tagSupport = new TagSupport(templater, ownerSupport, subject);\n    let reSupport = subject.tagSupport;\n    const global = tagSupport.global = reSupport?.global || tagSupport.global;\n    global.insertBefore = insertBefore;\n    const providers = setUse.memory.providerConfig;\n    providers.ownerSupport = ownerSupport;\n    const isRender = !reSupport;\n    if (isRender) {\n        const support = reSupport || tagSupport;\n        reSupport = renderSubjectComponent(subject, support, ownerSupport);\n    }\n    processTagResult(reSupport, subject, // The element set here will be removed from document. Also result.tag will be added in here\n    insertBefore, // <template end interpolate /> (will be removed)\n    options);\n    return reSupport;\n}\n","import { renderWithSupport } from './renderWithSupport.function.js';\nexport function renderSubjectComponent(subject, reSupport, ownerSupport) {\n    const preClones = ownerSupport.clones.map(clone => clone);\n    reSupport = renderWithSupport(reSupport, subject.tagSupport, // existing tag\n    subject, ownerSupport);\n    reSupport.global.newest = reSupport;\n    if (ownerSupport.clones.length > preClones.length) {\n        const myClones = ownerSupport.clones.filter(fClone => !preClones.find(clone => clone === fClone));\n        reSupport.clones.push(...myClones);\n    }\n    ownerSupport.childTags.push(reSupport);\n    return reSupport;\n}\n","import { TagSupport } from '../TagSupport.class.js';\nimport { ValueSubject } from '../../subject/index.js';\n/** Could be a regular tag or a component. Both are Tag.class */\nexport function processTag(templater, insertBefore, ownerSupport, // owner\nsubject) {\n    let tagSupport = subject.tagSupport;\n    // first time seeing this tag?\n    if (!tagSupport) {\n        tagSupport = newTagSupportByTemplater(templater, ownerSupport, subject);\n    }\n    subject.tagSupport = tagSupport;\n    tagSupport.ownerTagSupport = ownerSupport;\n    tagSupport.buildBeforeElement(insertBefore, {\n        counts: { added: 0, removed: 0 },\n    });\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        children: new ValueSubject([]), // no children\n        // props: {} as Props,\n        props: [],\n        isTag: true,\n        tagJsType: 'templater',\n        tagged: false,\n        madeChildIntoSubject: false, // TODO this can be removed\n        html: () => fake\n    };\n    return fake;\n}\nexport function newTagSupportByTemplater(templater, ownerSupport, subject) {\n    const tagSupport = new TagSupport(templater, ownerSupport, subject);\n    setupNewTemplater(tagSupport, ownerSupport, subject);\n    ownerSupport.childTags.push(tagSupport);\n    return tagSupport;\n}\nexport function setupNewTemplater(tagSupport, ownerSupport, subject) {\n    tagSupport.global.oldest = tagSupport;\n    tagSupport.global.newest = tagSupport;\n    // asking me to render will cause my parent to render\n    tagSupport.ownerTagSupport = ownerSupport;\n    subject.tagSupport = tagSupport;\n}\n","import { ValueSubject } from '../../subject/ValueSubject.js';\nimport { ArrayNoKeyError } from '../../errors.js';\nimport { destroyArrayTag } from '../checkDestroyPrevious.function.js';\nimport { setupNewTemplater, tagFakeTemplater } from './processTag.function.js';\nimport { TagSupport } from '../TagSupport.class.js';\nimport { isTagClass } from '../../isInstance.js';\nexport function processTagArray(subject, value, // arry of Tag classes\ninsertBefore, // <template end interpolate />\nownerSupport, options) {\n    const clones = ownerSupport.clones; // []\n    let lastArray = subject.lastArray = subject.lastArray || [];\n    if (!subject.placeholder) {\n        setPlaceholderElm(insertBefore, subject);\n    }\n    const runtimeInsertBefore = subject.placeholder; // || insertBefore\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    lastArray = subject.lastArray = subject.lastArray.filter((item, index) => {\n        const newLength = value.length - 1;\n        const at = index - removed;\n        const lessLength = newLength < at;\n        const subValue = value[index - removed];\n        const subTag = subValue;\n        // const tag = subTag?.templater.tag as Tag\n        const lastTag = item.tagSupport.templater.tag;\n        const newArrayValue = subTag?.memory.arrayValue;\n        const lastArrayValue = lastTag.memory.arrayValue;\n        const destroyItem = lessLength || !areLikeValues(newArrayValue, lastArrayValue);\n        if (destroyItem) {\n            const last = lastArray[index];\n            const tagSupport = last.tagSupport;\n            destroyArrayTag(tagSupport, options.counts);\n            last.deleted = true;\n            ++removed;\n            ++options.counts.removed;\n            return false;\n        }\n        return true;\n    });\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const item = value[index];\n        const previous = lastArray[index];\n        const previousSupport = previous?.tagSupport;\n        const subTag = item;\n        if (isTagClass(subTag) && !subTag.templater) {\n            tagFakeTemplater(subTag);\n        }\n        const tagSupport = new TagSupport(subTag.templater, ownerSupport, new ValueSubject(undefined));\n        if (previousSupport) {\n            setupNewTemplater(tagSupport, ownerSupport, previousSupport.subject);\n            const global = previousSupport.global;\n            tagSupport.global = global;\n            global.newest = tagSupport;\n        }\n        // check for html``.key()\n        const keySet = 'arrayValue' in subTag.memory;\n        if (!keySet) {\n            const details = {\n                template: tagSupport.getTemplate().string,\n                array: value,\n            };\n            const message = 'Use html`...`.key(item) instead of html`...` to template an Array';\n            console.error(message, details);\n            const err = new ArrayNoKeyError(message, details);\n            throw err;\n        }\n        const couldBeSame = lastArray.length > index;\n        if (couldBeSame) {\n            const prevSupport = previous.tagSupport;\n            const prevGlobal = prevSupport.global;\n            // subTag.tagSupport = subTag.tagSupport || prevSupport\n            const oldest = prevGlobal.oldest;\n            oldest.updateBy(tagSupport);\n            // return []\n            continue;\n        }\n        processAddTagArrayItem(runtimeInsertBefore, tagSupport, index, options, lastArray);\n        ownerSupport.childTags.push(tagSupport);\n    }\n    return clones;\n}\nfunction setPlaceholderElm(insertBefore, subject) {\n    if (insertBefore.nodeName !== 'TEMPLATE') {\n        subject.placeholder = insertBefore;\n        return;\n    }\n    const placeholder = subject.placeholder = document.createTextNode('');\n    const parentNode = insertBefore.parentNode;\n    parentNode.insertBefore(placeholder, insertBefore);\n    parentNode.removeChild(insertBefore);\n}\nfunction processAddTagArrayItem(before, tagSupport, index, options, lastArray) {\n    const lastValue = {\n        tagSupport, index\n    };\n    // Added to previous array\n    lastArray.push(lastValue);\n    const counts = {\n        added: options.counts.added + index,\n        removed: options.counts.removed,\n    };\n    const fragment = document.createDocumentFragment();\n    const newTempElm = document.createElement('template');\n    fragment.appendChild(newTempElm);\n    tagSupport.buildBeforeElement(newTempElm, // before,\n    { counts });\n    const parent = before.parentNode;\n    parent.insertBefore(fragment, before);\n}\n/** compare two values. If both values are arrays then the items will be compared */\nfunction areLikeValues(valueA, valueB) {\n    if (valueA === valueB) {\n        return true;\n    }\n    const bothArrays = valueA instanceof Array && valueB instanceof Array;\n    const matchLengths = bothArrays && valueA.length == valueB.length;\n    if (matchLengths) {\n        return valueA.every((item, index) => item == valueB[index]);\n    }\n    return false;\n}\n","// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const parent = lastFirstChild.parentNode;\n    // Insert the new value (never use innerHTML here)\n    const textNode = document.createTextNode(value); // never innerHTML\n    parent.insertBefore(textNode, lastFirstChild);\n    /* remove existing nodes */\n    parent.removeChild(lastFirstChild);\n    return textNode;\n}\nexport function castTextValue(value) {\n    // mimic React skipping to display EXCEPT for true does display on page\n    if ([undefined, false, null].includes(value)) { // || value === true\n        return '';\n    }\n    return value;\n}\n","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nexport function processRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    subject.insertBefore = insertBefore;\n    const before = subject.clone || insertBefore; // Either the template is on the doc OR its the first element we last put on doc\n    // matches but also was defined at some point\n    if (subject.lastValue === value && 'lastValue' in subject) {\n        return; // no need to update display, its the same\n    }\n    subject.lastValue = value;\n    const castedValue = castTextValue(value);\n    // replace existing string?\n    const oldClone = subject.clone;\n    if (oldClone) {\n        oldClone.textContent = castedValue;\n        return;\n    }\n    // Processing of regular values\n    const clone = updateBeforeTemplate(castedValue, before);\n    subject.clone = clone; // remember single element put down, for future updates\n}\nexport function processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    subject.lastValue = value;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    subject.clone = clone; // remember single element put down, for future updates \n}\n","import { TemplaterResult } from '../TemplaterResult.class.js';\nimport { newTagSupportByTemplater } from './processTag.function.js';\nexport function oneRenderToTagSupport(wrapper, subject, ownerSupport) {\n    const templater = new TemplaterResult([]);\n    templater.tagJsType = 'oneRender';\n    const tagSupport = newTagSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    const wrap = () => {\n        templater.tag = tag || (wrapper());\n        return tagSupport;\n    };\n    templater.wrapper = wrap;\n    wrap.parentWrap = wrap;\n    wrap.oneRender = true;\n    wrap.parentWrap.original = wrapper;\n    return tagSupport;\n}\n","import { processSubjectComponent } from './processSubjectComponent.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processFirstRegularValue } from './processRegularValue.function.js';\nimport { processTag, tagFakeTemplater } from './processTag.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { oneRenderToTagSupport } from './oneRenderToTagSupport.function.js';\nimport { getValueType } from '../getValueType.function.js';\nexport function processFirstSubjectValue(value, subject, // could be tag via result.tag\ninsertBefore, // <template end interpolate /> (will be removed)\nownerSupport, // owner\noptions) {\n    const valueType = getValueType(value);\n    switch (valueType) {\n        case ValueTypes.templater:\n            processTag(value, insertBefore, ownerSupport, subject);\n            return;\n        case ValueTypes.tag:\n            const tag = value;\n            let templater = tag.templater;\n            if (!templater) {\n                templater = tagFakeTemplater(tag);\n            }\n            processTag(templater, insertBefore, ownerSupport, subject);\n            return;\n        case ValueTypes.tagArray:\n            return processTagArray(subject, value, insertBefore, ownerSupport, options);\n        case ValueTypes.tagComponent:\n            processSubjectComponent(value, subject, insertBefore, ownerSupport, options);\n            return;\n        case ValueTypes.function:\n            const v = value;\n            if (v.oneRender) {\n                const tagSupport = oneRenderToTagSupport(v, subject, ownerSupport);\n                renderTagOnly(tagSupport, tagSupport, subject, ownerSupport);\n                processTag(tagSupport.templater, insertBefore, ownerSupport, subject);\n                return;\n            }\n            break;\n    }\n    processFirstRegularValue(value, subject, insertBefore);\n}\n","import { processAttribute } from './processAttribute.function.js';\nconst search = new RegExp('\\\\s*<template interpolate end id=\"__tagvar(\\\\d{1,4})\"([^>]*)></template>(\\\\s*)');\nexport function scanTextAreaValue(textarea, context, ownerSupport) {\n    const value = textarea.value;\n    if (value.search(search) >= 0) {\n        const match = value.match(/__tagvar(\\d{1,4})/);\n        const token = match ? match[0] : '';\n        const dynamic = '{' + token + '}';\n        textarea.value = '';\n        textarea.setAttribute('text-var-value', dynamic);\n        const howToSet = (_elm, _name, value) => textarea.value = value;\n        processAttribute('text-var-value', dynamic, // realValue, // context[token].value,\n        textarea, context, ownerSupport, howToSet);\n    }\n}\n","import { deepEqual } from '../deepFunctions.js';\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nexport function hasPropChanges(props, // natural props\npastCloneProps) {\n    /*\n    const isCommonEqual = props === undefined && props === compareToProps\n    if(isCommonEqual) {\n      return false\n    }\n    */\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    // check all prop functions match\n    if (typeof (props) === 'object') {\n        if (!pastCloneProps) {\n            return 3;\n        }\n        // castedProps = {...props}\n        castedProps = [...props];\n        // castedPastProps = {...(pastCloneProps || {})}\n        castedPastProps = [...(pastCloneProps || [])];\n        const allFunctionsMatch = castedProps.every((value, index) => {\n            let compare = castedPastProps[index];\n            if (value && typeof (value) === 'object') {\n                const subCastedProps = { ...value };\n                const subCompareProps = { ...compare || {} };\n                const matched = Object.entries(subCastedProps).every(([key, value]) => {\n                    return compareProps(value, subCompareProps[key], () => {\n                        delete subCastedProps[key]; // its a function and not needed to be compared\n                        delete subCompareProps[key]; // its a function and not needed to be compared\n                    });\n                });\n                return matched;\n            }\n            return compareProps(value, compare, () => {\n                castedProps.splice(index, 1);\n                castedPastProps.splice(index, 1);\n            });\n        });\n        if (!allFunctionsMatch) {\n            return 6; // a change has been detected by function comparisons\n        }\n    }\n    // const isEqual = deepEqual(castedPastProps, castedProps)\n    // return isEqual ? false : 7 // if equal then no changes\n    return false;\n}\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(value instanceof Function)) {\n        return deepEqual(value, compare) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(compareFn instanceof Function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 3; // both are function the same\n    }\n    onDelete();\n    return 5;\n}\n","import { hasPropChanges } from './hasPropChanges.function.js';\nexport function hasTagSupportChanged(oldTagSupport, newTagSupport, newTemplater) {\n    const latestProps = newTemplater.props; // newTagSupport.propsConfig.latest\n    const pastCloneProps = oldTagSupport.propsConfig.latestCloned;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps);\n    // if no changes detected, no need to continue to rendering further tags\n    if (propsChanged) {\n        return propsChanged;\n    }\n    const kidsChanged = hasKidsChanged(oldTagSupport, newTagSupport);\n    // we already know props didn't change and if kids didn't either, than don't render\n    return kidsChanged;\n}\nexport function hasKidsChanged(oldTagSupport, newTagSupport) {\n    const oldCloneKidValues = oldTagSupport.propsConfig.lastClonedKidValues;\n    const newClonedKidValues = newTagSupport.propsConfig.lastClonedKidValues;\n    const everySame = oldCloneKidValues.every((set, index) => {\n        const x = newClonedKidValues[index];\n        return set.every((item, index) => item === x[index]);\n    });\n    return everySame ? false : 9;\n}\n","import { deepClone, deepEqual } from './deepFunctions.js';\nimport { isStaticTag } from './isInstance.js';\nimport { renderTagSupport } from './tag/render/renderTagSupport.function.js';\nimport { setUse } from './state/index.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nimport { syncStates } from './state/syncStates.function.js';\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, stateArray, newTagSupport) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, stateArray, newTagSupport);\n}\nfunction checkProp(value, ownerSupport, stateArray, newTagSupport, index, newProp, seen = []) {\n    if (value instanceof Function) {\n        return getPropWrap(value, ownerSupport, stateArray, newTagSupport, index, newProp);\n    }\n    if (seen.includes(value)) {\n        return value;\n    }\n    seen.push(value);\n    if (typeof (value) !== 'object' || !value) {\n        return value; // no children to crawl through\n    }\n    if (value instanceof Array) {\n        value.forEach((x, index) => value[index] = checkProp(x, ownerSupport, stateArray, newTagSupport, index, value, seen));\n        return value;\n    }\n    for (const name in value) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, stateArray, newTagSupport, name, value, seen);\n        const hasSetter = typeof (result) === 'object' || Object.getOwnPropertyDescriptor(value, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n    }\n    return value;\n}\nfunction getPropWrap(value, ownerSupport, stateArray, newTagSupport, name, newProp) {\n    const toCall = value.toCall;\n    if (toCall) {\n        return value; // already previously converted\n    }\n    const wrap = (...args) => wrap.toCall(...args); // what gets called can switch over parent state changes\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = (...args) => callbackPropOwner(value, args, ownerSupport, stateArray);\n    wrap.original = value;\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    if (name) {\n        // restore object to have original function on destroy\n        newTagSupport.global.destroy$.toCallback(() => newProp[name] = value);\n    }\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport, // <-- WHEN called from alterProp its owner OTHERWISE its previous\nstateArray) {\n    const newest = ownerSupport.global.newest;\n    const newState = newest.memory.state;\n    const noCycle = getSupportInCycle() === undefined;\n    const sync = noCycle && stateArray.length === newState.length;\n    if (sync) {\n        syncStates(newState, stateArray);\n    }\n    const result = toCall(...callWith);\n    if (sync) {\n        syncStates(stateArray, newState);\n    }\n    const run = () => {\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            // appears a prop function was called sync/immediately so lets see if owner changed state\n            const allMatched = newest.memory.state.every(state => {\n                const lastValue = state.lastValue;\n                const get = state.get();\n                const equal = deepEqual(deepClone(lastValue), get);\n                return equal;\n            });\n            if (allMatched) {\n                return result; // owner did not change\n            }\n        }\n        renderTagSupport(newest, true);\n        return result;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUse.memory.tagClosed$.toCallback(run);\n    return result;\n}\n","import { hasTagSupportChanged } from '../hasTagSupportChanged.function.js';\nimport { processSubjectComponent } from './processSubjectComponent.function.js';\nimport { destroyTagMemory } from '../destroyTag.function.js';\nimport { renderTagSupport } from '../render/renderTagSupport.function.js';\nimport { callbackPropOwner } from '../../alterProp.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nexport function updateExistingTagComponent(ownerSupport, tagSupport, // lastest\nsubject, insertBefore) {\n    let lastSupport = subject.tagSupport?.global.newest; // || subject.tagSupport\n    let oldestTag = lastSupport.global.oldest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = tagSupport.templater.wrapper;\n    let isSameTag = false;\n    if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.parentWrap.original;\n        const newFunction = newWrapper.parentWrap.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = tagSupport.templater;\n    if (!isSameTag) {\n        const oldestSupport = lastSupport.global.oldest;\n        destroyTagMemory(oldestSupport);\n        return processSubjectComponent(templater, subject, insertBefore, ownerSupport, {\n            counts: { added: 0, removed: 0 },\n        });\n    }\n    else {\n        const hasChanged = hasTagSupportChanged(lastSupport, tagSupport, templater);\n        if (!hasChanged) {\n            // if the new props are an object then implicitly since no change, the old props are an object\n            const newProps = templater.props;\n            syncFunctionProps(lastSupport, ownerSupport, newProps);\n            return lastSupport; // its the same tag component\n        }\n    }\n    const previous = lastSupport.global.newest;\n    const newSupport = renderTagSupport(tagSupport, false);\n    lastSupport = subject.tagSupport;\n    const newOldest = newSupport.global.oldest;\n    const hasOldest = newOldest ? true : false;\n    if (!hasOldest) {\n        return buildNewTag(newSupport, insertBefore, lastSupport, subject);\n    }\n    if (newOldest && templater.children._value.length) {\n        const oldKidsSub = newOldest.templater.children;\n        oldKidsSub.next(templater.children._value);\n    }\n    // detect if both the function is the same and the return is the same\n    const isLikeTag = isSameTag && isLikeTags(previous, newSupport);\n    if (isLikeTag) {\n        subject.tagSupport = newSupport;\n        oldestTag.updateBy(newSupport); // the oldest tag has element references\n        return newSupport;\n    }\n    else {\n        // Although function looked the same it returned a different html result\n        if (isSameTag && lastSupport) {\n            destroyTagMemory(lastSupport);\n            newSupport.global.context = {}; // do not share previous outputs\n        }\n        oldestTag = undefined;\n    }\n    if (!oldestTag) {\n        lastSupport = newSupport;\n        buildNewTag(newSupport, lastSupport.global.insertBefore, lastSupport, subject);\n    }\n    lastSupport.global.newest = newSupport;\n    return newSupport;\n}\nfunction buildNewTag(newSupport, oldInsertBefore, oldTagSupport, subject) {\n    newSupport.buildBeforeElement(oldInsertBefore, {\n        counts: { added: 0, removed: 0 },\n    });\n    newSupport.global.oldest = newSupport;\n    newSupport.global.newest = newSupport;\n    oldTagSupport.global.oldest = newSupport;\n    oldTagSupport.global.newest = newSupport;\n    subject.tagSupport = newSupport;\n    return newSupport;\n}\nfunction syncFunctionProps(lastSupport, ownerSupport, newPropsArray) {\n    lastSupport = lastSupport.global.newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.latestCloned;\n    const prevSupport = ownerSupport.global.newest;\n    for (let index = newPropsArray.length - 1; index >= 0; --index) {\n        const argPosition = newPropsArray[index];\n        if (typeof (argPosition) !== 'object') {\n            return;\n        }\n        const priorProps = priorPropsArray[index];\n        if (typeof (priorProps) !== 'object') {\n            return;\n        }\n        for (const name in argPosition) {\n            const value = argPosition[name];\n            if (!(value instanceof Function)) {\n                continue;\n            }\n            const newCallback = argPosition[name]; // || value\n            const original = newCallback instanceof Function && newCallback.toCall;\n            if (original) {\n                continue; // already previously converted\n            }\n            // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n            priorProps[name].toCall = (...args) => {\n                return callbackPropOwner(newCallback, // value, // newOriginal,\n                args, prevSupport, // ??? <= ownerSupport\n                []);\n            };\n        }\n    }\n}\n","import { TagSupport } from '../TagSupport.class.js';\nimport { TemplaterResult } from '../TemplaterResult.class.js';\nimport { isTagClass, isTagTemplater } from '../../isInstance.js';\nimport { processTagArray } from './processTagArray.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { processRegularValue } from './processRegularValue.function.js';\nimport { checkDestroyPrevious, restoreTagMarker } from '../checkDestroyPrevious.function.js';\nimport { processSubjectComponent } from './processSubjectComponent.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { setupNewTemplater, getFakeTemplater, processTag } from './processTag.function.js';\nimport { swapInsertBefore } from '../setTagPlaceholder.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getValueType } from '../getValueType.function.js';\nexport function updateExistingValue(subject, value, ownerSupport, insertBefore) {\n    const subjectTag = subject;\n    const valueType = getValueType(value);\n    checkDestroyPrevious(subject, value, insertBefore, valueType);\n    // handle already seen tag components\n    if (valueType === ValueTypes.tagComponent) {\n        return prepareUpdateToComponent(value, subjectTag, insertBefore, ownerSupport);\n    }\n    // was component but no longer\n    const tagSupport = subjectTag.tagSupport;\n    if (tagSupport) {\n        if (valueType === ValueTypes.function) {\n            return subjectTag; // its a oneRender tag\n        }\n        handleStillTag(subject, value, ownerSupport);\n        return subjectTag;\n    }\n    switch (valueType) {\n        case ValueTypes.tagArray:\n            processTagArray(subject, value, insertBefore, // oldInsertBefore as InsertBefore,\n            ownerSupport, { counts: {\n                    added: 0,\n                    removed: 0,\n                } });\n            return subject;\n        case ValueTypes.templater:\n            processTag(value, insertBefore, ownerSupport, subjectTag);\n            return subjectTag;\n        case ValueTypes.tag:\n            const tag = value;\n            let templater = tag.templater;\n            if (!templater) {\n                templater = getFakeTemplater();\n                tag.templater = templater;\n                templater.tag = tag;\n            }\n            processTag(templater, insertBefore, ownerSupport, subjectTag);\n            return subjectTag;\n        case ValueTypes.subject:\n            return value;\n        // now its a useless function (we don't automatically call functions)\n        case ValueTypes.function:\n            if (!subject.clone) {\n                subject.clone = swapInsertBefore(insertBefore);\n            }\n            return subject;\n    }\n    // This will cause all other values to render\n    processRegularValue(value, subject, insertBefore);\n    return subjectTag;\n}\nfunction handleStillTag(subject, value, ownerSupport) {\n    const lastSupport = subject.tagSupport;\n    let templater = value;\n    const isClass = isTagClass(value);\n    if (isClass) {\n        const tag = value;\n        templater = tag.templater;\n        if (!templater) {\n            templater = new TemplaterResult([]);\n            templater.tag = tag;\n            tag.templater = templater;\n        }\n    }\n    const valueSupport = new TagSupport(templater, ownerSupport, subject);\n    if (isClass) {\n        valueSupport.global = lastSupport.global;\n    }\n    const isSameTag = value && isLikeTags(lastSupport, valueSupport);\n    if (isTagTemplater(value)) {\n        setupNewTemplater(valueSupport, ownerSupport, subject);\n    }\n    if (isSameTag) {\n        lastSupport.updateBy(valueSupport);\n        return;\n    }\n    if (isSameTag) {\n        // const subjectTag = subject as TagSubject\n        const global = lastSupport.global;\n        const insertBefore = global.insertBefore;\n        return processTag(templater, insertBefore, ownerSupport, subject);\n    }\n    return processRegularValue(value, subject, subject.insertBefore);\n}\nfunction prepareUpdateToComponent(templater, subjectTag, insertBefore, ownerSupport) {\n    // When last value was not a component\n    if (!subjectTag.tagSupport) {\n        processSubjectComponent(templater, subjectTag, insertBefore, // oldInsertBefore as InsertBefore,\n        ownerSupport, {\n            counts: { added: 0, removed: 0 },\n        });\n        return subjectTag;\n    }\n    const tagSupport = new TagSupport(templater, ownerSupport, subjectTag);\n    const subjectSup = subjectTag.tagSupport;\n    const prevSupport = subjectSup.global.newest;\n    if (prevSupport) {\n        const newestState = prevSupport.memory.state;\n        tagSupport.memory.state.length = 0;\n        tagSupport.memory.state.push(...newestState);\n    }\n    else {\n        restoreTagMarker(subjectSup);\n        processSubjectComponent(templater, subjectTag, insertBefore, ownerSupport, {\n            counts: { added: 0, removed: 0 },\n        });\n        return subjectTag;\n    }\n    tagSupport.global = subjectSup.global;\n    subjectTag.tagSupport = tagSupport;\n    updateExistingTagComponent(ownerSupport, tagSupport, // latest value\n    subjectTag, insertBefore);\n    return subjectTag;\n}\n","import { variablePrefix } from '../tag/Tag.class.js';\nimport { elementInitCheck } from './elementInitCheck.js';\nimport { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { isTagArray, isTagComponent } from '../isInstance.js';\nimport { scanTextAreaValue } from './scanTextAreaValue.function.js';\nimport { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { swapInsertBefore } from '../tag/setTagPlaceholder.function.js';\nexport function interpolateTemplate(insertBefore, // <template end interpolate /> (will be removed)\ncontext, // variable scope of {`__tagvar${index}`:'x'}\nownerSupport, // Tag class\ncounts, // used for animation stagger computing\noptions) {\n    // TODO: THe clones array is useless here\n    const clones = [];\n    if (!insertBefore.hasAttribute('end')) {\n        return { clones }; // only care about <template end>\n    }\n    const variableName = insertBefore.getAttribute('id');\n    if (variableName?.substring(0, variablePrefix.length) !== variablePrefix) {\n        return { clones }; // ignore, not a tagVar\n    }\n    const existingSubject = context[variableName];\n    const isDynamic = isTagComponent(existingSubject._value) || isTagArray(existingSubject.value);\n    // process dynamics later\n    if (isDynamic) {\n        return {\n            clones,\n            tagComponent: {\n                variableName,\n                ownerSupport,\n                subject: existingSubject,\n                insertBefore\n            }\n        };\n    }\n    subscribeToTemplate(insertBefore, existingSubject, ownerSupport, counts);\n    return { clones };\n}\nexport function subscribeToTemplate(insertBefore, subject, ownerSupport, counts) {\n    let called = false;\n    const onValue = (value) => {\n        if (called) {\n            updateExistingValue(subject, value, ownerSupport, insertBefore);\n            return;\n        }\n        const templater = value;\n        processFirstSubjectValue(templater, subject, insertBefore, ownerSupport, {\n            counts: { ...counts },\n        });\n        called = true;\n    };\n    let mutatingCallback = onValue;\n    const callback = (value) => mutatingCallback(value);\n    const sub = subject.subscribe(callback);\n    // on subscribe, the Subject did NOT emit immediately. Lets pull the template off the document\n    if (insertBefore.parentNode) {\n        const clone = subject.clone = swapInsertBefore(insertBefore);\n        mutatingCallback = v => {\n            const parentNode = clone.parentNode;\n            parentNode.insertBefore(insertBefore, clone);\n            parentNode.removeChild(clone);\n            delete subject.clone;\n            mutatingCallback = onValue; // all future calls will just produce value\n            onValue(v); // calls for rending\n        };\n    }\n    ownerSupport.global.subscriptions.push(sub);\n}\nexport function afterElmBuild(elm, options, context, ownerSupport) {\n    if (!elm.getAttribute) {\n        return;\n    }\n    const tagName = elm.nodeName; // elm.tagName\n    if (tagName === 'TEXTAREA') {\n        scanTextAreaValue(elm, context, ownerSupport);\n    }\n    let diff = options.counts.added;\n    diff = elementInitCheck(elm, options.counts) - diff;\n    const children = elm.children;\n    if (children) {\n        for (let index = children.length - 1; index >= 0; --index) {\n            const child = children[index];\n            const subOptions = {\n                ...options,\n                counts: options.counts,\n            };\n            afterElmBuild(child, subOptions, context, ownerSupport);\n        }\n    }\n}\n","export function elementInitCheck(nextSibling, counts) {\n    const onInitDoubleWrap = nextSibling.oninit;\n    if (!onInitDoubleWrap) {\n        return counts.added;\n    }\n    const onInitWrap = onInitDoubleWrap.tagFunction;\n    if (!onInitWrap) {\n        return counts.added;\n    }\n    const onInit = onInitWrap.tagFunction;\n    if (!onInit) {\n        return counts.added;\n    }\n    const event = { target: nextSibling, stagger: counts.added };\n    onInit(event);\n    return ++counts.added;\n}\n","import { interpolateTemplate } from './interpolateTemplate.js';\nexport function interpolateContentTemplates(context, tagSupport, options, children) {\n    // counting for animation stagger computing\n    const counts = options.counts;\n    const clones = [];\n    const tagComponents = [];\n    const childLength = children.length;\n    for (let index = childLength - 1; index >= 0; --index) {\n        const child = children[index];\n        const { clones: nextClones, tagComponent } = interpolateTemplate(child, context, tagSupport, counts, options);\n        clones.push(...nextClones);\n        if (tagComponent) {\n            tagComponents.push(tagComponent);\n            continue;\n        }\n        if (child.children) {\n            for (let index = child.children.length - 1; index >= 0; --index) {\n                const subChild = child.children[index];\n                // IF <template end /> its a variable to be processed\n                if (isRenderEndTemplate(subChild)) {\n                    const { tagComponent } = interpolateTemplate(subChild, context, tagSupport, counts, options);\n                    if (tagComponent) {\n                        tagComponents.push(tagComponent);\n                    }\n                }\n                const { clones: nextClones, tagComponents: nextTagComponent } = interpolateContentTemplates(context, tagSupport, options, subChild.children);\n                clones.push(...nextClones);\n                tagComponents.push(...nextTagComponent);\n            }\n        }\n    }\n    return { clones, tagComponents };\n}\nfunction isRenderEndTemplate(child) {\n    const isTemplate = child.tagName === 'TEMPLATE';\n    return isTemplate &&\n        child.getAttribute('interpolate') !== undefined &&\n        child.getAttribute('end') !== undefined;\n}\n","import { interpolateAttributes } from './interpolateAttributes.js';\nimport { interpolateToTemplates } from './interpolations.js';\nimport { interpolateContentTemplates } from './interpolateContentTemplates.js';\nimport { escapeSearch, variablePrefix } from '../tag/Tag.class.js';\n/** Review elements within an element */\nexport function interpolateElement(container, // element containing innerHTML to review interpolations\ncontext, // variables used to evaluate\ninterpolatedTemplates, ownerSupport, options) {\n    const clones = [];\n    const tagComponents = [];\n    const result = interpolatedTemplates.interpolation;\n    const template = container.children[0];\n    const children = template.content.children;\n    if (result.keys.length) {\n        const { clones: nextClones, tagComponents: nextTagComponents } = interpolateContentTemplates(context, ownerSupport, options, children);\n        clones.push(...nextClones);\n        tagComponents.push(...nextTagComponents);\n    }\n    interpolateAttributes(template, context, ownerSupport);\n    processChildrenAttributes(children, context, ownerSupport);\n    return { clones, tagComponents };\n}\nfunction processChildrenAttributes(children, context, ownerSupport) {\n    for (let index = children.length - 1; index >= 0; --index) {\n        const child = children[index];\n        interpolateAttributes(child, context, ownerSupport);\n        if (child.children) {\n            processChildrenAttributes(child.children, context, ownerSupport);\n        }\n    }\n}\nexport function interpolateString(string) {\n    const result = interpolateToTemplates(string);\n    result.string = result.string.replace(escapeSearch, variablePrefix);\n    return result;\n}\n","import { buildClones } from '../render.js';\nimport { afterElmBuild } from './interpolateTemplate.js';\nexport function afterInterpolateElement(container, insertBefore, tagSupport, context, options) {\n    const clones = buildClones(container, insertBefore);\n    if (!clones.length) {\n        return clones;\n    }\n    for (let index = clones.length - 1; index >= 0; --index) {\n        const clone = clones[index];\n        afterElmBuild(clone, options, context, tagSupport);\n        tagSupport.clones.push(clone);\n    }\n    return clones;\n}\n","export function buildClones(temporary, insertBefore) {\n    const clones = [];\n    const template = temporary.children[0];\n    let nextSibling = template.content.firstChild;\n    const fragment = document.createDocumentFragment();\n    while (nextSibling) {\n        const nextNextSibling = nextSibling.nextSibling;\n        clones.push(nextSibling);\n        fragment.appendChild(nextSibling);\n        nextSibling = nextNextSibling;\n    }\n    if (insertBefore.parentNode) {\n        const parentNode = insertBefore.parentNode;\n        parentNode.insertBefore(fragment, insertBefore);\n    }\n    return clones;\n}\n","import { escapeVariable, variablePrefix } from './Tag.class.js';\nimport { deepClone } from '../deepFunctions.js';\nimport { isTagComponent } from '../isInstance.js';\nimport { cloneValueArray } from './cloneValueArray.function.js';\nimport { restoreTagMarker } from './checkDestroyPrevious.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nimport { getChildTagsToDestroy } from './destroy.support.js';\nimport { elementDestroyCheck } from './elementDestroyCheck.function.js';\nimport { updateContextItem } from './update/updateContextItem.function.js';\nimport { processNewValue } from './update/processNewValue.function.js';\nimport { setTagPlaceholder } from './setTagPlaceholder.function.js';\nimport { interpolateElement, interpolateString } from '../interpolations/interpolateElement.js';\nimport { subscribeToTemplate } from '../interpolations/interpolateTemplate.js';\nimport { afterInterpolateElement } from '../interpolations/afterInterpolateElement.function.js';\nimport { Subject } from '../subject/Subject.class.js';\nconst prefixSearch = new RegExp(variablePrefix, 'g');\n/** used only for apps, otherwise use TagSupport */\nexport class BaseTagSupport {\n    templater;\n    subject;\n    isApp = true;\n    appElement; // only seen on this.getAppTagSupport().appElement\n    strings;\n    values;\n    propsConfig;\n    // stays with current render\n    memory = {\n        state: [],\n    };\n    clones = []; // elements on document. Needed at destroy process to know what to destroy\n    // travels with all rerenderings\n    global = {\n        destroy$: new Subject(),\n        context: {}, // populated after reading interpolated.values array converted to an object {variable0, variable:1}\n        providers: [],\n        /** Indicator of re-rending. Saves from double rending something already rendered */\n        renderCount: 0,\n        deleted: false,\n        subscriptions: [],\n        oldest: this\n    };\n    hasLiveElements = false;\n    childTags = []; // tags on me\n    constructor(templater, subject) {\n        this.templater = templater;\n        this.subject = subject;\n        const children = templater.children; // children tags passed in as arguments\n        const kidValue = children.value;\n        const props = templater.props; // natural props\n        const latestCloned = props.map(props => deepClone(props));\n        this.propsConfig = {\n            latest: props,\n            latestCloned, // assume its HTML children and then detect\n            lastClonedKidValues: kidValue.map(kid => {\n                const cloneValues = cloneValueArray(kid.values);\n                return cloneValues;\n            })\n        };\n    }\n    /** Function that kicks off actually putting tags down as HTML elements */\n    buildBeforeElement(insertBefore, options = {\n        counts: { added: 0, removed: 0 },\n    }) {\n        const subject = this.subject;\n        const global = this.global;\n        global.insertBefore = insertBefore;\n        if (!global.placeholder) {\n            setTagPlaceholder(global);\n        }\n        const placeholderElm = global.placeholder;\n        global.oldest = this;\n        global.newest = this;\n        subject.tagSupport = this;\n        this.hasLiveElements = true;\n        const context = this.update();\n        const template = this.getTemplate();\n        const elementContainer = document.createDocumentFragment();\n        const tempDraw = document.createElement('template');\n        tempDraw.innerHTML = template.string;\n        elementContainer.appendChild(tempDraw);\n        // Search/replace innerHTML variables but don't interpolate tag components just yet\n        const { tagComponents } = interpolateElement(elementContainer, context, template, this, // ownerSupport,\n        {\n            counts: options.counts\n        });\n        afterInterpolateElement(elementContainer, placeholderElm, this, // ownerSupport\n        context, options);\n        // Any tag components that were found should be processed AFTER the owner processes its elements. Avoid double processing of elements attributes like (oninit)=${}\n        const length = tagComponents.length;\n        for (let index = 0; index < length; ++index) {\n            const tagComponent = tagComponents[index];\n            subscribeToTemplate(tagComponent.insertBefore, tagComponent.subject, tagComponent.ownerSupport, options.counts);\n            afterInterpolateElement(elementContainer, tagComponent.insertBefore, tagComponent.ownerSupport, context, options);\n        }\n    }\n    getTemplate() {\n        const thisTag = this.templater.tag;\n        const strings = this.strings || thisTag.strings;\n        const values = this.values || thisTag.values;\n        const string = strings.map((string, index) => {\n            const safeString = string.replace(prefixSearch, escapeVariable);\n            const endString = safeString + (values.length > index ? `{${variablePrefix}${index}}` : '');\n            const trimString = endString.replace(/>\\s*/g, '>').replace(/\\s*</g, '<');\n            return trimString;\n        }).join('');\n        const interpolation = interpolateString(string);\n        return {\n            interpolation,\n            string: interpolation.string,\n            strings,\n            values,\n            context: this.global.context || {},\n        };\n    }\n    update() {\n        return this.updateContext(this.global.context);\n    }\n    updateContext(context) {\n        const thisTag = this.templater.tag;\n        const strings = this.strings || thisTag.strings;\n        const values = this.values || thisTag.values;\n        strings.map((_string, index) => {\n            const hasValue = values.length > index;\n            if (!hasValue) {\n                return;\n            }\n            const variableName = variablePrefix + index;\n            const value = values[index];\n            // is something already there?\n            const exists = variableName in context;\n            if (exists) {\n                return updateContextItem(context, variableName, value);\n            }\n            // 🆕 First time values below\n            context[variableName] = processNewValue(value, this);\n        });\n        return context;\n    }\n    updateBy(tagSupport) {\n        const tempTag = tagSupport.templater.tag;\n        this.updateConfig(tempTag.strings, tempTag.values);\n    }\n    updateConfig(strings, values) {\n        this.strings = strings;\n        this.updateValues(values);\n    }\n    updateValues(values) {\n        this.values = values;\n        return this.updateContext(this.global.context);\n    }\n    destroy(options = {\n        stagger: 0,\n        byParent: false, // Only destroy clones of direct children\n    }) {\n        const firstDestroy = !options.byParent;\n        const global = this.global;\n        const subject = this.subject;\n        const childTags = options.byParent ? [] : getChildTagsToDestroy(this.childTags);\n        if (firstDestroy && isTagComponent(this.templater)) {\n            global.destroy$.next();\n            runBeforeDestroy(this, this);\n        }\n        this.destroySubscriptions();\n        // signify immediately child has been deleted (looked for during event processing)\n        for (let index = childTags.length - 1; index >= 0; --index) {\n            const child = childTags[index];\n            const subGlobal = child.global;\n            delete subGlobal.newest;\n            subGlobal.deleted = true;\n            if (isTagComponent(child.templater)) {\n                runBeforeDestroy(child, child);\n            }\n        }\n        // HTML DOM manipulation. Put back down the template tag\n        const insertBefore = global.insertBefore;\n        if (insertBefore.nodeName === 'TEMPLATE') {\n            const placeholder = global.placeholder;\n            if (placeholder && !('arrayValue' in this.memory)) {\n                if (!options.byParent) {\n                    restoreTagMarker(this);\n                }\n            }\n        }\n        let mainPromise;\n        const ownerTagSupport = this.ownerTagSupport;\n        if (ownerTagSupport) {\n            ownerTagSupport.childTags = ownerTagSupport.childTags.filter(child => child !== this);\n        }\n        if (firstDestroy) {\n            const { stagger, promise } = this.destroyClones(options);\n            options.stagger = stagger;\n            if (promise) {\n                mainPromise = promise;\n            }\n        }\n        else {\n            this.destroyClones();\n        }\n        // data reset\n        delete global.placeholder;\n        global.context = {};\n        delete global.oldest; // may not be needed\n        delete global.newest;\n        global.deleted = true;\n        this.childTags.length = 0;\n        this.hasLiveElements = false;\n        delete subject.tagSupport;\n        if (mainPromise) {\n            mainPromise = mainPromise.then(async () => {\n                const promises = childTags.map(kid => kid.destroy({ stagger: 0, byParent: true }));\n                return Promise.all(promises);\n            });\n        }\n        else {\n            mainPromise = Promise.all(childTags.map(kid => kid.destroy({ stagger: 0, byParent: true })));\n        }\n        return mainPromise.then(() => options.stagger);\n    }\n    destroyClones({ stagger } = {\n        stagger: 0,\n    }) {\n        const oldClones = [...this.clones];\n        this.clones.length = 0; // tag maybe used for something else\n        const promises = oldClones.map(clone => this.checkCloneRemoval(clone, stagger)).filter(x => x); // only return promises\n        // check subjects that may have clones attached to them\n        const oldContext = this.global.context;\n        for (const name in oldContext) {\n            const value = oldContext[name];\n            const clone = value.clone;\n            if (clone?.parentNode) {\n                clone.parentNode.removeChild(clone);\n            }\n        }\n        if (promises.length) {\n            return { promise: Promise.all(promises), stagger };\n        }\n        return { stagger };\n    }\n    /** Reviews elements for the presences of ondestroy */\n    checkCloneRemoval(clone, stagger) {\n        let promise;\n        const customElm = clone;\n        if (customElm.ondestroy) {\n            promise = elementDestroyCheck(customElm, stagger);\n        }\n        const next = () => {\n            const parentNode = clone.parentNode;\n            if (parentNode) {\n                parentNode.removeChild(clone);\n            }\n            const ownerSupport = this.ownerTagSupport;\n            if (ownerSupport) {\n                // Sometimes my clones were first registered to my owner, remove them from owner\n                ownerSupport.clones = ownerSupport.clones.filter(compareClone => compareClone !== clone);\n            }\n        };\n        if (promise instanceof Promise) {\n            return promise.then(next);\n        }\n        else {\n            next();\n        }\n        return promise;\n    }\n    destroySubscriptions() {\n        const subs = this.global.subscriptions;\n        for (let index = subs.length - 1; index >= 0; --index) {\n            subs[index].unsubscribe();\n        }\n        subs.length = 0;\n    }\n}\nexport class TagSupport extends BaseTagSupport {\n    templater;\n    ownerTagSupport;\n    subject;\n    version;\n    isApp = false;\n    constructor(templater, // at runtime rendering of a tag, it needs to be married to a new TagSupport()\n    ownerTagSupport, subject, version = 0) {\n        super(templater, subject);\n        this.templater = templater;\n        this.ownerTagSupport = ownerTagSupport;\n        this.subject = subject;\n        this.version = version;\n    }\n    getAppTagSupport() {\n        let tag = this;\n        while (tag.ownerTagSupport) {\n            tag = tag.ownerTagSupport;\n        }\n        return tag;\n    }\n}\nfunction restoreTagMarkers(support) {\n    restoreTagMarker(support);\n    const childTags = support.childTags;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        restoreTagMarkers(childTags[index].global.oldest);\n    }\n}\n","import { isSubjectInstance, isTagComponent } from '../../isInstance.js';\nimport { TagSupport } from '../TagSupport.class.js';\nexport function updateContextItem(context, variableName, value) {\n    const subject = context[variableName];\n    const tagSubject = subject;\n    const tagSupport = tagSubject.tagSupport;\n    if (tagSupport) {\n        if (value) {\n            if (isTagComponent(value)) {\n                const templater = value;\n                let newSupport = new TagSupport(templater, tagSupport.ownerTagSupport, subject);\n                // TODO: Need to review if this is used\n                if (isTagComponent(tagSupport)) {\n                    console.warn('👉 deprecated code is being used #shareTemplaterGlobal 👈');\n                    shareTemplaterGlobal(tagSupport, newSupport);\n                }\n            }\n        }\n    }\n    if (isSubjectInstance(value)) {\n        return; // emits on its own\n    }\n    // listeners will evaluate updated values to possibly update display(s)\n    subject.next(value);\n    return;\n}\nfunction shareTemplaterGlobal(oldTagSupport, tagSupport) {\n    const oldTemp = oldTagSupport.templater;\n    const oldWrap = oldTemp.wrapper; // tag versus component\n    const oldValueFn = oldWrap.parentWrap.original;\n    const templater = tagSupport.templater;\n    const newWrapper = templater.wrapper;\n    const newValueFn = newWrapper?.parentWrap.original;\n    const fnMatched = oldValueFn === newValueFn;\n    if (fnMatched) {\n        tagSupport.global = oldTagSupport.global;\n        const newest = oldTagSupport.global.newest;\n        if (newest) {\n            const prevState = newest.memory.state;\n            tagSupport.memory.state.length = 0;\n            tagSupport.memory.state.push(...prevState);\n        }\n    }\n}\n","export function elementDestroyCheck(nextSibling, stagger) {\n    const onDestroyDoubleWrap = nextSibling.ondestroy;\n    if (!onDestroyDoubleWrap) {\n        return;\n    }\n    const onDestroyWrap = onDestroyDoubleWrap.tagFunction;\n    if (!onDestroyWrap) {\n        return;\n    }\n    const onDestroy = onDestroyWrap.tagFunction;\n    if (!onDestroy) {\n        return;\n    }\n    const event = { target: nextSibling, stagger };\n    return onDestroy(event);\n}\n","import { setUse } from '../state/index.js';\nimport { TemplaterResult } from './TemplaterResult.class.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nlet tagCount = 0;\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent) {\n    /** function developer triggers */\n    const parentWrap = (function tagWrapper(...props) {\n        const templater = new TemplaterResult(props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        if (!innerTagWrap.parentWrap) {\n            innerTagWrap.parentWrap = parentWrap;\n        }\n        templater.tagged = true;\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }) // we override the function provided and pretend original is what's returned\n    ;\n    parentWrap.original = tagComponent;\n    parentWrap.compareTo = tagComponent.toString();\n    const tag = tagComponent;\n    parentWrap.isTag = true;\n    parentWrap.original = tag;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUse;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\n/** Used to create a tag component that renders once and has no addition rendering cycles */\ntag.oneRender = (...props) => {\n    throw new Error('Do not call function tag.oneRender but instead set it as: `(props) => tag.oneRender = (state) => html`` `');\n};\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\ntag.route = (routeProps) => {\n    throw new Error('Do not call function tag.route but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\ntag.app = (routeTag) => {\n    throw new Error('Do not call function tag.route but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\nObject.defineProperty(tag, 'oneRender', {\n    set(oneRenderFunction) {\n        oneRenderFunction.oneRender = true;\n    },\n});\n","import { runTagCallback } from '../interpolations/bindSubjectCallback.function.js';\nimport { deepClone } from '../deepFunctions.js';\nimport { TagSupport } from './TagSupport.class.js';\nimport { alterProp } from '../alterProp.function.js';\nimport { setUse } from '../state/setUse.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    const stateArray = setUse.memory.stateConfig.array;\n    // this function gets called by taggedjs\n    const wrapper = function (newTagSupport, subject) {\n        const global = newTagSupport.global;\n        ++global.renderCount;\n        const childSubject = templater.children;\n        const lastArray = global.oldest?.templater.children.lastArray;\n        if (lastArray) {\n            childSubject.lastArray = lastArray;\n        }\n        // result.original\n        const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n        let props = templater.props;\n        let castedProps = props.map(prop => alterProp(prop, newTagSupport.ownerTagSupport, stateArray, newTagSupport));\n        const latestCloned = props.map(props => deepClone(props)); // castedProps\n        // CALL ORIGINAL COMPONENT FUNCTION\n        let tag = originalFunction(...castedProps);\n        if (tag instanceof Function) {\n            tag = tag();\n        }\n        tag.templater = templater;\n        templater.tag = tag;\n        const tagSupport = new TagSupport(templater, newTagSupport.ownerTagSupport, subject, global.renderCount);\n        tagSupport.global = global;\n        tagSupport.propsConfig = {\n            latest: props,\n            latestCloned,\n            lastClonedKidValues: tagSupport.propsConfig.lastClonedKidValues,\n        };\n        const nowState = setUse.memory.stateConfig.array;\n        tagSupport.memory.state.push(...nowState);\n        if (templater.madeChildIntoSubject) {\n            const value = childSubject.value;\n            for (let index = value.length - 1; index >= 0; --index) {\n                const kid = value[index];\n                const values = kid.values;\n                for (let index = values.length - 1; index >= 0; --index) {\n                    const value = values[index];\n                    if (!(value instanceof Function)) {\n                        continue;\n                    }\n                    const valuesValue = kid.values[index];\n                    if (valuesValue.isChildOverride) {\n                        continue; // already overwritten\n                    }\n                    // all functions need to report to me\n                    kid.values[index] = function (...args) {\n                        const ownerSupport = tagSupport.ownerTagSupport;\n                        return runTagCallback(value, // callback\n                        ownerSupport, this, // bindTo\n                        args);\n                    };\n                    valuesValue.isChildOverride = true;\n                }\n            }\n        }\n        return tagSupport;\n    };\n    return wrapper;\n}\n","import { Tag } from './Tag.class.js';\nexport function html(strings, ...values) {\n    return new Tag(strings, values);\n}\n","import { BaseTagSupport } from './TagSupport.class.js';\nimport { runAfterRender, runBeforeRender } from './tagRunner.js';\nimport { ValueSubject } from '../subject/ValueSubject.js';\nconst appElements = [];\n/**\n *\n * @param app taggedjs tag\n * @param element HTMLElement\n * @param props object\n * @returns\n */\nexport function tagElement(app, // (...args: unknown[]) => TemplaterResult,\nelement, props) {\n    const appElmIndex = appElements.findIndex(appElm => appElm.element === element);\n    if (appElmIndex >= 0) {\n        appElements[appElmIndex].tagSupport.destroy();\n        appElements.splice(appElmIndex, 1);\n        // an element already had an app on it\n        console.warn('Found and destroyed app element already rendered to element', { element });\n    }\n    // Create the app which returns [props, runOneTimeFunction]\n    const wrapper = app(props);\n    // have a function setup and call the tagWrapper with (props, {update, async, on})\n    const tagSupport = runWrapper(wrapper);\n    // TODO: is the below needed?\n    tagSupport.appElement = element;\n    tagSupport.isApp = true;\n    tagSupport.global.isApp = true;\n    const templateElm = document.createElement('template');\n    templateElm.setAttribute('id', 'app-tag-' + appElements.length);\n    templateElm.setAttribute('app-tag-detail', appElements.length.toString());\n    const fragment = document.createDocumentFragment();\n    fragment.appendChild(templateElm);\n    element.destroy = async () => {\n        await tagSupport.destroy();\n        const insertBefore = tagSupport.global.insertBefore;\n        const parentNode = insertBefore.parentNode;\n        parentNode.removeChild(insertBefore);\n    };\n    tagSupport.buildBeforeElement(templateElm);\n    tagSupport.global.oldest = tagSupport;\n    tagSupport.global.newest = tagSupport;\n    element.setUse = app.original.setUse;\n    appElements.push({ element, tagSupport });\n    element.appendChild(fragment);\n    return {\n        tagSupport,\n        tags: app.original.tags,\n    };\n}\nexport function runWrapper(templater) {\n    let newSupport = {};\n    const subject = new ValueSubject(newSupport);\n    newSupport = new BaseTagSupport(templater, subject);\n    subject.next(templater);\n    subject.tagSupport = newSupport;\n    runBeforeRender(newSupport, undefined);\n    // Call the apps function for our tag templater\n    const wrapper = templater.wrapper;\n    const tagSupport = wrapper(newSupport, subject);\n    runAfterRender(newSupport, tagSupport);\n    return tagSupport;\n}\n","export * from './tag/index.js';\nexport * from './errors.js';\nexport * from './subject.types.js';\nexport * from './isInstance.js';\nexport * from './state/index.js';\nexport * from './subject/index.js';\nexport * from './tag/TagSupport.class.js';\nexport * from './interpolations/ElementTargetEvent.interface.js';\nexport * from './interpolations/interpolateElement.js';\nexport * from './interpolations/InsertBefore.type.js';\nexport { tagElement } from './tag/tagElement.js';\nexport { Tag, variablePrefix } from './tag/Tag.class.js';\nexport { runBeforeRender } from './tag/tagRunner.js';\nexport { renderTagSupport } from './tag/render/renderTagSupport.function.js';\nexport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nexport { isLikeValueSets } from './tag/isLikeTags.function.js';\nimport { renderTagOnly } from './tag/render/renderTagOnly.function.js';\nimport { renderTagSupport } from './tag/render/renderTagSupport.function.js';\nimport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nimport { tagElement } from './tag/tagElement.js';\nexport const hmr = {\n    tagElement, renderWithSupport, renderTagSupport,\n    renderTagOnly,\n};\n"],"names":["ValueTypes","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","RouteQuery","name","isStaticTag","value","tag","templater","includes","tagJsType","isTagTemplater","isTagComponent","tagComponent","isTagClass","isSubjectInstance","subject","isSubject","subscribe","isTagArray","Array","every","x","combineLatest","subjects","output","Subject","subscribeWith","callback","valuesSeen","values","setValue","index","length","subscription","clones","shift","subscriptions","map","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","next","newValue","handler","methodResponse","setHandler","onSubscription","subscribers","_value","set","constructor","this","defineValueOn","countSubject","globalSubCount$","unsubscribe","findIndex","sub","splice","removeSubFromArray","add","push","getSubscription","orgCallback","lastValue","count","emit","subs","toPromise","Promise","res","toCallback","pipe","operations","setMethods","all","args","arg","static","ValueSubject","super","willCallback","utils","willPromise","then","willSubscribe","getSupportInCycle","setUse","memory","stateConfig","tagSupport","use","useMe","beforeRender","beforeRedraw","afterRender","beforeDestroy","tagUse","TagError","Error","details","message","errorCode","ArrayNoKeyError","StateMismatchError","SyncCallbackError","array","state","config","rearray","stateLength","getStateValue","initState","defaultValue","checkValue","oldState","StateEchoBack","getCallbackValue","toString","JSON","stringify","console","error","wrapper","oldStates","newStates","tagFunction","parentWrap","original","warn","item","syncStates","stateFrom","stateTo","fromValue","getSetMethod","restate","oldValue","initValue","Function","newState","global","newest","result","watch","currentValues","setupWatch","defaultFinally","init","before","final","previous","pastResult","undefined","previousValues","defineOnMethod","getWatch","attachTo","setup","oldWatch","method","firstSupport","nowTagSupport","setTo","oldestState","letState","makeStateResult","y","letProp","getSetProp","myProp","deepClone","makeDeepClone","WeakMap","visited","has","Date","RegExp","clone","isArray","create","getPrototypeOf","i","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","getTime","isArrayDeepEqual","keys1","keys","keys2","isObjectDeepEqual","newWatch","providerConfig","providers","ownerSupport","constructMethod","stateDiffMemory","stateDiff","provider","oldStateCount","instance","cm","compareTo","inject","owner","ownerTagSupport","find","msg","run","handleProviderChanges","appSupport","tagsWithProvider","getTagsWithProvider","renderCount","deleted","renderTagSupport","hasProvider","xProvider","childTags","isLikeTags","tagSupport0","tagSupport1","templater0","templater1","tag0","tag1","strings0","strings","strings1","string","isLikeValueSets","values0","values1","destroyTagMemory","oldTagSupport","oldest","destroy","destroyTagSupportPast","context","runBeforeRender","runAfterRender","tagClosed$","runBeforeDestroy","renderTagOnly","newTagSupport","prevSupport","oldRenderCount","parentSupport","lastOwnerSupport","runtimeOwnerSupport","lastState","runBeforeRedraw","beforeWithRender","reSupport","renderWithSupport","lastSupport","oldGlobal","insertBefore","destroyUnlikeTags","renderExistingTag","oldestSupport","newSupport","preRenderCount","providersWithChanges","filter","getAppTagSupport","providersChangeCheck","updateBy","renderUp","ownerTag","selfPropChange","nowProps","props","latestProps","propsConfig","latestCloned","callbackStateUpdate","maybePromise","finally","innerCallback","a","b","c","d","e","f","callbackMaker","originalGetter","initMemory","onInit","onDestroy","destroy$","setCurrentTagSupport","support","childrenCurrentSupport","children","variablePrefix","escapeVariable","escapeSearch","Tag","arrayValue","html","TemplaterResult","tagged","madeChildIntoSubject","childSubject","templaterResult","kid","kidsToTagArraySubject","tags","runTagCallback","bindTo","myGlobal","callbackResult","bind","insertAfter","newNode","referenceNode","parentNode","nextSibling","isSimpleType","destroyArrayTag","counts","stagger","removed","removeChild","placeholderElm","placeholder","getValueType","type","function","date","tagArray","unknown","cloneValueArray","getChildTagsToDestroy","allTags","cTag","processNewTag","TagSupport","swapInsertBefore","document","createTextNode","inputAttribute","element","names","split","style","classList","remove","startRegX","endRegX","isTagVar","search","processAttribute","attrName","child","scope","howToSet","getContextValueByVarString","processNameValueAttr","processScopedNameValueAttr","attrValue","removeAttribute","processNameOnlyAttr","isSpecialAttr","replace","reverse","join","isSpecial","action","newAttrValue","oneRender","isChildOverride","subjectFunction","bindSubjectCallback","fun","isDeadValue","processAttributeSubjectValue","howToSetAttribute","setAttribute","howToSetInputValue","interpolateAttributes","attrNames","getAttributeNames","nodeName","getAttribute","interpolateReplace","processTagResult","subjectTag","processTagResultUpdate","buildBeforeElement","processSubjectComponent","options","label","substring","preClones","myClones","fClone","renderSubjectComponent","processTag","newTagSupportByTemplater","added","tagFakeTemplater","getFakeTemplater","fake","isTag","setupNewTemplater","processTagArray","lastArray","setPlaceholderElm","runtimeInsertBefore","lessLength","subTag","lastTag","newArrayValue","lastArrayValue","destroyItem","valueA","valueB","areLikeValues","last","previousSupport","template","getTemplate","processAddTagArrayItem","fragment","createDocumentFragment","newTempElm","createElement","appendChild","updateBeforeTemplate","lastFirstChild","parent","textNode","castTextValue","processRegularValue","castedValue","oldClone","textContent","oneRenderToTagSupport","wrap","processFirstSubjectValue","v","processFirstRegularValue","compareProps","compare","onDelete","compareOriginal","hasTagSupportChanged","newTemplater","propsChanged","pastCloneProps","castedProps","castedPastProps","subCastedProps","subCompareProps","matched","entries","hasPropChanges","kidsChanged","oldCloneKidValues","lastClonedKidValues","newClonedKidValues","hasKidsChanged","alterProp","stateArray","checkProp","newProp","seen","toCall","callbackPropOwner","assign","getPropWrap","forEach","getOwnPropertyDescriptor","callWith","noCycle","sync","allMatched","updateExistingTagComponent","oldestTag","oldWrapper","newWrapper","isSameTag","newPropsArray","priorPropConfig","priorPropsArray","argPosition","priorProps","newCallback","syncFunctionProps","newOldest","buildNewTag","oldInsertBefore","updateExistingValue","valueType","displaySubject","hasLastValue","newType","destroySimpleValue","arraySubject","wasArray","isValueTag","checkDestroyPrevious","subjectSup","newestState","prepareUpdateToComponent","isClass","valueSupport","handleStillTag","interpolateTemplate","hasAttribute","variableName","existingSubject","subscribeToTemplate","called","onValue","mutatingCallback","afterElmBuild","elm","textarea","match","dynamic","_elm","_name","scanTextAreaValue","diff","onInitDoubleWrap","oninit","onInitWrap","target","elementInitCheck","interpolateContentTemplates","tagComponents","nextClones","subChild","isRenderEndTemplate","nextTagComponent","tagName","interpolateElement","container","interpolatedTemplates","interpolation","content","nextTagComponents","processChildrenAttributes","interpolateString","expression","startsWith","id","interpolateToTemplates","afterInterpolateElement","temporary","firstChild","nextNextSibling","buildClones","prefixSearch","BaseTagSupport","isApp","appElement","hasLiveElements","kidValue","latest","setTagPlaceholder","update","elementContainer","tempDraw","innerHTML","thisTag","updateContext","_string","oldValueFn","newValueFn","prevState","shareTemplaterGlobal","updateContextItem","processNewValue","tempTag","updateConfig","updateValues","byParent","firstDestroy","destroySubscriptions","subGlobal","mainPromise","promise","destroyClones","async","promises","oldClones","checkCloneRemoval","oldContext","customElm","ondestroy","onDestroyDoubleWrap","onDestroyWrap","elementDestroyCheck","compareClone","version","tagCount","innerTagWrap","originalFunction","nowState","valuesValue","getTagWrap","tagIndex","route","routeProps","app","routeTag","oneRenderFunction","appElements","tagElement","appElmIndex","appElm","runWrapper","templateElm","hmr"],"sourceRoot":""}