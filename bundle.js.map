{"version":3,"file":"bundle.js","mappings":"AACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,KCA3E,SAASI,EAAaC,GAIzB,OAFAA,EAAQC,YAAcD,EAAQC,aAAe,EAEtCD,EAAQE,OAAS,CAAC,CAC7B,C,ktBCLO,MAAMC,EACT,GAAAV,CAAIW,GACA,MAAO,MACX,ECHG,MAAMC,EAAQ,GACd,IAAIC,EAOAC,GANX,SAAWD,GACPA,EAAuB,OAAI,SAC3BA,EAAuB,OAAI,SAC3BA,EAAwB,QAAI,UAC5BA,OAAe,GAAe,WACjC,CALD,CAKGA,IAAmBA,EAAiB,CAAC,IAExC,SAAWC,GACPA,EAAqB,SAAI,WACzBA,EAAiB,KAAI,OACrBA,EAAoB,QAAI,UACxBA,EAAmB,OAAI,QAC1B,CALD,CAKGA,IAAeA,EAAa,CAAC,IAChC,MAEaC,EAAa,CACtBC,IAAK,OACLC,IAAK,MACLC,UAAW,YACXC,aAAc,eACdC,SAAU,WACVb,QAAS,UACTc,aAAc,eACdC,WAAY,aACZC,YAAa,cACbC,QAZYC,KAAKC,OCZd,SAASC,EAAOC,GAEnB,OADgBC,KAELC,GAAM,IAAMC,EAAOH,KAEvBG,EAAOH,EAClB,CAEO,SAASG,EAAOH,GACnB,IAAII,EAAQJ,EACZ,MAAMK,EAAc,IAAIC,IACxB,MAAO,CACH,SAAIF,GACA,OAAOA,CACX,EACA,SAAIA,CAAMG,GACFH,IAAUG,IACVH,EAAQG,EAERF,EAAYG,SAAQC,GAAYA,EAASF,KAEjD,EACA,SAAAG,CAAUD,GACNA,EAASL,GACTC,EAAYM,IAAIF,GAEhB,MAAMG,EAAQ,IAAMP,EAAYQ,OAAOJ,GAGvC,OADAG,EAAME,YAAcF,EACbA,CACX,EAER,CClCO,SAASG,EAAaX,GACzB,OAAQA,GACJ,KAAKnB,EAAe+B,OACpB,KAAK/B,EAAegC,OACpB,KAAKhC,EAAeiC,QAChB,OAAO,EAEf,OAAO,CACX,CACO,SAASC,EAAYf,GACxB,IAAKA,EACD,OAAO,EAGX,OADkBA,EAAMgB,WAEpB,KAAKjC,EAAWE,IAChB,KAAKF,EAAWC,IAChB,KAAKD,EAAWG,UACZ,OAAO,EAEf,OAAO,CACX,CAEO,SAAS+B,EAAejB,GAC3B,MAAMkB,EAAUlB,GAAOgB,UACvB,OAAOE,IAAYnC,EAAWI,cAAgB+B,IAAYnC,EAAWQ,WACzE,CAEO,SAAS4B,EAAkB5C,GAC9B,OAAO6C,EAAS7C,WAAmBA,EAAQ+B,YAAcxB,EAAWuC,QACxE,CACO,SAASC,EAAUtB,GACtB,OAAOA,GAASuB,EAAWvB,EAAMwB,KACrC,CACO,SAASD,EAAWvB,GACvB,cAAcA,IAAUlB,EAAWuC,QACvC,CACO,SAASD,EAASpB,GACrB,cAAc,IAAYlB,EAAW2C,QAAoB,OAAVzB,CACnD,CACO,SAAS0B,EAAQ1B,GACpB,OAAO2B,MAAMD,QAAQ1B,EACzB,CC1CO,SAAS4B,EAAcC,GAC1B,MAAMC,EAAS,IAAIC,EA6BnB,OADAD,EAAOE,cA3BY3B,IACf,MAAM4B,EAAa,GACbC,EAAS,GACTC,EAAW,CAACC,EAAGC,KACjBJ,EAAWI,IAAS,EACpBH,EAAOG,GAASD,EAEhB,GADqBH,EAAWK,SAAWT,EAASS,OACpD,CAGA,IAAK,MAAMC,KAAQN,EACf,IAAKM,EACD,OAIRlC,EAAS6B,EAAQM,EAPjB,CAO8B,EAE5BC,EAAS,IAAIZ,GAEbW,EADWC,EAAOC,QACMpC,WAAU8B,GAAKD,EAASC,EAAG,KACnDO,EAAgBF,EAAOG,KAAI,CAACrE,EAAS8D,IAChC9D,EAAQ+B,WAAU8B,GAAKD,EAASC,EAAGC,EAAQ,OAGtD,OADAG,EAAaG,cAAgBA,EACtBH,CAAY,EAGhBV,CACX,CCzBO,SAASe,EAAgBtE,EAAS8B,EAAUJ,GAC/C,MAAM6C,EAAef,EAAQgB,gBAC7BhB,EAAQgB,gBAAgBC,KAAKF,EAAa9C,MAAQ,GAClD,MAAMwC,EAAe,WACjBA,EAAa9B,aACjB,EAcA,OAbA8B,EAAanC,SAAWA,EACxBmC,EAAaG,cAAgB,GAE7BH,EAAa9B,YAAc,WACvB,OA0BR,SAAqB8B,EAAcvC,EAAaI,IA1ChD,SAA4BJ,EAAaI,GACrC,MAAMgC,EAAQpC,EAAYgD,WAAUC,GAAOA,EAAI7C,WAAaA,KAC7C,IAAXgC,GACApC,EAAYkD,OAAOd,EAAO,EAElC,CAsCIe,CAAmBnD,EAAaI,GAChC,MAAMgD,EAAStB,EAAQgB,gBACvBhB,EAAQgB,gBAAgBC,KAAKK,EAAOrD,MAAQ,GAE5CwC,EAAa9B,YAAc,IAAM8B,EAEjC,MAAMG,EAAgBH,EAAaG,cACnC,IAAK,MAAMO,KAAOP,EACdO,EAAIxC,cAER,OAAO8B,CACX,CAtCe9B,CAAY8B,EAAcvC,EAAaI,EAClD,EACAmC,EAAajC,IAAO2C,IAChBV,EAAaG,cAAcW,KAAKJ,GACzBV,GAEXA,EAAaQ,KAAQhD,IACjBK,EAASL,EAAOwC,EAAa,EAE1BA,CACX,CACO,SAASe,EAAgBvD,EAAOwD,EAASC,GAC5C,MAAMC,EAAe,IAAIF,GACnBG,EAAcD,EAAahB,QAC3BM,EAAQ7C,IACV,GAAIuD,EAAapB,OACb,OAAOiB,EAAgBpD,EAAUuD,EAAcD,GAEnDA,EAAWtD,EAAS,EAExB,IAAIyD,EAAUZ,EACd,MAEMa,EAAiBF,EAAY3D,EADjB,CAAE8D,WADA1B,GAAMwB,EAAUxB,EACJY,SAEhCY,EAAQC,EACZ,CCvCO,MAAM9B,EACT/B,MACA+D,eAEAP,QAAU,GACVQ,WAAY,EAEZ/D,YAAc,GACd+B,cACA,WAAAiC,CAAYjE,EAEZ+D,GACIG,KAAKlE,MAAQA,EACbkE,KAAKH,eAAiBA,CAE1B,CACA,SAAAzD,CAAUD,GACN,MAAMmC,EAAeK,EAAgBqB,EAAM7D,EAAU6D,KAAKjE,aAEpD+B,EAAgBkC,KAAKlC,cAC3B,GAAIA,EAAe,CAEf,GAAIkC,KAAKV,QAAQlB,OAAQ,CACrB,MAAM6B,EAAc9D,EACpBA,EAAYL,IACRuD,EAAgBvD,EAAOkE,KAAKV,SAASY,GAAaD,EAAYC,EAAW5B,IAAc,CAE/F,CACA,OAAOR,EAAc3B,EACzB,CAKA,OAJA6D,KAAKjE,YAAYqD,KAAKd,GAClB0B,KAAKH,gBACLG,KAAKH,eAAevB,GAEjBA,CACX,CACA,IAAAQ,CAAKhD,GACDkE,KAAKlE,MAAQA,EACbkE,KAAKG,MACT,CACAC,IAAMJ,KAAKlB,KAAKuB,KAAKL,MACrB,IAAAG,GACI,MAAMrE,EAAQkE,KAAKlE,MAGbwE,EAAON,KAAKjE,YAElB,IAAK,MAAMiD,KAAOsB,EACdtB,EAAI7C,SAASL,EAAOkD,EAE5B,CACA,SAAAuB,GACI,OAAO,IAAIC,SAAQC,IACfT,KAAK5D,WAAU,CAAC8B,EAAGI,KACfA,EAAa9B,cACbiE,EAAIvC,EAAE,GACR,GAEV,CAEA,UAAAwC,CAAWvE,GACP,MAAMmC,EAAe0B,KAAK5D,WAAU,CAAC8B,EAAGyC,KACpC,MAAMC,EAAaD,GAAYnE,YAC3BoE,EACAA,IAGAC,YAAW,IAAMvC,EAAa9B,eAAe,GAEjDL,EAAS+B,EAAE,IAEf,OAAO8B,IACX,CACA,IAAAc,IAAQC,GACJ,MAAM1G,EAAU,IAAIwD,EAAQmC,KAAKlE,OAIjC,OAHAzB,EAAQ2G,WAAWD,GACnB1G,EAAQyD,cAAiBI,GAAM8B,KAAK5D,UAAU8B,GAC9C7D,EAAQyE,KAAOZ,GAAK8B,KAAKlB,KAAKZ,GACvB7D,CACX,CACA,UAAA2G,CAAWD,GACPf,KAAKV,QAAUyB,CACnB,CACA,UAAOE,CAAIC,GAWP,OAAOxD,EAVUwD,EAAKxC,KAAIyC,IACtB,GAAIlE,EAAkBkE,GAClB,OAAOA,EAMX,OAJU,IAAItD,EAAQsD,GAAK7C,IACvBA,EAAaQ,KAAKqC,GACX7C,IAEH,IAGhB,CACA8C,uBAAyB,IAAIvD,EAAQ,GAElC,MAAMwD,UAAmBxD,EAC5B/B,MACA+D,eACAyB,OACA,WAAAvB,CAAYjE,EAEZ+D,GACI0B,MAAMzF,EAAO+D,GACbG,KAAKlE,MAAQA,EACbkE,KAAKH,eAAiBA,EACtBG,KAAKsB,OAASxF,EACd0F,EAAcxB,KAClB,CACA,IAAAlB,CAAKhD,GACDkE,KAAKsB,OAASxF,EACdkE,KAAKG,MACT,CACA,IAAAA,GACI,MAAMrE,EAAQkE,KAAKsB,OAGbhB,EAAON,KAAKjE,YAElB,IAAK,MAAMiD,KAAOsB,EACdtB,EAAI7C,SAASL,EAAOkD,EAE5B,EAEG,SAASwC,EAAcnH,GAC1BV,OAAOC,eAAeS,EAAS,QAAS,CAEpC,GAAA+F,CAAItE,GACAzB,EAAQiH,OAASxF,EACjBzB,EAAQ8F,MACZ,EAEArG,IAAG,IACQO,EAAQiH,QAG3B,CC5IO,MAAMG,UAAqB5D,EAC9B/B,MACA,WAAAiE,CAAYjE,GACRyF,MAAMzF,GACNkE,KAAKlE,MAAQA,CACjB,CACA,SAAAM,CAAUD,GACN,MAAMmC,EAAeiD,MAAMnF,UAAUD,GAGrC,OADAA,EAAS6D,KAAKlE,MAAOwC,GACdA,CACX,EAEG,MAAMoD,UAAwB7D,EACjC/B,MACA,WAAAiE,CAAYjE,GACRyF,MAAMzF,GACNkE,KAAKlE,MAAQA,EACbkE,KAAKsB,OAASxF,EACd0F,EAAcxB,KAClB,CACA,SAAA5D,CAAUD,GACN,MAAMmC,EAAeiD,MAAMnF,UAAUD,GAGrC,OADAA,EAAS6D,KAAKsB,OAAQhD,GACfA,CACX,EC3BG,SAASqD,EAAaxF,GACzB,MAAO,CAAE+D,EAAW0B,KAChBA,EAAMhC,YAAW,KACG,IAEpBzD,EAAS+D,EAAW0B,EAAM9C,KAC7B,CACL,CAEO,SAAS+C,EAAY1F,GACxB,MAAO,CAAE+D,EAAW0B,KAChBA,EAAMhC,YAAW,KACG,IAELzD,EAAS+D,GACjB5C,MAAKY,GAAK0D,EAAM9C,KAAKZ,IAC/B,CACL,CAEO,MAAM4D,EAAiB3F,GACnB,CAAE+D,EAAW0B,KAChBA,EAAMhC,YAAW,KACG,IAEpB,MACMtB,EADSnC,EAAS+D,GACI9D,WAAU8B,IAClCI,EAAa9B,cACboF,EAAM9C,KAAKZ,EAAE,GAEpB,EC3BE,SAAStC,EAAMmG,GAClB,OAAOC,EAAaC,YAAYC,SAASxC,QAAQqC,EACrD,CCFO,SAASI,EAAmBC,GAC/B,MAAMC,EAASL,EAAaC,YAE5BI,EAAOC,OAAOD,EAAOE,aAAeH,EAIpC,OAHgBC,EAAOG,QACfF,OAAOD,EAAOE,aAAeH,IACnCC,EAAOE,YACFH,GAAO,IAAIlB,KACdtF,EAAMsF,GACCA,IAEf,CACO,SAASuB,EAAgBL,GAC5B,MAAMC,EAASL,EAAaC,YACtBO,EAAUH,EAAOG,QACjBD,EAAcF,EAAOE,YACrBG,EAAcL,EAAOK,YACrBC,EAAYD,GAAaJ,OAAOC,GAChCK,EAAa,GAKnBD,GAJiB,IAAIzB,KACjB0B,EAAWxD,KAAK8B,GACTA,KAGX,IAAI/C,EAAQ,EAcZ,OAFAqE,EAAQF,OAAOD,EAAOE,aAAeH,IACnCC,EAAOE,YACFH,GAbU,IAAIlB,KAGjBmB,EAAOQ,WAAWzD,KAAK,CACnBtF,IAAK,IAAMoH,EACXa,aAAcb,IAElB,MAAMhB,EAAY0C,EAAWzE,GAE7B,QADEA,EACK+B,CAAS,GAKxB,CCvCO,SAAS4C,EAAUN,EAASH,GAC/BA,EAAOH,SAASxC,QAAUqD,EAC1BV,EAAOH,SAASc,cAAgBb,EAChCE,EAAOY,QAAU,GACjBZ,EAAOQ,WAAa,GACpBR,EAAOC,OAAS,GAChBD,EAAOE,YAAc,EACrBF,EAAOG,QAAUA,CACrB,CACO,SAASU,EAAQV,EAASH,EAAQc,EAAWC,GAEhDf,EAAOY,QAAUE,EACjBd,EAAOQ,WAAa,GACpBR,EAAOC,OAASc,EAChBf,EAAOE,YAAc,EACrBF,EAAOH,SAASxC,QAAU2D,EAC1BhB,EAAOH,SAASc,cAAgBP,EAChCJ,EAAOG,QAAUA,CACrB,CACO,MAAMc,GCpBN,SAASC,EAAc3H,GAC1B,MAAMO,EAAWP,EAAMO,SACvB,IAAKA,EACD,OAAOP,EAAMmG,aAEjB,MAAOjG,GDkBJ,SAA0BK,GAC7B,MAAMqH,EAAWrH,EAASmH,IACnBxH,GAAS0H,GACTC,GAActH,EAASL,GAC9B,MAAO,CAACA,EAAO2H,EACnB,CCvBoBC,CAAiBvH,GACjC,OAAOL,CACX,CCLO,SAASuH,IACZ,MAAMhB,EAASL,EAAaC,YAEtB0B,EADUtB,EAAOY,QACCZ,EAAOQ,WAAWzE,QAE1C,OADAiE,EAAOQ,WAAWzD,KAAKuE,GAChBA,EAAQ5B,YACnB,CACO,SAASgB,EAAchB,GAC1B,MAAMM,EAASL,EAAaC,YAE5B,IAAI2B,EAAY7B,EAKhB,UAJW,IAAmBnH,EAAWuC,WACrCyG,EAAY7B,YAGL,IAAgBnH,EAAWuC,SAAU,CAC5C,MAAM0G,EAAWD,EACjBA,EAAY,YAAyB1C,GAEjC,OADe2C,KAAY3C,EAE/B,EACA0C,EAAUC,SAAWA,CACzB,CACA,MAAMzE,EAAO,CACTtF,IAAK,WACD,OAAOyJ,EAAcnE,EACzB,EACA2C,aAAc6B,GAGlB,OADAvB,EAAOQ,WAAWzD,KAAKA,GAChBwE,CACX,CChCO,MAAM5B,EAAe,CACxBC,YAAa,CACTY,WAAY,GACZvH,QAASC,KAAKC,MACd0G,SAAU,CACNxC,QAASqD,EACTC,cAAeb,KCRpB,SAAS2B,EAAWC,EAAWC,EAASrB,EAAWsB,GAEtD,IAAK,IAAI9F,EAAQ4F,EAAU3F,OAAS,EAAGD,GAAS,IAAKA,EAAO,CACxD,MAAM+F,EAAYH,EAAU5F,GAAOrE,MAC7BqC,EAAW6H,EAAQ7F,GAAOhC,SAC3BA,GAGLA,EAAS+H,EACb,CACA,IAAK,IAAI/F,EAAQ8F,EAAW7F,OAAS,EAAGD,GAAS,IAAKA,EAAO,CACzD,MAAMgG,EAAY,GACZC,EAAiB,IAAIlD,KACvBiD,EAAU/E,KAAK8B,GACRA,GAGX+C,EAAW9F,GAAOiG,GAClB,IAAIC,EAAW,EACf,MAAMC,EAAiB,IAAIC,IAChBJ,EAAUE,KAGrB1B,EAAUxE,GAAOmG,EACrB,CACJ,CCbO,MAAME,EAAQ,CAAEC,EAAetI,IAC3BuI,EAAWD,EAAetI,GAE/BwI,EAAkBzG,GAAMA,EAgB9B,MAAMwG,EAAa,CAACD,EAAetI,GAAYyI,OAAMC,SAAQC,QAAQH,GAAoB,CAAC,KACtF,MAAMI,EAAWnJ,EAAM,CACnBoJ,gBAAYC,EACZjH,YAAQiH,IAENC,EAAiBH,EAAS/G,OAEhC,QAAuBiH,IAAnBC,EAA8B,CAC9B,GAAIL,IAAWA,EAAOJ,GAElB,OADAM,EAAS/G,OAASyG,EACXM,EAASC,WAEpB,MACMG,GADaP,GAAQzI,GACDsI,EAAeS,GAGzC,OAFAH,EAASC,WAAaF,EAAMK,GAC5BJ,EAAS/G,OAASyG,EACXM,EAASC,UACpB,CAEA,GADiBP,EAAcW,OAAM,CAAC/G,EAAMF,IAAUE,IAAS6G,EAAe/G,KAE1E,OAAO4G,EAASC,WAEpB,GAAIH,IAAWA,EAAOJ,GAElB,OADAM,EAAS/G,OAASyG,EACXM,EAASC,WAEpB,MAAMG,EAAShJ,EAASsI,EAAeS,GAIvC,OAHAH,EAASC,WAAaF,EAAMK,GAC5BD,EAAe9G,OAAS,EACxB8G,EAAe9F,QAAQqF,GAChBM,EAASC,UAAU,EAE9B,SAASK,EAAeC,EAAUC,GA8C9B,OA7CA5L,OAAOC,eAAe2L,EAAU,SAAU,CACtC,GAAAzL,GACI,MAAM0K,EAAQc,IAEd,OADAd,EAAMgB,MAAMZ,KAAO,KAAe,EAC3BJ,CACX,IAEJ7K,OAAOC,eAAe2L,EAAU,YAAa,CACzC,GAAAzL,GACI,MAAM2L,EAAWH,IACXI,EAAe9J,GAAM,IAAMD,OAC3BtB,EAAUuB,GAAM,IAAM,IAAI6F,OAAawD,KACvCzB,EAAW5H,GAAM,KAAM,CACzBiH,WAAYb,EAAaC,YAAYY,WACrCP,OAAQN,EAAaC,YAAYK,WAE/BqD,EAAS,CAAClB,EAAetI,KAC3BuI,EAAWD,GAAe,CAACA,EAAeS,KACtC,MAAMU,EAAajK,KACbkK,EAAQ1J,EAASsI,EAAeS,GACtC,GAAIU,IAAeF,EAAc,CAC7B,MAAMI,EAActC,EAASX,WAEvBkD,EADSL,EAAarL,QAAQE,OACdwL,OAItBjC,EAAWgC,EAHSC,EAAOnK,MACT4H,EAASlB,OACTyD,EAAOzD,OAE7B,CACAjI,EAAQyE,KAAK+G,EAAM,GACpBJ,EAASD,OACLnL,GAIX,OAFAsL,EAAOH,MAAQC,EAASD,MACxBH,GAAe,IAAMM,GAAQA,GACtBA,CACX,IAEJhM,OAAOC,eAAe2L,EAAU,SAAU,CACtC,GAAAzL,GACI,MAAM0K,EAAQc,IAEd,OADAd,EAAMgB,MAAMX,OAAUJ,GAAkBA,EAAcW,OAAMlH,GAAKA,IAC1DsG,CACX,IAEGe,CACX,CCxGO,SAASlL,EAAQqB,GAEpB,OADgBC,KAELC,GAAM,IAAM,IAAIiC,EAAQnC,KAE5B,IAAImC,EAAQnC,EACvB,CCVO,SAAS4G,EAAOF,GAEnB,OADeJ,EAAaC,YACdC,SAASc,cAAcZ,EACzC,CCGO,SAAS4D,EAAQ5D,GACpB,MAAM6D,EAAcxK,EAAO,IACrByK,EAASzK,EAAO,GAChB0K,EAAW1K,EAAO,GACxB,IAAI2K,EAAY,GACZC,EAAS,EA6Bb,OA5BAF,EAASrK,MAAQoK,EAAOpK,MACxBsG,GAAO,IAAIpE,KACPoI,EAAYpI,EACLA,KAGXwG,EAAM4B,GAAW,OACXC,EACFJ,EAAYnK,MAAQsK,EACpBhE,GAAO,IAAMgE,GAAU,IAG3B9D,GAAO,KACH,GAAI+D,EAUA,OATAjE,GAAO,IAAIpE,KACPiI,EAAYnK,MAAQkC,EAChBkI,GAAUC,EACHF,EAAYnK,MAEhBkC,KAEXmI,EAASrK,MAAQoK,EAAOpK,YACtBoK,EAAOpK,MAGbsG,GAAO,IAAM6D,EAAYnK,OAAM,MAEjCuK,EACKJ,EAAYnK,KACvB,CHoEAuJ,GAAe,IA/Ff,SAAkBG,GACd,MAAMG,EAAS,CAAClB,EAAetI,IACpBuI,EAAWD,EAAetI,EAAUqJ,GAI/C,OAFAG,EAAOH,MAAQA,EACfH,GAAe,IAAMM,GAAQA,GACtBA,CACX,CAwFqBW,CAAS,CAAC,IAAI9B,GClGnCnK,EAAQiH,OAAUxF,IACd,MAAMyK,EAAc3K,GAAM,WACtB,MAAO,CACHiH,WAAYb,EAAaC,YAAYY,WACrCP,OAAQN,EAAaC,YAAYK,OAEzC,IACMsD,EAAajK,KACnB,OAAOC,GAAM,WAKT,OAJgB,IAAI6F,EAAa3F,GAAOgF,MAAK5C,IACzC4F,EAAW8B,EAAWhK,MAAO2K,EAAY1D,WAAY+C,EAAWtD,OAAQiE,EAAYjE,QAC7EpE,IAGf,GAAE,EAaN7D,EAAQ4G,IAXR,SAAaC,GACT,MAAMqF,EAAc3K,GAAM,KAAM,CAC5BiH,WAAYb,EAAaC,YAAYY,WACrCP,OAAQN,EAAaC,YAAYK,WAE/BsD,EAAajK,KACnB,OAAOkC,EAAQoD,IAAIC,GAAMJ,MAAK5C,IAC1B4F,EAAW8B,EAAWhK,MAAO2K,EAAY1D,WAAY+C,EAAWtD,OAAQiE,EAAYjE,QAC7EpE,IAEf,EGpCO,MAAMsI,EAAY,CACrBC,OAASC,IACL,MAAMC,EAAkB/K,GAAM,KAAM,CAAGgL,UAAW,EAAGC,cAAU5B,MAE/D,GAAI0B,EAAgBC,UAAW,CAC3B,IAAI1I,EAAIyI,EAAgBC,UACxB,KAAO1I,KACHtC,OAAMqJ,GAGV,OADerJ,OAAMqJ,EAEzB,CACA,MAAME,EAASvJ,GAAM,KACjB,MAAMqG,EAAcD,EAAaC,YAC3B6E,EAAgB7E,EAAYY,WAAWzE,OAEvC2I,EAAWL,EAAgBzM,UAAY,IAAIyM,EAAoBA,IAC/DlE,EAAUP,EAAYO,QACtBoE,EAAY3E,EAAYY,WAAWzE,OAAS0I,EAC5CD,EAAW,CACbH,kBACAK,WACAH,YACAI,MAAOxE,EACPyE,SAAU,IAEdN,EAAgBE,SAAWA,EAC3B,MAAMtM,EAASiI,EAAQnI,QAAQE,OAI/B,OAHkBA,EAAOiM,UAAYjM,EAAOiM,WAAa,IAC/CpH,KAAKyH,GACfF,EAAgBC,UAAYA,EACrBG,CAAQ,IAEbG,EAAKR,EACLS,EAAYD,EAAGC,UAAYD,EAAGE,WAEpC,OADAT,EAAgBE,SAASH,gBAAgBS,UAAYA,EAC9ChC,CAAM,EAOjBkC,OAAStH,GAEEnE,GAAM,KAET,MAAMsL,EAAKnH,EACLoH,EAAYD,EAAGC,UAAYD,EAAGC,WAAapH,EAAYqH,WACvD5E,EAAU7G,KACV6K,EAAY,GAClB,IAAIQ,EAAQ,CACRM,aAAc9E,EAAQ8E,cAE1B,KAAON,EAAMM,cAAc,CACvB,MACMC,EADYP,EAAMM,aAAajN,QAAQE,OACZiM,UACjC,IAAKe,EAAgB,CACjBP,EAAQA,EAAMM,aACd,QACJ,CACA,MAAMT,EAAWU,EAAeC,MAAKX,IACjCL,EAAUpH,KAAKyH,GAEf,GADyBA,EAASH,gBAAgBS,YAAcA,EAE5D,OAAO,CACX,IAEJ,GAAIN,EAAU,CACV,MAAMtM,EAASiI,EAAQnI,QAAQE,OAI/B,OAHkBA,EAAOiM,UAAYjM,EAAOiM,WAAa,IAC/CpH,KAAKyH,GACfA,EAASI,SAAS7H,KAAKoD,GAChBqE,EAASE,QACpB,CACAC,EAAQA,EAAMM,YAClB,CACA,MAAMG,EAAM,8BAA8B1H,EAAY2H,QAAQ3H,IAE9D,MADA4H,QAAQC,KAAK,GAAGH,yBAA4BjB,GACtC,IAAIqB,MAAMJ,EAAI,KClFzB,MAAMK,UAAiBD,MAC1BE,QACA,WAAAhI,CAAYiI,EAASC,EAAWF,EAAU,CAAC,GACvCxG,MAAMyG,GACNhI,KAAK0H,KAAOI,EAASJ,KACrB1H,KAAK+H,QAAU,IAAKA,EAASE,YACjC,EAEG,MAAMC,UAAwBJ,EACjC,WAAA/H,CAAYiI,EAASD,GACjBxG,MAAMyG,EAAS,qBAAsBD,GACrC/H,KAAK0H,KAAOQ,EAAgBR,IAChC,EAEG,MAAMS,UAA2BL,EACpC,WAAA/H,CAAYiI,EAASD,GACjBxG,MAAMyG,EAAS,uBAAwBD,GACvC/H,KAAK0H,KAAOS,EAAmBT,IACnC,EAEG,MAAMU,UAA0BN,EACnC,WAAA/H,CAAYiI,EAASD,GACjBxG,MAAMyG,EAAS,sBAAuBD,GACtC/H,KAAK0H,KAAOU,EAAkBV,IAClC,ECtBG,SAASW,EAAUtO,EAAKuO,GAE3B,OAAOC,EAAcxO,EAAKuO,EAC9B,CACA,SAASC,EAAcxO,EAEvBuO,GAEI,GAAY,OAARvO,UAAuBA,IAAQa,EAAW2C,OAC1C,OAAOxD,EAQX,GAAIuO,EAAW,EACX,OAAOvO,EAGX,GAAIA,aAAewB,KACf,OAAO,IAAIA,KAAKxB,GAEpB,GAAIA,aAAeyO,OACf,OAAO,IAAIA,OAAOzO,GAGtB,MAAM0O,EAAQjL,EAAQzD,GAAO,GAAKJ,OAAO8M,OAAO9M,OAAO+O,eAAe3O,IAEtE,GAAIyD,EAAQzD,GACR,IAAK,IAAI4O,EAAI,EAAGA,EAAI5O,EAAIqE,OAAQuK,IAC5BF,EAAME,GAAKJ,EAAcxO,EAAI4O,GAAIL,EAAW,QAIhD,IAAK,MAAM7O,KAAOM,EACVJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKN,KAC1CgP,EAAMhP,GAAO8O,EAAcxO,EAAIN,GAAM6O,EAAW,IAI5D,OAAOG,CACX,CACO,SAASG,GAAUC,EAAMC,EAAMR,GAClC,OAAOS,GAAYF,EAAMC,EAAMR,EACnC,CACA,SAASS,GAAYF,EAAMC,EAE3BR,GAEI,QADoBO,IAASC,IA2DRE,EA1DcH,EA0DTI,EA1DeH,GA2DpBzL,EAAW2L,KAAQ3L,EAAW4L,IAC5BD,EAAI5B,aAAe6B,EAAI7B,eAvD1CkB,EAAW,UAGJO,IAASjO,EAAW2C,eAAiBuL,IAASlO,EAAW2C,SAE5DsL,aAAgBtN,MAAQuN,aAAgBvN,KACjCsN,EAAKK,YAAcJ,EAAKI,UAK/B1L,EAAQqL,IAASrL,EAAQsL,GA+BrC,SAA0BD,EAAMC,EAAMR,GAClC,GAAIO,EAAKzK,SAAW0K,EAAK1K,OACrB,OAAO,EAEX,IAAK,IAAIuK,EAAI,EAAGA,EAAIE,EAAKzK,OAAQuK,IAC7B,IAAKI,GAAYF,EAAKF,GAAIG,EAAKH,GAAIL,EAAW,GAC1C,OAAO,EAGf,OAAO,CACX,CAxCmBa,CAAiBN,EAAMC,EAAMR,EAAW,IAE1C9K,EAAQqL,KAASrL,EAAQsL,IAS1C,SAA2BD,EAAMC,EAEjCR,GACI,MAAMc,EAAQzP,OAAO0P,KAAKR,GACpBS,EAAQ3P,OAAO0P,KAAKP,GAC1B,GAAqB,IAAjBM,EAAMhL,QAAiC,IAAjBkL,EAAMlL,OAC5B,OAAO,EAEX,GAAIgL,EAAMhL,SAAWkL,EAAMlL,OACvB,OAAO,EAEX,IAAK,MAAM3E,KAAO2P,EAAO,CAErB,IADiBE,EAAMC,SAAS9P,KACdsP,GAAYF,EAAKpP,GAAMqP,EAAKrP,GAAM6O,EAAW,GAC3D,OAAO,CAEf,CACA,OAAO,CACX,CAtBekB,CAAkBX,EAAMC,EAAMR,EAAW,KAkCxD,IAAyBU,EAAKC,CA/B9B,CC/EO,SAASQ,GAAmBC,EAAWC,GAC1C,MAAM3O,EAAY,CACd0O,YACAC,QACA7M,UAAWjC,EAAWG,UACtBvB,IAAK,SAAqBmQ,GAEtB,OADA5O,EAAU4O,WAAaA,EAChB5O,CACX,GAEJ,OAAOA,CACX,CCZO,MAAM6O,GAAO,GCOb,SAASC,GAAUH,EAAOI,EAAYC,GACzC,OAAOL,EAAMjL,KAAI1E,GAGd,SAAmBA,EAAMsN,EAAcyC,EAAYC,GACtD,GAAInN,EAAY7C,KAAUA,EACtB,OAAOA,EAEX,IAAKsN,EACD,OAAOtN,EAEX,OAAOiQ,GAAUjQ,EAAMsN,EAAcyC,EAAYC,EACrD,CAX6BE,CAAUlQ,EAAM+P,EAAWzC,aAAcyC,EAAYC,IAClF,CAWO,SAASC,GAAUnO,EAAOwL,EAAcyC,EAAYC,GACvD,IAAKlO,EACD,OAAOA,EAEX,GAAIA,EAAMgB,UACN,OAAOhB,EAEX,UAAW,IAAYlB,EAAWuC,SAC9B,OA4DD,SAAqBrB,EAAOwL,GAC/B,MAAM6C,EAAUrO,EAAMsO,IAEtB,GAAID,EACA,OAAOrO,EAEX,MAAMuO,EAAO,YAAuBnJ,GAChC,OAAOmJ,EAAKC,UAAUpJ,EAC1B,EASA,OARAmJ,EAAKxG,SAAW/H,EAChBuO,EAAKD,IAAMtO,EAEXuO,EAAKC,OAAS,YAAyBpJ,GACnC,OAOD,SAA2BoJ,EAAQC,EAAUjD,GAChD,MAAM/M,EAAS+M,EAAajN,QAAQE,OAC9BiQ,EAASjQ,GAAQiQ,QAAUlD,EAE3BmD,OAA6BxF,IADZtJ,KAEjB+O,EAAiBJ,KAAUC,GAC3BI,EAAM,WACR,MAAMpQ,EAASiQ,EAAOnQ,QAAQE,OAE9B,IAAgB,IAAZkQ,EAAmB,CAEnB,IADqC,IAAlBlQ,EAAOqQ,OAEtB,OAAOF,CAEf,CAEA,OAWD,SAA2BF,EAAQlD,GACtC,MAAMjN,EAAUmQ,EAAOnQ,QACjBwQ,EAAWC,GAAaN,EAAOxP,WACrC,GAAI6P,EAAU,CASV,OAReE,GAAiBzD,EAAckD,EASlD,CACA,MAAMjQ,EAASF,EAAQE,OACvBA,EAAOqQ,QAAS,EAChBI,GAAuBzQ,EAAOiQ,OAAQA,EAAQlD,EAAcjN,UACrDE,EAAOqQ,MAClB,CA9BQK,CAAkBT,EAAQlD,GACnBoD,CACX,EACA,GAAID,EACA,OAAOE,IAGX,OADA3I,EAAakJ,WAAWxK,WAAWiK,GAC5BD,CACX,CA9BeS,CAAkBd,EAAKD,IAAKlJ,EAAMoG,EAC7C,EAEA3N,OAAOyR,OAAOf,EAAMvO,GACbuO,CACX,CA9EegB,CAAYvP,EAAOwL,GAE9B,GAAI0C,IAAUsB,GACV,OAAOxP,EAGX,OADayP,GAAgBzP,GAElBA,EAEP0B,EAAQ1B,GAKhB,SAAwBA,EAAOiO,EAAYzC,EAAc0C,GACrD,IAAK,IAAI7L,EAAQrC,EAAMsC,OAAS,EAAGD,GAAS,IAAKA,EAAO,CACpD,MAAMqN,EAAW1P,EAAMqC,GAEvB,GADArC,EAAMqC,GAAS8L,GAAUuB,EAAUlE,EAAcyC,EAAYC,EAAQ,UAC1D,IAAepP,EAAWuC,SAAU,CAC3C,GAAIqO,EAASpB,IACT,SAEJqB,GAAezB,EAAQ,EAAG7L,EAAOqN,EAAU1P,EAAOiO,EACtD,CACJ,CACA,OAAOjO,CACX,CAhBe4P,CAAe5P,EAAOiO,EAAYzC,EAAc0C,GAiB/D,SAAyBlO,EAAOiO,EAAYzC,EAAc0C,GACtD,MAAMX,EAAO1P,OAAO0P,KAAKvN,GACzB,IAAK,MAAM4L,KAAQ2B,EAAM,CACrB,MAAMmC,EAAW1P,EAAM4L,GACjBvC,EAAS8E,GAAUuB,EAAUlE,EAAcyC,EAAYC,EAAQ,GAErE,GADoBlO,EAAM4L,KACNvC,EAChB,SAEJ,MAAMwG,EAAShS,OAAOiS,yBAAyB9P,EAAO4L,GAEtD,KADkBiE,GAAQ7R,KAAO6R,GAAQvL,OAIzCtE,EAAM4L,GAAQvC,SACH,IAAavK,EAAWuC,UAAU,CACzC,GAAIqO,EAASpB,IACT,SAEJqB,GAAezB,EAAQ,EAAGtC,EAAM8D,EAAU1P,EAAOiO,EACrD,CACJ,CACA,OAAOjO,CACX,CAtCW+P,CAAgB/P,EAAOiO,EAAYzC,EAAc0C,EAC5D,CAsCA,SAASyB,GAAezB,EAAO7L,EAAO2N,EAAeC,EAAShC,GAE1D,GAAIC,EAAQ,EAAG,CACX,MAAMzP,EAASwP,EAAW1P,QAAQE,OAClCwR,EAAQ5N,GAAOG,aAAe/D,EAAOyR,SAAStL,YAAW,WACrDqL,EAAQ5N,GAAS2N,CACrB,GACJ,CACJ,CA6CO,SAASP,GAAgBzP,GAC5B,cAAc,IAAYlB,EAAW2C,SAAWzB,GAASA,EAAMgB,SACnE,CCpIO,SAASmP,GAAYjR,EAAWmK,EAAQ+G,EAAYC,GACvD,MAAMC,EAAmBjH,EAAOtB,SAEhC,IAAI/I,EADcE,EAAU8B,YAAcjC,EAAWQ,YAGjDP,EAAME,KAGNF,EAAMsR,KAAoBD,UAEf,IAAUvR,EAAWuC,WAC5BrC,EAAMA,MAGdA,EAAIE,UAAYA,EAChBA,EAAUF,IAAMA,EAChB,MAAMuH,EAASL,EAAaC,YAI5B,OAHAiK,EAAWtQ,MAAQyG,EAAOQ,WAC1BqJ,EAAW5J,OAASD,EAAOC,OAEpB4J,CACX,CCpBO,SAASG,GAAgBrO,GAC5B,OAAOA,EAAOU,IAAI4N,GACtB,CAEO,SAASA,GAAgBxQ,EAAOwM,GACnC,MAAMxN,EAAMgB,EACNgB,EAAYhB,GAAOgB,UACzB,GAAIA,EACA,OAAQA,GACJ,KAAKjC,EAAWQ,YACZ,OACJ,KAAKR,EAAWE,IAChB,KAAKF,EAAWC,IAChB,KAAKD,EAAWG,UACZ,OAAOqR,GAAgBvR,EAAIkD,QAGvC,OAAIR,EAAQ1B,GACDuQ,GAAgBvR,GAEpBuN,EAAUvM,EAAOwM,EAC5B,CCrBO,SAASiE,GAAevR,EAAWX,EAAS8R,GAC/C,MAAMK,EAAc,CAChBxR,YACAX,UACA8R,cACAM,gBAAYxH,GAGV1K,EAASF,EAAQE,OAGvB,OAFAA,EAAOmS,QAAU,GACjBnS,EAAOyR,SAAW,IAAInO,EACf2O,CACX,CACO,SAASG,GAAqB3R,EACrCwH,EAASiK,EAAYN,GAEjB3J,EAAQ5G,MAAQ,GAChB4G,EAAQF,OAAS,GACjBE,EAAQiK,WAAaA,EACrB,MAAM9C,EAAQ3O,EAAU2O,MAIxB,OAHIA,IACAnH,EAAQoK,YCpBT,SAAsBpK,EAASmH,EAAOG,GACzC,MAAM9O,EAAYwH,EAAQxH,UAC1B,GAAIA,EAAU8B,YAAcjC,EAAWQ,YAAvC,CAGA,OAAQL,EAAU0O,WACd,KAAKmD,GAAYC,UACb,OAAOtK,EAAQoK,YAAc,CACzBG,OAAQpD,EACRG,aAER,KAAK+C,GAAYG,QACb,OAAOxK,EAAQoK,YAAc,CACzBG,OAAQpD,EAAMjL,KAAIR,GAAKoO,GAAgBpO,EAAG+O,MAC1CnD,aAGZ,OAAOtH,EAAQoK,YAAc,CACzBG,OAAQpD,EAAMjL,KAAIiL,GAAS2C,GAAgB3C,EAAO2B,MAClDxB,YAfJ,CAiBJ,CDD8BoD,CAAa1K,EAASmH,EAAOwC,IAEhD3J,CACX,CACO,SAAS2K,GAAenS,EAC/BsM,EAAcmF,EAAYpS,EAAS8R,GAC/B,MAAM3J,EAAU,CACZxH,YACAX,UACA8R,cACAM,gBAAYxH,GAIhB,OAFAzC,EAAQ8E,aAAeA,EACvB9E,EAAQiK,WAAaA,EACdjK,CACX,CACO,SAAS4K,GAAWpS,EAC3BsM,EAAcmF,EAAYpS,EAAS8R,GAC/B,MAAM3J,EAAU+J,GAAevR,EAAWX,EAAS8R,GAEnD,OADA3J,EAAQ8E,aAAeA,EAChBqF,GAAqB3R,EAAWwH,EAASiK,EAAYN,EAChE,CEvBO,SAASkB,GAAerS,EAAW+O,EAAYuD,GAClD,MAAMhF,EAAWtN,EAAU0O,YAAcmD,GAAYU,KAAOjC,GAAmB2B,GACzEtD,EAAQ3O,EAAU2O,MAClBiD,EAAc7C,EAAW6C,YAE/B,IAAIY,EAAiBZ,EAAY9C,UACjC,MAAM2D,EAAkBH,GAAaV,YAC/Bc,EAAgBD,GAAiB3D,UACnC4D,IACAd,EAAY9C,UAAY4D,EACxBF,EAAiBG,GAAkB5D,EAAYuD,EAAaA,EAAYhG,aAAcqC,EAAOrB,IAGjG,OADoBkF,GAAkB1D,GAAUH,EAAOI,EAAY,EAEvE,CC9BA,IAAI6D,GAAW,EAER,IAAIf,GAWJ,SAAS/R,GAAIG,EAAcyO,EAAYmD,GAAYG,SAEtD,MAAMa,EAAa,YAAuBlE,GACtC,MAAM3O,EAAYyO,GAAmBC,EAAWC,GAChD3O,EAAU8B,UAAYjC,EAAWI,aAEjC,MAAM6S,EDhBP,SAAoB9S,EAAWmK,GAWlC,OATgB,SAAoB4E,EAAY1P,EAASiT,GAGrD,MAAMnB,EAAckB,GAAerS,EAAW+O,EAAYuD,GACpDhG,EAAeyC,EAAWzC,aAC1B4E,EAAakB,GAAWpS,EAAWsM,EAAcyC,EAAW0C,WAClEpS,EAAS8R,GACT,OAAOF,GAAYjR,EAAWmK,EAAQ+G,EAAYC,EACtD,CAEJ,CCI6B4B,CAAW/S,EAAW6S,GAQ3C,OAPAC,EAAajK,SAAW5I,EAMxBD,EAAUgT,QAAUF,EACb9S,CACX,EACMF,EAAMG,EAQZ,OAPA4S,EAAWhK,SAAW5I,EAEtBH,EAAI+O,KAAOA,GACX/O,EAAImT,OAASjM,EACblH,EAAID,WAAaA,EACjBC,EAAIoT,SAAWN,KACf/D,GAAKzK,KAAKyO,GACHA,CACX,CAMA,SAASM,KACL,MAAM,IAAItG,MAAM,mGACpB,CCzCO,SAASuG,GAAezE,EAC/B0E,EACA3E,GAEI,GADsB4E,GAAsB3E,EAAO0E,GAE/C,OAAO,GAEX,OAAQ3E,GACJ,KAAKmD,GAAY0B,KACb,OAAO,EACX,KAAK1B,GAAYG,QACb,OAAOwB,GAAiB7E,EAAO0E,GACnC,KAAKxB,GAAYC,UACb,OAAO2B,GAAmB9E,EAAO0E,GAEzC,OAEJ,SAA+B1E,EAAO0E,GAElC,IAAIlC,EAAcxC,EACd+E,EAAkBL,EACtBlC,EAAc,IAAIxC,GAClB+E,EAAkB,IAAKL,GAAkB,IAEzC,IAD0BlC,EAAY/G,OAAM,CAACtJ,EAAOqC,IAMxD,SAAwBrC,EAAOqC,EAAOgO,EAAauC,GAC/C,MAAMC,EAAUD,EAAgBvQ,GAChC,UAAW,IAAYvD,EAAW2C,OAAQ,CACtC,MAAMqR,EAAiB,IAAK9S,GACtB+S,EAAkB,IAAKF,GAAW,CAAC,GACnCG,EAAUnV,OAAOoV,QAAQH,GAAgBxJ,OAAM,EAAE3L,EAAKqC,KAAWkT,GAAalT,EAAO+S,EAAgBpV,IAAM,YACtGmV,EAAenV,UACfoV,EAAgBpV,EAAI,MAE/B,OAAOqV,CACX,CACA,OAAOE,GAAalT,EAAO6S,GAAS,KAChCxC,EAAYlN,OAAOd,EAAO,GAC1BuQ,EAAgBzP,OAAOd,EAAO,EAAE,GAExC,CArBkE8Q,CAAenT,EAAOqC,EAAOgO,EAAauC,KAEpG,OAAO,EAEX,OAAO,CACX,CAbWQ,CAAsBvF,EAAO0E,EACxC,CA8BA,SAASW,GAAalT,EAAO6S,EAASQ,GAClC,UAAa,IAAYvU,EAAWuC,SAChC,QAAOyL,GAAU9M,EAAO6S,EAASrD,KAAoB,EAGzD,UADkBqD,IACW/T,EAAWuC,SACpC,OAAO,EAGX,MAAMiS,EAAkBT,GAAS9K,SAC7BuL,IACAT,EAAUS,GAEGtT,EAAM+H,WAEnB/H,EAAQA,EAAM+H,UAIlB,OAFoB/H,EAAMsL,aACJuH,EAAQvH,YAE1B+H,IACO,IAEXA,IACO,EACX,CCxEO,SAASV,GAAmB9E,EAAO0E,GAEtC,MAAMgB,EAAM1F,EAAMvL,OAClB,IAAK,IAAID,EAAQ,EAAGA,EAAQkR,IAAOlR,EAAO,CAGtC,GAFawL,EAAMxL,KACFkQ,EAAelQ,GAE5B,OAAO,CAEf,CACA,OAAO,CACX,CACO,SAASqQ,GAAiB7E,EAAO0E,GAEpC,MAAMgB,EAAM1F,EAAMvL,OAClB,IAAK,IAAID,EAAQ,EAAGA,EAAQkR,IAAOlR,EAAO,CACtC,MAAMnE,EAAO2P,EAAMxL,GACbmR,EAAWjB,EAAelQ,GAChC,GAAIX,EAAQxD,IAASwD,EAAQ8R,GAAW,CACpC,GAAItV,IAASsV,EACT,SAEJ,OAAO,CACX,CACA,UAAW,IAAW1U,EAAWuC,iBAAmB,IAAevC,EAAWuC,SAG9E,UAAW,IAAWvC,EAAW2C,QAYjC,GAAIvD,IAASsV,EAGb,OAAO,SAdH,UAAW,IAAqB1U,EAAW2C,OAAQ,CAC/C,MAAMgS,EAAY5V,OAAOoV,QAAQ/U,GACjC,IAAK,MAAMwV,KAAWD,EAAW,CAE7B,IADeE,GAAkBD,EAASF,GAEtC,OAAO,GAEf,CACJ,CAOR,CACA,OAAO,CACX,EF9CA,SAAWzC,GACPA,EAAkB,KAAI,OAEtBA,EAAqB,QAAI,UACzBA,EAAkB,KAAI,OACtBA,EAAuB,UAAI,WAC9B,CAND,CAMGA,KAAgBA,GAAc,CAAC,IA8BlC/R,GAAIM,WACJ,WACI,MAAM,IAAIyM,MAAM,8GACpB,EAOA/M,GAAIc,MAAQuS,GACZrT,GAAI4U,IAAMvB,GACVrT,GAAI6U,MACJ,SAAiBC,GACb,MAAM,IAAI/H,MAAM,0HACpB,EAKA/M,GAAI+U,IAAM,SAAUC,GAChB,MAAM,IAAIjI,MAAM,0HACpB,EACA/M,GAAIiV,cAAgBjV,GACpBA,GAAIkV,eAAiB,SAAwB/U,GACzC,OAAOH,GAAIG,EAAc4R,GAAYC,UACzC,EACAhS,GAAImV,WAAa,SAAoBhV,GACjC,OAAOH,GAAIG,EAAc4R,GAAYG,QACzC,EAEArT,OAAOC,eAAekB,GAAK,aAAc,CACrC,GAAAsF,CAAI8P,GACAA,EAAkBpT,UAAYjC,EAAWO,UAC7C,IAGJzB,OAAOC,eAAekB,GAAK,QAAS,CAChC,GAAAsF,CAAI+P,GAEAA,EAAetM,SAAW,CACtBoK,OAAQjM,EACR6H,KAAI,IAERsG,EAAerT,UAAYjC,EAAWQ,WAC1C,IAEJ1B,OAAOC,eAAekB,GAAK,MAAO,CAC9B,GAAAsF,CAAI+P,GAEAA,EAAetM,SAAW,CACtBoK,OAAQjM,EACR6H,KAAI,IAERsG,EAAerT,UAAYjC,EAAWQ,WAC1C,IE5CG,MAAM4R,GAAsB,EACtB3B,GAAmB,GAChC,SAASmE,IAAmB/H,EAAM5L,GAAQwT,GACtC,MAAMc,EAAYd,EAAS5H,GAC3B,cAAW,IAAY9M,EAAWuC,iBAAmB,IAAgBvC,EAAWuC,UAGzEiT,IAActU,CACzB,CChEO,IAAIuU,GAAe,GACfC,GAAe,GACfC,GAAa,GAEbC,GAAe,GAEfC,GAAqB,GACrBC,GAAc,GAClB,MAAMC,GAAW,CACpBC,MAAO,GAEJ,SAASC,KACZ,KAAIF,GAASC,MAAQ,GAArB,CAGA,IAAK,IAAIzS,EAAQkS,GAAajS,OAAS,EAAGD,GAAS,IAAKA,EAAO,CAC3D,MAAM2S,EAAWT,GAAalS,GACX2S,EAASC,WACjBC,YAAYF,EAC3B,CACA,IAAK,MAAMG,KAAWX,GAClBW,IAEJ,IAAK,MAAOC,EAAMC,KAAaZ,GAC3BY,EAASC,YAAcF,EAE3B,IAAK,MAAM1V,KAAOgV,GACdhV,EAAI6V,SAASC,YAAY9V,EAAI+V,SAEjC,IAAK,MAAM,QAAEA,EAAO,SAAEF,KAAcZ,GAChCY,EAASN,WAAWS,aAAaD,EAASF,GAE9ChB,GAAe,GACfC,GAAe,GACfE,GAAe,GACfC,GAAqB,GACrBF,GAAa,GACb,IAAK,MAAM/U,KAAOkV,GACdlV,IAEJkV,GAAc,EA1Bd,CA2BJ,CCtCO,SAASe,GAAqB3V,EACrC4V,GACI,MAAMP,EAAWQ,SAASC,eAAe9V,GAKzC,OAJA2U,GAAmBrR,KAAK,CACpBmS,QAASJ,EACTE,SAAUK,IAEPP,CACX,CACO,SAASU,GAAc/V,GAC1B,OAAQA,GACJ,UAAKmJ,EACL,KAAK,EACL,KAAK,KACD,OAAOvK,EAEf,OAAOoB,CACX,CCVO,SAASgW,GAAiBtP,GAG7B,MAAMjI,EAASiI,EAAQnI,QAAQE,OACzBiM,EAAYjM,EAAOiM,UACzB,GAAIA,EACA,IAAK,MAAMK,KAAYL,EACnB,IAAK,IAAIrI,EAAQ0I,EAASI,SAAS7I,OAAS,EAAGD,GAAS,IAAKA,EAAO,CAClD0I,EAASI,SAAS9I,GACtB9D,QAAQE,SAAWA,GACzBsM,EAASI,SAAShI,OAAOd,EAAO,EAExC,CAGJ5D,EAAOyR,UACPzR,EAAOyR,SAASlN,OAEpB0D,EAAQnI,QAAQC,YAAc,CAClC,CC3BO,SAASyX,GAAsBC,GAClC,IAAK,MAAMC,KAASD,EAAW,CAC3B,MAAME,EAAYD,EAAMC,UACxB,GAAIA,EAAW,CACXH,GAAsBG,EAAUxT,KAAIR,GAAKA,EAAEiU,WAC3C,QACJ,CACA,MAAM5X,EAAS0X,EAAM1X,OACrB,IAAKA,EACD,SAEJ,MAAMiI,EAAUjI,EAAOiQ,OACjB4H,EAAQ7X,EAAOkE,cACjB2T,GACAA,EAAMlW,SAAQmW,GAAQA,EAAK7V,gBAE3BO,EAAeyF,EAAQxH,YACvB8W,GAAiBtP,GAGrBuP,GADgBxX,EAAO4X,QAE3B,CACJ,CACO,SAASG,GAA0BN,EAAWnI,EAAO,GAAIvJ,EAAO,IACnE,IAAK,MAAM2R,KAASD,EAAW,CAC3B,MAAMzX,EAAS0X,EAAM1X,OACrB,IAAKA,EACD,SAEJ,MAAMiI,EAAUjI,EAAOiQ,OACvB,GAAIhI,EAAS,CACTqH,EAAKzK,KAAKoD,GACV,MAAM4P,EAAQ7X,EAAOkE,cACjB2T,GACA9R,EAAKlB,QAAQgT,EAErB,CACA,MAAMG,EAAUhY,EAAO4X,QACnBI,GACAD,GAA0BC,EAAS1I,EAAMvJ,EAEjD,CACA,MAAO,CAAEuJ,OAAMvJ,OACnB,CC1CO,SAASkS,GAAgBhQ,EAASiQ,GACrC,MAAMpY,EAAUmI,EAAQnI,QAClBE,EAASF,EAAQE,OACjB4X,EAAU5X,EAAO4X,QAGjBO,EAAWnY,EAAOmY,SACxB,GAAIA,EACA,OAMR,SAAgCA,EAAUD,EAAapY,GACnD,MAAME,EAASF,EAAQE,OACjBoY,EAAW,GAQjB,GAPAD,EAASxW,SAAQ0W,IACb,MAAMC,EAAeD,IACHC,aAAwBrS,SAEtCmS,EAASvT,KAAKyT,EAClB,IAEAF,EAASvU,OAAQ,CACjB,MAAM0U,EAActS,QAAQS,IAAI0R,GAC3BrV,MAAK,OACJqT,GAASC,MAEXmC,GAAqBxY,EAAO4X,QAASM,GACrCO,GAAczY,KACZoW,GAASC,MACXC,IAAO,IAIX,YADA4B,EAAYrT,KAAK0T,EAErB,GACEnC,GAASC,MACXmC,GAAqBxY,EAAO4X,QAASM,GACrCO,GAAczY,KACZoW,GAASC,MACXC,IACJ,CAnCeoC,CAAuBP,EAAUD,EAAapY,GAEzD0Y,GAAqBZ,EAASM,GAC9BO,GAAczY,EAClB,CAgCA,SAASwY,GAAqBZ,EAASM,GACnC,IAAK,MAAMpY,KAAW8X,EAAS,CAC3B,GAAI9X,EAAQ6Y,mBACR,SAEJ,MAAMhB,EAAY7X,EAAQ6X,UAC1B,GAAIA,EAAW,CACXiB,GAAa9Y,EAAS6X,GACtB,QACJ,CAEA,MAAMkB,EAAM/Y,EAAQgZ,eACpB,GAAID,EAAK,QACE/Y,EAAQgZ,eACfhD,GAAajR,KAAKgU,GAClB,QACJ,CACA,MAAME,EAAYjZ,EAAQE,OAC1B,QAAkB0K,IAAdqO,EACA,SAEJ,IAA0B,IAAtBA,EAAUC,QACV,SAEJD,EAAUC,SAAU,EACpB,MAAMxN,EAASuN,EAAUvN,OACrBA,GACAyM,GAAgBzM,EAAQ0M,EAGhC,CACJ,CACA,SAASO,GAAczY,GAECA,EAAOiZ,YAEftX,SAAQuM,IAChB,MAAMgL,EAAShL,EAAMgL,OACjBA,GACApD,GAAajR,KAAKqU,GAEtB,MAAM1Y,EAAM0N,EAAMiL,WACb3Y,GAGLsV,GAAajR,KAAKrE,EAAI,GAG9B,CC5FO,SAAS4Y,GAAenR,GAC3B,MAAMjI,EAASiI,EAAQnI,QAAQE,OAC/BA,EAAOgZ,SAAU,EACjB/Q,EAAQnI,QAAQC,YAAc,EAC9B,MAAMqY,EAAW,GAOjB,OALAZ,GADgBxX,EAAO4X,SAEnB5X,EAAOyR,UACP8F,GAAiBtP,GAErBgQ,GAAgBhQ,EAASmQ,GAClBA,CACX,CCbO,SAASiB,GAAkB9X,EAAOqC,EAAO+T,EAAW2B,EAASC,GAChE,MAAMC,EAAYjY,EAAMsC,OAAS,EAC3B4V,EAAK7V,EAAQ0V,EACbI,EAAaD,EAAK,GAAKD,EAAYC,EACnCE,EAAchC,EAAU/T,GAAOgU,QACrC,GAAI8B,EAEA,OADAE,GAAiBD,EAAaJ,GACvB,EAEX,MAEM3O,EAGV,SAA0BiP,EAAQC,EAAaH,EAAaJ,EAAQ5B,EAAW/T,GAC3E,MAAMmW,EAASD,GAAeD,IAAWC,EAAYzK,WACrD,GAAI0K,EAyBA,OAFAH,GAAiBD,EAAaJ,GAC9B5B,EAAUjT,OAAOd,EAAO,GACjB,EAEX,OAAO,CACX,CAjCmBoW,CAFAL,EAAYpY,MAAM8N,WACb9N,EAAMqC,GAC2B+V,EAAaJ,EAAQ5B,EAAW/T,GACrF,OAAOgH,CACX,CAgCO,SAASgP,GAAiB9V,EAAMyV,IAKvC,SAAkCvZ,EAAQ8D,GACtC,GAAI9D,EAAQ,CAERoZ,GADgBpZ,EAAOwL,OAE3B,KACK,CACD,MAAMwL,EAAUlT,EAAKgV,sBACdhV,EAAKgV,eACZhD,GAAajR,KAAKmS,EACtB,CACJ,CAbIiD,CADenW,EAAK9D,OACa8D,KAC/ByV,EAAOD,OACb,CC7CO,SAASY,GAAsBxY,EAAU5B,GAE5C,IAAKmD,EAAQvB,GAAW,CAGpB,OADAkX,GAAa9Y,EADKA,EAAQ6X,WAEnB,CACX,CACA,OAAO,CACX,CACO,SAASiB,GAAa9Y,EAAS6X,GAClC,MAAM4B,EAAS,CAAEY,MAAO,EAAGb,QAAS,GACpC,IAAK,IAAI1V,EAAQ,EAAGA,EAAQ+T,EAAU9T,SAAUD,EAC5CgW,GAAiBjC,EAAU/T,GAAQ2V,UAEhCzZ,EAAQ6X,SACnB,CACO,SAASyC,GAAuB1Y,EAAU5B,GAE7C,GADmB4B,gBACQ,IAAerB,EAAW2C,OAGjD,OCxBD,SAAmCzB,EAAO8Y,GAC7C,MAAMC,EAAchD,GAAc/V,GAC5BgZ,EAAWF,EAAYvB,eAC7B9C,GAAWnR,KAAK,CAACyV,EAAaC,GAClC,CDmBQC,CAA0B9Y,EAAU5B,IAC5B,EAEZ,MAAM+Y,EAAM/Y,EAAQgZ,eAGpB,cAFOhZ,EAAQgZ,eACfhD,GAAajR,KAAKgU,GACX,CACX,CEhCO,SAAS4B,GAAWC,EAC3BC,GACI,MAAMC,EAAaF,EAASja,UACtBoa,EAAaF,EAASla,UACtBqa,EAAOF,GAAYra,KAAOma,EAC1BK,EAAOF,EAAWta,IACxB,GAAIqa,GAAYrY,YAAcjC,EAAWQ,YACrC,OAAO8Z,EAAWpa,MAAQqa,EAAWra,IAEzC,OAAQsa,EAAKvY,WACT,KAAKjC,EAAWE,IACZ,OAAIua,GAAMxY,YAAcjC,EAAWE,KAaxC,SAAuBsa,EAAMC,GAChC,MAAMC,EAAWF,EAAKta,IAChBya,EAAWF,EAAKva,IACtB,OAAOwa,IAAaC,CACxB,CAdmBC,CAAcJ,EAAMC,GAE/B,KAAKza,EAAWC,IAAK,CACjB,MAAM4a,EAalB,SAA0BL,EAAMC,EAAML,EACtCC,GACI,MAAMS,EAAWN,EAAKO,QAChBC,EAAWP,EAAKM,QACtB,GAAID,EAASvX,SAAWyX,EAASzX,OAC7B,OAAO,EAKX,IAH2BuX,EAASvQ,OAAM,CAAC1I,EAAQyB,IAAU0X,EAAS1X,GAAOC,SAAW1B,EAAO0B,SAI3F,OAAO,EAEX,MAAM0X,EAAUb,EAASja,UAAUgD,QAAUqX,EAAKrX,OAC5C+X,EAAUb,EAASla,UAAUgD,QAAUsX,EAAKtX,OAClD,OAEG,SAAyB8X,EAASC,GACrC,MAAMC,EAAqBF,EAAQ1X,SAAW2X,EAAQ3X,OACtD,IAAK4X,EACD,OAAO,EAEX,MAAMC,EAAeF,EAAQ3Q,OAAM,CAACtJ,EAAOqC,KACvC,MAAMgJ,EAAY2O,EAAQ3X,GAE1B,UAD2B,IAAYvD,EAAWuC,iBAAmB,IAAgBvC,EAAWuC,SAC/E,CAEb,SADoBrB,EAAMsL,aAAeD,EAAUC,WAKvD,CACA,OAAO,CAAI,IAEf,GAAI6O,EACA,OAAO,EAEX,OAAO,CACX,CAvBWC,CAAgBJ,EAASC,EACpC,CA7ByBI,CAAiBd,EAAMC,EAAML,EAAUC,GACpD,OAAOQ,CACX,EAEJ,MAAM,IAAI7N,MAAM,wBAAwBwN,EAAKvY,YACjD,CCrBO,SAASsZ,GAAmB7E,EAAS7J,EAAM5L,GAC9CwU,GAAalR,MAAK,KACdiX,GAAwB9E,EAAS7J,EAAM5L,EAAM,GAErD,CACO,SAASua,GAAwB9E,EAAS7J,EAAM5L,QACrCmJ,IAAVnJ,IAAiC,IAAVA,GAA6B,OAAVA,EAI9CyV,EAAQ+E,aAAa5O,EAAM5L,GAHvByV,EAAQgF,gBAAgB7O,EAIhC,CCXO,SAAS8O,GAAiB9O,EAAM5L,EAAOyV,EAASkF,EAAajU,EAASsR,GACzE,OAAQ2C,GAEJ,IAAK,OAAQ,CACT,MAAMC,EAAU5C,EAAOY,MASvB,YAPAhE,GAAYtR,MAAK,KAKbtD,EAJc,CACV6a,OAAQpF,EACRmF,WAEQ,GAGpB,CACA,IAAK,UAAW,CACZ,MAAMA,IAAY5C,EAAOD,QACnBtZ,EAASiI,EAAQnI,QAAQE,OAS/B,OARAA,EAAOmY,SAAWnY,EAAOmY,UAAY,QACrCnY,EAAOmY,SAAStT,MAAK,IAKVtD,EAJO,CACV6a,OAAQpF,EACRmF,aAKZ,CACA,IAAK,YAED,YADAhG,GAAYtR,MAAK,IAAMmS,EAAQqF,UAEnC,IAAK,aAED,YADAlG,GAAYtR,MAAK,IAAMmS,EAAQsF,WAEnC,IAAK,QAAS,CACV,MAAMC,EAAQpP,EAAKqP,MAAM,KAEzB,YADAzG,GAAalR,MAAK,IAAMmS,EAAQyF,MAAMF,EAAM,IAAMhb,GAEtD,CACA,IAAK,QAED,YAIZ,SAA6B4L,EAAM5L,EAAOyV,GACtC,MAAMuF,EAAQpP,EAAKqP,MAAM,KAGzB,GAFAD,EAAMtY,QAEF1C,EAAO,CACP,IAAK,MAAM4L,KAAQoP,EACfxG,GAAalR,MAAK,IAAMmS,EAAQ0F,UAAU5a,IAAIqL,KAElD,MACJ,CAEA,IAAK,MAAMA,KAAQoP,EACfxG,GAAalR,MAAK,IAAMmS,EAAQ0F,UAAUC,OAAOxP,IAEzD,CAnBYyP,CAAoBzP,EAAM5L,EAAOyV,GAGzC,MAAM,IAAI1J,MAAM,gCAAgC4O,MAAgB/O,IACpE,CC9CO,SAAS0P,GAAsB3K,EAAY5F,GAC9C,MAAMwQ,EAIV,SAA6B7U,EAASqE,EAAUyQ,EAAS,IACrD,MAAMjd,EAAUmI,EAAQnI,QACxBid,EAAOlY,KAAK,CACRoD,UACAlI,YAAaD,EAAQC,YACrBuM,aAEJ,MAAMmL,EAAYnL,EAASI,SAC3B,IAAK,IAAI9I,EAAQ6T,EAAU5T,OAAS,EAAGD,GAAS,IAAKA,EAAO,CACxD,MAAM8T,EAAQD,EAAU7T,GAClBoZ,EAAWtF,EAAM5X,QACvBid,EAAOlY,KAAK,CACRoD,QAASyP,EACT3X,YAAaid,EAASjd,YACtBuM,YAER,CACA,OAAOyQ,CACX,CAtB6BE,CAAoB/K,EAAY5F,GACzD,OAAOwQ,CACX,CCCO,SAASI,GAAUjV,EAASkV,EAAW,IAC1C,MAAMnd,EAASiI,EAAQnI,QAAQE,OAEzBod,EAAa7M,GADDtI,EAAQxH,WAEpBsM,EAAe9E,EAAQ8E,aAC7B,GAAI/M,EAAOqQ,OAEP,OADA8M,EAAStY,KAAKoD,GACPkV,EAGX,GAAIC,EACA,OAAOF,GAAUnQ,EAAcoQ,GAEnC,MAAM3N,EAAavH,EACboV,EAAc7a,EAAegN,EAAW/O,WACxC8B,EAAY0F,EAAQxH,UAAU8B,UAE9B+a,EADgBvQ,GAAgBxK,IAAcjC,EAAWQ,eACzBuc,GCsBnC,SAAuBtQ,EAActM,EAAWwH,GACnD,MAAMsV,EAOV,SAAgC9c,EAAWwH,GACvC,MAAMuV,EAAW/c,EAAU2O,MACrBiD,EAAcpK,EAAQoK,YACtBoL,EAAcpL,EAAYG,OAEhC,GADmBuB,GAAsByJ,EAAUC,GAE/C,OAAO,EAEX,OAAQhd,EAAU0O,WACd,KAAKmD,GAAYC,UACb,OAAO2B,GAAmBsJ,EAAUC,GACxC,KAAKnL,GAAYG,QACb,OAAOwB,GAAiBuJ,EAAUC,GAE1C,OAAQpP,GAAUmP,EAAUC,EAAa1M,GAC7C,CAtB2B2M,CAAuBjd,EAAWwH,GAEzD,GAAI8E,GAAgBwQ,EAChB,OAAO,EAEX,OAAO,CACX,CD7ByDI,CAAc5Q,EAAcyC,EAAW/O,UAAW+O,IACjGoO,EErBH,SAA8B3V,GACjC,MACMgE,EADShE,EAAQnI,QAAQE,OACNiM,UACzB,IAAKA,EACD,MAAO,GAEX,MAAM4R,EAAkB,GAExB,IAAK,MAAMvR,KAAYL,EAAW,CAC9B,MACM6R,EAAYjB,GADJvQ,EAASG,MACwBH,GAC/CuR,EAAgBhZ,QAAQiZ,EAAU3Z,KAAIR,GAAKA,EAAEsE,UACjD,CACA,OAAO4V,CACX,CFOwBE,CAAqBvO,GAEzC,OADA2N,EAAStY,QAAQ+Y,GACbN,GACAJ,GAAUnQ,EAAcoQ,GACpBE,GACAF,EAAStY,KAAK2K,GAEX2N,IAEXA,EAAStY,KAAK2K,GACP2N,EACX,CG/BO,SAASa,GAAqBb,KAC/B/G,GAASC,MACX8G,EAASxb,QAAQsc,MACf7H,GAASC,MACXC,IACJ,CACA,SAAS2H,GAAahW,GAClB,MAAMjI,EAASiI,EAAQnI,QAAQE,OAC1BA,GAGL,GAAcA,EAAOiQ,OACzB,CdVAxI,EAAakJ,WAAa,IAAIrN,OAAQoH,GAAW,SAAmB3G,GAC3D3C,MACD2C,EAAaQ,MAErB,IeFA,MAAM2Z,GAAS,eACTC,GAAgB,uBACf,SAASC,GAAoB7c,EAAO0G,GACvC,MAAMjI,EAASiI,EAAQnI,QAAQE,OAEzBqe,EAAkB,SAAUrH,EAASrQ,GACvC,IAAuB,IAAnB3G,EAAOgZ,QAIX,OAQD,SAAwBzX,EAAO0G,EAASqW,EAAQ3X,GAEnD,IAAI4X,EAAYtW,EAChB,KAAOsW,EAAUxR,eAAiBvK,EAAe+b,EAAU9d,YACvD8d,EAAYA,EAAUxR,aAE1B,MAAMjN,EAAUye,EAAUze,QACpBE,EAASF,EAAQE,OACvBA,EAAOqQ,QAAS,EAEhB,MAAMF,EAAiB5O,EAAMid,MAAMF,EAAQ3X,UACpC3G,EAAOqQ,OAEd,OAEG,SAA0BF,EAAgBsO,GAC7C,MAAMze,EAASye,EAAoB3e,QAAQE,OAC3C,OAEJ,SAA+B0e,EAAMvO,EAAgBnQ,GAGjD,OADAge,GADqBd,GAAUwB,IAI5B,SAAmCvO,EAAgBuO,EAAM1e,GAC5D,GAAI6C,EAAUsN,GAAiB,CAG3B,OAFgBuO,EAAK5e,QAAQE,OACrBqQ,QAAS,EACVF,EAAepN,MAAK,KACvB,IAAuB,IAAnB/C,EAAOgZ,QACP,OAAOmF,UAEKO,EAAK5e,QAAQE,OACdqQ,OAGf,OADA2N,GADqBd,GAAUwB,IAExBP,EAAa,GAE5B,CACA,OAAOD,EACX,CAlBWS,CAA0BxO,EAAgBuO,EAAM1e,EAC3D,CANW4e,CAAsBH,EAAqBtO,EAAgBnQ,EACtE,CANmB6e,CAAiB1O,EAAgBoO,EAEpD,CAtBeO,CAAeT,EAAgBU,YAAaV,EAAgBpW,QACnE+O,EAASrQ,EACb,EAIA,OAFA0X,EAAgBU,YAAcxd,EAC9B8c,EAAgBpW,QAAUA,EACnBoW,CACX,CCnBA,MAAMW,GAAU,CAAC,OAAQ,WAkBlB,SAASC,GAAsBC,EAAU3d,EAAOyV,EAASmI,EAAU5F,EAAQtR,EAASmX,GACvF,GAAIA,EACA,OAAOnD,GAAiBiD,EAAU3d,EAAOyV,EAASoI,EAAWnX,EAASsR,GAE1E4F,EAASnI,EAASkI,EAAU3d,EAChC,CC3BO,SAAS8d,GAAwBpX,EAASqX,EAAWtI,EAASpV,GACjE,MAAMiX,EAAM5Q,EAAQsX,WAEF,SAAdD,IACAA,EAAY,YAEhB,MAAME,EAAmB,IAAMF,EAGzBG,EADSxX,EAAQnI,QAAQE,OACP0f,OACxB,IAAKD,EAASH,GAAY,CACtB,MAAMK,EAAW,SAAuBC,GACpCA,EAAMC,wBAA0BD,EAAME,gBACtCC,GAAYH,EAAOJ,EAAkBI,EAAMxD,OAC/C,EACAqD,EAASH,GAAaK,EACtB9G,EAAImH,iBAAiBV,EAAWK,EACpC,CAGA3I,EAAQwI,GAAoB5d,EAC5BoV,EAAQsI,GAAa1d,CACzB,CACA,SAASme,GAAYH,EAAOJ,EAAkBpD,GAC1C,MAAMxa,EAAWwa,EAAOoD,GACxB,GAAI5d,EAAU,CACV,IAAIqe,GAAU,EAMd,GALAL,EAAME,gBAAkB,WACpBG,GAAU,EACVL,EAAMC,wBAAwBjgB,KAAKggB,EACvC,EACAhe,EAASge,GACLA,EAAMM,kBAAoBD,EAC1B,MAER,CACA,MAAMzJ,EAAa4F,EAAO5F,WACtBA,GACAuJ,GAAYH,EAAOJ,EAAkBhJ,EAE7C,CCvCO,SAAS2J,GAAyBnJ,EAASoJ,EAAcnY,EAASiX,GACrE,MAAMmB,EAAM,YAAa1Z,GACrB,OAAO0Z,EAAItB,YAAY/H,EAASrQ,EACpC,EAEA0Z,EAAItB,YAAcqB,EAClBC,EAAIpY,QAAUA,EACdoX,GAAwBpX,EAAQiK,WAAYgN,EAAUlI,EACtDqJ,EACJ,CCTO,SAASC,GAAcpB,GAC1B,GAAIA,EAASqB,WAAW,UACpB,MAAO,QAEX,MAAMC,EASH,SAAyBtB,GAC5B,OAAQA,GACJ,IAAK,aACD,MAAO,aACX,IAAK,YACD,MAAO,YACX,IAAK,SACL,IAAK,OACD,MAAO,SACX,IAAK,YACL,IAAK,UACD,MAAO,UAEf,OAAO,CACX,CAvB0BuB,CAAgBvB,GACtC,OAAsB,IAAlBsB,KAGAtB,EAASqB,WAAW,WACb,OAGf,CCXA,MAAMG,GAAc,CAAEvG,MAAO,EAAGb,QAAS,GAClC,SAASqH,GAAyBld,EAAQlC,EAAO8Y,EAAatN,GACjE,GAAIsN,EAAYuG,WAKZ,OCLD,SAAiCnd,EAAQod,EAAWlb,EAAWqR,EAASjK,EAAcoS,EAAUvH,EAAS2B,GAE5G,GAAI5T,EAAW,CACX,GAAImb,GAAiBD,GAEjB,YADA7J,EAAQgF,gBAAgBrW,GAG5B,UAAW,IAAgBtF,EAAW2C,OAElC,UADyB,IAAgB3C,EAAW2C,OAEhD,IAAK,MAAMmK,KAAQxH,EAEXwH,KAAQ0T,GAGZ9K,GAAalR,MAAK,WACdmS,EAAQgF,gBAAgB7O,EAC5B,SAIJ,IAAK,MAAMA,KAAQxH,EACfoQ,GAAalR,MAAK,WACdmS,EAAQgF,gBAAgB7O,EAC5B,GAIhB,CACA4T,GAAyBtd,EAAQod,EAAW7J,EAASjK,EAAcoS,EAAUvH,EAAS2B,EAC1F,CD7BQyH,CAAwBvd,EAAQlC,EAAO8Y,EAAY9Y,MAAO8Y,EAAYrD,QACtEjK,EAAcsN,EAAY8E,SAAU,GACpCuB,SACArG,EAAY9Y,MAAQA,GAGxB,MAAMyV,EAAUqD,EAAYrD,QAC5BiK,GAAqB1f,EAAO8Y,EAAY6E,SAAU7E,EAAarD,EAASjK,EAAcsN,EAAY8E,SAAU9E,EAAY+E,UAAWsB,IACnIrG,EAAY9Y,MAAQA,CAExB,CEFO,SAAS2f,GAAiBzd,EAAQyb,EAAUlI,EAAS/O,EAASkX,EACrEvH,EAASwH,EAAW7F,EAAQhY,GACxB,MAAM4f,EAAUC,GAAYlC,GAE5B,GADkBiC,GAAW,EACd,CACX,MAAM5f,EAAQkC,EAAO0d,GACf9G,EAAcgH,GAAc9f,EAAOqW,GAAS,GAQlD,OAPAyC,EAAYiH,QAAS,EACrBjH,EAAYrD,QAAUA,EACtBqD,EAAY8E,SAAWA,EACvB9E,EAAYuG,YAAa,EAEzBvG,EAAYlV,QAAU,CAACzD,EAAU6f,IAAcZ,GAAyBY,EAAW7f,EAAU2Y,EAAapS,QAC1G8Y,GAAyBtd,EAAQlC,EAAOyV,EAAS/O,EAASkX,EAAUvH,EAAS2B,EAEjF,CACA,MAAMiI,EAAWJ,GAAY7f,GAC7B,GAAIigB,GAAY,EAAG,CACf,MAAMjgB,EAAQkC,EAAO+d,GACfnH,EAAc,CAChBiH,QAAQ,EACRtK,UACAkI,SAAUA,EACVuC,iBAAkBrH,GAClBzB,oBAAoB,GAExBf,EAAQ/S,KAAKwV,GAEb,OADkB3X,EAAkB2X,EAAY9Y,OA0CxD,SAA8C2d,EAAU7E,EAAarD,EAAS/O,EAASkX,EAAUC,EAAW7F,GACpG6F,GACArJ,GAAalR,MAAK,WACdmS,EAAQgF,gBAAgBkD,EAC5B,IAEJ,MAAMwC,EAAsBrH,EAAY9Y,MACxC,GAAImB,EAAkBgf,GAAsB,CACxCrH,EAAYlV,QAAUwc,GACtB,MAAM/f,EAAW,SAA6Bwe,GAC1Ca,GAAqBb,EAAclB,EAAU7E,EAAarD,EAAS/O,EAASkX,EAAUC,EAAW7F,EACrG,EAEM9U,EAAMid,EAAoB7f,UAAUD,GAEpC5B,EAASqa,EAAYra,QACdA,EAAOkE,cAAgBlE,EAAOkE,eAAiB,IACvDW,KAAKJ,EACd,CAEA,YADAwc,GAAqB5G,EAAY9Y,MAAO2d,EAAU7E,EAAarD,EAAS/O,EAASkX,EAAUC,EAAW7F,EAE1G,CA7DmBqI,CAAqC1C,EAAU7E,EAAarD,EAAS/O,EAASkX,EAAUC,EAAW7F,IAE9Gc,EAAYlV,QAAU,CAACzD,EAAU6f,IAAcZ,GAAyBY,EAAW7f,EAAU2Y,EAAapS,GNvC3G,SAA0CiX,EAAU3d,EAAO8Y,EAAarD,EAASmI,EAAUlX,EAASsR,EAAQ6F,GAC/G/E,EAAY6E,SAAWA,EACvB7E,EAAYrD,QAAUA,EACtBqD,EAAY8E,SAAWA,SACZ,IAAY9e,EAAWuC,SAC1Bwc,GAAaJ,GAAQhQ,SAASkQ,GAC9BjD,GAAiBiD,EAAU3d,EAAOyV,EAASkI,EAAUjX,EAASsR,GAG3DsI,GAAsBxH,EAAa9Y,EAAO0G,EAASiX,EAAUlI,IAExEqD,EAAY6E,SAAWA,EACvB7E,EAAYrD,QAAUA,EACtBqD,EAAY8E,SAAWA,EACvB9E,EAAY+E,UAAYA,EACjBH,GAAsBC,EAAU3d,EAAOyV,EAASmI,EAAU5F,EAAQtR,EAASmX,GACtF,CMmCQ0C,CAAiC5C,EAAU3d,EAAO8Y,EAAarD,EAASmI,EAAUlX,EAASsR,EAAQ6F,QACnG/E,EAAY9Y,MAAQA,GAExB,CACA,OAAO0d,GAAsBC,EAAU3d,EAAOyV,EAASmI,EAAU5F,EAAQtR,EAASmX,EACtF,CACO,SAAS2B,GAAyBtd,EAAQod,EAAW7J,EAASjK,EAAcoS,EAAUvH,EAAS2B,GAClG,IAAIuH,GAAiBD,GAIrB,UAAWA,IAAcxgB,EAAW2C,OASX,IAArB6d,EAAUhd,QAGdsb,EAASnI,EAAS6J,EAAW1gB,QAXzB,IAAK,MAAMgN,KAAQ0T,EAAW,CAC1B,MAAMtf,EAAQsf,EAAU1T,GACxB+T,GAAiBzd,EAAQ0J,EAAM6J,EAASjK,EAAcoS,EAAUvH,EAAS0I,GAAcnT,GACvFoM,EAAQhY,EACZ,CAQR,CAwBO,SAAS0f,GAAqBb,EAAclB,EAAUpf,EAASkX,EAAS/O,EAASkX,EAAUC,EAAW7F,GAEzG,OAAIzW,EAAWsd,GA2BnB,SAAqBnY,EAASmY,EAAcpJ,EAASkI,EAAUE,EAAWD,EAAUrf,EAASyZ,GACzF,MAAM9F,EAAUxL,EAAQxH,UAAUgT,QAGlC,IAFkBA,GAASlR,WAAakR,GAASnK,UAAU/G,aAC3BjC,EAAWO,WAEvC,OAAOghB,GAAsB/hB,EAASsgB,EAAcnY,EAASiX,EAAUlI,GAE3E,OAAO+K,GAA6B3B,EAAcpJ,EAASkI,EAAUE,EAAWD,EAAUlX,EAASsR,EACvG,CAlCeyI,CAAY/Z,EAASmY,EAAcpJ,EAASkI,EAAUE,EAAWD,EAAUrf,EAASyZ,GAExFwI,GAA6B3B,EAAcpJ,EAASkI,EAAUE,EAAWD,EAAUlX,EAASsR,EACvG,CACO,SAASwI,GAA6B3B,EAAcpJ,EAASkI,EAAU+C,EAAS9C,EAAUlX,EAASsR,GAEtG,IAAgB,IAAZ0I,EAAJ,CAKA,OAAQ7B,GACJ,UAAK1V,EACL,KAAK,EACL,KAAK,KAID,YAHAqL,GAAalR,MAAK,WACdmS,EAAQgF,gBAAgBkD,EAC5B,IAGR,GAAIpc,EAAWsd,GACX,OAAOD,GAAyBnJ,EAASoJ,EAAcnY,EAASiX,GAGpEC,EAASnI,EAASkI,EAAUkB,EAd5B,MAHInE,GAAiBiD,EAAUkB,EAAcpJ,EAASiL,EAClDha,EAASsR,EAiBjB,CAUO,SAASsI,GAAsB/hB,EAASsgB,EAAcnY,EAASiX,EAAUlI,GAC5E,MAAMkL,EAAUpiB,EAAQyB,MACxB,OAAI2gB,GAAWA,EAAQnD,aAAemD,EAAQja,SAC1Cia,EAAQnD,YAAcqB,EACtB8B,EAAQja,QAAUA,EACXia,GAIJ/B,GAAyBnJ,EADhCoJ,EAAehC,GAAoBgC,EAAcnY,GACMA,EAASiX,EACpE,CACA,SAASkC,GAAYe,GACjB,OAAIxf,EAASwf,IAAa,aAAcA,EAC7BA,EAASC,UACZ,CAEZ,CACO,SAAStB,GAAiBD,GAC7B,OAAOnW,MAAcmW,IAAmC,IAAUA,CACtE,CCxJO,MAAMc,GAAe,KAAe,EACrCU,GAA+B,iBAAbjL,UAAyBA,SAASkL,cAAc,OACjE,SAASC,GAAkBC,EAAO/e,EAAQwE,EAASsR,EAC1D3B,EAASnI,EACTgT,EAAUxL,EAAclR,EAAO,IAC3B,MAAMvF,EAAM,GACRiiB,QAA6B/X,IAAjBuM,IACZA,EAAeG,SAASC,eAAelX,GACvC8V,GAAapR,KAAK,CACdmS,QAASC,EACTH,SAAU2L,IAEdA,OAAW/X,GAEf,IAAK,IAAI9G,EAAQ,EAAGA,EAAQ4e,EAAM3e,SAAUD,EAAO,CAC/C,MAAM8e,EAAOF,EAAM5e,GACbrC,EAAQmhB,EAAKC,EAEnB,IADeC,MAAMrhB,GACV,CACP,MAAMqC,EAAQgU,EAAQ/T,OAEtBgf,GADcpf,EAAOG,GACGA,EAAOgU,EAAS3P,EAASlC,EAAMwT,EAAQ9J,EAAOgT,EAAUxL,GAChF,QACJ,CACA,MAAM6L,EAAU,CAAC,EAEjB,GADAtiB,EAAIqE,KAAKie,GACO,SAAZJ,EAAKK,GAAe,CACpBC,GAAcF,EAASJ,EAAMD,EAAUxL,GACvC,QACJ,CAEA,MAAMkC,EAAa8J,GAAiBH,EAASJ,EAAMjf,EAAQwE,EAAS2P,EAAS2B,EAAQkJ,EAAUxL,GAC3FyL,EAAKQ,KACLJ,EAAQI,GAAKX,GAAkBG,EAAKQ,GAAIzf,EAAQwE,EAASsR,EAAQ3B,EAASnI,EAAQ,EAAG0J,EAAYlC,EAAclR,GAAMvF,IAE7H,CACA,MAAO,CAAEuF,OAAMvF,MAAKoX,UACxB,CACA,SAASqL,GAAiBH,EAASJ,EAAMjf,EAAQwE,EAAS2P,EAAS2B,EAAQkJ,EAAUxL,GACjF,MAAMkC,EAAa2J,EAAQ3J,WAAa/B,SAASkL,cAAcI,EAAKK,IAwBpE,OAtBIL,EAAKjJ,IACLiJ,EAAKjJ,GAAG9X,SAAQwhB,IACZ,MAAMhW,EAAOgW,EAAK,GACZ5hB,EAAQ4hB,EAAK,GACb/D,EAAY+D,EAAK,KAAM,EAC7BjC,GAAiBzd,EAAQ0J,EAAMgM,EAAYlR,EAE3C6T,GAAyBlE,EAASwH,EAAW7F,EAAQhY,EAAM,IAG/DkhB,EACAxM,GAAapR,KAAK,CACdmS,QAASmC,EACTrC,SAAU2L,IAIdvM,GAAmBrR,KAAK,CACpBmS,QAASmC,EACTrC,SAAUG,IAGXkC,CACX,CACA,SAAS6J,GAAcF,EAASJ,EAAMjW,EAAOwK,GACzC,MAAML,EAAWkM,EACX3gB,EAASyU,EAASwM,GAAKV,EAAKU,GAClCf,GAAQgB,UAAYlhB,EACpB,MAAMgX,EAAavC,EAASuC,WAAa/B,SAASC,eAAegL,GAAQiB,WACrE7W,EACAwJ,GAAapR,KAAK,CACdmS,QAASmC,EACTrC,SAAUrK,IAIdyJ,GAAmBrR,KAAK,CACpBmS,QAASmC,EACTrC,SAAUG,GAGtB,CACA,SAAS4L,GAAiBthB,EAAOqC,EAAOgU,EAAS3P,EAASlC,EAAMwT,EAChE9J,EACAgT,EAAUxL,GACN,MAAMiC,EAAS9B,SAASC,eAAelX,GAEjCka,EAAcgH,GAAc9f,EAAOqW,EADZnI,EAAQ,GAerC,GAbA4K,EAAYkJ,YAAcrK,EACtBuJ,EACAxM,GAAapR,KAAK,CACdiS,SAAU2L,EACVzL,QAASkC,IAIbhD,GAAmBrR,KAAK,CACpBiS,SAAUG,EACVD,QAASkC,IAGbxW,EAAkBnB,GAUlB,OATAwE,EAAKlB,KAAK,CACNoS,aAAciC,EACduJ,WACA3iB,QAASyB,EACT0G,UACAsR,SACAc,qBAEJA,EAAYlV,QAAUwc,IAI1BtH,EAAYlV,QAAU,CAACzD,EAAU8hB,EAAYhU,EAAYiU,IAAmBC,GAAoBD,EAAgB/hB,EAAU8N,GAC3GvH,EAAQnI,QAAQE,OACxBqQ,QAAS,EAChBsT,GAAyBpiB,EAAO8Y,EAAapS,EAASsR,EAAQkJ,EAAUxL,UACxDhP,EAAQnI,QAAQE,OACjBqQ,OACfgK,EAAY9Y,MAAQA,CAExB,CC9HO,SAASqiB,GAAmB3b,EAASsR,EAAQkJ,EAAUxL,GAC1D,MACMjX,EADUiI,EAAQnI,QACDE,OACvBA,EAAOwL,OAASvD,EAChBjI,EAAOiQ,OAAShI,IACdmO,GAASC,MACX,MAAMzL,EAOV,SAA2B3C,EAASsR,EAAQkJ,EAAUxL,GAClD,MAAM4M,EASV,SAAqB5b,GACjB,MAAMxH,EAAYwH,EAAQxH,UACpBqjB,EAAUrjB,EAAUF,IAC1B,GAAIujB,EAAQvhB,YAAcjC,EAAWE,IACjC,OAAOsjB,EAAQtjB,IAEnB,MAAM6a,EAAUyI,EAAQzI,QACxB,OAAO0I,GAAW1I,EAASyI,EAAQrgB,OACvC,CAjBoBugB,CAAY/b,GACtB6b,EAAU7b,EAAQxH,UAAUF,IAC5BkD,EAASqgB,EAAQrgB,OACjBmU,EAAU,GACV5X,EAASiI,EAAQnI,QAAQE,OAC/BA,EAAO4X,QAAUA,EACjB,MAAMhN,EAAS2X,GAAkBsB,EAASpgB,EAAQwE,EAASsR,EAAQ3B,EAAS,EAAG6K,EAAUxL,GACzF,OAAOrM,CACX,CAhBmBqZ,CAAkBhc,EAASsR,EAAQkJ,EAAUxL,GAK5D,OAJAjX,EAAOiZ,YAAcrO,EAAOpK,MAC1B4V,GAASC,MAGJzL,CACX,CAoBO,SAASyW,GAAc9f,EAAOqW,EAASe,GAC1C,MAAM0B,EAAc,CAChB9Y,QACAkgB,iBAAkBrH,GAClBzB,sBAGJ,OADAf,EAAQ/S,KAAKwV,GACNA,CACX,CCrCO,SAAS6J,GAAWnX,EAC3BjN,EACAyZ,GACI,MACMtR,EADSnI,EAAQE,OACAiQ,OACvBhI,EAAQ8E,aAAeA,EACvBjN,EAAQ2hB,iBAAmB0C,GAC3B,MACMvZ,EAASgZ,GAAmB3b,EAASsR,OAAQ7O,EADxC5K,EAAQyjB,aAEnB,IAAK,MAAM9e,KAAOmG,EAAO7E,KACrBqe,GAAoB3f,GAExB,OAAOwD,CACX,CAOO,SAASoc,KAIZ,MAHa,CACT9hB,UAAWjC,EAAWG,UAG9B,CAEO,SAAS6jB,GAAsB7jB,EAAWsM,EAAcjN,GAC3D,MAAMmI,EAAU2K,GAAenS,EAAWsM,EAAcA,EAAamF,WAAYpS,GAGjF,OAFeA,EAAQE,OAChB4X,QAAU,GACV3P,CACX,CC7BO,SAASsc,GAAwB9gB,EACxCG,EAAOgU,EAAS7K,GACZ,MAAMxL,EAAQkC,EAAOG,GAEfyW,EAAczC,EAAQhU,GAE5B,GAAIrC,IAAU8Y,EAAY9Y,MACtB,QAGJ4D,EADgBkV,EAAYlV,SACpB5D,EAAOkC,EAAQsJ,EAAcsN,GACrCA,EAAY9Y,MAAQA,CACxB,CCtBO,SAASijB,GAAgBC,EAAcC,GAC1C,MACM9M,EADS6M,EAAa3kB,QAAQE,OACb4X,SAOpB,SAA+B6M,EAAcC,GAChD,MAAMC,EAAWD,EAAajkB,UAAUF,KAAOmkB,EAAajkB,UACtDgD,EAASihB,EAAajkB,UAAUgD,QAAUkhB,EAAQlhB,OAClDlD,EAAMkkB,EAAahkB,UAAUF,IACnCA,EAAIkD,OAASA,CACjB,CAXImhB,CAAsBH,EAAcC,KAClCtO,GAASC,MDNR,SAA8BpO,EAAS2P,GAC1C,MACMnU,EADUwE,EAAQxH,UAAUF,IACXkD,OACvB,IAAIG,EAAQ,EACZ,MAAMkR,EAAMrR,EAAOI,OACnB,KAAOD,EAAQkR,GACXyP,GAAwB9gB,EAAQG,EAAOgU,EAAS3P,KAC9CrE,CAGV,CCHIihB,CAAqBJ,EAAc7M,KACjCxB,GAASC,MACXC,IACJ,CCcA,SAASwO,GAAcvjB,EAAOwL,EAAcsN,GACxCA,EAAYoH,iBAAmB0C,GAC/B,MAAM5jB,EAAMgB,EACZ,IAAId,EAAYF,EAAIE,UAEfA,IACDA,EAAYyO,GAAmBoD,GAAYU,MAC3CvS,EAAUF,IAAMA,EAChBA,EAAIE,UAAYA,GAEpB,MAAMT,EAASqa,EAAYra,OAASH,EAAawa,GAC3CpK,EAASjQ,EAAOiQ,OAAS4C,GAAWpS,EAAWsM,EAAcA,EAAamF,WAAYmI,GAE5F,OADAra,EAAOwL,OAASyE,EACToK,CACX,CC/BO,SAAS0K,GAAgBjlB,EAASyB,EACzCwL,EAAcwM,EAAQkJ,GAClB,MAAMuC,OAA+Bta,IAAtB5K,EAAQ6X,UACnBqN,IACAllB,EAAQ6X,UAAY,IAExB,MAAMA,EAAY7X,EAAQ6X,UAC1B,IAAIsN,EAAsBnlB,EAAQyjB,YAC9BjK,EAAU,EAEd,MAAM4L,EAAe,GAErB,IAAKF,EAAQ,CAET,IAAK,IAAIphB,EAAQ,EAAGA,EAAQ+T,EAAU9T,SAAUD,EAAO,CACnD,MAAME,EAAO6T,EAAU/T,GAEjBuhB,EAAa9L,GAAkB9X,EAAOqC,EAAO+T,EAAW2B,EAASC,GACpD,IAAf4L,EAKe,IAAfA,EAIJ7L,GAAoB6L,EAHhBvhB,GAAgB,EALhBshB,EAAargB,KAAKf,EAS1B,CACAhE,EAAQ6X,UAAYuN,CACxB,CACA,MAAMrhB,EAAStC,EAAMsC,OACrB,IAAK,IAAID,EAAQ,EAAGA,EAAQC,IAAUD,EAAO,CAEzCqhB,EADmBG,GAAgB7jB,EAAOqC,EAAO9D,EAAQ6X,UAAW5K,EAAckY,EAAqB1L,EAAQkJ,GAC9Ec,WACrC,CACJ,CACA,SAAS6B,GAAgBC,EAAOzhB,EAAO+T,EAAW5K,EAAckY,EAChE1L,EAAQkJ,GACJ,MAAM3e,EAAOuhB,EAAMzhB,GACb4G,EAAWmN,EAAU/T,GAC3B,OAAI4G,EAMR,SAAiCjJ,EAAO+jB,EAAa3N,EAAW5K,EAAcnJ,EAAOqhB,EACrF1L,EAAQkJ,GACJ,MAAM8C,EAAc5N,EAAU9T,OAASD,EACvC,GAAI2hB,EAEA,OADA7B,GAAoB4B,EAAa/jB,EAAOwL,GACjCuY,EAEX,MAAM1a,EAAS4a,GAAuBjkB,EAAO0jB,EAC7ClY,EAAcwM,EAAQ5B,EAAW8K,GACjC,OAAO7X,CACX,CAfe6a,CAAwB3hB,EAAM0G,EAASoN,QAASD,EAAW5K,EAAcnJ,EAAOqhB,EAAqB1L,EAAQkJ,GAEjH+C,GAAuB1hB,EAAMmhB,EACpClY,EAAcwM,EAAQ5B,EAAW8K,EACrC,CAYA,SAAS+C,GAAuBjkB,EAAO+I,EACvCyC,EAAcwM,EAAQ5B,EAAW8K,GAC7B,MAAM6C,EAAc,CAChB/jB,QACAkgB,iBAAkBrH,GAClBzB,oBAAoB,GAExBY,EAAOY,MAAQZ,EAAOY,MAAQ,EAC9B,MAAMuL,EAAiBtO,SAASC,eAAe,IAuB/C,OAtBAiO,EAAY/B,YAAcmC,EACrBjD,GACDvM,GAAmBrR,KAAK,CACpBmS,QAAS0O,EACT5O,SAAUxM,IDxEf,SAA8B/I,EAAOwL,EAAcsN,GACtD,MAAM9X,EAAYhB,EAAMgB,UACxB,GAAIA,EACA,OAAQA,GACJ,KAAKjC,EAAWG,UAGZqkB,GAFkBvjB,EACIhB,IACHwM,EAAcsN,GACjC,MAEJ,KAAK/Z,EAAWC,IAChB,KAAKD,EAAWE,IACZskB,GAAcvjB,EAAOwL,EAAcsN,GAKnD,CC0DIsL,CAAqBpkB,EAAOwL,EAAcuY,GAC1C3B,GAAyBpiB,EAAO+jB,EAAavY,EAAcwM,EAAQkJ,GAEnE6C,EAAY/jB,MAAQA,EAEpBoW,EAAU9S,KAAK,CACX+S,QAAS0N,EACTtlB,OAAQslB,EAAYtlB,SAEpByiB,GACAxM,GAAapR,KAAK,CACdmS,QAAS0O,EACT5O,SAAU2L,IAGX6C,CACX,CCvFA,MAAMM,GAAY,CAAEzL,MAAO,EAAGb,QAAS,GAEhC,SAASoK,GAAoBrJ,EAAa3Y,EACjDqL,GAEI,GAAIrL,IAAa2Y,EAAY9Y,MACzB,OAGJ,MAAMskB,EAAoBxL,EAAYoH,iBAAiB/f,EAAU2Y,GAEjE,IAA2B,IAAvBwL,EACA,OAGJ,MAAMtjB,EAAYb,GAAYA,EAASa,UACvC,GAAIA,EAAJ,CACI,GAAIA,IAAcjC,EAAWO,WACzB,OAEJilB,GAAezL,EAAa3Y,EAAUqL,EAE1C,MACI9J,EAAQvB,GACRqjB,GAAgB1K,EAAa3Y,EAAUqL,EAAc,CAAEoN,MAAO,EAAGb,QAAS,WAGnE,IAAejZ,EAAWuC,SAIjCijB,GxBhCD,SAAgCtkB,EAAOzB,GAC1CA,EAAQ2hB,iBAAmBrH,GAC3B,MAAM9P,EAASxK,EAAQyjB,YACjBjJ,EAAchD,GAAc/V,GAElCzB,EAAQgZ,eAAiB5B,GAAqBoD,EAAahQ,EAC/D,CwB2BQyb,CAAuBrkB,EAAU2Y,GAJjCA,EAAY9Y,MAAQG,CAM5B,CAqBO,SAASskB,GAAyBvlB,EAAW4Z,EAAatN,GAG7D,IAFesN,EAAYra,OAEfiQ,OAER,YADAgW,GAA4BxlB,EAAW4Z,EAAatN,EAAc,CAAEoN,MAAO,EAAGb,QAAS,KC3DxF,SAAoCvM,EAAc9E,EACzDnI,GACI,MAAME,EAASF,EAAQE,OACjB+S,EAAc/S,EAAOiQ,OACrBiW,EAAanT,EAAYtS,UAAUgT,QACnC0S,EAAale,EAAQxH,UAAUgT,QACrC,IAAI2S,GAAY,EAChB,MAAM7jB,EAAY0F,EAAQxH,UAAU8B,UAC9B8jB,EAAgB/lB,EAAWQ,cAAgByB,GAAajC,EAAWO,aAAe0B,EACxF,GAAI8jB,EACAD,EAAYne,EAAQxH,UAAU8B,YAAcjC,EAAWO,YAAc4Z,GAAW1H,EAAa9K,QAE5F,GAAIie,GAAcC,EAAY,CAI/BC,EAHoBF,EAAW5c,WACX6c,EAAW7c,QAGnC,CACA,MAAM7I,EAAYwH,EAAQxH,UAC1B,IAAK2lB,EAED,YA2ER,SAAkBtmB,EAASW,EAC3BsM,GACI,MAAM/M,EAASF,EAAQE,OACjBsmB,EAAgBtmB,EAAOwL,OAC7B4N,GAAekN,GACfzmB,EAAaC,GACb,MAAM0P,EAAayW,GAA4BxlB,EAAWX,EAASiN,EAAc,CAAEoN,MAAO,EAAGb,QAAS,GAE1G,CApFQiN,CAASzmB,EAASW,EAAWsM,GAGjC,MAAMyZ,EAAaH,GlC9BhB,SAA2BtT,EAAa0T,GAK3C,OADqB5S,GAHD4S,EAAarX,MACb2D,EAAYV,YACGG,OAC8BO,EAAYtS,UAAU0O,UAE3F,CkCwBwCuX,CAAkB3T,EAAatS,GAEnE,IAAK+lB,EAAY,CAGb,YAuDR,SAAsB/lB,EAAWwH,EAAS8K,EAAahG,EAAcgB,GAEjE,MAAM4Y,EAAWlmB,EAAU2O,MACrBwC,EAAcwB,GAAkBnL,EAAS8K,EAAahG,EAAc4Z,EAAU5Y,GAC9EsE,EAAcpK,EAAQoK,YAE5BA,EAAY9C,UAAYqC,EACxB,MAAMsB,EAAkBH,EAAYV,YAEpCa,EAAgBV,OAASH,EAAYG,MAEzC,CAnEQoU,CAAanmB,EAAWwH,EAAS8K,EAAahG,EAD7BtM,EAAU0O,YAAcmD,GAAYU,KAAOjC,GAAmB2B,GAGnF,CACA,GAAI1S,EAAOqQ,OAEP,YADArQ,EAAOmS,QAAQtN,KAAKoD,GAGxB,GAAcA,KACZnI,EAAQC,WAEd,CD0BI8mB,CAA2B9Z,EADX8F,GAAWpS,EAAWsM,EAAcA,EAAamF,WAAYmI,GAE7EA,EACJ,CACO,SAASyM,GAA2B7e,EAASoS,EAAa9Y,EAAOwL,UACzD,IAAY1M,EAAWuC,UApBtC,SAAwBmQ,EAAajT,EAASyB,EAAOwL,GACjD,MACMga,EAAelU,GADHtR,EAAMd,WAAac,EACMwL,EAAcA,EAAamF,WAAYpS,GAIlF0kB,GAHoBzR,EAAYjT,QACFE,OACLwL,OACDub,EAC5B,CAgBIC,CAAe/e,EAASoS,EAAa9Y,EAAOwL,EAEhD,CAEO,SAAS+Y,GAAezL,EAAa3Y,EAC5CqL,GACI,MAAMxK,EAAYb,EAASa,UAE3B,GADeC,EAAed,GAM1B,YAJ2BgJ,IAAvB2P,EAAYra,QACZH,EAAawa,GAEjB2L,GAAyBtkB,EAAU2Y,EAAatN,IACzC,EAGX,MAAM/M,EAASqa,EAAYra,OAC3B,GAAIA,EAAQ,CAER,MAAMiI,EAAUjI,EAAOiQ,OACvB,GAAIhI,EAEA,OADA6e,GAA2B7e,EAASoS,EAAa3Y,EAAUqL,IACpD,CAEf,CACA,OAAQxK,GACJ,KAAKjC,EAAWG,UAEZ,OADAyjB,GAAWnX,EAAcsN,EAAauL,KAC/B,EAEX,KAAKtlB,EAAWC,IAChB,KAAKD,EAAWE,IAEZ,OApEZ,SAAqBe,EAAO8Y,EAAatN,GACrC,MAAMxM,EAAMgB,EACZ,IAAId,EAAYF,EAAIE,UACfA,IACDA,EAAY4jB,KACZ9jB,EAAIE,UAAYA,EAChBA,EAAUF,IAAMA,IAED8Z,EAAYra,OAASqa,EAAYra,OAASH,EAAawa,IAChEpK,OAASqU,GAAsB7jB,EAAWsM,EAAcsN,GAClE6J,GAAWnX,EAAcsN,EAAauL,GAC1C,CAwDYqB,CAAYvlB,EAAU2Y,EAAatN,IAC5B,EAGf,OAAO,CACX,CEhHO,SAASoX,GAAoBziB,EAAU2Y,GAC1C,MAAMra,EAASqa,EAAYra,OACrB+S,EAAc/S,GAAQiQ,OAG5B,GAFmB3N,EAAYZ,GAEf,CAGZ,OADiB+Y,GAHN/Y,EAGyBqR,KAEhCqG,GAAerG,GACflT,EAAawa,GACN,EAGf,CACA,MAAM6M,EAAQxlB,GAAUa,UACxB,GAAI2kB,EAAO,CAIP,OAAkB,IADHpB,GAAezL,EAAa3Y,EAF3B1B,EAAOiQ,OACMlD,gBAEH,CAC9B,CAKA,OAHAqM,GAAerG,UACRsH,EAAYra,OACnBqa,EAAYta,YAAc,EACnB,CACX,CC7BO,SAASonB,GAAmB1T,EAAS3T,EAASiN,GACjD,MAAMtM,EAAYyO,GAAmBoD,GAAYU,MACjDvS,EAAU8B,UAAYkR,EAAQlR,UAC9B,MAAM0F,EAAUqc,GAAsB7jB,EAAWsM,EAAcjN,GAE/D,SAASgQ,IAEL,OADArP,EAAUF,IAAakT,IAChBxL,CACX,CAIA,OAHAxH,EAAUgT,QAAU3D,EACpBA,EAAKvN,UAAYkR,EAAQlR,UACzBuN,EAAKxG,SAAWmK,EAAQnK,UAAYmK,EAC7BxL,CACX,CCfO,SAASmf,GAAmBtf,EAAQG,GACvC,MAAMS,EAAUZ,EAAOY,QACnBA,EAAQ7E,QAAU6E,EAAQ7E,SAAWiE,EAAOQ,WAAWzE,QAK/D,SAA4B6E,EAAST,EAASH,GAC1C,MAAM2F,EAAU,2DAA2D/E,EAAQ7E,qBAAqBiE,EAAOQ,WAAWzE,UACpH4P,EAAUxL,EAAQxH,WAAWgT,QACnC,IAAIsL,EAActL,GACdA,GAASnK,UAGJmK,GAASnK,YAFdyV,EAActL,EAAQnK,UAK1B,MAAMkE,EAAU,CACZpF,UAAWN,EAAOQ,WAClB+e,UAAWvf,EAAOY,QAClBqW,cACAte,UAAWwH,EAAQxH,WAEjB6mB,EAAQ,IAAI1Z,EAAmBH,EAASD,GAE9C,MADAJ,QAAQka,MAAMC,GAAM/Z,GACd8Z,CACV,CAvBQE,CAAmB9e,EAAST,EAASH,EAE7C,CACA,MAAMyf,GAAO,kQCDN,SAASE,GAAexf,EAAS8E,GACpC,MAAMjN,EAAUmI,EAAQnI,UACtBA,EAAQC,YAEV,MAAM+H,EAASL,EAAaC,mBACrBI,EAAOG,QACdA,EAAQ5G,MAAQyG,EAAOQ,WAEvBb,EAAakJ,WAAWpM,KAAKwI,GAC7Bqa,GAAmBtf,EAAQG,GAC3BnI,EAAQE,OAAOiQ,OAAShI,CAC5B,CCXO,SAASyf,GAAclY,EAAYrH,EAC1CrI,EAASiN,GACL,MAAM/M,EAASF,EAAQE,OACjB2nB,EAAiB7nB,EAAQC,YACzB6I,EAAYT,GAAa9G,MACzByG,EAASL,EAAaC,YAC5B,GAAIkB,EAAW,CACX,MAAMC,EAAaV,EAAYJ,OAC/BD,EAAOK,YAAcA,EACrBQ,EAAQ6G,EAAY/H,EAAaC,YAAakB,EAAWC,EAC7D,MAEIN,EAAUiH,EAAY1H,GAE1B,MAAMrH,EAAY+O,EAAW/O,UAC7B,IAAImnB,EAEJ,GAAInnB,EAAU8B,YAAcjC,EAAWQ,YAAa,CAKhD8mB,EAAYlW,GAAYjR,EAJTA,EAEIoS,GAAWpS,EAAWsM,EAAcyC,EAAW0C,WAClEpS,IAEA8nB,EAAU7f,OAASyH,EAAWzH,MAClC,KACK,CAID6f,GAAYnU,EAFIhT,EAAUgT,SAENjE,EAAY1P,EAASqI,GACzCyf,EAAU7f,OAASyH,EAAWzH,MAClC,CAIA,OAHA0f,GAAeG,EAAW7a,GAGtBjN,EAAQC,YAAc4nB,EAAiB,EAChC3nB,EAAOiQ,OAEX2X,CACX,CCxCO,SAASC,GAAqBpnB,EAAWsM,EAChDjN,EACAyZ,EAAQkJ,EAAUxL,GACdnX,EAAQ2hB,iBAAmB0C,GAC3B,MAAMlc,EAAUqc,GAAsB7jB,EAAWsM,EAAcjN,GAC/DmI,EAAQ8E,aAAeA,EACvB,MAAMnC,EAASgZ,GAAmB3b,EAASsR,EAAQkJ,EAAUA,OAAW/X,EAAYuM,GACpF,IAAK,MAAMzW,KAAOoK,EAAOpK,IACjBA,EAAI0Y,SACAuJ,EACAxM,GAAapR,KAAK,CACdmS,QAASxW,EAAI0Y,OACbpC,SAAU2L,IAIdvM,GAAmBrR,KAAK,CACpBmS,QAASxW,EAAI0Y,OACbpC,SAAUG,KAIlBzW,EAAI2Y,aAOAsJ,EACAxM,GAAapR,KAAK,CACdmS,QAASxW,EAAI2Y,WACbrC,SAAU2L,IAIdvM,GAAmBrR,KAAK,CACpBmS,QAASxW,EAAI2Y,WACbrC,SAAUG,KAK1B,IAAIrT,GAAS,EACb,MAAMC,EAAS+G,EAAO7E,KAAKlC,OAAS,EAEpC,KAAOD,IAAUC,GAAQ,CAErBugB,GADYxZ,EAAO7E,KAAKnC,GAE5B,CACA,OAAOqE,CACX,CC5CO,SAAS0b,GAAyBpiB,EAAO8Y,EAChDtN,EACAwM,EACAkJ,EAAUxL,GACN,MAAM1U,EAAYhB,GAAOgB,UACzB,OAAIA,EAoBR,SAA8BA,EAAW8X,EAAa9Y,EAAOwL,EAC7DwM,EACAkJ,EAAUxL,GAEN,SADEoD,EAAYta,YACNwC,GAEJ,KAAKjC,EAAWG,UAEZ,OADA4Z,EAAYoH,iBAAmB0C,GAC3B1B,EACOoF,GAAqBtmB,EAAOwL,EAAcsN,EAAad,EAAQkJ,EAAUxL,GAE7EiN,GAAWnX,EAAcsN,EAAad,GACjD,KAAKjZ,EAAWE,IAChB,KAAKF,EAAWC,IAAK,CACjB8Z,EAAYoH,iBAAmB0C,GAC/B,MAAM5jB,EAAMgB,EACZ,IAAId,EAAYF,EAAIE,UACfA,IACDA,EbhCT,SAA0BF,GAC7B,MAAME,EAAY4jB,KAGlB,OAFA5jB,EAAUF,IAAMA,EAChBA,EAAIE,UAAYA,EACTA,CACX,Ca2B4BqnB,CAAiBvnB,IAEjC,MAAMP,EAASH,EAAawa,GAC5B,OAAIoI,EACOoF,GAAqBpnB,EAAWsM,EAAcsN,EAAad,EAAQkJ,EAAUxL,IAExFjX,EAAOiQ,OAASqU,GAAsB7jB,EAAWsM,EAAcsN,GAC/DA,EAAYoH,iBAAmB0C,GACxBD,GAAWnX,EAAcsN,EAAad,GACjD,CACA,KAAKjZ,EAAWQ,YAChB,KAAKR,EAAWI,aAGZ,GAFAb,EAAawa,GACbA,EAAYoH,iBAAmB0C,GAC3B1B,EAAU,CACV,MAAMsF,EClDf,SAAsCtnB,EAAWX,EAASiN,EAAcwM,EAAQkJ,GAGnF,MAAMjT,EAAaqD,GAAWpS,EAAWsM,EAAcA,EAAamF,WAAYpS,GAC1EkoB,EAAiBxY,EAAW6C,YAClC,GAAI2V,EAAgB,CAChB,MAAMpW,EAAcnR,EAAU8B,YAAcjC,EAAWI,aAAe,GAAKoS,GAAerS,EAAW+O,GACrGwY,EAAezY,UAAYqC,CAC/B,CACA,MAAM5R,EAASF,EAAQE,QACjB,QAAEiI,GAAYggB,GAAkBzY,EAAYxP,EAAOiQ,OACzDnQ,EAASiN,GAET,OClBG,SAA+B9E,EAASsR,EAAQkJ,GACnD,IAAIyF,EAAcjS,GAAapS,OAC/B,MAAM+G,EAASgZ,GAAmB3b,EAASsR,EAAQkJ,OAAU/X,GAC7D,IAAK,MAAMlK,KAAOoK,EAAOpK,IACjBA,EAAI2Y,YACJlD,GAAavR,OAAOwjB,IAAe,EAAG,CAClClR,QAASxW,EAAI2Y,WACbrC,SAAU2L,IAGdjiB,EAAI0Y,QACJjD,GAAavR,OAAOwjB,IAAe,EAAG,CAClClR,QAASxW,EAAI0Y,OACbpC,SAAU2L,IAItB,MAAM1c,EAAO6E,EAAO7E,KACpB,IAAK,MAAMtB,KAAOsB,EACdqe,GAAoB3f,EAG5B,CDLI0jB,CAAsBlgB,EAASsR,EAAQkJ,GAChCxa,CACX,CDoCsCmgB,CAA6B7mB,EAAO8Y,EAAatN,EAAcwM,EAAQkJ,GAC7F,OAAOsF,CACX,CAEA,OADsB9B,GAA4B1kB,EAAO8Y,EAAatN,EAAcwM,GAGxF,KAAKjZ,EAAWO,WAAY,CACxBhB,EAAawa,GACb,MAAMpS,EAAUkf,GAAmB5lB,EAAO8Y,EAAatN,GACvD2a,GAAczf,OAASyC,EAAW2P,EAAatN,GAC/C,MAAMnC,EAASid,GAAqB5f,EAAQxH,UAAWsM,EAAcsN,EAAad,EAAQkJ,EAAUxL,GAEpG,OADAoD,EAAYoH,iBAAmB0C,GACxBvZ,CACX,EAER,CAnEeyd,CAAqB9lB,EAAW8X,EAAa9Y,EAAOwL,EAAcwM,EAAQkJ,EAAUxL,GAE3FhU,EAAQ1B,IACRwjB,GAAgB1K,EAAa9Y,EAAOwL,EAAcwM,EAAQkJ,QAC1DpI,EAAYoH,iBAAmBvH,UAG/BxX,EAAkBnB,IAK1B,SAAkCA,EAAOzB,EACzCmX,GACI,MAAMqD,EAAchD,GAAc/V,GAC5B2M,EAAQgJ,GAAqBoD,EAAarD,GAChDnX,EAAQgZ,eAAiB5K,EACzBpO,EAAQ2hB,iBAAmBrH,EAC/B,CARIkO,CAAyB/mB,EAAO8Y,EAAaA,EAAYkJ,aAC7D,CG1BO,SAASgF,GAAiBhnB,EAAO8Y,EAAapS,GAC7C1G,IAAU8Y,EAAY9Y,QAG1BmiB,GAAoBrJ,EAAa9Y,EAAO0G,GACnCR,EAAaC,YAAYO,SAC1BqO,KAGR,CCPO,SAAS8N,IAAoB,QAAEtkB,EAAO,QAAEmI,EAAO,OAAEsR,EAAM,YAAEc,EAAW,SAAEoI,IACzE,IAAI+F,EAAU,SAAoBjnB,GAC9BoiB,GAAyBpiB,EAAO8Y,EAAapS,EAAS,IAAKsR,GAAUkP,EAAUhG,OAAW/X,GACrF+d,GAAYhhB,EAAaC,YAAYO,SACtCqO,KAGJkS,EAAU,SAA4BjnB,GAClCgnB,GAAiBhnB,EAAO8Y,EAAapS,EACzC,CACJ,EAKA,IAAIwgB,GAAU,EACd,MAAMhkB,EAAM3E,EAAQ+B,WAJH,SAA2BN,GACxCinB,EAAQjnB,EACZ,IAGA8Y,EAAYva,QAAUA,EACtB2oB,GAAU,EACV,MAAMzoB,EAASiI,EAAQnI,QAAQE,QAClBA,EAAOkE,cAAgBlE,EAAOkE,eAAiB,IACvDW,KAAKJ,EAEd,CHvBO,SAASwhB,GAA4BxlB,EAAWX,EAASiN,EAAcwM,GAG1E,MAAM/J,EAAaqD,GAAWpS,EAAWsM,EAAcA,EAAamF,WAAYpS,GAC1EkoB,EAAiBxY,EAAW6C,YAClC,GAAI2V,EAAgB,CAChB,MAAMpW,EAAcnR,EAAU8B,YAAcjC,EAAWI,aAAe,GAAKoS,GAAerS,EAAW+O,GACrGwY,EAAezY,UAAYqC,CAC/B,CACA,MAAM5R,EAASF,EAAQE,QACjB,QAAEiI,GAAYggB,GAAkBzY,EAAYxP,EAAOiQ,OACzDnQ,EAASiN,GAET,OCdG,SAAiC9E,EAASsR,EAAQc,GACrDA,EAAYoH,iBAAmB0C,GAC/B,MAGMpe,EAFS6d,GAAmB3b,EAASsR,OAAQ7O,EADxC2P,EAAYkJ,aAGHxd,KACpB,IAAK,MAAMtB,KAAOsB,EACdqe,GAAoB3f,EAG5B,CDGIikB,CAAwBzgB,EAASsR,EAAQzZ,GAClCmI,CACX,CIdO,SAAS0gB,GAAsBC,EAAWnpB,EAAM+P,EAAYzC,EAAcgB,EAAU0B,GACvF,OAAImZ,QACOnpB,SAEA,IAAgBY,EAAWuC,SAE9BnD,EAAKoQ,KACL+Y,EAAU/Y,IAAMpQ,EAAKoQ,IACdpQ,IAEXmpB,EAAU/Y,IAAMpQ,EACTmpB,GAGPnZ,IAAU1B,GAGViD,GAAgBvR,GAFTA,EAKPwD,EAAQxD,GCxBT,SAA6BA,EAAMmpB,EAAWpZ,EAAYzC,EAAc0C,GAC3E,IAAK,IAAI7L,EAAQnE,EAAKoE,OAAS,EAAGD,GAAS,IAAKA,EAAO,CACnD,MAAMD,EAAIlE,EAAKmE,GACTilB,EAAUD,EAAUhlB,GAC1BnE,EAAKmE,GAAS+kB,GAAsBE,EAASllB,EAAG6L,EAAYzC,EAAc0C,EAAQ,EAAG7L,EACzF,CACA,OAAOnE,CACX,CDkBeqpB,CAAoBrpB,EAAMmpB,EAAWpZ,EAAYzC,EAAc0C,GEzBvE,SAA8BhQ,EAAMmpB,EAAWpZ,EAAYzC,EAAc0C,EAAO1B,GACnF,MAAMe,EAAO1P,OAAO0P,KAAKrP,GACzB,IAAK,MAAM0N,KAAQ2B,EAAM,CACrB,MAAMmC,EAAWxR,EAAK0N,GAEhBvC,EAAS+d,GADCC,EAAUzb,GACoB8D,EAAUzB,EAAYzC,EAAcgB,EAAU0B,EAAQ,GACpG,GAAIwB,IAAarG,EACb,SAEJ,MAAMme,EAAY3pB,OAAOiS,yBAAyB5R,EAAM0N,IAAOtH,IAC3DkjB,IAGJtpB,EAAK0N,GAAQvC,EACjB,CACA,OAAOnL,CACX,CFWWupB,CAAqBvpB,EAAMmpB,EAAWpZ,EAAYzC,EAAc0C,EAAO1B,EAClF,CZmBO,SAASqF,GAAkB5D,EAAYuD,EAAahG,EAAckc,EACzElb,EAAU0B,GAAQ,GACd,MACMQ,EADS8C,EAAYjT,QAAQE,OACbiQ,OACtB,IAAKA,EAAQ,CACT,MAAM2B,EAAcrC,GAAU0Z,EAAezZ,EAAYC,GACzDwZ,EAAcpkB,QAAQ+M,GAGtB,OAFoBpC,EAAW6C,YACnB9C,UAAYqC,EACjBqX,CACX,CAEA,MACMC,GAFNnW,EAAc9C,GAAU8C,GACYV,YACI9C,UAClC4Z,EAAW,GACjB,IAAK,IAAIvlB,EAAQ,EAAGA,EAAQqlB,EAAcplB,SAAUD,EAAO,CACvD,MAAMnE,EAAOwpB,EAAcrlB,GAErBlC,EAAWinB,GADCO,EAAgBtlB,GACgBnE,EAAM+P,EAAYzC,EAAc0C,EAAQ,EAAG1B,GAC7Fob,EAAStkB,KAAKnD,EAClB,CAGA,OAFuB8N,EAAW6C,YACnB9C,UAAY4Z,EACpBA,CACX,CepEO,SAASC,GAAmBrW,GAC/B,MAAM/S,EAAS+S,EAAYjT,QAAQE,QAC7B,KAAE+F,EAAI,KAAEuJ,GAASyI,GAA0B/X,EAAO4X,SACxDyR,GAAetW,GACf,IAAK,MAAM2E,KAASpI,EAChB+Z,GAAe3R,GAEJ1X,EAAOkE,eAElB6B,EAAKpE,SAAQ8C,GAAOA,EAAIxC,gBAE5BpC,EAAakT,EAAYjT,QAC7B,CACA,SAASupB,GAAe3R,GACpB,MAAM5X,EAAU4X,EAAM5X,QAChBE,EAASF,EAAQE,QACA,IAAnBA,EAAOgZ,UAGXhZ,EAAOgZ,SAAU,EACjBlZ,EAAQC,YAAc,EACtBkY,GAAgBP,EAAO,IAC3B,CCpBO,SAASuQ,GAAkBzY,EAAYuD,EAC9CjT,EACAiN,GACI,MAAMuc,EAAgBvW,GAAatS,UAC7B8oB,EAAUD,GAAe/oB,IACzBqnB,EAAYF,GAAclY,EAAYuD,EAAajT,EAASiN,GAC5Dyc,GAAazW,GAAe0H,GAAW1H,EAAa6U,GAC1D,GAAK4B,GAOA,GAAIzW,EAAa,CAClB,MAAMxS,EAAMwS,EAAYtS,UAAUF,IAC9BA,GAAOT,EAAQC,YAAc,GAQzC,SAA6BQ,EAAKwS,EAAawW,GAC3C,GAAIhpB,EAAIgC,YAAcjC,EAAWE,IAAK,CAClC,MAAMipB,EAAUF,GAAS/oB,IAKzB,YAHIipB,IADWlpB,EAAIC,KAEf4oB,GAAmBrW,GAG3B,CACA,GAAIwW,EAAS,CACT,MAAMG,EAAcH,EAAQlO,QAC5B,GAAIqO,EAAa,CACb,MAAMC,EAAYD,GAAa7lB,OAE3B8lB,IADcppB,EAAI8a,QAAQxX,QAE1BulB,GAAmBrW,EAE3B,CACJ,CACJ,CA1BY6W,CAAoBrpB,EAAKwS,EAAawW,EAE9C,MAZgB,EhB4Db,SAAuBxW,EAAavD,GACvC,MAAMxP,EAAS+S,EAAYjT,QAAQE,OACnC,IAAI6pB,GAAU,EACd,MAAM5d,EAAYjM,EAAOiM,UAAYjM,EAAOiM,WAAa,GACnD6d,EAAO7d,EAAUpI,OAAS,EAChC,KAAOgmB,IAAWC,GAAM,CACpB,MAAMxd,EAAWL,EAAU4d,GAC3B,IAAIjmB,GAAS,EACb,MAAMmmB,EAAQzd,EAASI,SAAS7I,OAAS,EACzC,KAAOD,IAAUmmB,GAGb,GADuB/pB,IADTsM,EAASI,SAAS9I,GACQ9D,QAAQE,OAI5C,OAFAsM,EAASI,SAAShI,OAAOd,EAAO,QAChC0I,EAASI,SAAS7H,KAAK2K,EAInC,CACJ,CgB9EQwa,CAAcjX,EAAa6U,GAC3BwB,GAAmBrW,GACnB,MAAM/S,EAAS4nB,EAAU9nB,QAAQE,OACjCA,EAAOwL,OAASoc,EAChB5nB,EAAOiQ,OAAS2X,CACpB,CAOA,MAAMqC,EAAmBlX,GAAahG,aAEtC,OADA6a,EAAU7a,aAAgBA,GAAgBkd,EACnC,CAAEhiB,QAAS2f,EAAWsC,YAAaV,EAC9C,CC1BA,MAAM,GAAY,CAAErP,MAAO,EAAGb,QAAS,GAEhC,SAAS7I,GAAuBsC,EAAavD,EACpDzC,EACAjN,GACI,MAAME,EAASF,EAAQE,QACjB,QAAEiI,EAAO,YAAEiiB,GAAgBjC,GAAkBzY,EAAYuD,EAC/DjT,EAASiN,GACT,OAAImd,GACA1F,GAAgBxkB,EAAOwL,OAAQvD,GACxBA,IAEXic,GAAWnX,EAAcjN,EAAS,IAC3BmI,EACX,CpCZO,SAASsI,GAAa9P,GACzB,OAAOH,EAAWG,YAAcA,EAAU8B,SAC9C,CAEO,SAAS,GAAc0F,GAC1B,MAAMjI,EAASiI,EAAQnI,QAAQE,OAEzBod,EAAa7M,GADDtI,EAAQxH,WAEpBsM,EAAe9E,EAAQ8E,aAC7B,GAAI/M,EAAOqQ,OAEP,OADArQ,EAAOmS,QAAQtN,KAAKoD,GACbA,EAGX,GAAImV,EAAY,CAEZ,OADe5M,GAAiBzD,EAAc9E,EAElD,CACAjI,EAAOqQ,QAAS,EAChB,MAAMvQ,EAAUmI,EAAQnI,QACpBE,EAAOmS,QAAQtO,SACfoE,EAAUjI,EAAOmS,QAAQgY,MACzBnqB,EAAOmS,QAAU,IAErB,MAAM5R,EAAMkQ,GAAuBzQ,EAAOiQ,OAAQhI,EAAS8E,EAAcjN,GAEzE,cADOE,EAAOqQ,OACP9P,CACX,CACO,SAASiQ,GAAiBzD,EAAc9E,GAC3C,MAAMmiB,EAAYrd,EAAajN,QAAQE,OACvC,IAAKoqB,IAAmC,IAAtBA,EAAUpR,QACxB,OAAO/Q,EAKX,OADe,GADAmiB,EAAUna,QAAUlD,EAGvC,CAyBO,SAASgH,GAAsByJ,EAAUC,GAU5C,OATeD,EAAS3Z,SACN4Z,EAAY5Z,MASlC,CqCzEO,SAASjC,GAASA,GACrB,MAAMqG,EAAU7G,KAChB,IAAK6G,EACD,MAAMoiB,GAEV,OAAOC,GAAcriB,EAASR,EAAaC,YAC3C9F,EACJ,CACO,SAAS0oB,GAAcriB,EAASgB,EAAU9C,GAC7C,MAAMokB,EAAgBthB,EAASX,WACzBF,EAAYa,EAASlB,OAC3B,OAAO,YAAoBpB,GAEvB,OADsBsB,EAAQnI,QAAQC,YAAc,ECd7C,SAA6BkI,EAASrG,EAAUqH,KAC5DtC,GACC,MAAM3G,EAASiI,EAAQnI,QAAQE,OAEzBqB,GADN4G,EAAUjI,EAAOiQ,QACK5O,MAEtBkI,EAAWlI,EAAO4H,EAASX,WAAYL,EAAQF,OAAQkB,EAASlB,QAEhE,MAAMuQ,EAAe1W,KAAY+E,GAYjC,OAVA4C,EAAWN,EAASX,WAAYjH,EAAO4H,EAASlB,OAAQE,EAAQF,QAChE,GAAcE,GACVpF,EAAUyV,IACVA,EAAakS,SAAQ,KAEjBjhB,EAAWN,EAASX,WAAYjH,EAAO4H,EAASlB,OAAQE,EAAQF,QAChE,GAAcE,EAAQ,IAIvBqQ,CACX,CDLmBmS,CAAoBxiB,EAAS9B,EAAY,CAC5CmC,WAAYiiB,EACZxiB,OAAQK,MACNzB,GAGHR,KAAcQ,EACzB,CACJ,CEvBO,MAAM+jB,GAAgB,KACzB,MAAMziB,EAAU7G,KAEhB,IAAK6G,EACD,MAAMoiB,GAEV,MAAMphB,EAAWxB,EAAaC,YAE9B,OAAO,SAAsB9F,GACzB,OAAO0oB,GAAcriB,EAASgB,EAAUrH,EAC5C,CAAC,EAEQyoB,GAAY,IAAIxc,EAAkB,iKCdxC,SAAS8c,GAAO/oB,GACnBP,EAAMO,EACV,CCFO,SAASgpB,GAAUhpB,GACtBP,GAAM,WACcD,KACOtB,QAAQE,OACxByR,SAAStL,WAAWvE,EAC/B,GACJ,CCPO,SAASR,KACZ,OAAOqG,EAAaC,YAAYO,OACpC,CCAO,MAAM4iB,GAAiB,UACjBC,GAAiB,IACvB,SAASC,GAAa1P,EAAS5X,GAClC,MAAMlD,EAAM,CACRkD,SACAsJ,aAAc3L,KACdmB,UAAWjC,EAAWC,IACtB8a,UAEAnc,IAAImQ,IACA9O,EAAI8O,WAAaA,EACV9O,GAEXyqB,KAAM,SAAc3P,EAAS5X,GAEzB,OADAlD,EAAImM,SAAW,CAAE2O,UAAS5X,UACnBlD,CACX,GAEJ,OAAOA,CACX,CACO,SAAS0qB,GAAUzqB,EAAKiD,GAC3B,MAAMlD,EAAM,CACRkD,SACAsJ,aAAc3L,KACdZ,MACA+B,UAAWjC,EAAWE,IACtBtB,IAAK,SAAgBmQ,GAEjB,OADA9O,EAAI8O,WAAaA,EACV9O,CACX,EACAyqB,KAAM,CACFxqB,IAAK,SAAaA,EAClBiD,GAEI,OADAlD,EAAImM,SAAW,CAAElM,IAAKA,EAAKiD,UACpBlD,CACX,IAGR,OAAOA,CACX,CCxCA,MAAM2qB,GAAc,gBACdC,GAAgB,gBAChBC,GAAY,sDACZC,GAAc,2GAEb,SAASC,GAAUN,GACtB,MAAMO,EAAiB,GACjBC,EAAW,GACXC,EAAQ,GACd,IAAIC,EAAiB,KACjBC,GAAc,EACdC,EAAW,EACf,MAAMC,EAAW,IAAI5d,OAAOod,GAAa,KAEzC,IADAL,EAqGJ,SAAkCA,GAE9B,OAAOA,EAAKc,QAAQC,IAAmB,SAAUC,GAE7C,OAAOA,EAAMF,QAAQ,WAAY,cAAcA,QAAQ,WAAY,cAAcA,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAC1H,GACJ,CA3GWG,CAAyBjB,GACzBY,EAAWZ,EAAKnnB,QAAQ,CAC3B,MAAMqoB,EAAWL,EAASM,KAAKnB,GAC/B,IAAKkB,EACD,MAEJ,MAAOE,EAAWC,EAASC,GAAcJ,EACnCK,EAAeH,EAAU7L,WAAW,MACpCiM,EAAgBJ,EAAUK,SAAS,MACzC,GAAIb,EAAWM,EAAStoB,MAAO,CAC3B,MAAMiT,EAAcmU,EAAK0B,MAAMd,EAAUM,EAAStoB,OAClD,GAAIiT,EAAY8V,OAAQ,CACGC,GAAc/V,GACtBlV,SAAQkV,IACfA,EAAY0J,WAAWsK,MACvBhU,EAAcgU,MAAoBc,EAAcb,IAEpD+B,GAAWnB,EAAgBF,EAAU3U,EAAY,GAEzD,CACJ,CAEA,GADA+U,EAAWM,EAAStoB,MAAQwoB,EAAUvoB,OAClC0oB,EAAc,CACdb,EAAiBD,EAAMtB,OAAS,KAChC,QACJ,CACA,MAAM2C,EAAa,GACnB,IAAIC,EACJ,KAAoD,QAA5CA,EAAY3B,GAAUe,KAAKG,KAAuB,CACtD,MAAMpN,EAAW6N,EAAU,IAAMA,EAAU,IAAMA,EAAU,GAE3D,IAAIlM,EADekM,EAAU,IAAMA,EAAU,IAAMA,EAAU,GAE7D,QAAiBriB,IAAbwU,EACA,SAEJ,MAAM8N,EAA4B,KAAjBD,EAAU,GACrBE,OAAwBviB,IAAdmW,GAA2BmM,EACrCE,EAAYhO,EAASiO,cACrBC,EAAYF,EAAU3M,WAAW,MAAQ8M,GAAeH,GAAaA,EAC3E,GAAID,EAAS,CAET,GADsB/N,EAASwN,MAAM,EAAG7B,GAAehnB,UAAYgnB,GAChD,CACf,MAAMyC,EAAYzC,MAAoBc,EAAcb,GACpDS,EAAe1mB,KAAK,CAAC,KAAMyoB,IAC3BR,EAAWjoB,KAAK,CAACyoB,IACjB,QACJ,CAGA,GAFqBP,EAAU,GAAGxM,WAAWrB,IACN6N,EAAU,GAAGL,MAAMxN,EAASrb,OAAQkpB,EAAU,GAAGlpB,QAAQ0pB,OAAO,SAAW,EAC9F,CAChBT,EAAWjoB,KAAK,CAACuoB,IACjB,QACJ,CAEAvM,EADkBgK,MAAoBc,EAAcb,EAExD,CACKkC,IACDnM,EAAYkM,EAAU,IAE1B,MAAMS,EAAU,CAACJ,EAAWvM,GACtBzB,EAAYkB,GAAc4M,GAC5B9N,GACAoO,EAAQ3oB,KAAKua,GAEjB0N,EAAWjoB,KAAK2oB,EACpB,CACA,MAAMxW,EAAU,CACZ+L,GAAIsJ,GAEJS,EAAWjpB,SACXmT,EAAQyC,GAAKqT,GAEbpB,GACKA,EAAexI,KAChBwI,EAAexI,GAAK,IAExBwI,EAAexI,GAAGre,KAAKmS,IAGvBwU,EAAS3mB,KAAKmS,GAEbwV,IACDf,EAAM5mB,KAAK6mB,GACXA,EAAiB1U,EAEzB,CACA,GAAI4U,EAAWZ,EAAKnnB,OAAQ,CACxB,MAAMgT,EAAcmU,EAAK0B,MAAMd,GAC/B,GAAI/U,EAAY8V,OAAQ,CACGC,GAAc/V,GACtBlV,SAAQkV,IACfA,EAAY0J,WAAWsK,OACrBc,EAECkB,GAAWnB,EAAgBF,EAAU3U,KAEpD,CACJ,CACA,OAAO2U,CACX,CACA,MAAMO,GAAoB,IAAI9d,OAAO,4BAAuB,KAQ5D,SAASof,GAAe/N,GACpB,GAAIA,EAAUiB,WAAW,MAAO,CAE5B,OADwBjB,EAAUzb,SAAWsnB,GAActnB,QAAUyb,IAAc6L,GAExE,WAEJ7L,EAAUoN,MAAM,EAAGpN,EAAUzb,OACxC,CACA,OAAOyb,CACX,CACA,SAASuN,GAAWnB,EAAgBF,EAAU3U,IAc9C,SAAgB6U,EAAgBF,EAAU5U,GAClC8U,GACKA,EAAexI,KAChBwI,EAAexI,GAAK,IAExBwI,EAAexI,GAAGre,KAAK+R,IAGvB4U,EAAS3mB,KAAK+R,EAEtB,CAnBI6W,CAAO/B,EAAgBF,EAJN,CACbzI,GAAI,OACJK,GAAIsK,GAA0B7W,IAGtC,CACA,SAAS6W,GAA0B1C,GAE/B,OAAOA,EAAKc,QAAQ,kCAAkC,SAAUE,GAE5D,OAAOA,EAAMF,QAAQ,WAAY,KAAKA,QAAQ,WAAY,KAAKA,QAAQ,gBAAiB,SAASA,QAAQ,gBAAiB,QAC9H,GACJ,CAYA,SAASc,GAAce,GAKnB,OAHcA,EAAYnR,MAAM0O,IAEJ0C,QAAOC,GAAiB,KAATA,GAE/C,CClKA,MAAMC,GAAe,+BACfC,GAAU,eAST,SAASC,GAAgC3S,EAAS5X,GAIrD,OAKJ,SAAyB4X,EAAS5X,GAC9B,MAAMwqB,EAAU5S,EAAQlX,KAAI,CAAC+pB,EAAUtqB,IAC/BA,EAAQH,EAAOI,OACRqqB,EAAWrD,GAAiBjnB,EAAQknB,GAExCoD,IAGX,OAEG,SAA8BD,EAAS5S,EAAS5X,GACnD,MAAM0qB,EAAO1qB,EAAOI,OAASwX,EAAQxX,OACrC,GAAIsqB,EAAO,EACP,IAAK,IAAIxqB,EAAIwqB,EAAMxqB,EAAI,IAAKA,EACxBsqB,EAAQppB,KAAKgmB,IAAkBxP,EAAQxX,OAASF,EAAI,GAAKmnB,GAGrE,CAVIsD,CAAqBH,EAAS5S,EAAS5X,GAChCwqB,CACX,CAdWI,CAFyChT,EAK/BlX,KAAI+pB,GAAYA,EAASpC,QAAQgC,IAAc,CAAC9B,EAAOpoB,IAAUmqB,GAAUnqB,MAHjDH,EAC/C,CCdA,MAAM6qB,GAAmB,IAAIrgB,OAAO4c,GAAiB,SAAWC,GAAgB,KAC1E5H,GAAK,KACJ,SAASqL,GAAoB/tB,EAAKguB,EAAYjD,EAAiB,GAAIkD,EAAc,IACpF,MAAMjD,EAAWhrB,EACjB,IAAK,IAAI4N,EAAI,EAAGA,EAAIod,EAAS3nB,OAAQuK,IAAK,CACtC,MAAMsgB,EAAW,IAAID,EAAargB,GAC5B4I,EAAUwU,EAASpd,GACzB,GAAI4I,EAAQyC,GAAI,CACZ,MAAMkV,EAAQ3X,EAAQyC,GACtBzC,EAAQyC,GAAKmV,GAAkBD,EAAOH,EAC1C,CACA,GAAIxX,EAAQkM,GAAI,CACZ,MAAMxW,EAAWsK,EAAQkM,GACnB2L,EAAgB,IAAIH,EAAUxL,IACpClM,EAAQkM,GAAKqL,GAAoB7hB,EAAU8hB,EAAYjD,EAAgBsD,EAC3E,CACAzgB,EAAI0gB,GAAa9X,EAASwX,EAAYhD,EAAUpd,EACpD,CACA,OAAOod,CACX,CACA,SAASsD,GAAapX,EAAO8W,EAAY9hB,EAAU9I,GAC/C,GAAiB,SAAb8T,EAAMqL,GACN,OAAOnf,EAEX,MAAMmrB,EAAYrX,EAClB,IAIIsU,EAJAnV,EAAckY,EAAU3L,GAC5B,UAAWvM,IAAgBzW,EAAe+B,OACtC,OAAOyB,EAGX,KAAwD,QAAhDooB,EAAQsC,GAAiBnC,KAAKtV,KAAwB,CAC1D,MAAMmY,EAAchD,EAAM,GACpBiD,EAASC,SAASF,EAAa,IAErC,IADiBpM,MAAMqM,IAAWA,EAAST,EAC9B,CACT,MAAMW,EAAatE,GAAiBoE,EAASnE,GACvCsE,EAAQvY,EAAY6V,MAAMV,EAAMpoB,MAAQurB,EAAWtrB,QACzD6I,EAAShI,OAAOd,EAAO,EAAO,CACtBmf,GAAI,OACJJ,EAAGsM,IAEXpY,EAAcuY,EACdd,GAAiBe,UAAY,CACjC,CACJ,CAEA,OADAN,EAAU3L,GAAKvM,EACRjT,CACX,CACA,SAASgrB,GAAkB9B,EAAY0B,GACnC,OAAO1B,EAAW3oB,KAAIqpB,IAClB,MAAOtuB,EAAKqC,EAAO6d,GAAaoO,EAChC,GAAItuB,EAAIqhB,WAAWsK,IAAiB,CAChC,MAAMjnB,EAAQsrB,SAAShwB,EAAI4sB,QAAQjB,GAAgB,IAAK,IACxD,IAAKjI,MAAMhf,IAAUA,EAAQ4qB,EACzB,MAAO,CAAC,CAAEpM,SAAUxe,GAE5B,CACA,UAAWrC,IAAUnB,EAAe+B,QAAUZ,EAAMgf,WAAWsK,IAAiB,CAC5E,MAAMjnB,EAAQsrB,SAAS3tB,EAAMuqB,QAAQjB,GAAgB,IAAK,IAC1D,IAAKjI,MAAMhf,IAAUA,EAAQ4qB,EACzB,MAAO,CAACtvB,EAAK,CAAEkjB,SAAUxe,GAASwb,EAE1C,CACA,OAAOoO,CAAO,GAEtB,CClEO,MAAM,GAAU,eAIvB,MAAM8B,GAAe,qBACrB,SAASC,GAAmBvY,GAcxB,GAbIA,EAAQyC,KACRzC,EAAQyC,GAAKzC,EAAQyC,GAAKzC,EAAQyC,GAAGtV,KAAIgf,IACrC,GAAoB,IAAhBA,EAAKtf,OACL,OAAOsf,EAEX,MAAO,CAAE5hB,GAAS4hB,EAClB,UAAW5hB,IAAUnB,EAAe+B,QAAUZ,EAAMgf,WAAW,IAAU,CACrE,MAAM3c,EAAQsrB,SAAS3tB,EAAMuqB,QAAQ,GAAS,IAAK,IACnD3I,EAAK,GAAK0H,GAAiBjnB,EAAQknB,EACvC,CACA,OAAO3H,CAAI,IACV,IAELnM,EAAQkM,GAAI,CACZ,MAAMxW,EAAWsK,EAAQkM,GACzB,IAAK,IAAI9U,EAAI,EAAGA,EAAI1B,EAAS7I,OAAQuK,IAAK,CACtC,MAAMsJ,EAAQhL,EAAS0B,GACvB,GAAiB,SAAbsJ,EAAMqL,GAAe,CACrB,UAAWrL,EAAM0L,KAAOhjB,EAAe+B,OACnC,OAEJuV,EAAM0L,GAAK1L,EAAM0L,GAAG0I,QAAQwD,IAAc,CAACE,EAAQ5rB,IAAUinB,GAAiBjnB,EAAQknB,IAC1F,CACAyE,GAAmB7X,EACvB,CAEwB,IAApBhL,EAAS7I,eACFmT,EAAQkM,EAEvB,CACJ,CChCA,MAAMuM,GAAW,CAAC,EAEX,SAAS1L,GAAW1I,EAAS5X,GAChC,MAAMisB,ECTH,SAAsBrU,GACzB,MAAMgK,EAAQhK,EAAQlX,KAAIR,GAAKA,EAAEE,SAEjC,OADAwhB,EAAMxgB,KAAKwW,EAAQxX,QACZ8rB,OAAOtK,EAAMuK,KAAK,IAC7B,CDKqBC,CAAaxU,GACxByU,EAAUL,GAASC,GACnBK,EAAUD,GEXb,SAA0BzU,EAAS5X,EAAQqsB,GAC9C,GAAIA,GACIA,EAAQzU,QAAQxX,SAAWwX,EAAQxX,QACdisB,EAAQzU,QAAQxQ,OAAM,CAAC1I,EAAQyB,IAEpDzB,IAAWkZ,EAAQzX,MACCksB,EAAQrsB,OAAOI,SAAWJ,EAAOI,OACjD,OAAO,EAInB,OAAO,CACX,CFD+BmsB,CAAiB3U,EAAS5X,EAAQqsB,GAC7D,GAAIC,EACA,OAAOD,EAAQG,WAEnB,MAAMpM,EHVH,SAAoCxI,EAAS5X,GAKhD,OAJAuqB,GAAgC3S,EAAS5X,GAGzB6nB,GADG0C,GAAgC3S,EAAS5X,GAAQmsB,KAAK,IAG7E,CGIoBM,CAA2B7U,EAAS5X,GAC9CU,EAAMoqB,GAAoB1K,EAASpgB,EAAOI,QAE5BM,EDdXxC,QAAQ4tB,ICejB,MAAMY,EAAW,CACbC,mBAAe1lB,EACfvI,YAAQuI,EACR2Q,UACA5X,SACAwsB,WAAY9rB,GAGhB,OADAsrB,GAASC,GAAYS,EACdhsB,CACX,CGxBO,SAAS6mB,GAAK3P,KAAY5X,GAC7B,MAAM4sB,EAAYtF,GAAa1P,EAAS5X,GAClChD,EAAYyO,GAAmBoD,GAAY0B,MAGjD,OAFAvT,EAAUF,IAAM8vB,EAChBA,EAAU5vB,UAAYA,EACf4vB,CACX,CACArF,GAAKxqB,IAAM,SAAUA,KAAQiD,GACzB,OAAOwnB,GAAUzqB,EAAKiD,EAC1B,ECEA,MAAM6sB,GAAc,GAQb,SAASC,GAAWjb,EAAK0B,EAAS5H,GACrC,MAAMohB,EAAcF,GAAY9rB,WAAUisB,GAAUA,EAAOzZ,UAAYA,IACnEwZ,GAAe,IACfpX,GAAekX,GAAYE,GAAavoB,SACxCqoB,GAAY5rB,OAAO8rB,EAAa,GAEhCpjB,QAAQC,KAAK,8DAA+D,CAAE2J,aAGlF,IAAIvW,EAAY,IAAOiwB,EAAWthB,GAClC3O,EAAU0O,UAAYmD,GAAY0B,KAClCvT,EAAU8B,UAAYjC,EAAWQ,YAEjCL,EAAU2O,MAAQ,CAACA,GACnB3O,EAAUkwB,OAAQ,EAElB,MAAM7wB,EAkFV,SAAuBW,EAAW8e,GAC9B,MAAMzf,EAAU,CACZyB,MAAOd,EACPghB,iBAAkB0C,GAClBxL,oBAAoB,EACpB5Y,YAAa,EACbC,YAAQ0K,GAEN1K,EAASH,EAAaC,GAG5B,OAFAE,EAAO0f,OAAS,CAAC,EACjBkR,GAAmBnwB,EAAWX,EAASyf,GAChCzf,CACX,CA9FoB+wB,CAAcpwB,EAAWuW,GACnChX,EAASF,EAAQE,OACvBuI,EAAUvI,EAAOiQ,OAAQxI,EAAaC,aACtC,IAAIgpB,EAAapb,EAAIlG,GACrB,MAAM0hB,SAAuBJ,GAAcrwB,EAAWuC,SACjDkuB,IACItuB,EAAekuB,IAKhB1wB,EAAOiQ,OAAOoC,YAAc,CACxBG,OAAQ,CAACpD,GACTG,UAAW,CAACH,IAEhB3O,EAAU0O,UAAYuhB,EAAWvhB,UACjC1O,EAAU8B,UAAYmuB,EAAWnuB,UACjC9B,EAAUgT,QAAUid,EAAWjd,QAC/BhT,EAAYiwB,IAXZjwB,EAAUF,IAAMmwB,EAChBA,EAAapb,IAarB,MAAMiO,EAAcnM,SAASC,eAAe,IAC5C/H,GAAKzK,KAAMpE,EAAUgT,SAAW,CAAEnK,SAAU7I,IAC5C,MAAMwH,EAAU8oB,GAAWtwB,EAAW8iB,EAAavM,EAASlX,EAASgxB,GAKrE,GAJA9wB,EAAO2wB,OAAQ,EACXG,IACAJ,EAAWnwB,IAAM0H,EAAQxH,UAAUF,MAElCyW,EACD,MAAM,IAAI1J,MAAM,sDAAsD0J,0BAI1EA,EAAQqB,QAAU,WACd,MAAMqH,EAAS1f,EAAO0f,OACtB,IAAK,MAAMJ,KAAaI,EAAQ,CAC5B,MAAM9d,EAAW8d,EAAOJ,GACxBtI,EAAQga,oBAAoB1R,EAAW1d,EAC3C,CACA5B,EAAO0f,OAAS,CAAC,IACftJ,GAASC,MACX,MAAM4a,EAAU7X,GAAenR,GAG/B,QAFEmO,GAASC,MACXC,KACO2a,CACX,IACE7a,GAASC,MACX,MAAM6a,EAUV,SAA4BjpB,EAAS+O,EAAShX,EAAQS,EAAW6U,EAAKiO,GAClE,MAAM3Y,EAASgZ,GAAmB3b,EAAS,CAAEkS,MAAO,EAAGb,QAAS,GAAKtC,OAAStM,GAC9E1K,EAAOwL,OAASvD,EAChBjI,EAAOiQ,OAAShI,EAChB,IAAIyL,EAASjT,EAAUiT,OACvB,GAAIjT,EAAU8B,YAAcjC,EAAWQ,YAAa,CAChD,MACMwI,EADOgM,EACShM,SACtBoK,EAASpK,EAASoK,OAClBpK,EAASqnB,OAAQ,CACrB,CAEA3Z,EAAQtD,OAASA,EACjBsD,EAAQ1W,WAAaA,EACrBgwB,GAAYzrB,KAAK,CAAEmS,UAAS/O,YAC5B,MAAMipB,EAAc9Z,SAAS+Z,yBAC7BD,EAAYna,YAAYwM,GACxB,IAAK,MAAM6N,KAAWxmB,EAAOpK,IACzB6wB,GAAcD,EAASF,GAE3B,IAAK,MAAMzsB,KAAOmG,EAAO7E,KACrBqe,GAAoB3f,GAExB,OAAOysB,CACX,CAlCwBI,CAAmBrpB,EAAS+O,EAAShX,EAAQS,EAAW6U,EAAKiO,GAIjF,QAHEnN,GAASC,MACXC,KACAU,EAAQD,YAAYma,GACb,CACHjpB,UACAqH,KAAI,GACJhP,WAAU,EAElB,CAuCA,SAASswB,GAAmBnwB,EAAWX,EAASyf,GAC5C,MAAMvf,EAASF,EAAQE,OACjBwP,EAAawC,GAAevR,EAAWX,GAK7C,OAJAsS,GAAqB3R,EAAW+O,EAAYA,GAC5CA,EAAW+P,WAAaA,EACxBvf,EAAOwL,OAASxL,EAAOwL,QAAUgE,EACjCxP,EAAOiQ,OAAST,EACTA,CACX,CACO,SAASuhB,GAAWtwB,EAAW8iB,EAAahE,EAAYzf,EAASgxB,GACpEhxB,EAAQyjB,YAAcA,EACtB,MAAMvjB,EAASF,EAAQE,OACjB2R,EAAa3R,EAAOiQ,OACpBzE,EAASxL,EAAOwL,OAKtB,GAJsBmG,IAAenG,GAEjC7C,EAAQgJ,EAAYlK,EAAaC,YAAa8D,EAAOnK,MAAOmK,EAAOzD,QAEnEtH,EAAU8B,YAAcjC,EAAWQ,YAAa,CAChD,MAAM8J,EAAUnK,EAAUgT,SAAW,CAAEnK,SAAU7I,GACjD,IAAKqwB,EAAe,CAChB,MAAMthB,EAAaohB,GAAmBnwB,EAAWX,EAASyf,GAE1D,OADAkI,GAAejY,GACRA,CACX,CACA,MAAMnE,EAAaqG,GAAYjR,EAAWmK,EAAQ+G,GAElD,OADA8V,GAAepc,GACRA,CACX,CAEA,MACMA,GAAaoI,EADHhT,EAAUgT,SACC9B,EAAY7R,GAEvC,OADA2nB,GAAepc,GACRA,CACX,CACA,SAASgmB,GAAc7wB,EAAK0wB,GACpB1wB,EAAI2Y,YACJ+X,EAAYna,YAAYvW,EAAI2Y,YAE5B3Y,EAAI0Y,QACJgY,EAAYna,YAAYvW,EAAI0Y,OAEpC,CChKO,MAAMqY,GAAM,CACfhB,WAAU,qBAAmB,iBAAe,GAC5C7I,cAAa,SAAO,I","sources":["webpack://taggedjs/webpack/bootstrap","webpack://taggedjs/webpack/runtime/define property getters","webpack://taggedjs/webpack/runtime/hasOwnProperty shorthand","webpack://taggedjs/./ts/tag/update/getNewGlobal.function.ts","webpack://taggedjs/./ts/tag/tag.types.ts","webpack://taggedjs/./ts/tag/ValueTypes.enum.ts","webpack://taggedjs/./ts/subject/signal.function.ts","webpack://taggedjs/./ts/isInstance.ts","webpack://taggedjs/./ts/subject/combineLatest.function.ts","webpack://taggedjs/./ts/subject/subject.utils.ts","webpack://taggedjs/./ts/subject/Subject.class.ts","webpack://taggedjs/./ts/subject/ValueSubject.ts","webpack://taggedjs/./ts/subject/will.functions.ts","webpack://taggedjs/./ts/state/state.function.ts","webpack://taggedjs/./ts/state/states.utils.ts","webpack://taggedjs/./ts/state/state.utils.ts","webpack://taggedjs/./ts/state/getStateValue.function.ts","webpack://taggedjs/./ts/state/stateHandlers.ts","webpack://taggedjs/./ts/state/setUseMemory.object.ts","webpack://taggedjs/./ts/state/syncStates.function.ts","webpack://taggedjs/./ts/state/watch.function.ts","webpack://taggedjs/./ts/state/subject.function.ts","webpack://taggedjs/./ts/state/states.function.ts","webpack://taggedjs/./ts/state/letProp.function.ts","webpack://taggedjs/./ts/state/providers.ts","webpack://taggedjs/./ts/errors.ts","webpack://taggedjs/./ts/deepFunctions.ts","webpack://taggedjs/./ts/tag/getTemplaterResult.function.ts","webpack://taggedjs/./ts/tag/tag.utils.ts","webpack://taggedjs/./ts/alterProp.function.ts","webpack://taggedjs/./ts/tag/executeWrap.function.ts","webpack://taggedjs/./ts/tag/cloneValueArray.function.ts","webpack://taggedjs/./ts/tag/getSupport.function.ts","webpack://taggedjs/./ts/tag/clonePropsBy.function.ts","webpack://taggedjs/./ts/tag/getTagWrap.function.ts","webpack://taggedjs/./ts/tag/tag.function.ts","webpack://taggedjs/./ts/tag/hasPropChanges.function.ts","webpack://taggedjs/./ts/tag/hasSupportChanged.function.ts","webpack://taggedjs/./ts/tag/paint.function.ts","webpack://taggedjs/./ts/updateBeforeTemplate.function.ts","webpack://taggedjs/./ts/tag/tagRunner.ts","webpack://taggedjs/./ts/tag/getChildTagsToDestroy.function.ts","webpack://taggedjs/./ts/tag/smartRemoveKids.function.ts","webpack://taggedjs/./ts/tag/destroySupport.function.ts","webpack://taggedjs/./ts/tag/update/compareArrayItems.function.ts","webpack://taggedjs/./ts/tag/checkDestroyPrevious.function.ts","webpack://taggedjs/./ts/tag/update/processRegularValue.function.ts","webpack://taggedjs/./ts/tag/isLikeTags.function.ts","webpack://taggedjs/./ts/interpolations/attributes/howToSetInputValue.function.ts","webpack://taggedjs/./ts/interpolations/attributes/specialAttribute.ts","webpack://taggedjs/./ts/state/handleProviderChanges.function.ts","webpack://taggedjs/./ts/interpolations/attributes/getUpTags.function.ts","webpack://taggedjs/./ts/tag/render/renderSupport.function.ts","webpack://taggedjs/./ts/state/providersChangeCheck.function.ts","webpack://taggedjs/./ts/interpolations/attributes/renderTagArray.function.ts","webpack://taggedjs/./ts/interpolations/attributes/bindSubjectCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processNameValueAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/addSupportEventListener.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttributeCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/isSpecialAttribute.function.ts","webpack://taggedjs/./ts/tag/processUpdateAttrContext.function.ts","webpack://taggedjs/./ts/interpolations/attributes/updateAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttribute.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/attachDomElements.function.ts","webpack://taggedjs/./ts/tag/buildBeforeElement.function.ts","webpack://taggedjs/./ts/tag/update/processTag.function.ts","webpack://taggedjs/./ts/tag/processUpdateContext.function.ts","webpack://taggedjs/./ts/tag/updateSupportBy.function.ts","webpack://taggedjs/./ts/tag/update/processNewValue.function.ts","webpack://taggedjs/./ts/tag/update/processTagArray.ts","webpack://taggedjs/./ts/tag/update/updateExistingValue.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingTagComponent.function.ts","webpack://taggedjs/./ts/tag/checkTagValueChange.function.ts","webpack://taggedjs/./ts/tag/update/oneRenderToSupport.function.ts","webpack://taggedjs/./ts/tag/checkStateMismatch.function.ts","webpack://taggedjs/./ts/tag/afterRender.function.ts","webpack://taggedjs/./ts/tag/render/renderTagOnly.function.ts","webpack://taggedjs/./ts/tag/update/processNewSubjectTag.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectValue.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectComponent.function.ts","webpack://taggedjs/./ts/tag/update/processTagResult.function.ts","webpack://taggedjs/./ts/interpolations/processSubscriptionUpdate.function.ts","webpack://taggedjs/./ts/interpolations/subscribeToTemplate.function.ts","webpack://taggedjs/./ts/tag/update/syncPriorPropFunction.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingArray.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingObject.function.ts","webpack://taggedjs/./ts/tag/render/softDestroySupport.function.ts","webpack://taggedjs/./ts/tag/render/renderWithSupport.function.ts","webpack://taggedjs/./ts/tag/render/renderExistingTag.function.ts","webpack://taggedjs/./ts/state/callback.function.ts","webpack://taggedjs/./ts/state/callbackStateUpdate.function.ts","webpack://taggedjs/./ts/state/callbackMaker.function.ts","webpack://taggedjs/./ts/state/onInit.ts","webpack://taggedjs/./ts/state/onDestroy.ts","webpack://taggedjs/./ts/tag/getSupportInCycle.function.ts","webpack://taggedjs/./ts/tag/getDomTag.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/parseHTML.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/htmlInterpolationToDomMeta.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/replacePlaceholders.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/restorePlaceholders.function.ts","webpack://taggedjs/./ts/tag/domMetaCollector.ts","webpack://taggedjs/./ts/tag/getStringsId.function.ts","webpack://taggedjs/./ts/tag/isLastRunMatched.function.ts","webpack://taggedjs/./ts/tag/html.ts","webpack://taggedjs/./ts/tag/tagElement.ts","webpack://taggedjs/./ts/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export function getNewGlobal(subject) {\n    ;\n    subject.renderCount = subject.renderCount || 0;\n    // ;(subject as SupportContextItem).renderCount = 0\n    return subject.global = {};\n}\n","export class RouteQuery {\n    get(_name) {\n        return 'todo';\n    }\n}\n","export const empty = '';\nexport var ImmutableTypes;\n(function (ImmutableTypes) {\n    ImmutableTypes[\"string\"] = \"string\";\n    ImmutableTypes[\"number\"] = \"number\";\n    ImmutableTypes[\"boolean\"] = \"boolean\";\n    ImmutableTypes[\"undefined\"] = \"undefined\";\n})(ImmutableTypes || (ImmutableTypes = {}));\nexport var BasicTypes;\n(function (BasicTypes) {\n    BasicTypes[\"function\"] = \"function\";\n    BasicTypes[\"date\"] = \"date\";\n    BasicTypes[\"unknown\"] = \"unknown\";\n    BasicTypes[\"object\"] = \"object\";\n})(BasicTypes || (BasicTypes = {}));\nconst version = Date.now();\n/** Used as direct memory comparisons, the strings are never compared, just the array */\nexport const ValueTypes = {\n    tag: 'html', // html'' aka StringTag | DomTag\n    dom: 'dom', // compiled version of html''\n    templater: 'templater',\n    tagComponent: 'tagComponent',\n    tagArray: 'tagArray',\n    subject: 'subject',\n    tagJsSubject: 'tagJsSubject',\n    renderOnce: 'renderOnce',\n    stateRender: 'stateRender',\n    version,\n};\n","import { state } from '../state/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\n/** Checks if rendering cycle in process. Then creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function signal(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => Signal(initialValue));\n    }\n    return Signal(initialValue);\n}\n/** Creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function Signal(initialValue) {\n    let value = initialValue;\n    const subscribers = new Set();\n    return {\n        get value() {\n            return value;\n        },\n        set value(newValue) {\n            if (value !== newValue) {\n                value = newValue;\n                // Notify all subscribers\n                subscribers.forEach(callback => callback(newValue));\n            }\n        },\n        subscribe(callback) {\n            callback(value); // emit initial value\n            subscribers.add(callback);\n            // Return an unsubscribe function\n            const unsub = () => subscribers.delete(callback);\n            // support traditional unsubscribe\n            unsub.unsubscribe = unsub;\n            return unsub;\n        },\n    };\n}\n","import { BasicTypes, ImmutableTypes, ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isSimpleType(value) {\n    switch (value) {\n        case ImmutableTypes.string:\n        case ImmutableTypes.number:\n        case ImmutableTypes.boolean:\n            return true;\n    }\n    return false;\n}\nexport function isStaticTag(value) {\n    if (!value) {\n        return false;\n    }\n    const tagJsType = value.tagJsType;\n    switch (tagJsType) {\n        case ValueTypes.dom:\n        case ValueTypes.tag:\n        case ValueTypes.templater:\n            return true;\n    }\n    return false;\n}\n/** passed in is expected to be a TemplaterResult */\nexport function isTagComponent(value) {\n    const tagType = value?.tagJsType;\n    return tagType === ValueTypes.tagComponent || tagType === ValueTypes.stateRender;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return isObject(subject) && typeof subject.subscribe === BasicTypes.function;\n}\nexport function isPromise(value) {\n    return value && isFunction(value.then);\n}\nexport function isFunction(value) {\n    return typeof value === BasicTypes.function;\n}\nexport function isObject(value) {\n    return typeof (value) === BasicTypes.object && value !== null;\n}\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (const item of valuesSeen) {\n                if (!item) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => {\n            return subject.subscribe(x => setValue(x, index + 1));\n        });\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject.value + 1);\n    const subscription = function () {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = function () {\n        return unsubscribe(subscription, subscribers, callback);\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\nfunction unsubscribe(subscription, subscribers, callback) {\n    removeSubFromArray(subscribers, callback); // each will be called when update comes in\n    const valSub = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(valSub.value - 1);\n    // any double unsubscribes will be ignored\n    subscription.unsubscribe = () => subscription;\n    // unsubscribe from any combined subjects\n    const subscriptions = subscription.subscriptions;\n    for (const sub of subscriptions) {\n        sub.unsubscribe();\n    }\n    return subscription;\n}\n","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    constructor(value, \n    // private? - only used by extending classes\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        // defineValueOn(this)\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this.value = value;\n        this.emit();\n    }\n    set = this.next.bind(this);\n    emit() {\n        const value = this.value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster */\n    toCallback(callback) {\n        const subscription = this.subscribe((x, runtimeSub) => {\n            const tagJsUnsub = runtimeSub?.unsubscribe;\n            if (tagJsUnsub) {\n                tagJsUnsub(); // its from taggedjs\n            }\n            else {\n                setTimeout(() => subscription.unsubscribe(), 0);\n            }\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this.value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging}\n}\nexport class Subjective extends Subject {\n    value;\n    onSubscription;\n    _value;\n    constructor(value, \n    // private?\n    onSubscription) {\n        super(value, onSubscription);\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n}\n","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this.value, subscription);\n        return subscription;\n    }\n}\nexport class ValueSubjective extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        this._value = value;\n        defineValueOn(this); // if you extend this AND have a constructor, you must call this in your extension\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n","export function willCallback(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        });\n        callback(lastValue, utils.next);\n    });\n}\n/** .pipe( promise((x) => Promise.resolve(44)) ) */\nexport function willPromise(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        result.then(x => utils.next(x));\n    });\n}\n/** .pipe( willSubscribe((x) => new ValueSubject(44)) ) */\nexport const willSubscribe = (callback) => {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        const subscription = result.subscribe(x => {\n            subscription.unsubscribe();\n            utils.next(x);\n        });\n    });\n};\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    return setUseMemory.stateConfig.handlers.handler(defaultValue);\n}\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nexport function firstStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    config.states[config.statesIndex] = setter;\n    const support = config.support;\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter((...args) => {\n        state(args);\n        return args;\n    });\n}\nexport function reStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    const support = config.support;\n    const statesIndex = config.statesIndex;\n    const prevSupport = config.prevSupport;\n    const oldStates = prevSupport?.states[statesIndex];\n    const lastValues = [];\n    const regetter = (...args) => {\n        lastValues.push(args);\n        return args;\n    };\n    oldStates(regetter);\n    let index = 0;\n    const resetter = (...args) => {\n        // state(value) // fake call and do not care about result\n        // fake state() having been called\n        config.stateArray.push({\n            get: () => args,\n            defaultValue: args,\n        });\n        const lastValue = lastValues[index];\n        ++index;\n        return lastValue;\n    };\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(resetter);\n}\n","import { runFirstState, runRestate } from './stateHandlers.js';\nimport { firstStatesHandler, reStatesHandler } from './states.utils.js';\nexport function initState(support, config) {\n    config.handlers.handler = runFirstState;\n    config.handlers.statesHandler = firstStatesHandler;\n    config.rearray = [];\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.support = support;\n}\nexport function reState(support, config, prevState, prevStates) {\n    // set previous state memory\n    config.rearray = prevState;\n    config.stateArray = [];\n    config.states = prevStates;\n    config.statesIndex = 0;\n    config.handlers.handler = runRestate;\n    config.handlers.statesHandler = reStatesHandler;\n    config.support = support;\n}\nexport class StateEchoBack {\n}\n// sends a fake value and then sets back to received value\nexport function getCallbackValue(callback) {\n    const oldState = callback(StateEchoBack); // get value and set to undefined\n    const [value] = oldState;\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n","import { getCallbackValue } from './state.utils.js';\nexport function getStateValue(state) {\n    const callback = state.callback;\n    if (!callback) {\n        return state.defaultValue;\n    }\n    const [value] = getCallbackValue(callback);\n    return value;\n}\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nexport function runRestate() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    config.stateArray.push(restate);\n    return restate.defaultValue;\n}\nexport function runFirstState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    let initValue = defaultValue;\n    if (typeof (defaultValue) === BasicTypes.function) {\n        initValue = defaultValue();\n    }\n    // the state is actually intended to be a function\n    if (typeof (initValue) === BasicTypes.function) {\n        const original = initValue;\n        initValue = function initValueFun(...args) {\n            const result = original(...args);\n            return result;\n        };\n        initValue.original = original;\n    }\n    const push = {\n        get: function pushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return initValue;\n}\n","import { firstStatesHandler } from './states.utils.js';\nimport { runFirstState } from './stateHandlers.js';\nexport const setUseMemory = {\n    stateConfig: {\n        stateArray: [], // state memory on the first render\n        version: Date.now(),\n        handlers: {\n            handler: runFirstState,\n            statesHandler: firstStatesHandler,\n        }\n    },\n};\n","export function syncStates(stateFrom, stateTo, oldStates, statesFrom) {\n    // sync state()\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const fromValue = stateFrom[index].get();\n        const callback = stateTo[index].callback; // is it a let state?\n        if (!callback) {\n            continue;\n        }\n        callback(fromValue); // set the value\n    }\n    for (let index = statesFrom.length - 1; index >= 0; --index) {\n        const oldValues = [];\n        const oldGetCallback = (...args) => {\n            oldValues.push(args);\n            return args;\n        };\n        // trigger getting all old values\n        statesFrom[index](oldGetCallback);\n        let getIndex = 0;\n        const newSetCallback = (..._) => {\n            return oldValues[getIndex++];\n        };\n        // trigger setting updated values\n        oldStates[index](newSetCallback);\n    }\n}\n","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered.\n * Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before, final = defaultFinally, } = {}) => {\n    const previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (before && !before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (before && !before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const firstSupport = state(() => getSupportInCycle());\n            const subject = state(() => new ValueSubject(undefined));\n            const oldState = state(() => ({\n                stateArray: setUseMemory.stateConfig.stateArray,\n                states: setUseMemory.stateConfig.states,\n            }));\n            const method = (currentValues, callback) => {\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowSupport !== firstSupport) {\n                        const newestState = oldState.stateArray;\n                        const global = firstSupport.subject.global;\n                        const oldest = global.oldest;\n                        const oldestState = oldest.state;\n                        const newStates = oldState.states;\n                        const oldStates = oldest.states;\n                        syncStates(newestState, oldestState, newStates, oldStates);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => new Subject(initialValue));\n    }\n    return new Subject(initialValue);\n}\nsubject._value = (value) => {\n    const oldestState = state(function subjectValue() {\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectValue() {\n        const subject = new ValueSubject(value).pipe(x => {\n            syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => ({\n        stateArray: setUseMemory.stateConfig.stateArray,\n        states: setUseMemory.stateConfig.states,\n    }));\n    const nowSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n        return x;\n    });\n}\nsubject.all = all;\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function states(setter) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.statesHandler(setter);\n}\n","import { signal } from '../subject/signal.function.js';\nimport { states } from './states.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(setter) {\n    const propStates2 = signal([]);\n    const passes = signal(0);\n    const passedOn = signal(0);\n    let nowValues = [];\n    let passed = 0;\n    passedOn.value = passes.value;\n    setter((...values) => {\n        nowValues = values;\n        return values;\n    });\n    // When the watched variable changes, then the local prop variable has to update\n    watch(nowValues, () => {\n        ++passed; // first time values and changed values cause new state\n        propStates2.value = nowValues;\n        setter(() => nowValues);\n    });\n    // called and only used during sync'ing processes\n    states(() => {\n        if (passed) {\n            setter((...values) => {\n                propStates2.value = values;\n                if (passes != passedOn) {\n                    return propStates2.value;\n                }\n                return values; // propStates2.value\n            });\n            passedOn.value = passes.value;\n            ++passes.value;\n            return;\n        }\n        setter(() => propStates2.value);\n    });\n    ++passed;\n    return propStates2.value;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nexport const providers = {\n    create: (constructMethod) => {\n        const stateDiffMemory = state(() => ({ stateDiff: 0, provider: undefined }));\n        // mimic how many states were called the first time\n        if (stateDiffMemory.stateDiff) {\n            let x = stateDiffMemory.stateDiff;\n            while (x--) {\n                state(undefined);\n            }\n            const result = state(undefined);\n            return result;\n        }\n        const result = state(() => {\n            const stateConfig = setUseMemory.stateConfig;\n            const oldStateCount = stateConfig.stateArray.length;\n            // Providers with provider requirements just need to use providers.create() and providers.inject()\n            const instance = constructMethod.prototype ? new constructMethod() : constructMethod();\n            const support = stateConfig.support;\n            const stateDiff = stateConfig.stateArray.length - oldStateCount;\n            const provider = {\n                constructMethod,\n                instance,\n                stateDiff,\n                owner: support,\n                children: [],\n            };\n            stateDiffMemory.provider = provider;\n            const global = support.subject.global;\n            const providers = global.providers = global.providers || [];\n            providers.push(provider);\n            stateDiffMemory.stateDiff = stateDiff;\n            return instance;\n        });\n        const cm = constructMethod;\n        const compareTo = cm.compareTo = cm.toString();\n        stateDiffMemory.provider.constructMethod.compareTo = compareTo;\n        return result;\n    },\n    /**\n     * @template T\n     * @param {(new (...args: any[]) => T) | () => T} constructor\n     * @returns {T}\n     */\n    inject: (constructor) => {\n        // find once, return same every time after\n        return state(() => {\n            // const memory = setUse.memory\n            const cm = constructor;\n            const compareTo = cm.compareTo = cm.compareTo || constructor.toString();\n            const support = getSupportInCycle(); // memory.stateConfig.support as AnySupport\n            const providers = [];\n            let owner = {\n                ownerSupport: support.ownerSupport\n            };\n            while (owner.ownerSupport) {\n                const ownGlobal = owner.ownerSupport.subject.global;\n                const ownerProviders = ownGlobal.providers;\n                if (!ownerProviders) {\n                    owner = owner.ownerSupport; // cause reloop checking next parent\n                    continue;\n                }\n                const provider = ownerProviders.find(provider => {\n                    providers.push(provider);\n                    const constructorMatch = provider.constructMethod.compareTo === compareTo;\n                    if (constructorMatch) {\n                        return true;\n                    }\n                });\n                if (provider) {\n                    const global = support.subject.global;\n                    const providers = global.providers = global.providers || [];\n                    providers.push(provider);\n                    provider.children.push(support);\n                    return provider.instance;\n                }\n                owner = owner.ownerSupport; // cause reloop checking next parent\n            }\n            const msg = `Could not inject provider: ${constructor.name} ${constructor}`;\n            console.warn(`${msg}. Available providers`, providers);\n            throw new Error(msg);\n        });\n    }\n};\n","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n","import { isArray, isFunction } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nexport function deepClone(obj, maxDepth) {\n    // return makeDeepClone(obj, new WeakMap())\n    return makeDeepClone(obj, maxDepth);\n}\nfunction makeDeepClone(obj, \n// visited: WeakMap<any, any>\nmaxDepth) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== BasicTypes.object) {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    /*\n    if (visited.has(obj)) {\n      return visited.get(obj)\n    }\n    */\n    if (maxDepth < 0) {\n        return obj;\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Clone each property or element of the object or array\n    if (isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], maxDepth - 1);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                clone[key] = makeDeepClone(obj[key], maxDepth - 1);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2, maxDepth) {\n    return isDeepEqual(obj1, obj2, maxDepth);\n}\nfunction isDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    // if (visited.has(obj1)) {\n    if (maxDepth < 0) {\n        return true;\n    }\n    if (typeof obj1 === BasicTypes.object && typeof obj2 === BasicTypes.object) {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        // visited.set(obj1, 0)\n        // Check if obj1 and obj2 are both arrays\n        if (isArray(obj1) && isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, maxDepth - 1);\n        }\n        else if (isArray(obj1) || isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        // return isObjectDeepEqual(obj1, obj2, visited)\n        return isObjectDeepEqual(obj1, obj2, maxDepth - 1);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, maxDepth) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = isFunction(fn0) && isFunction(fn1);\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nexport function getTemplaterResult(propWatch, props) {\n    const templater = {\n        propWatch,\n        props,\n        tagJsType: ValueTypes.templater,\n        key: function keyTemplate(arrayValue) {\n            templater.arrayValue = arrayValue;\n            return templater;\n        }\n    };\n    return templater;\n}\n","export const tags = [];\n","import { isInlineHtml, renderInlineHtml } from './tag/render/renderSupport.function.js';\nimport { renderExistingReadyTag } from './tag/render/renderExistingTag.function.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nimport { deepCompareDepth } from './tag/hasSupportChanged.function.js';\nimport { isArray, isStaticTag } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nimport { setUseMemory } from './state/index.js';\nexport function castProps(props, newSupport, depth) {\n    return props.map(prop => alterProp(prop, newSupport.ownerSupport, newSupport, depth));\n}\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, newSupport, depth) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, newSupport, depth);\n}\nexport function checkProp(value, ownerSupport, newSupport, depth) {\n    if (!value) {\n        return value;\n    }\n    if (value.tagJsType) {\n        return value;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        return getPropWrap(value, ownerSupport);\n    }\n    if (depth === deepCompareDepth) {\n        return value;\n    }\n    const skip = isSkipPropValue(value);\n    if (skip) {\n        return value; // no children to crawl through\n    }\n    if (isArray(value)) {\n        return checkArrayProp(value, newSupport, ownerSupport, depth);\n    }\n    return checkObjectProp(value, newSupport, ownerSupport, depth);\n}\nfunction checkArrayProp(value, newSupport, ownerSupport, depth) {\n    for (let index = value.length - 1; index >= 0; --index) {\n        const subValue = value[index];\n        value[index] = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        if (typeof (subValue) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, index, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction checkObjectProp(value, newSupport, ownerSupport, depth) {\n    const keys = Object.keys(value);\n    for (const name of keys) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        const newSubValue = value[name];\n        if (newSubValue === result) {\n            continue;\n        }\n        const getset = Object.getOwnPropertyDescriptor(value, name);\n        const hasSetter = getset?.get || getset?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n        if (typeof (result) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, name, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction afterCheckProp(depth, index, originalValue, newProp, newSupport) {\n    // restore object to have original function on destroy\n    if (depth > 0) {\n        const global = newSupport.subject.global;\n        newProp[index].subscription = global.destroy$.toCallback(function alterCheckProcessor() {\n            newProp[index] = originalValue;\n        });\n    }\n}\nexport function getPropWrap(value, ownerSupport) {\n    const already = value.mem;\n    // already previously converted by a parent?\n    if (already) {\n        return value;\n    }\n    const wrap = function wrapRunner(...args) {\n        return wrap.toCall(...args);\n    }; // what gets called can switch over parent state changes\n    wrap.original = value;\n    wrap.mem = value;\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = function toCallRunner(...args) {\n        return callbackPropOwner(wrap.mem, args, ownerSupport);\n    };\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport) {\n    const global = ownerSupport.subject.global;\n    const newest = global?.newest || ownerSupport;\n    const supportInCycle = getSupportInCycle();\n    const noCycle = supportInCycle === undefined;\n    const callbackResult = toCall(...callWith);\n    const run = function propCallbackProcessor() {\n        const global = newest.subject.global;\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            const allMatched = global.locked === true;\n            if (allMatched) {\n                return callbackResult; // owner did not change\n            }\n        }\n        safeRenderSupport(newest, ownerSupport);\n        return callbackResult;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUseMemory.tagClosed$.toCallback(run);\n    return callbackResult;\n}\nexport function isSkipPropValue(value) {\n    return typeof (value) !== BasicTypes.object || !value || value.tagJsType;\n}\nexport function safeRenderSupport(newest, ownerSupport) {\n    const subject = newest.subject;\n    const isInline = isInlineHtml(newest.templater);\n    if (isInline) {\n        const result = renderInlineHtml(ownerSupport, newest);\n        // TODO: below maybe never true\n        /*\n        const global = subject.global as TagGlobal\n        if(global) {\n          delete global.locked\n        }\n        */\n        return result;\n    }\n    const global = subject.global;\n    global.locked = true;\n    renderExistingReadyTag(global.newest, newest, ownerSupport, subject);\n    delete global.locked;\n}\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nexport function executeWrap(templater, result, useSupport, castedProps) {\n    const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n    const stateless = templater.tagJsType === ValueTypes.stateRender;\n    let tag;\n    if (stateless) {\n        tag = templater();\n    }\n    else {\n        tag = originalFunction(...castedProps);\n        // CALL ORIGINAL COMPONENT FUNCTION\n        if (typeof (tag) === BasicTypes.function) {\n            tag = tag();\n        }\n    }\n    tag.templater = templater;\n    templater.tag = tag;\n    const config = setUseMemory.stateConfig;\n    useSupport.state = config.stateArray;\n    useSupport.states = config.states;\n    // ++useSupport.subject.renderCount\n    return useSupport;\n}\n","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isArray } from '../isInstance.js';\nexport function cloneValueArray(values) {\n    return values.map(cloneTagJsValue);\n}\n/** clones only what is needed to compare differences later */\nexport function cloneTagJsValue(value, maxDepth) {\n    const tag = value;\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.stateRender:\n                return undefined;\n            case ValueTypes.dom:\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n        }\n    }\n    if (isArray(value)) {\n        return cloneValueArray(tag);\n    }\n    return deepClone(value, maxDepth);\n}\n","import { clonePropsBy } from './clonePropsBy.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** used only for apps, otherwise use Support */\nexport function getBaseSupport(templater, subject, castedProps) {\n    const baseSupport = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    // baseSupport.appSupport = baseSupport\n    const global = subject.global;\n    global.blocked = [];\n    global.destroy$ = new Subject();\n    return baseSupport;\n}\nexport function upgradeBaseToSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nsupport, appSupport, castedProps) {\n    ;\n    support.state = [];\n    support.states = [];\n    support.appSupport = appSupport;\n    const props = templater.props; // natural props\n    if (props) {\n        support.propsConfig = clonePropsBy(support, props, castedProps);\n    }\n    return support;\n}\nexport function getHtmlSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\nexport function getSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = getBaseSupport(templater, subject, castedProps);\n    support.ownerSupport = ownerSupport;\n    return upgradeBaseToSupport(templater, support, appSupport, castedProps);\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nimport { cloneTagJsValue } from './cloneValueArray.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { PropWatches } from './tag.function.js';\nexport function clonePropsBy(support, props, castProps) {\n    const templater = support.templater;\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return support.propsConfig = {\n                latest: props,\n                castProps,\n            };\n        case PropWatches.SHALLOW:\n            return support.propsConfig = {\n                latest: props.map(x => cloneTagJsValue(x, shallowCompareDepth)),\n                castProps,\n            };\n    }\n    return support.propsConfig = {\n        latest: props.map(props => cloneTagJsValue(props, deepCompareDepth)),\n        castProps,\n    };\n}\n","import { castProps } from '../alterProp.function.js';\nimport { syncFunctionProps } from './update/updateExistingTagComponent.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { getSupport } from './getSupport.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    // this function gets called by taggedjs\n    const wrapper = function tagFunWrap(newSupport, subject, lastSupport // subject.global.newest\n    ) {\n        // wrap any prop functions that are passed in\n        const castedProps = getCastedProps(templater, newSupport, lastSupport);\n        const ownerSupport = newSupport.ownerSupport;\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject, castedProps);\n        return executeWrap(templater, result, useSupport, castedProps);\n    };\n    return wrapper;\n}\nexport function getCastedProps(templater, newSupport, lastSupport) {\n    const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n    const props = templater.props;\n    const propsConfig = newSupport.propsConfig;\n    // When defined, this must be an update where my new props have already been made for me\n    let preCastedProps = propsConfig.castProps;\n    const lastPropsConfig = lastSupport?.propsConfig;\n    const lastCastProps = lastPropsConfig?.castProps;\n    if (lastCastProps) {\n        propsConfig.castProps = lastCastProps;\n        preCastedProps = syncFunctionProps(newSupport, lastSupport, lastSupport.ownerSupport, props, maxDepth);\n    }\n    const castedProps = preCastedProps || castProps(props, newSupport, 0);\n    return castedProps;\n}\n","// taggedjs-no-compile\nimport { setUseMemory } from '../state/index.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nlet tagCount = 0;\n/** How to handle checking for prop changes aka argument changes */\nexport var PropWatches;\n(function (PropWatches) {\n    PropWatches[\"DEEP\"] = \"deep\";\n    /** checks all values up to 2 levels deep */\n    PropWatches[\"SHALLOW\"] = \"shallow\";\n    PropWatches[\"NONE\"] = \"none\";\n    PropWatches[\"IMMUTABLE\"] = \"immutable\";\n})(PropWatches || (PropWatches = {}));\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent, propWatch = PropWatches.SHALLOW) {\n    /** function developer triggers */\n    const parentWrap = function tagWrapper(...props) {\n        const templater = getTemplaterResult(propWatch, props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        innerTagWrap.original = tagComponent;\n        /*\n            if(!innerTagWrap.parentWrap) {\n              innerTagWrap.parentWrap = parentWrap as TagWrapper<unknown>\n            }\n        */\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }; // we override the function provided and pretend original is what's returned\n    const tag = tagComponent;\n    parentWrap.original = tagComponent;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUseMemory;\n    tag.ValueTypes = ValueTypes;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\ntag.renderOnce = renderOnceFn;\nfunction renderOnceFn() {\n    throw new Error('Do not call tag.renderOnce as a function but instead set it as: `(props) => tag.renderOnce = () => html`` `');\n}\n/** Used to create variable scoping when calling a function that lives within a prop container function */\nfunction tagUseFn() {\n    throw new Error('Do not call tag.use as a function but instead set it as: `(props) => tag.use = (use) => html`` `');\n}\n/** deprecated */\n;\ntag.state = tagUseFn;\ntag.use = tagUseFn;\ntag.route = routeFn;\nfunction routeFn(_routeProps) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n}\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\n;\ntag.app = function (_routeTag) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\ntag.deepPropWatch = tag;\ntag.immutableProps = function immutableProps(tagComponent) {\n    return tag(tagComponent, PropWatches.IMMUTABLE);\n};\ntag.watchProps = function watchProps(tagComponent) {\n    return tag(tagComponent, PropWatches.SHALLOW);\n};\n/* BELOW: Cast functions into setters with no getters */\nObject.defineProperty(tag, 'renderOnce', {\n    set(oneRenderFunction) {\n        oneRenderFunction.tagJsType = ValueTypes.renderOnce;\n    },\n});\n// TODO: deprecate this\nObject.defineProperty(tag, 'state', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\nObject.defineProperty(tag, 'use', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\n","import { deepEqual } from '../deepFunctions.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from './hasSupportChanged.function.js';\nimport { hasPropLengthsChanged } from './render/renderSupport.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nexport function hasPropChanges(props, // natural props\npastCloneProps, // previously cloned props\npropWatch) {\n    const hasLenChanged = hasPropLengthsChanged(props, pastCloneProps);\n    if (hasLenChanged) {\n        return 11;\n    }\n    switch (propWatch) {\n        case PropWatches.NONE:\n            return 1; // always render\n        case PropWatches.SHALLOW: // determining equal is same as immutable, its the previous cloning step thats different\n            return shallowPropMatch(props, pastCloneProps);\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(props, pastCloneProps);\n    }\n    return deepPropChangeCompare(props, pastCloneProps);\n}\nfunction deepPropChangeCompare(props, pastCloneProps) {\n    // DEEP watch\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    castedProps = [...props];\n    castedPastProps = [...(pastCloneProps || [])];\n    const allFunctionsMatch = castedProps.every((value, index) => onePropCompare(value, index, castedProps, castedPastProps));\n    if (!allFunctionsMatch) {\n        return 7; // a change has been detected by function comparisons\n    }\n    return false;\n}\nfunction onePropCompare(value, index, castedProps, castedPastProps) {\n    const compare = castedPastProps[index];\n    if (typeof (value) === BasicTypes.object) {\n        const subCastedProps = { ...value };\n        const subCompareProps = { ...compare || {} };\n        const matched = Object.entries(subCastedProps).every(([key, value]) => compareProps(value, subCompareProps[key], () => {\n            delete subCastedProps[key]; // its a function and not needed to be compared\n            delete subCompareProps[key]; // its a function and not needed to be compared\n        }));\n        return matched;\n    }\n    return compareProps(value, compare, () => {\n        castedProps.splice(index, 1);\n        castedPastProps.splice(index, 1);\n    });\n}\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(typeof (value) === BasicTypes.function)) {\n        return deepEqual(value, compare, deepCompareDepth) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(typeof (compareFn) === BasicTypes.function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 5; // both are function the same\n    }\n    onDelete();\n    return 6;\n}\n","import { isArray } from '../isInstance.js';\nimport { hasPropChanges } from './hasPropChanges.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function hasSupportChanged(lastSupport, newTemplater) {\n    const latestProps = newTemplater.props;\n    const propsConfig = lastSupport.propsConfig;\n    const pastCloneProps = propsConfig.latest;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps, lastSupport.templater.propWatch);\n    return propsChanged;\n}\nexport function immutablePropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (prop !== pastProp) {\n            return 2;\n        }\n    }\n    return false; // false means has not changed\n}\nexport function shallowPropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (isArray(prop) && isArray(pastProp)) {\n            if (prop === pastProp) {\n                continue;\n            }\n            return 3.0; // not equal array\n        }\n        if (typeof (prop) === BasicTypes.function && typeof (pastProp) === BasicTypes.function) {\n            continue; // considered good\n        }\n        if (typeof (prop) === BasicTypes.object) {\n            if (typeof (pastCloneProps) === BasicTypes.object) {\n                const obEntries = Object.entries(prop);\n                for (const subItem of obEntries) {\n                    const result = objectItemMatches(subItem, pastProp);\n                    if (!result) {\n                        return 3.1;\n                    }\n                }\n            }\n            continue; // all sub objects matched\n        }\n        if (prop === pastProp) {\n            continue; // matched good\n        }\n        return 3.3; // not equal\n    }\n    return false; // false means has not changed\n}\nexport const shallowCompareDepth = 3;\nexport const deepCompareDepth = 10;\nfunction objectItemMatches([name, value], pastProp) {\n    const pastValue = pastProp[name];\n    if (typeof (value) === BasicTypes.function && typeof (pastValue) === BasicTypes.function) {\n        return true;\n    }\n    return pastValue === value;\n}\n","export let paintRemoves = [];\nexport let paintContent = [];\nexport let setContent = [];\n/** array memory that runs and completes BEFORE paintInsertBefores array */\nexport let paintAppends = [];\n/** array memory that runs and completes AFTER paintAppends array */\nexport let paintInsertBefores = [];\nexport let paintAfters = []; // callbacks after all painted\nexport const painting = {\n    locks: 0\n};\nexport function paint() {\n    if (painting.locks > 0) {\n        return;\n    }\n    for (let index = paintRemoves.length - 1; index >= 0; --index) {\n        const toRemove = paintRemoves[index];\n        const parentNode = toRemove.parentNode;\n        parentNode.removeChild(toRemove);\n    }\n    for (const content of paintContent) {\n        content();\n    }\n    for (const [text, textNode] of setContent) {\n        textNode.textContent = text;\n    }\n    for (const now of paintAppends) {\n        now.relative.appendChild(now.element);\n    }\n    for (const { element, relative } of paintInsertBefores) {\n        relative.parentNode.insertBefore(element, relative);\n    }\n    paintRemoves = [];\n    paintContent = [];\n    paintAppends = [];\n    paintInsertBefores = [];\n    setContent = [];\n    for (const now of paintAfters) {\n        now();\n    }\n    paintAfters = [];\n}\n","import { paintInsertBefores } from './tag/paint.function.js';\nimport { empty } from './tag/ValueTypes.enum.js';\n// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const textNode = document.createTextNode(value); // never innerHTML\n    paintInsertBefores.push({\n        element: textNode,\n        relative: lastFirstChild,\n    });\n    return textNode;\n}\nexport function castTextValue(value) {\n    switch (value) {\n        case undefined:\n        case false:\n        case null:\n            return empty;\n    }\n    return value;\n}\n","import { getSupportInCycle } from './getSupportInCycle.function.js';\nimport { setUseMemory } from '../state/index.js';\nimport { Subject } from '../subject/index.js';\n// Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering\nsetUseMemory.tagClosed$ = new Subject(undefined, function tagCloser(subscription) {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(support) {\n    // TODO: We don't need to remove from parents if parent is being destroyed\n    // remove me from my parents\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (providers) {\n        for (const provider of providers) {\n            for (let index = provider.children.length - 1; index >= 0; --index) {\n                const child = provider.children[index];\n                if (child.subject.global === global) {\n                    provider.children.splice(index, 1);\n                }\n            }\n        }\n    }\n    if (global.destroy$) {\n        global.destroy$.next();\n    }\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n}\n","import { isTagComponent } from '../isInstance.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function getChildTagsToDestroy(childTags) {\n    for (const child of childTags) {\n        const lastArray = child.lastArray;\n        if (lastArray) {\n            getChildTagsToDestroy(lastArray.map(x => x.context));\n            continue;\n        }\n        const global = child.global;\n        if (!global) {\n            continue; // not a support contextItem\n        }\n        const support = global.newest;\n        const iSubs = global.subscriptions;\n        if (iSubs) {\n            iSubs.forEach(iSub => iSub.unsubscribe());\n        }\n        if (isTagComponent(support.templater)) {\n            runBeforeDestroy(support);\n        }\n        const subTags = global.context;\n        getChildTagsToDestroy(subTags);\n    }\n}\nexport function getChildTagsToSoftDestroy(childTags, tags = [], subs = []) {\n    for (const child of childTags) {\n        const global = child.global;\n        if (!global) {\n            continue;\n        }\n        const support = global.newest;\n        if (support) {\n            tags.push(support);\n            const iSubs = global.subscriptions;\n            if (iSubs) {\n                subs.push(...iSubs);\n            }\n        }\n        const subTags = global.context;\n        if (subTags) {\n            getChildTagsToSoftDestroy(subTags, tags, subs);\n        }\n    }\n    return { tags, subs };\n}\n","import { destroyArray } from './checkDestroyPrevious.function.js';\nimport { paint, painting, paintRemoves } from './paint.function.js';\n/** sets global.deleted on support and all children */\nexport function smartRemoveKids(support, allPromises) {\n    const subject = support.subject;\n    const global = subject.global;\n    const context = global.context;\n    // already set\n    // global.deleted = true\n    const destroys = global.destroys;\n    if (destroys) {\n        return processContextDestroys(destroys, allPromises, subject);\n    }\n    smartRemoveByContext(context, allPromises);\n    destroyClones(global);\n}\n// Elements that have a destroy or ondestroy attribute\nfunction processContextDestroys(destroys, allPromises, subject) {\n    const global = subject.global;\n    const promises = [];\n    destroys.forEach(destroy => {\n        const maybePromise = destroy();\n        const isPromise = maybePromise instanceof Promise;\n        if (isPromise) {\n            promises.push(maybePromise);\n        }\n    });\n    if (promises.length) {\n        const lastPromise = Promise.all(promises)\n            .then(() => {\n            ++painting.locks;\n            // continue to remove\n            smartRemoveByContext(global.context, allPromises);\n            destroyClones(global);\n            --painting.locks;\n            paint();\n        });\n        // run destroy animations\n        allPromises.push(lastPromise);\n        return;\n    }\n    ++painting.locks;\n    smartRemoveByContext(global.context, allPromises);\n    destroyClones(global);\n    --painting.locks;\n    paint();\n}\nfunction smartRemoveByContext(context, allPromises) {\n    for (const subject of context) {\n        if (subject.withinOwnerElement) {\n            continue; // i live within my owner variable. I will be deleted with owner\n        }\n        const lastArray = subject.lastArray;\n        if (lastArray) {\n            destroyArray(subject, lastArray);\n            continue;\n        }\n        // regular values, no placeholders\n        const elm = subject.simpleValueElm;\n        if (elm) {\n            delete subject.simpleValueElm;\n            paintRemoves.push(elm);\n            continue;\n        }\n        const subGlobal = subject.global;\n        if (subGlobal === undefined) {\n            continue; // subject\n        }\n        if (subGlobal.deleted === true) {\n            continue; // already deleted\n        }\n        subGlobal.deleted = true;\n        const oldest = subGlobal.oldest;\n        if (oldest) {\n            smartRemoveKids(oldest, allPromises);\n            continue;\n        }\n    }\n}\nfunction destroyClones(global) {\n    // const global = subject.global\n    const htmlDomMeta = global.htmlDomMeta;\n    // check subjects that may have clones attached to them\n    htmlDomMeta.forEach(clone => {\n        const marker = clone.marker;\n        if (marker) {\n            paintRemoves.push(marker);\n        }\n        const dom = clone.domElement;\n        if (!dom) {\n            return;\n        }\n        paintRemoves.push(dom);\n    });\n    // htmlDomMeta.length = 0\n}\n","import { getChildTagsToDestroy } from './getChildTagsToDestroy.function.js';\nimport { smartRemoveKids } from './smartRemoveKids.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function destroySupport(support) {\n    const global = support.subject.global;\n    global.deleted = true;\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n    const promises = [];\n    const context = global.context;\n    getChildTagsToDestroy(context);\n    if (global.destroy$) {\n        runBeforeDestroy(support);\n    }\n    smartRemoveKids(support, promises);\n    return promises;\n}\n","import { paintRemoves } from '../paint.function.js';\nimport { destroySupport } from '../destroySupport.function.js';\nexport function compareArrayItems(value, index, lastArray, removed, counts) {\n    const newLength = value.length - 1;\n    const at = index - removed;\n    const lessLength = at < 0 || newLength < at;\n    const prevContext = lastArray[index].context;\n    if (lessLength) {\n        destroyArrayItem(prevContext, counts);\n        return 1;\n    }\n    const oldKey = prevContext.value.arrayValue;\n    const newValueTag = value[index];\n    const result = runArrayItemDiff(oldKey, newValueTag, prevContext, counts, lastArray, index);\n    return result;\n}\nfunction runArrayItemDiff(oldKey, newValueTag, prevContext, counts, lastArray, index) {\n    const isDiff = newValueTag && oldKey !== newValueTag.arrayValue;\n    if (isDiff) {\n        // Intended to protect an array from adding and then immediately deleting\n        /*\n        // TODO: Does this code protect bad array keying?\n        if(prevContext.renderCount === 0) {\n          const newKey = newValueTag.arrayValue\n          console.warn('Possible array issue. Array is attempting to create/delete same items. Either html``.key is not unique or array changes with every render', {\n            oldKey,\n            newKey,\n            \n            prevValue: prevContext.value,\n            prevContext,\n          })\n    \n          paintAfters.push(() => {\n            destroyArrayItemByGlobal(prevContext.global, prevContext)\n            paintAfters.shift() // prevent endless recursion\n            paint()\n          })\n    \n          return 1\n        }\n        */\n        destroyArrayItem(prevContext, counts);\n        lastArray.splice(index, 1);\n        return 2;\n    }\n    return 0;\n}\nexport function destroyArrayItem(item, counts) {\n    const global = item.global;\n    destroyArrayItemByGlobal(global, item);\n    ++counts.removed;\n}\nfunction destroyArrayItemByGlobal(global, item) {\n    if (global) {\n        const support = global.oldest;\n        destroySupport(support);\n    }\n    else {\n        const element = item.simpleValueElm;\n        delete item.simpleValueElm;\n        paintRemoves.push(element);\n    }\n}\n","// Functions in here are attached as ContextItem.checkValueChange\nimport { processUpdateRegularValue } from './update/processRegularValue.function.js';\nimport { destroyArrayItem } from './update/compareArrayItems.function.js';\nimport { isArray } from '../isInstance.js';\nimport { paintRemoves } from './paint.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function checkArrayValueChange(newValue, subject) {\n    // no longer an array?\n    if (!isArray(newValue)) {\n        const lastArray = subject.lastArray;\n        destroyArray(subject, lastArray);\n        return 9; // 'array'\n    }\n    return false;\n}\nexport function destroyArray(subject, lastArray) {\n    const counts = { added: 0, removed: 0 };\n    for (let index = 0; index < lastArray.length; ++index) {\n        destroyArrayItem(lastArray[index], counts);\n    }\n    delete subject.lastArray;\n}\nexport function checkSimpleValueChange(newValue, subject) {\n    const isBadValue = newValue === null || newValue === undefined;\n    if (isBadValue || !(typeof (newValue) === BasicTypes.object)) {\n        // This will cause all other values to render\n        processUpdateRegularValue(newValue, subject);\n        return -1; // no need to destroy, just update display\n    }\n    const elm = subject.simpleValueElm;\n    delete subject.simpleValueElm;\n    paintRemoves.push(elm);\n    return 6; // 'changed-simple-value'\n}\n","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { setContent } from '../paint.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nexport function processUpdateRegularValue(value, contextItem) {\n    const castedValue = castTextValue(value);\n    const oldClone = contextItem.simpleValueElm; // placeholder\n    setContent.push([castedValue, oldClone]);\n}\n/** Used during updates that were another value/tag first but now simple string */\nexport function processNowRegularValue(value, subject) {\n    subject.checkValueChange = checkSimpleValueChange;\n    const before = subject.placeholder;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    subject.simpleValueElm = updateBeforeTemplate(castedValue, before);\n}\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nexport function isLikeTags(support0, // new\nsupport1) {\n    const templater0 = support0.templater;\n    const templater1 = support1.templater;\n    const tag0 = templater0?.tag || support0;\n    const tag1 = templater1.tag; // || (support1 as any)\n    if (templater0?.tagJsType === ValueTypes.stateRender) {\n        return templater0.dom === templater1.dom;\n    }\n    switch (tag0.tagJsType) {\n        case ValueTypes.dom: {\n            if (tag1?.tagJsType !== ValueTypes.dom) {\n                return false; // tag0 is not even same type\n            }\n            return isLikeDomTags(tag0, tag1);\n        }\n        case ValueTypes.tag: {\n            const like = isLikeStringTags(tag0, tag1, support0, support1);\n            return like;\n        }\n    }\n    throw new Error(`unknown tagJsType of ${tag0.tagJsType}`);\n}\n// used when compiler was used\nexport function isLikeDomTags(tag0, tag1) {\n    const domMeta0 = tag0.dom;\n    const domMeta1 = tag1.dom;\n    return domMeta0 === domMeta1;\n}\n// used for no compiling\nfunction isLikeStringTags(tag0, tag1, support0, // new\nsupport1) {\n    const strings0 = tag0.strings;\n    const strings1 = tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index].length === string.length // performance, just compare length of strings // TODO: Document this\n    // strings1[index] === string // slower\n    );\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = support0.templater.values || tag0.values;\n    const values1 = support1.templater.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = typeof (value) === BasicTypes.function && typeof (compareTo) === BasicTypes.function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n","import { paintContent } from \"../../tag/paint.function.js\";\n// Maybe more performant for updates but seemingly slower for first renders\nexport function howToSetInputValue(element, name, value) {\n    paintContent.push(() => {\n        howToSetFirstInputValue(element, name, value);\n    });\n}\nexport function howToSetFirstInputValue(element, name, value) {\n    if (value === undefined || value === false || value === null) {\n        element.removeAttribute(name);\n        return;\n    }\n    element.setAttribute(name, value);\n}\n","import { paintAfters, paintContent } from \"../../tag/paint.function.js\";\n/** handles init, destroy, autofocus, autoselect, style., class. */\nexport function specialAttribute(name, value, element, specialName, support, counts) {\n    switch (specialName) {\n        // case 'oninit' as any:\n        case 'init': {\n            const stagger = counts.added;\n            // run delayed after elements placed down\n            paintAfters.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                value(event); // call init/oninit\n            });\n            return;\n        }\n        case 'destroy': {\n            const stagger = ++counts.removed;\n            const global = support.subject.global;\n            global.destroys = global.destroys || [];\n            global.destroys.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                return value(event); // call destroy/ondestroy\n            });\n            return;\n        }\n        case 'autofocus':\n            paintAfters.push(() => element.focus());\n            return;\n        case 'autoselect':\n            paintAfters.push(() => element.select());\n            return;\n        case 'style': {\n            const names = name.split('.');\n            paintContent.push(() => element.style[names[1]] = value); // attribute changes should come first\n            return;\n        }\n        case 'class':\n            processSpecialClass(name, value, element);\n            return;\n    }\n    throw new Error(`Invalid special attribute of ${specialName}. ${name}`);\n}\nfunction processSpecialClass(name, value, element) {\n    const names = name.split('.');\n    names.shift(); // remove class\n    // truthy\n    if (value) {\n        for (const name of names) {\n            paintContent.push(() => element.classList.add(name));\n        }\n        return;\n    }\n    // falsy\n    for (const name of names) {\n        paintContent.push(() => element.classList.remove(name));\n    }\n}\n","export function handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    return tagsWithProvider;\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(support, provider, memory = []) {\n    const subject = support.subject;\n    memory.push({\n        support,\n        renderCount: subject.renderCount,\n        provider,\n    });\n    const childTags = provider.children;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const child = childTags[index];\n        const cSubject = child.subject;\n        memory.push({\n            support: child,\n            renderCount: cSubject.renderCount,\n            provider,\n        });\n    }\n    return memory;\n}\n","import { isTagComponent } from \"../../isInstance.js\";\nimport { providersChangeCheck } from \"../../state/providersChangeCheck.function.js\";\nimport { checkRenderUp, isInlineHtml } from \"../../tag/render/renderSupport.function.js\";\nimport { ValueTypes } from \"../../tag/ValueTypes.enum.js\";\nexport function getUpTags(support, supports = []) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        supports.push(support);\n        return supports;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return getUpTags(ownerSupport, supports);\n    }\n    const newSupport = support; // global.newest as AnySupport\n    const isComponent = isTagComponent(newSupport.templater);\n    const tagJsType = support.templater.tagJsType;\n    const canContinueUp = ownerSupport && tagJsType !== ValueTypes.stateRender;\n    const continueUp = canContinueUp && (!isComponent || checkRenderUp(ownerSupport, newSupport.templater, newSupport));\n    const proSupports = providersChangeCheck(newSupport);\n    supports.push(...proSupports);\n    if (continueUp) {\n        getUpTags(ownerSupport, supports);\n        if (isComponent) {\n            supports.push(newSupport);\n        }\n        return supports; // more to keep going up, do not push this child for review\n    }\n    supports.push(newSupport);\n    return supports;\n}\n","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingReadyTag } from './renderExistingTag.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { PropWatches } from '../index.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from '../hasSupportChanged.function.js';\nexport function isInlineHtml(templater) {\n    return ValueTypes.templater === templater.tagJsType;\n}\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderSupport(support) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        global.blocked.push(support);\n        return support;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        const result = renderInlineHtml(ownerSupport, support);\n        return result;\n    }\n    global.locked = true;\n    const subject = support.subject;\n    if (global.blocked.length) {\n        support = global.blocked.pop();\n        global.blocked = [];\n    }\n    const tag = renderExistingReadyTag(global.newest, support, ownerSupport, subject);\n    delete global.locked;\n    return tag;\n}\nexport function renderInlineHtml(ownerSupport, support) {\n    const ownGlobal = ownerSupport.subject.global;\n    if (!ownGlobal || ownGlobal.deleted === true) {\n        return support;\n    }\n    // ??? new change\n    const newest = ownGlobal.newest || ownerSupport;\n    const result = renderSupport(newest);\n    return result;\n}\nexport function checkRenderUp(ownerSupport, templater, support) {\n    const selfPropChange = hasPropsToOwnerChanged(templater, support);\n    // render owner up first and that will cause me to re-render\n    if (ownerSupport && selfPropChange) {\n        return true;\n    }\n    return false;\n}\nfunction hasPropsToOwnerChanged(templater, support) {\n    const nowProps = templater.props;\n    const propsConfig = support.propsConfig;\n    const latestProps = propsConfig.latest;\n    const compareLen = hasPropLengthsChanged(nowProps, latestProps);\n    if (compareLen) {\n        return true;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(nowProps, latestProps);\n        case PropWatches.SHALLOW:\n            return shallowPropMatch(nowProps, latestProps);\n    }\n    return !deepEqual(nowProps, latestProps, deepCompareDepth);\n}\nexport function hasPropLengthsChanged(nowProps, latestProps) {\n    const nowLen = nowProps.length;\n    const latestLen = latestProps.length;\n    /*\n    const noLength = nowProps && nowLen === 0 && latestLen === 0\n  \n    if(noLength) {\n      return false\n    }\n    */\n    return nowLen !== latestLen;\n}\n","import { handleProviderChanges } from './handleProviderChanges.function.js';\nexport function providersChangeCheck(support) {\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (!providers) {\n        return [];\n    }\n    const prosWithChanges = [];\n    // reset clones\n    for (const provider of providers) {\n        const owner = provider.owner;\n        const hasChange = handleProviderChanges(owner, provider);\n        prosWithChanges.push(...hasChange.map(x => x.support));\n    }\n    return prosWithChanges;\n}\n","import { paint, painting } from '../../tag/paint.function.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nexport function renderTagUpdateArray(supports) {\n    ++painting.locks;\n    supports.forEach(mapTagUpdate);\n    --painting.locks;\n    paint();\n}\nfunction mapTagUpdate(support) {\n    const global = support.subject.global;\n    if (!global) {\n        return; // while rendering a parent, a child may have been deleted (pinbowl)\n    }\n    renderSupport(global.newest);\n}\n","// taggedjs-no-compile\n/** File largely responsible for reacting to element events, such as onclick */\nimport { isPromise, isTagComponent } from '../../isInstance.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nimport { getUpTags } from './getUpTags.function.js';\nimport { renderTagUpdateArray } from './renderTagArray.function.js';\nconst noData = 'no-data-ever';\nconst promiseNoData = 'promise-no-data-ever';\nexport function bindSubjectCallback(value, support) {\n    const global = support.subject.global;\n    // MAIN EVENT CALLBACK PROCESSOR\n    const subjectFunction = function (element, args) {\n        if (global.deleted === true) {\n            return;\n        }\n        // const newest = global.newest as AnySupport // || subjectFunction.support\n        return runTagCallback(subjectFunction.tagFunction, subjectFunction.support, // newest\n        element, args);\n    };\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    subjectFunction.support = support;\n    return subjectFunction;\n}\nexport function runTagCallback(value, support, bindTo, args) {\n    // get actual component owner not just the html`` support\n    let component = support;\n    while (component.ownerSupport && !isTagComponent(component.templater)) {\n        component = component.ownerSupport;\n    }\n    const subject = component.subject;\n    const global = subject.global; // tag.subject.global as TagGlobal\n    global.locked = true; // prevent another render from re-rendering this tag\n    // ACTUAL CALLBACK TO ORIGINAL FUNCTION\n    const callbackResult = value.apply(bindTo, args);\n    delete global.locked;\n    const result = afterTagCallback(callbackResult, component);\n    return result;\n}\nexport function afterTagCallback(callbackResult, eventHandlerSupport) {\n    const global = eventHandlerSupport.subject.global; // tag.subject.global as SupportTagGlobal\n    return renderCallbackSupport(eventHandlerSupport, callbackResult, global);\n}\nfunction renderCallbackSupport(last, callbackResult, global) {\n    const tagsToUpdate = getUpTags(last);\n    renderTagUpdateArray(tagsToUpdate);\n    return checkAfterCallbackPromise(callbackResult, last, global);\n}\nexport function checkAfterCallbackPromise(callbackResult, last, global) {\n    if (isPromise(callbackResult)) {\n        const global0 = last.subject.global;\n        global0.locked = true;\n        return callbackResult.then(() => {\n            if (global.deleted === true) {\n                return promiseNoData; // tag was deleted during event processing\n            }\n            const global1 = last.subject.global;\n            delete global1.locked;\n            const tagsToUpdate = getUpTags(last);\n            renderTagUpdateArray(tagsToUpdate);\n            return promiseNoData;\n        });\n    }\n    return noData;\n}\nexport function runBlocked(tag) {\n    const global = tag.subject.global;\n    const blocked = global.blocked;\n    for (const block of blocked) {\n        const lastResult = renderSupport(block);\n        global.newest = lastResult;\n    }\n    global.blocked = [];\n    return global.newest;\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { processTagCallbackFun } from './processAttribute.function.js';\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nconst actions = ['init', 'destroy']; // oninit ondestroy\nexport function processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial) {\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    if (typeof (value) === BasicTypes.function) {\n        if (isSpecial && actions.includes(attrName)) {\n            specialAttribute(attrName, value, element, attrName, support, counts);\n            return;\n        }\n        return processTagCallbackFun(contextItem, value, support, attrName, element);\n    }\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    contextItem.isSpecial = isSpecial;\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial) {\n    if (isSpecial) {\n        return specialAttribute(attrName, value, element, isSpecial, support, counts);\n    }\n    howToSet(element, attrName, value);\n}\n","export function addSupportEventListener(support, eventName, element, callback) {\n    const elm = support.appElement;\n    // cast events that do not bubble up into ones that do\n    if (eventName === 'blur') {\n        eventName = 'focusout';\n    }\n    const replaceEventName = '_' + eventName;\n    // const replaceEventName = eventName\n    const global = support.subject.global;\n    const eventReg = global.events;\n    if (!eventReg[eventName]) {\n        const listener = function eventCallback(event) {\n            event.originalStopPropagation = event.stopPropagation;\n            bubbleEvent(event, replaceEventName, event.target);\n        };\n        eventReg[eventName] = listener;\n        elm.addEventListener(eventName, listener);\n    }\n    // attach to element but not as \"_click\" and \"_keyup\"\n    ;\n    element[replaceEventName] = callback;\n    element[eventName] = callback;\n}\nfunction bubbleEvent(event, replaceEventName, target) {\n    const callback = target[replaceEventName];\n    if (callback) {\n        let stopped = false;\n        event.stopPropagation = function () {\n            stopped = true;\n            event.originalStopPropagation.call(event);\n        };\n        callback(event);\n        if (event.defaultPrevented || stopped) {\n            return;\n        }\n    }\n    const parentNode = target.parentNode;\n    if (parentNode) {\n        bubbleEvent(event, replaceEventName, parentNode);\n    }\n}\n","import { addSupportEventListener } from './addSupportEventListener.function.js';\nexport function processAttributeFunction(element, newAttrValue, support, attrName) {\n    const fun = function (...args) {\n        return fun.tagFunction(element, args);\n    };\n    // access to original function\n    fun.tagFunction = newAttrValue;\n    fun.support = support;\n    addSupportEventListener(support.appSupport, attrName, element, // support.appSupport.appElement as Element,\n    fun);\n}\n","/** Looking for (class | style) followed by a period */\nexport function isSpecialAttr(attrName) {\n    if (attrName.startsWith('class.')) {\n        return 'class';\n    }\n    const specialAction = isSpecialAction(attrName);\n    if (specialAction !== false) {\n        return true;\n    }\n    if (attrName.startsWith('style.')) {\n        return 'style';\n    }\n    return false;\n}\nexport function isSpecialAction(attrName) {\n    switch (attrName) {\n        case 'autoselect':\n            return 'autoselect';\n        case 'autofocus':\n            return 'autofocus';\n        case 'oninit': // when read in compile process\n        case 'init': // when read in realtime\n            return 'oninit';\n        case 'ondestroy': // when read in compile process\n        case 'destroy': // when read in realtime\n            return 'destroy';\n    }\n    return false;\n}\n","import { processAttributeEmit } from '../interpolations/attributes/processAttribute.function.js';\nimport { updateNameOnlyAttrValue } from '../interpolations/attributes/updateAttribute.function.js';\nconst emptyCounts = { added: 0, removed: 0 };\nexport function processUpdateAttrContext(values, value, contextItem, ownerSupport) {\n    if (contextItem.isNameOnly) {\n        updateNameOnlyAttrValue(values, value, contextItem.value, contextItem.element, // global.element as Element,\n        ownerSupport, contextItem.howToSet, [], // Context, but we dont want to alter current\n        emptyCounts);\n        contextItem.value = value;\n        return;\n    }\n    const element = contextItem.element;\n    processAttributeEmit(value, contextItem.attrName, contextItem, element, ownerSupport, contextItem.howToSet, contextItem.isSpecial, emptyCounts);\n    contextItem.value = value;\n    return;\n}\n","// taggedjs-no-compile\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { isNoDisplayValue, processNameOnlyAttrValue } from './processAttribute.function.js';\nexport function updateNameOnlyAttrValue(values, attrValue, lastValue, element, ownerSupport, howToSet, context, counts) {\n    // check to remove previous attribute(s)\n    if (lastValue) {\n        if (isNoDisplayValue(attrValue)) {\n            element.removeAttribute(lastValue);\n            return;\n        }\n        if (typeof (lastValue) === BasicTypes.object) {\n            const isObStill = typeof (attrValue) === BasicTypes.object;\n            if (isObStill) {\n                for (const name in lastValue) {\n                    // if((attrValue as any)[name]) {\n                    if (name in attrValue) {\n                        continue;\n                    }\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n            else {\n                for (const name in lastValue) {\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n        }\n    }\n    processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts);\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { isFunction, isObject, isSubjectInstance } from '../../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nimport { BasicTypes, ValueTypes, empty } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { processDynamicNameValueAttribute, processNonDynamicAttr } from './processNameValueAttribute.function.js';\nimport { addOneContext, checkSimpleValueChange } from '../../tag/index.js';\nimport { processAttributeFunction } from './processAttributeCallback.function.js';\nimport { isSpecialAttr } from './isSpecialAttribute.function.js';\nimport { processUpdateAttrContext } from '../../tag/processUpdateAttrContext.function.js';\nimport { blankHandler } from '../optimizers/attachDomElements.function.js';\n/** MAIN FUNCTION. Sets attribute value, subscribes to value updates  */\nexport function processAttribute(values, attrName, element, support, howToSet, //  = howToSetInputValue\ncontext, isSpecial, counts, value) {\n    const nameVar = getTagJsVar(attrName);\n    const isNameVar = nameVar >= 0;\n    if (isNameVar) {\n        const value = values[nameVar];\n        const contextItem = addOneContext(value, context, true);\n        contextItem.isAttr = true;\n        contextItem.element = element;\n        contextItem.howToSet = howToSet;\n        contextItem.isNameOnly = true;\n        // how to process value updates\n        contextItem.handler = (newValue, newValues) => processUpdateAttrContext(newValues, newValue, contextItem, support);\n        processNameOnlyAttrValue(values, value, element, support, howToSet, context, counts);\n        return;\n    }\n    const valueVar = getTagJsVar(value);\n    if (valueVar >= 0) {\n        const value = values[valueVar];\n        const contextItem = {\n            isAttr: true,\n            element,\n            attrName: attrName,\n            checkValueChange: checkSimpleValueChange,\n            withinOwnerElement: true,\n        };\n        context.push(contextItem);\n        const isSubject = isSubjectInstance(contextItem.value);\n        if (isSubject) {\n            return processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        }\n        contextItem.handler = (newValue, newValues) => processUpdateAttrContext(newValues, newValue, contextItem, support);\n        /*\n        processNameOnlyAttrValue(\n          values,\n          newValue as any,\n          element as Element,\n          support,\n          howToSet as HowToSet,\n          context,\n          counts,\n        )\n        */\n        processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial);\n        contextItem.value = value;\n        return;\n    }\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts) {\n    if (isNoDisplayValue(attrValue)) {\n        return;\n    }\n    // process an object of attributes ${{class:'something, checked:true}}\n    if (typeof attrValue === BasicTypes.object) {\n        for (const name in attrValue) {\n            const value = attrValue[name];\n            processAttribute(values, name, element, ownerSupport, howToSet, context, isSpecialAttr(name), // only object variables are evaluated for is special attr\n            counts, value);\n        }\n        return;\n    }\n    // regular attributes\n    if (attrValue.length === 0) {\n        return; // ignore, do not set at this time\n    }\n    howToSet(element, attrValue, empty);\n}\n/** Processor for flat attributes and object attributes */\nfunction processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts) {\n    if (isSpecial) {\n        paintContent.push(function paintContent() {\n            element.removeAttribute(attrName);\n        });\n    }\n    const contextValueSubject = contextItem.value;\n    if (isSubjectInstance(contextValueSubject)) {\n        contextItem.handler = blankHandler;\n        const callback = function processAttrCallback(newAttrValue) {\n            processAttributeEmit(newAttrValue, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        const global = contextItem.global;\n        const subs = global.subscriptions = global.subscriptions || [];\n        subs.push(sub);\n    }\n    processAttributeEmit(contextItem.value, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n    return;\n}\nexport function processAttributeEmit(newAttrValue, attrName, subject, element, support, howToSet, isSpecial, counts) {\n    // should the function be wrapped so every time its called we re-render?\n    if (isFunction(newAttrValue)) {\n        return callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processAttributeSubjectValue(newAttrValue, element, attrName, special, howToSet, support, counts) {\n    // process adding/removing style. class. (false means remove)\n    if (special !== false) {\n        specialAttribute(attrName, newAttrValue, element, special, // string name of special\n        support, counts);\n        return;\n    }\n    switch (newAttrValue) {\n        case undefined:\n        case false:\n        case null:\n            paintContent.push(function paintContentPush() {\n                element.removeAttribute(attrName);\n            });\n            return;\n    }\n    if (isFunction(newAttrValue)) {\n        return processAttributeFunction(element, newAttrValue, support, attrName);\n    }\n    // value is 0\n    howToSet(element, attrName, newAttrValue);\n}\nfunction callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts) {\n    const wrapper = support.templater.wrapper;\n    const tagJsType = wrapper?.tagJsType || wrapper?.original?.tagJsType;\n    const oneRender = tagJsType === ValueTypes.renderOnce;\n    if (!oneRender) {\n        return processTagCallbackFun(subject, newAttrValue, support, attrName, element);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processTagCallbackFun(subject, newAttrValue, support, attrName, element) {\n    const prevFun = subject.value;\n    if (prevFun && prevFun.tagFunction && prevFun.support) {\n        prevFun.tagFunction = newAttrValue;\n        prevFun.support = support;\n        return prevFun;\n    }\n    // tag has state and will need all functions wrapped to cause re-renders\n    newAttrValue = bindSubjectCallback(newAttrValue, support);\n    return processAttributeFunction(element, newAttrValue, support, attrName);\n}\nfunction getTagJsVar(attrPart) {\n    if (isObject(attrPart) && 'tagJsVar' in attrPart)\n        return attrPart.tagJsVar;\n    return -1;\n    // return (attrPart as TagVarIdNum)?.tagJsVar || -1\n}\nexport function isNoDisplayValue(attrValue) {\n    return undefined === attrValue || null === attrValue || false === attrValue;\n}\n","// taggedjs-no-compile\nimport { processFirstSubjectValue } from \"../../tag/update/processFirstSubjectValue.function.js\";\nimport { howToSetFirstInputValue } from \"../attributes/howToSetInputValue.function.js\";\nimport { paintAppends, paintInsertBefores } from \"../../tag/paint.function.js\";\nimport { processAttribute } from \"../attributes/processAttribute.function.js\";\nimport { addOneContext } from \"../../tag/index.js\";\nimport { isSubjectInstance } from \"../../isInstance.js\";\nimport { empty } from \"../../tag/ValueTypes.enum.js\";\nimport { updateExistingValue } from \"../../tag/update/updateExistingValue.function.js\";\nexport const blankHandler = () => undefined;\nconst someDiv = (typeof document === 'object' && document.createElement('div')); // used for content cleaning\nexport function attachDomElements(nodes, values, support, counts, // used for animation stagger computing\ncontext, depth, // used to know if dynamic variables live within parent owner tag/support\nappendTo, insertBefore, subs = []) {\n    const dom = [];\n    if (appendTo && insertBefore === undefined) {\n        insertBefore = document.createTextNode(empty);\n        paintAppends.push({\n            element: insertBefore,\n            relative: appendTo,\n        });\n        appendTo = undefined;\n    }\n    for (let index = 0; index < nodes.length; ++index) {\n        const node = nodes[index];\n        const value = node.v;\n        const isNum = !isNaN(value);\n        if (isNum) {\n            const index = context.length;\n            const value = values[index];\n            attachDynamicDom(value, index, context, support, subs, counts, depth, appendTo, insertBefore);\n            continue;\n        }\n        const newNode = {}; // DomObjectText\n        dom.push(newNode);\n        if (node.nn === 'text') {\n            attachDomText(newNode, node, appendTo, insertBefore);\n            continue;\n        }\n        // one single html element\n        const domElement = attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore);\n        if (node.ch) {\n            newNode.ch = attachDomElements(node.ch, values, support, counts, context, depth + 1, domElement, insertBefore, subs).dom;\n        }\n    }\n    return { subs, dom, context };\n}\nfunction attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore) {\n    const domElement = newNode.domElement = document.createElement(node.nn);\n    // attributes that may effect style, come first for performance\n    if (node.at) {\n        node.at.forEach(attr => {\n            const name = attr[0];\n            const value = attr[1];\n            const isSpecial = attr[2] || false;\n            processAttribute(values, name, domElement, support, \n            // howToSetInputValue, // maybe more performant for updates but not first renders\n            howToSetFirstInputValue, context, isSpecial, counts, value);\n        });\n    }\n    if (appendTo) {\n        paintAppends.push({\n            element: domElement,\n            relative: appendTo,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: domElement,\n            relative: insertBefore,\n        });\n    }\n    return domElement;\n}\nfunction attachDomText(newNode, node, owner, insertBefore) {\n    const textNode = newNode;\n    const string = textNode.tc = node.tc;\n    someDiv.innerHTML = string;\n    const domElement = textNode.domElement = document.createTextNode(someDiv.innerText);\n    if (owner) {\n        paintAppends.push({\n            element: domElement,\n            relative: owner,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: domElement,\n            relative: insertBefore,\n        });\n    }\n}\nfunction attachDynamicDom(value, index, context, support, subs, counts, // used for animation stagger computing\ndepth, // used to indicate if variable lives within an owner's element\nappendTo, insertBefore) {\n    const marker = document.createTextNode(empty);\n    const isWithinOwnerElement = depth > 0;\n    const contextItem = addOneContext(value, context, isWithinOwnerElement);\n    contextItem.placeholder = marker;\n    if (appendTo) {\n        paintAppends.push({\n            relative: appendTo,\n            element: marker,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            relative: insertBefore,\n            element: marker,\n        });\n    }\n    if (isSubjectInstance(value)) {\n        subs.push({\n            insertBefore: marker,\n            appendTo,\n            subject: value,\n            support, // ownerSupport,\n            counts,\n            contextItem,\n        });\n        contextItem.handler = blankHandler;\n        return;\n    }\n    // how to handle value updates\n    contextItem.handler = (newValue, _newValues, newSupport, newContextItem) => updateExistingValue(newContextItem, newValue, newSupport);\n    const global = support.subject.global;\n    global.locked = true;\n    processFirstSubjectValue(value, contextItem, support, counts, appendTo, insertBefore);\n    const global2 = support.subject.global;\n    delete global2.locked;\n    contextItem.value = value;\n    return;\n}\n","import { attachDomElements } from '../interpolations/optimizers/attachDomElements.function.js';\nimport { checkSimpleValueChange } from './index.js';\nimport { getDomMeta } from './domMetaCollector.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { painting } from './paint.function.js';\n/** Function that kicks off actually putting tags down as HTML elements */\nexport function buildBeforeElement(support, counts, appendTo, insertBefore) {\n    const subject = support.subject;\n    const global = subject.global;\n    global.oldest = support;\n    global.newest = support;\n    ++painting.locks;\n    const result = attachHtmlDomMeta(support, counts, appendTo, insertBefore);\n    global.htmlDomMeta = result.dom;\n    --painting.locks;\n    // ++global.renderCount\n    // return fragment\n    return result;\n}\nfunction attachHtmlDomMeta(support, counts, appendTo, insertBefore) {\n    const domMeta = loadDomMeta(support);\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    const context = [];\n    const global = support.subject.global;\n    global.context = context;\n    const result = attachDomElements(domMeta, values, support, counts, context, 0, appendTo, insertBefore);\n    return result;\n}\nfunction loadDomMeta(support) {\n    const templater = support.templater;\n    const thisTag = templater.tag; // || templater\n    if (thisTag.tagJsType === ValueTypes.dom) {\n        return thisTag.dom;\n    }\n    const strings = thisTag.strings;\n    return getDomMeta(strings, thisTag.values);\n}\nexport function addOneContext(value, context, withinOwnerElement) {\n    const contextItem = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement,\n    };\n    context.push(contextItem);\n    return contextItem;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { getHtmlSupport } from '../getSupport.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** When first time render, adds to owner childTags\n * Used for BOTH inserts & updates to values that were something else\n * Intended use only for updates\n*/\nexport function processTag(ownerSupport, // owner\nsubject, // could be tag via result.tag\ncounts) {\n    const global = subject.global;\n    const support = global.newest;\n    support.ownerSupport = ownerSupport;\n    subject.checkValueChange = checkTagValueChange;\n    const ph = subject.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, ph);\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        tagJsType: ValueTypes.templater,\n    };\n    return fake;\n}\n/** Create support for a tag component */\nexport function newSupportByTemplater(templater, ownerSupport, subject) {\n    const support = getHtmlSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const global = subject.global;\n    global.context = [];\n    return support;\n}\n","export function processUpdateContext(support, context) {\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    let index = 0;\n    const len = values.length;\n    while (index < len) {\n        processUpdateOneContext(values, index, context, support);\n        ++index;\n    }\n    return context;\n}\n/** returns boolean of did render */\nexport function processUpdateOneContext(values, // the interpolated values\nindex, context, ownerSupport) {\n    const value = values[index];\n    // is something already there?\n    const contextItem = context[index];\n    // Do not continue if the value is just the same\n    if (value === contextItem.value) {\n        return;\n    }\n    const handler = contextItem.handler;\n    handler(value, values, ownerSupport, contextItem);\n    contextItem.value = value;\n}\n","import { paint, painting } from './paint.function.js';\nimport { processUpdateContext } from './processUpdateContext.function.js';\nexport function updateSupportBy(olderSupport, newerSupport) {\n    const global = olderSupport.subject.global;\n    const context = global.context;\n    updateSupportValuesBy(olderSupport, newerSupport);\n    ++painting.locks;\n    processUpdateContext(olderSupport, context);\n    --painting.locks;\n    paint();\n}\nexport function updateSupportValuesBy(olderSupport, newerSupport) {\n    const tempTag = (newerSupport.templater.tag || newerSupport.templater);\n    const values = newerSupport.templater.values || tempTag.values;\n    const tag = olderSupport.templater.tag;\n    tag.values = values;\n}\n","import { getTemplaterResult } from '../getTemplaterResult.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { PropWatches } from '../tag.function.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processNewArrayValue(value, ownerSupport, contextItem) {\n    const tagJsType = value.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater: {\n                const templater = value;\n                const tag = templater.tag;\n                processNewTag(tag, ownerSupport, contextItem);\n                break;\n            }\n            case ValueTypes.tag:\n            case ValueTypes.dom:\n                processNewTag(value, ownerSupport, contextItem);\n                break;\n        }\n    }\n    return contextItem;\n}\nfunction processNewTag(value, ownerSupport, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const tag = value;\n    let templater = tag.templater;\n    // TODO: Can this ever happen?\n    if (!templater) {\n        templater = getTemplaterResult(PropWatches.DEEP);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const global = contextItem.global = getNewGlobal(contextItem); // contextItem.global as SupportTagGlobal\n    const newest = global.newest = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    global.oldest = newest;\n    return contextItem;\n}\n","// taggedjs-no-compile\nimport { paintAppends, paintInsertBefores } from '../paint.function.js';\nimport { processFirstSubjectValue } from './processFirstSubjectValue.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { updateExistingValue } from './updateExistingValue.function.js';\nimport { processNewArrayValue } from './processNewValue.function.js';\nimport { compareArrayItems } from './compareArrayItems.function.js';\nexport function processTagArray(subject, value, // arry of Tag classes\nownerSupport, counts, appendTo) {\n    const noLast = subject.lastArray === undefined;\n    if (noLast) {\n        subject.lastArray = [];\n    }\n    const lastArray = subject.lastArray;\n    let runtimeInsertBefore = subject.placeholder;\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    const filteredLast = [];\n    // if not first time, then check for deletes\n    if (!noLast) {\n        // on each loop check the new length\n        for (let index = 0; index < lastArray.length; ++index) {\n            const item = lastArray[index];\n            // 👁️ COMPARE & REMOVE\n            const newRemoved = compareArrayItems(value, index, lastArray, removed, counts);\n            if (newRemoved === 0) {\n                filteredLast.push(item);\n                continue;\n            }\n            // do the same number again because it was a mid delete\n            if (newRemoved === 2) {\n                index = index - 1;\n                continue;\n            }\n            removed = removed + newRemoved;\n        }\n        subject.lastArray = filteredLast;\n    }\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const newSubject = reviewArrayItem(value, index, subject.lastArray, ownerSupport, runtimeInsertBefore, counts, appendTo);\n        runtimeInsertBefore = newSubject.placeholder;\n    }\n}\nfunction reviewArrayItem(array, index, lastArray, ownerSupport, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const item = array[index];\n    const previous = lastArray[index];\n    if (previous) {\n        return reviewPreviousArrayItem(item, previous.context, lastArray, ownerSupport, index, runtimeInsertBefore, counts, appendTo);\n    }\n    return processAddTagArrayItem(item, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n}\nfunction reviewPreviousArrayItem(value, itemSubject, lastArray, ownerSupport, index, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const couldBeSame = lastArray.length > index;\n    if (couldBeSame) {\n        updateExistingValue(itemSubject, value, ownerSupport);\n        return itemSubject;\n    }\n    const result = processAddTagArrayItem(value, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n    return result;\n}\nfunction processAddTagArrayItem(value, before, // used during updates\nownerSupport, counts, lastArray, appendTo) {\n    const itemSubject = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement: false, // TODO: we need to pass down depth so we can answer this truthfully\n    };\n    counts.added = counts.added + 1; // index\n    const subPlaceholder = document.createTextNode('');\n    itemSubject.placeholder = subPlaceholder;\n    if (!appendTo) {\n        paintInsertBefores.push({\n            element: subPlaceholder,\n            relative: before,\n        });\n    }\n    processNewArrayValue(value, ownerSupport, itemSubject);\n    processFirstSubjectValue(value, itemSubject, ownerSupport, counts, appendTo);\n    // after processing\n    itemSubject.value = value;\n    // Added to previous array\n    lastArray.push({\n        context: itemSubject,\n        global: itemSubject.global,\n    });\n    if (appendTo) {\n        paintAppends.push({\n            element: subPlaceholder,\n            relative: appendTo,\n        });\n    }\n    return itemSubject;\n}\n","import { getFakeTemplater, newSupportByTemplater, processTag } from './processTag.function.js';\nimport { processNowRegularValue } from './processRegularValue.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nimport { isArray, isTagComponent } from '../../isInstance.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { getSupport } from '../getSupport.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n/** Used for all tag value updates. Determines if value changed since last render */\nexport function updateExistingValue(contextItem, newValue, // newValue\nownerSupport) {\n    // Do not continue if the value is just the same\n    if (newValue === contextItem.value) {\n        return;\n    }\n    // Have the context check itself (avoid having to detect old value)\n    const ignoreOrDestroyed = contextItem.checkValueChange(newValue, contextItem);\n    // ignore\n    if (ignoreOrDestroyed === -1) {\n        return; // do nothing\n    }\n    // is new value a tag?\n    const tagJsType = newValue && newValue.tagJsType;\n    if (tagJsType) {\n        if (tagJsType === ValueTypes.renderOnce) {\n            return;\n        }\n        tryUpdateToTag(contextItem, newValue, ownerSupport);\n        return;\n    }\n    if (isArray(newValue)) {\n        processTagArray(contextItem, newValue, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    if (typeof (newValue) === BasicTypes.function) {\n        contextItem.value = newValue; // do not render functions that are not explicity defined as tag html processing\n        return;\n    }\n    if (ignoreOrDestroyed) {\n        processNowRegularValue(newValue, contextItem);\n    }\n}\nfunction updateToTag(value, contextItem, ownerSupport) {\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = getFakeTemplater();\n        tag.templater = templater;\n        templater.tag = tag;\n    }\n    const nowGlobal = (contextItem.global ? contextItem.global : getNewGlobal(contextItem));\n    nowGlobal.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n    processTag(ownerSupport, contextItem, fooCounts);\n}\nfunction handleStillTag(lastSupport, subject, value, ownerSupport) {\n    const templater = value.templater || value;\n    const valueSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const lastSubject = lastSupport.subject;\n    const newGlobal = lastSubject.global;\n    const oldest = newGlobal.oldest;\n    updateSupportBy(oldest, valueSupport);\n}\nexport function prepareUpdateToComponent(templater, contextItem, ownerSupport) {\n    const global = contextItem.global;\n    // When last value was not a component\n    if (!global.newest) {\n        processReplacementComponent(templater, contextItem, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    const support = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    updateExistingTagComponent(ownerSupport, support, // latest value\n    contextItem);\n}\nexport function updateContextItemBySupport(support, contextItem, value, ownerSupport) {\n    if (typeof (value) === BasicTypes.function) {\n        return;\n    }\n    handleStillTag(support, contextItem, value, ownerSupport);\n    return;\n}\n/** result is an indication to ignore further processing but that does not seem in use anymore */\nexport function tryUpdateToTag(contextItem, newValue, // newValue\nownerSupport) {\n    const tagJsType = newValue.tagJsType;\n    const isComp = isTagComponent(newValue);\n    if (isComp) {\n        if (contextItem.global === undefined) {\n            getNewGlobal(contextItem);\n        }\n        prepareUpdateToComponent(newValue, contextItem, ownerSupport);\n        return true;\n    }\n    // detect if previous value was a tag\n    const global = contextItem.global;\n    if (global) {\n        // its html/dom based tag\n        const support = global.newest;\n        if (support) {\n            updateContextItemBySupport(support, contextItem, newValue, ownerSupport);\n            return true;\n        }\n    }\n    switch (tagJsType) {\n        case ValueTypes.templater:\n            processTag(ownerSupport, contextItem, fooCounts);\n            return true;\n        // when value was not a Tag before\n        case ValueTypes.tag:\n        case ValueTypes.dom: {\n            updateToTag(newValue, contextItem, ownerSupport);\n            return true;\n        }\n    }\n    return false;\n}\n","import { deepCompareDepth, hasSupportChanged, shallowCompareDepth } from '../hasSupportChanged.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { castProps } from '../../alterProp.function.js';\nimport { renderSupport } from '../render/renderSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { destroySupport } from '../destroySupport.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { PropWatches } from '../tag.function.js';\nimport { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingTagComponent(ownerSupport, support, // lastest\nsubject) {\n    const global = subject.global;\n    const lastSupport = global.newest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = support.templater.wrapper;\n    let isSameTag = false;\n    const tagJsType = support.templater.tagJsType;\n    const skipComparing = ValueTypes.stateRender === tagJsType || ValueTypes.renderOnce === tagJsType;\n    if (skipComparing) {\n        isSameTag = support.templater.tagJsType === ValueTypes.renderOnce || isLikeTags(lastSupport, support);\n    }\n    else if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.original;\n        const newFunction = newWrapper.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = support.templater;\n    if (!isSameTag) {\n        swapTags(subject, templater, ownerSupport);\n        return;\n    }\n    const hasChanged = skipComparing || hasSupportChanged(lastSupport, templater);\n    // everyhing has matched, no display needs updating.\n    if (!hasChanged) {\n        const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n        syncSupports(templater, support, lastSupport, ownerSupport, maxDepth);\n        return;\n    }\n    if (global.locked) {\n        global.blocked.push(support);\n        return;\n    }\n    renderSupport(support);\n    ++subject.renderCount;\n    return;\n}\nexport function syncFunctionProps(newSupport, lastSupport, ownerSupport, newPropsArray, // templater.props\nmaxDepth, depth = -1) {\n    const global = lastSupport.subject.global;\n    const newest = global.newest;\n    if (!newest) {\n        const castedProps = castProps(newPropsArray, newSupport, depth);\n        newPropsArray.push(...castedProps);\n        const propsConfig = newSupport.propsConfig;\n        propsConfig.castProps = castedProps;\n        return newPropsArray;\n    }\n    lastSupport = newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.castProps;\n    const newArray = [];\n    for (let index = 0; index < newPropsArray.length; ++index) {\n        const prop = newPropsArray[index];\n        const priorProp = priorPropsArray[index];\n        const newValue = syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, depth + 1, maxDepth);\n        newArray.push(newValue);\n    }\n    const newPropsConfig = newSupport.propsConfig;\n    newPropsConfig.castProps = newArray;\n    return newArray;\n}\nexport function moveProviders(lastSupport, newSupport) {\n    const global = lastSupport.subject.global;\n    let pIndex = -1;\n    const providers = global.providers = global.providers || [];\n    const pLen = providers.length - 1;\n    while (pIndex++ < pLen) {\n        const provider = providers[pIndex];\n        let index = -1;\n        const pcLen = provider.children.length - 1;\n        while (index++ < pcLen) {\n            const child = provider.children[index];\n            const wasSameGlobals = global === child.subject.global;\n            if (wasSameGlobals) {\n                provider.children.splice(index, 1);\n                provider.children.push(newSupport);\n                return;\n            }\n        }\n    }\n}\nfunction syncSupports(templater, support, lastSupport, ownerSupport, maxDepth) {\n    // update function refs to use latest references\n    const newProps = templater.props;\n    const castedProps = syncFunctionProps(support, lastSupport, ownerSupport, newProps, maxDepth);\n    const propsConfig = support.propsConfig;\n    // When new support actually makes call to real function, use these pre casted props\n    propsConfig.castProps = castedProps;\n    const lastPropsConfig = lastSupport.propsConfig;\n    // update support to think it has different cloned props\n    lastPropsConfig.latest = propsConfig.latest;\n    return lastSupport; // its the same tag component  \n}\n/** Was tag, will be tag */\nfunction swapTags(subject, templater, // new tag\nownerSupport) {\n    const global = subject.global;\n    const oldestSupport = global.oldest;\n    destroySupport(oldestSupport);\n    getNewGlobal(subject);\n    const newSupport = processReplacementComponent(templater, subject, ownerSupport, { added: 0, removed: 0 });\n    return newSupport;\n}\n","import { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { tryUpdateToTag } from './update/updateExistingValue.function.js';\nexport function checkTagValueChange(newValue, contextItem) {\n    const global = contextItem.global;\n    const lastSupport = global?.newest;\n    const isValueTag = isStaticTag(newValue);\n    const newTag = newValue;\n    if (isValueTag) {\n        // its a different tag now\n        const likeTags = isLikeTags(newTag, lastSupport);\n        if (!likeTags) {\n            destroySupport(lastSupport);\n            getNewGlobal(contextItem);\n            return 7; // 'tag-swap'\n        }\n        return false;\n    }\n    const isTag = newValue?.tagJsType;\n    if (isTag) {\n        const support = global.newest;\n        const ownerSupport = support.ownerSupport;\n        const result = tryUpdateToTag(contextItem, newValue, ownerSupport);\n        return result === true ? -1 : false;\n    }\n    // destroy old component, value is not a component\n    destroySupport(lastSupport);\n    delete contextItem.global;\n    contextItem.renderCount = 0;\n    return 8; // 'no-longer-tag'\n}\n","import { getTemplaterResult } from '../getTemplaterResult.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nimport { PropWatches } from '../tag.function.js';\nexport function oneRenderToSupport(wrapper, subject, ownerSupport) {\n    const templater = getTemplaterResult(PropWatches.DEEP);\n    templater.tagJsType = wrapper.tagJsType;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    function wrap() {\n        templater.tag = tag || wrapper();\n        return support;\n    }\n    templater.wrapper = wrap;\n    wrap.tagJsType = wrapper.tagJsType;\n    wrap.original = wrapper.original || wrapper;\n    return support;\n}\n","import { StateMismatchError } from '../errors.js';\nexport function checkStateMismatch(config, support) {\n    const rearray = config.rearray;\n    if (rearray.length && rearray.length !== config.stateArray.length) {\n        throwStateMismatch(rearray, support, config);\n    }\n}\nconst hint = 'State tracking requires same number of state calls on every render. This error typically occurs when a state call is only reachable behind a condition. Also, wrapping tags that have state, with tag(), often helps when tag is only reachable by a condition.';\nfunction throwStateMismatch(rearray, support, config) {\n    const message = `Saved states between renders are inconsistent. Expected ${rearray.length} states got ${config.stateArray.length}.`;\n    const wrapper = support.templater?.wrapper;\n    let tagFunction = wrapper;\n    if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    else if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    const details = {\n        oldStates: config.stateArray,\n        newStates: config.rearray,\n        tagFunction,\n        templater: support.templater,\n    };\n    const error = new StateMismatchError(message, details);\n    console.error(hint, details);\n    throw error;\n}\n","import { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkStateMismatch } from './checkStateMismatch.function.js';\n/** Compares states of previous renders\n * @property support - The workflow that supports a single tag\n * @property ownerSupport - undefined when \"support\" is the app element\n */\nexport function runAfterRender(support, ownerSupport) {\n    const subject = support.subject;\n    ++subject.renderCount;\n    // ++subject.global.renderCount\n    const config = setUseMemory.stateConfig;\n    delete config.support;\n    support.state = config.stateArray;\n    // support.states = config.states\n    setUseMemory.tagClosed$.next(ownerSupport);\n    checkStateMismatch(config, support);\n    subject.global.newest = support;\n}\n","import { executeWrap } from '../executeWrap.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { runAfterRender } from '../afterRender.function.js';\nimport { initState, reState } from '../../state/state.utils.js';\nimport { setUseMemory } from '../../state/setUseMemory.object.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function renderTagOnly(newSupport, prevSupport, // causes restate\nsubject, ownerSupport) {\n    const global = subject.global;\n    const oldRenderCount = subject.renderCount;\n    const prevState = prevSupport?.state;\n    const config = setUseMemory.stateConfig;\n    if (prevState) {\n        const prevStates = prevSupport.states;\n        config.prevSupport = prevSupport;\n        reState(newSupport, setUseMemory.stateConfig, prevState, prevStates);\n    }\n    else {\n        initState(newSupport, config);\n    }\n    const templater = newSupport.templater;\n    let reSupport;\n    // NEW TAG CREATED HERE\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = templater; // .wrapper as any// || {original: templater} as any\n        // TODO: Not sure if useSupport could be replaced by just using \"newSupport\"\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject);\n        reSupport = executeWrap(templater, result, useSupport);\n        reSupport.states = newSupport.states;\n    }\n    else {\n        // functions wrapped in tag()\n        const wrapper = templater.wrapper;\n        // calls the function returned from getTagWrap()\n        reSupport = wrapper(newSupport, subject, prevSupport);\n        reSupport.states = newSupport.states;\n    }\n    runAfterRender(reSupport, ownerSupport);\n    // When we rendered, only 1 render should have taken place OTHERWISE rendering caused another render and that is the latest instead\n    // TODO: below most likely not needed\n    if (subject.renderCount > oldRenderCount + 1) {\n        return global.newest;\n    }\n    return reSupport;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends, paintInsertBefores } from '../paint.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nexport function processNewSubjectTag(templater, ownerSupport, // owner\nsubject, // could be tag via result.tag\ncounts, appendTo, insertBefore) {\n    subject.checkValueChange = checkTagValueChange;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    support.ownerSupport = ownerSupport;\n    const result = buildBeforeElement(support, counts, appendTo, appendTo ? undefined : insertBefore);\n    for (const dom of result.dom) {\n        if (dom.marker) {\n            if (appendTo) {\n                paintAppends.push({\n                    element: dom.marker,\n                    relative: appendTo, // ph.parentNode as Element,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: dom.marker,\n                    relative: insertBefore, // ph.parentNode as Element,\n                });\n            }\n        }\n        if (dom.domElement) {\n            /*\n            paintAppends.push({\n              element: dom.domElement,\n              relative: appendTo as Element, // ph.parentNode as Element,\n            })\n            */\n            if (appendTo) {\n                paintAppends.push({\n                    element: dom.domElement,\n                    relative: appendTo, // ph.parentNode as Element,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: dom.domElement,\n                    relative: insertBefore, // ph.parentNode as Element,\n                });\n            }\n        }\n    }\n    let index = -1;\n    const length = result.subs.length - 1;\n    //++painting.locks\n    while (index++ < length) {\n        const sub = result.subs[index];\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","import { checkArrayValueChange, checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { processFirstSubjectComponent, processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { newSupportByTemplater, processTag, tagFakeTemplater } from './processTag.function.js';\nimport { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { oneRenderToSupport } from './oneRenderToSupport.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { isArray, isSubjectInstance } from '../../isInstance.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processFirstSubjectValue(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        return processFirstTagValue(tagJsType, contextItem, value, ownerSupport, counts, appendTo, insertBefore);\n    }\n    if (isArray(value)) {\n        processTagArray(contextItem, value, ownerSupport, counts, appendTo);\n        contextItem.checkValueChange = checkArrayValueChange;\n        return;\n    }\n    if (isSubjectInstance(value)) {\n        return; // will be subscribed to for value\n    }\n    processFirstRegularValue(value, contextItem, contextItem.placeholder);\n}\nfunction processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    const castedValue = castTextValue(value);\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    subject.simpleValueElm = clone;\n    subject.checkValueChange = checkSimpleValueChange;\n}\nfunction processFirstTagValue(tagJsType, contextItem, value, ownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    ++contextItem.renderCount;\n    switch (tagJsType) {\n        // TODO: Do we ever get in here? because dom, tag, and component are covered below\n        case ValueTypes.templater:\n            contextItem.checkValueChange = checkTagValueChange;\n            if (appendTo) {\n                return processNewSubjectTag(value, ownerSupport, contextItem, counts, appendTo, insertBefore);\n            }\n            return processTag(ownerSupport, contextItem, counts);\n        case ValueTypes.dom:\n        case ValueTypes.tag: {\n            contextItem.checkValueChange = checkTagValueChange;\n            const tag = value;\n            let templater = tag.templater;\n            if (!templater) {\n                templater = tagFakeTemplater(tag); // TODO: most likely a not needed performance hit\n            }\n            const global = getNewGlobal(contextItem);\n            if (appendTo) {\n                return processNewSubjectTag(templater, ownerSupport, contextItem, counts, appendTo, insertBefore);\n            }\n            global.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n            contextItem.checkValueChange = checkTagValueChange;\n            return processTag(ownerSupport, contextItem, counts);\n        }\n        case ValueTypes.stateRender:\n        case ValueTypes.tagComponent: {\n            getNewGlobal(contextItem);\n            contextItem.checkValueChange = checkTagValueChange;\n            if (appendTo) {\n                const processResult = processFirstSubjectComponent(value, contextItem, ownerSupport, counts, appendTo);\n                return processResult;\n            }\n            const processResult = processReplacementComponent(value, contextItem, ownerSupport, counts);\n            return processResult;\n        }\n        case ValueTypes.renderOnce: {\n            getNewGlobal(contextItem);\n            const support = oneRenderToSupport(value, contextItem, ownerSupport);\n            renderTagOnly(support, undefined, contextItem, ownerSupport);\n            const result = processNewSubjectTag(support.templater, ownerSupport, contextItem, counts, appendTo, insertBefore);\n            contextItem.checkValueChange = checkTagValueChange;\n            return result;\n        }\n    }\n}\n","import { processFirstTagResult, processReplaceTagResult } from './processTagResult.function.js';\nimport { renderWithSupport } from '../render/renderWithSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getCastedProps } from '../getTagWrap.function.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processReplacementComponent(templater, subject, ownerSupport, counts) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag\n    subject, ownerSupport);\n    processReplaceTagResult(support, counts, subject);\n    return support;\n}\nexport function processFirstSubjectComponent(templater, subject, ownerSupport, counts, appendTo) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag   \n    subject, ownerSupport);\n    processFirstTagResult(support, counts, appendTo);\n    return support;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { checkTagValueChange } from '../index.js';\nexport function processReplaceTagResult(support, counts, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const ph = contextItem.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, // element for append child\n    ph);\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function processFirstTagResult(support, counts, appendTo) {\n    let appendIndex = paintAppends.length;\n    const result = buildBeforeElement(support, counts, appendTo, undefined);\n    for (const dom of result.dom) {\n        if (dom.domElement) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.domElement,\n                relative: appendTo,\n            });\n        }\n        if (dom.marker) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.marker,\n                relative: appendTo,\n            });\n        }\n    }\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","import { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\nexport function processSubUpdate(value, contextItem, support) {\n    if (value === contextItem.value) {\n        return; // same value emitted\n    }\n    updateExistingValue(contextItem, value, support);\n    if (!setUseMemory.stateConfig.support) {\n        paint();\n    }\n    return;\n}\n","import { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { processSubUpdate } from './processSubscriptionUpdate.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\n/** Used for when dynamic value is truly something to subscribe to */\nexport function subscribeToTemplate({ subject, support, counts, contextItem, appendTo, }) {\n    let onValue = function onSubValue(value) {\n        processFirstSubjectValue(value, contextItem, support, { ...counts }, syncRun ? appendTo : undefined);\n        if (!syncRun && !setUseMemory.stateConfig.support) {\n            paint();\n        }\n        // from now on just run update\n        onValue = function subscriptionUpdate(value) {\n            processSubUpdate(value, contextItem, support);\n        };\n    };\n    // onValue mutates so function below calls original and mutation\n    const callback = function subValueProcessor(value) {\n        onValue(value);\n    };\n    let syncRun = true;\n    const sub = subject.subscribe(callback);\n    contextItem.subject = subject;\n    syncRun = false;\n    const global = support.subject.global;\n    const subs = global.subscriptions = global.subscriptions || [];\n    subs.push(sub);\n    // contextItem.handler = blankHandler\n}\n","import { isSkipPropValue } from '../../alterProp.function.js';\nimport { BasicTypes } from '../ValueTypes.enum.js';\nimport { isArray } from '../../isInstance.js';\nimport { updateExistingObject } from './updateExistingObject.function.js';\nimport { updateExistingArray } from './updateExistingArray.function.js';\nexport function syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth) {\n    if (priorProp === undefined || priorProp === null) {\n        return prop;\n    }\n    if (typeof (priorProp) === BasicTypes.function) {\n        // the prop i am receiving, is already being monitored/controlled by another parent\n        if (prop.mem) {\n            priorProp.mem = prop.mem;\n            return prop;\n        }\n        priorProp.mem = prop;\n        return priorProp;\n    }\n    // prevent infinite recursion\n    if (depth === maxDepth) {\n        return prop;\n    }\n    if (isSkipPropValue(prop)) {\n        return prop; // no children to crawl through\n    }\n    if (isArray(prop)) {\n        return updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth);\n    }\n    return updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n}\n","import { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth) {\n    for (let index = prop.length - 1; index >= 0; --index) {\n        const x = prop[index];\n        const oldProp = priorProp[index];\n        prop[index] = syncPriorPropFunction(oldProp, x, newSupport, ownerSupport, depth + 1, index);\n    }\n    return prop;\n}\n","import { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    const keys = Object.keys(prop);\n    for (const name of keys) {\n        const subValue = prop[name];\n        const oldProp = priorProp[name];\n        const result = syncPriorPropFunction(oldProp, subValue, newSupport, ownerSupport, maxDepth, depth + 1);\n        if (subValue === result) {\n            continue;\n        }\n        const hasSetter = Object.getOwnPropertyDescriptor(prop, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        prop[name] = result;\n    }\n    return prop;\n}\n","import { getChildTagsToSoftDestroy } from '../getChildTagsToDestroy.function.js';\nimport { getNewGlobal } from '../update/getNewGlobal.function.js';\nimport { smartRemoveKids } from '../smartRemoveKids.function.js';\n/** used when a tag swaps content returned */\nexport function softDestroySupport(lastSupport) {\n    const global = lastSupport.subject.global;\n    const { subs, tags } = getChildTagsToSoftDestroy(global.context);\n    softDestroyOne(lastSupport);\n    for (const child of tags) {\n        softDestroyOne(child);\n    }\n    const mySubs = global.subscriptions;\n    if (mySubs) {\n        subs.forEach(sub => sub.unsubscribe());\n    }\n    getNewGlobal(lastSupport.subject);\n}\nfunction softDestroyOne(child) {\n    const subject = child.subject;\n    const global = subject.global;\n    if (global.deleted === true) {\n        return;\n    }\n    global.deleted = true; // the children are truly destroyed but the main support will be swapped\n    subject.renderCount = 0; // TODO: most likely can be removed\n    smartRemoveKids(child, []);\n}\n","import { moveProviders } from '../update/updateExistingTagComponent.function.js';\nimport { softDestroySupport } from './softDestroySupport.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** TODO: This seems to support both new and updates and should be separated? */\nexport function renderWithSupport(newSupport, lastSupport, // previous\nsubject, // events & memory\nownerSupport) {\n    const lastTemplater = lastSupport?.templater;\n    const lastTag = lastTemplater?.tag;\n    const reSupport = renderTagOnly(newSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        moveProviders(lastSupport, reSupport);\n        softDestroySupport(lastSupport);\n        const global = reSupport.subject.global;\n        global.oldest = reSupport;\n        global.newest = reSupport;\n    }\n    else if (lastSupport) {\n        const tag = lastSupport.templater.tag;\n        if (tag && subject.renderCount > 0) {\n            checkTagSoftDestroy(tag, lastSupport, lastTag);\n        }\n    }\n    const lastOwnerSupport = lastSupport?.ownerSupport;\n    reSupport.ownerSupport = (ownerSupport || lastOwnerSupport);\n    return { support: reSupport, wasLikeTags: isLikeTag };\n}\nfunction checkTagSoftDestroy(tag, lastSupport, lastTag) {\n    if (tag.tagJsType === ValueTypes.dom) {\n        const lastDom = lastTag?.dom;\n        const newDom = tag.dom;\n        if (lastDom !== newDom) {\n            softDestroySupport(lastSupport);\n        }\n        return;\n    }\n    if (lastTag) {\n        const lastStrings = lastTag.strings;\n        if (lastStrings) {\n            const oldLength = lastStrings?.length;\n            const newLength = tag.strings.length;\n            if (oldLength !== newLength) {\n                softDestroySupport(lastSupport);\n            }\n        }\n    }\n}\n","import { renderWithSupport } from './renderWithSupport.function.js';\nimport { processTag } from '../update/processTag.function.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n// TODO: This function is being called for 1st time renders WHEN renderCount === 1\nexport function renderExistingReadyTag(lastSupport, newSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const global = subject.global;\n    const { support, wasLikeTags } = renderWithSupport(newSupport, lastSupport, // renderCount <= 0 ? undefined : lastSupport\n    subject, ownerSupport);\n    if (wasLikeTags) {\n        updateSupportBy(global.oldest, support);\n        return support;\n    }\n    processTag(ownerSupport, subject, fooCounts);\n    return support;\n}\n","import callbackStateUpdate from './callbackStateUpdate.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { syncError } from './callbackMaker.function.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\n/** Wrap a function that will be called back. After the wrapper and function are called, a rendering cycle will update display */\nexport function callback(callback) {\n    const support = getSupportInCycle();\n    if (!support) {\n        throw syncError;\n    }\n    return createTrigger(support, setUseMemory.stateConfig, // setUseMemory.stateConfig.stateArray\n    callback);\n}\nexport function createTrigger(support, oldState, toCallback) {\n    const oldStateArray = oldState.stateArray;\n    const oldStates = oldState.states;\n    return function trigger(...args) {\n        const callbackMaker = support.subject.renderCount > 0;\n        if (callbackMaker) {\n            return callbackStateUpdate(support, toCallback, {\n                stateArray: oldStateArray,\n                states: oldStates,\n            }, ...args);\n        }\n        // we are in sync with rendering, just run callback naturally\n        return toCallback(...args);\n    };\n}\n","import { renderSupport } from '../tag/render/renderSupport.function.js';\nimport { syncStates } from './syncStates.function.js';\nimport { isPromise } from '../isInstance.js';\nexport default function callbackStateUpdate(support, callback, oldState, // State,\n...args) {\n    const global = support.subject.global;\n    support = global.newest;\n    const state = support.state;\n    // ensure that the oldest has the latest values first\n    syncStates(state, oldState.stateArray, support.states, oldState.states);\n    // run the callback\n    const maybePromise = callback(...args);\n    // send the oldest state changes into the newest\n    syncStates(oldState.stateArray, state, oldState.states, support.states);\n    renderSupport(support);\n    if (isPromise(maybePromise)) {\n        maybePromise.finally(() => {\n            // send the oldest state changes into the newest\n            syncStates(oldState.stateArray, state, oldState.states, support.states);\n            renderSupport(support);\n        });\n    }\n    // return undefined as T\n    return maybePromise;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { createTrigger } from './callback.function.js';\nexport const callbackMaker = () => {\n    const support = getSupportInCycle();\n    // callback as typeof innerCallback\n    if (!support) {\n        throw syncError;\n    }\n    const oldState = setUseMemory.stateConfig; // .stateArray\n    // oldState.support = support // TODO: should not be need and already set\n    return function triggerMaker(callback) {\n        return createTrigger(support, oldState, callback);\n    };\n};\nexport const syncError = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n","import { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { state } from \"./state.function.js\";\nexport function onDestroy(callback) {\n    state(function stateDestroy() {\n        const support = getSupportInCycle();\n        const global = support.subject.global;\n        global.destroy$.toCallback(callback);\n    });\n}\n","import { setUseMemory } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUseMemory.stateConfig.support;\n}\n","// taggedjs-no-compile\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\nexport const variablePrefix = ':tagvar';\nexport const variableSuffix = ':';\nexport function getStringTag(strings, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        tagJsType: ValueTypes.tag,\n        strings,\n        /** Used within an array.map() that returns html aka array.map(x => html``.key(x)) */\n        key(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: function html(strings, values) {\n            tag.children = { strings, values };\n            return tag;\n        }\n    };\n    return tag;\n}\nexport function getDomTag(dom, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        dom,\n        tagJsType: ValueTypes.dom,\n        key: function keyFun(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: {\n            dom: function dom(dom, // ObjectChildren\n            values) {\n                tag.children = { dom: dom, values };\n                return tag;\n            }\n        }\n    };\n    return tag;\n}\n","import { variablePrefix, variableSuffix } from \"../../tag/getDomTag.function.js\";\nimport { isSpecialAttr } from \"../attributes/isSpecialAttribute.function.js\";\nconst fragFindAny = /(:tagvar\\d+:)/;\nconst ondoubleclick = 'ondoubleclick';\nconst regexAttr = /([:_a-zA-Z0-9\\-.]+)\\s*(?:=\\s*\"([^\"]*)\"|=\\s*(\\S+))?/g;\nconst regexTagOrg = /<\\/?([a-zA-Z0-9-]+)((?:\\s+[a-zA-Z_:*][\\w:.-]*(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+))?)+\\s*|\\s*)\\/?>/g;\n/** Main start of string parsing */\nexport function parseHTML(html) {\n    const valuePositions = [];\n    const elements = [];\n    const stack = [];\n    let currentElement = null;\n    let valueIndex = -1;\n    let position = 0;\n    const regexTag = new RegExp(regexTagOrg, 'g');\n    html = preprocessTagsInComments(html);\n    while (position < html.length) {\n        const tagMatch = regexTag.exec(html);\n        if (!tagMatch) {\n            break;\n        }\n        const [fullMatch, tagName, attrString] = tagMatch;\n        const isClosingTag = fullMatch.startsWith('</');\n        const isSelfClosing = fullMatch.endsWith('/>');\n        if (position < tagMatch.index) {\n            const textContent = html.slice(position, tagMatch.index);\n            if (textContent.trim()) {\n                const textVarMatches = splitByTagVar(textContent);\n                textVarMatches.forEach(textContent => {\n                    if (textContent.startsWith(variablePrefix)) {\n                        textContent = variablePrefix + (++valueIndex) + variableSuffix;\n                    }\n                    pushTextTo(currentElement, elements, textContent);\n                });\n            }\n        }\n        position = tagMatch.index + fullMatch.length;\n        if (isClosingTag) {\n            currentElement = stack.pop() || null;\n            continue;\n        }\n        const attributes = [];\n        let attrMatch;\n        while ((attrMatch = regexAttr.exec(attrString)) !== null) {\n            const attrName = attrMatch[1] || attrMatch[3] || attrMatch[5];\n            const attrChoice = attrMatch[2] || attrMatch[4] || attrMatch[6];\n            let attrValue = attrChoice;\n            if (attrName === undefined) {\n                continue;\n            }\n            const notEmpty = attrMatch[2] !== '';\n            const noValue = attrValue === undefined && notEmpty;\n            const lowerName = attrName.toLowerCase();\n            const fixedName = lowerName.startsWith('on') ? cleanEventName(lowerName) : lowerName;\n            if (noValue) {\n                const standAloneVar = attrName.slice(0, variablePrefix.length) === variablePrefix;\n                if (standAloneVar) {\n                    const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                    valuePositions.push(['at', valueName]);\n                    attributes.push([valueName]); // the name itself is dynamic\n                    continue;\n                }\n                const startMatched = attrMatch[0].startsWith(attrName);\n                const standAloneAttr = startMatched && attrMatch[0].slice(attrName.length, attrMatch[0].length).search(/\\s+$/) >= 0;\n                if (standAloneAttr) {\n                    attributes.push([fixedName]);\n                    continue;\n                }\n                const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                attrValue = valueName;\n            }\n            if (!notEmpty) {\n                attrValue = attrMatch[2];\n            }\n            const attrSet = [fixedName, attrValue];\n            const isSpecial = isSpecialAttr(lowerName); // check original name for \"oninit\" or \"autofocus\"\n            if (isSpecial) {\n                attrSet.push(isSpecial);\n            }\n            attributes.push(attrSet);\n        }\n        const element = {\n            nn: tagName, // nodeName\n        };\n        if (attributes.length) {\n            element.at = attributes;\n        }\n        if (currentElement) {\n            if (!currentElement.ch) {\n                currentElement.ch = [];\n            }\n            currentElement.ch.push(element);\n        }\n        else {\n            elements.push(element);\n        }\n        if (!isSelfClosing) {\n            stack.push(currentElement);\n            currentElement = element;\n        }\n    }\n    if (position < html.length) {\n        const textContent = html.slice(position);\n        if (textContent.trim()) {\n            const textVarMatches = splitByTagVar(textContent);\n            textVarMatches.forEach(textContent => {\n                if (textContent.startsWith(variablePrefix)) {\n                    ++valueIndex;\n                }\n                return pushTextTo(currentElement, elements, textContent);\n            });\n        }\n    }\n    return elements;\n}\nconst removeCommentRegX = new RegExp('(<!--[\\\\s\\\\S]*?-->)', 'g');\nfunction preprocessTagsInComments(html) {\n    // Use a regex to find all HTML comments\n    return html.replace(removeCommentRegX, function (match) {\n        // For each comment found, replace < and > inside it\n        return match.replace(/\\[l t\\]/g, '[l&nbsp;t]').replace(/\\[g t\\]/g, '[g&nbsp;t]').replace(/</g, '[l t]').replace(/>/g, '[g t]');\n    });\n}\nfunction cleanEventName(eventName) {\n    if (eventName.startsWith('on')) {\n        const couldByDblClick = eventName.length === ondoubleclick.length && eventName === ondoubleclick;\n        if (couldByDblClick) {\n            return 'dblclick';\n        }\n        return eventName.slice(2, eventName.length);\n    }\n    return eventName;\n}\nfunction pushTextTo(currentElement, elements, textContent) {\n    const textNode = {\n        nn: 'text', // nodeName\n        tc: postprocessTagsInComments(textContent), // textContent\n    };\n    pushTo(currentElement, elements, textNode);\n}\nfunction postprocessTagsInComments(html) {\n    // Use a regex to find all segments that look like processed comments\n    return html.replace(/(\\[l t\\]!--[\\s\\S]*?--\\[g t\\])/g, function (match) {\n        // For each processed comment found, replace *lt* and *gt* back to < and >\n        return match.replace(/\\[l t\\]/g, '<').replace(/\\[g t\\]/g, '>').replace(/\\[l&nbsp;t\\]/g, '[l t]').replace(/\\[g&nbsp;t\\]/g, '[g t]');\n    });\n}\nfunction pushTo(currentElement, elements, textNode) {\n    if (currentElement) {\n        if (!currentElement.ch) {\n            currentElement.ch = [];\n        }\n        currentElement.ch.push(textNode);\n    }\n    else {\n        elements.push(textNode);\n    }\n}\nfunction splitByTagVar(inputString) {\n    // Split the string using the regular expression, keep delimiters in the output\n    const parts = inputString.split(fragFindAny);\n    // Filter out any empty strings from the results\n    const filteredParts = parts.filter(part => part !== '');\n    return filteredParts;\n}\n","import { variablePrefix, variableSuffix } from \"../../tag/getDomTag.function.js\";\nimport { parseHTML } from \"./parseHTML.function.js\";\nconst fragReplacer = /(^:tagvar\\d+:|:tagvar\\d+:$)/g;\nconst safeVar = '__safeTagVar';\n/** Run only during compile step OR when no compile step occurred at runtime */\nexport function htmlInterpolationToDomMeta(strings, values) {\n    htmlInterpolationToPlaceholders(strings, values);\n    // Parse the modified fragments\n    const htmlString = htmlInterpolationToPlaceholders(strings, values).join('');\n    const domMeta = parseHTML(htmlString);\n    return domMeta;\n}\nexport function htmlInterpolationToPlaceholders(strings, values) {\n    // Sanitize placeholders in the fragments\n    const sanitizedFragments = sanitizePlaceholders(strings);\n    // Add placeholders to the fragments\n    return addPlaceholders(sanitizedFragments, values);\n}\nfunction sanitizePlaceholders(fragments) {\n    return fragments.map(fragment => fragment.replace(fragReplacer, (match, index) => safeVar + index));\n}\nfunction addPlaceholders(strings, values) {\n    const results = strings.map((fragment, index) => {\n        if (index < values.length) {\n            return fragment + variablePrefix + index + variableSuffix;\n        }\n        return fragment;\n    });\n    balanceArrayByArrays(results, strings, values);\n    return results;\n}\nexport function balanceArrayByArrays(results, strings, values) {\n    const diff = values.length - strings.length;\n    if (diff > 0) {\n        for (let x = diff; x > 0; --x) {\n            results.push(variablePrefix + (strings.length + x - 1) + variableSuffix);\n        }\n    }\n}\n","// taggedjs-no-compile\nimport { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nconst placeholderRegex = new RegExp(variablePrefix + '(\\\\d+)' + variableSuffix, 'g');\nconst ch = 'ch'; // short for children\nexport function replacePlaceholders(dom, valueCount, valuePositions = [], currentTail = []) {\n    const elements = dom;\n    for (let i = 0; i < elements.length; i++) {\n        const loopTail = [...currentTail, i];\n        const element = elements[i];\n        if (element.at) {\n            const attrs = element.at;\n            element.at = processAttributes(attrs, valueCount);\n        }\n        if (element.ch) {\n            const children = element.ch;\n            const innerLoopTail = [...loopTail, ch];\n            element.ch = replacePlaceholders(children, valueCount, valuePositions, innerLoopTail);\n        }\n        i = examineChild(element, valueCount, elements, i);\n    }\n    return elements;\n}\nfunction examineChild(child, valueCount, children, index) {\n    if (child.nn !== 'text') {\n        return index;\n    }\n    const textChild = child;\n    let textContent = textChild.tc;\n    if (typeof textContent !== ImmutableTypes.string) {\n        return index;\n    }\n    let match;\n    while ((match = placeholderRegex.exec(textContent)) !== null) {\n        const secondMatch = match[1];\n        const wIndex = parseInt(secondMatch, 10);\n        const examine = !isNaN(wIndex) && wIndex < valueCount;\n        if (examine) {\n            const varContent = variablePrefix + wIndex + variableSuffix;\n            const after = textContent.slice(match.index + varContent.length);\n            children.splice(index, 1, ...[{\n                    nn: 'text',\n                    v: wIndex\n                }]);\n            textContent = after;\n            placeholderRegex.lastIndex = 0; // Reset regex index due to split\n        }\n    }\n    textChild.tc = textContent;\n    return index;\n}\nfunction processAttributes(attributes, valueCount) {\n    return attributes.map(attrSet => {\n        const [key, value, isSpecial] = attrSet;\n        if (key.startsWith(variablePrefix)) {\n            const index = parseInt(key.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [{ tagJsVar: index }];\n            }\n        }\n        if (typeof value === ImmutableTypes.string && value.startsWith(variablePrefix)) {\n            const index = parseInt(value.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [key, { tagJsVar: index }, isSpecial];\n            }\n        }\n        return attrSet;\n    });\n}\n","import { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nexport const safeVar = '__safeTagVar';\nexport function restorePlaceholders(elements) {\n    elements.forEach(traverseAndRestore);\n}\nconst safeReplacer = /__safeTagVar(\\d+)/g;\nfunction traverseAndRestore(element) {\n    if (element.at) {\n        element.at = element.at ? element.at.map(attr => {\n            if (attr.length === 1) {\n                return attr;\n            }\n            const [, value] = attr;\n            if (typeof value === ImmutableTypes.string && value.startsWith(safeVar)) {\n                const index = parseInt(value.replace(safeVar, ''), 10);\n                attr[1] = variablePrefix + index + variableSuffix;\n            }\n            return attr;\n        }) : [];\n    }\n    if (element.ch) {\n        const children = element.ch;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child.nn === 'text') {\n                if (typeof child.tc !== ImmutableTypes.string) {\n                    return;\n                }\n                child.tc = child.tc.replace(safeReplacer, (_match, index) => variablePrefix + index + variableSuffix);\n            }\n            traverseAndRestore(child);\n        }\n        // Remove empty children array\n        if (children.length === 0) {\n            delete element.ch;\n        }\n    }\n}\n","// taggedjs-no-compile\nimport { htmlInterpolationToDomMeta } from '../interpolations/optimizers/htmlInterpolationToDomMeta.function.js';\nimport { replacePlaceholders } from '../interpolations/optimizers/replacePlaceholders.function.js';\nimport { restorePlaceholders } from '../interpolations/optimizers/restorePlaceholders.function.js';\nimport { isLastRunMatched } from './isLastRunMatched.function.js';\nimport { getStringsId } from './getStringsId.function.js';\nconst lastRuns = {};\n/** Converts strings & values into dom meta */\nexport function getDomMeta(strings, values) {\n    const stringId = getStringsId(strings);\n    const lastRun = lastRuns[stringId];\n    const matches = lastRun && isLastRunMatched(strings, values, lastRun);\n    if (matches) {\n        return lastRun.domMetaMap;\n    }\n    const domMeta = htmlInterpolationToDomMeta(strings, values);\n    const map = replacePlaceholders(domMeta, values.length);\n    // Restore any sanitized placeholders in text nodes\n    restorePlaceholders(map);\n    const template = {\n        interpolation: undefined,\n        string: undefined,\n        strings,\n        values,\n        domMetaMap: map,\n    };\n    lastRuns[stringId] = template;\n    return map;\n}\n","export function getStringsId(strings) {\n    const array = strings.map(x => x.length);\n    array.push(strings.length);\n    return Number(array.join(''));\n}\n","export function isLastRunMatched(strings, values, lastRun) {\n    if (lastRun) {\n        if (lastRun.strings.length === strings.length) {\n            const stringsMatch = lastRun.strings.every((string, index) => \n            // string.length === strings[index].length\n            string === strings[index]);\n            if (stringsMatch && lastRun.values.length === values.length) {\n                return true; // performance savings using the last time this component was rendered\n            }\n        }\n    }\n    return false;\n}\n","import { getStringTag, getDomTag } from './getDomTag.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\n/** Used as html`<div></div>` */\nexport function html(strings, ...values) {\n    const stringTag = getStringTag(strings, values);\n    const templater = getTemplaterResult(PropWatches.NONE);\n    templater.tag = stringTag;\n    stringTag.templater = templater;\n    return stringTag;\n}\nhtml.dom = function (dom, ...values) {\n    return getDomTag(dom, values);\n};\n","import { getBaseSupport, upgradeBaseToSupport } from './getSupport.function.js';\nimport { subscribeToTemplate } from '../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from './buildBeforeElement.function.js';\nimport { tags } from './tag.utils.js';\nimport { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { PropWatches } from './index.js';\nimport { runAfterRender } from './afterRender.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { paint, painting } from './paint.function.js';\nimport { initState, reState } from '../state/state.utils.js';\nimport { isTagComponent } from '../isInstance.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkTagValueChange } from './checkTagValueChange.function.js';\nconst appElements = [];\n/**\n *\n * @param app taggedjs tag\n * @param element HTMLElement\n * @param props object\n * @returns\n */\nexport function tagElement(app, element, props) {\n    const appElmIndex = appElements.findIndex(appElm => appElm.element === element);\n    if (appElmIndex >= 0) {\n        destroySupport(appElements[appElmIndex].support);\n        appElements.splice(appElmIndex, 1);\n        // an element already had an app on it\n        console.warn('Found and destroyed app element already rendered to element', { element });\n    }\n    // Create the app which returns [props, runOneTimeFunction]\n    let templater = (() => templater2(props));\n    templater.propWatch = PropWatches.NONE;\n    templater.tagJsType = ValueTypes.stateRender;\n    // todo: props should be an array\n    templater.props = [props];\n    templater.isApp = true;\n    // create observable the app lives on\n    const subject = getNewSubject(templater, element);\n    const global = subject.global;\n    initState(global.newest, setUseMemory.stateConfig);\n    let templater2 = app(props);\n    const isAppFunction = typeof templater2 == BasicTypes.function;\n    if (!isAppFunction) {\n        if (!isTagComponent(templater2)) {\n            templater.tag = templater2;\n            templater2 = app;\n        }\n        else {\n            global.newest.propsConfig = {\n                latest: [props],\n                castProps: [props],\n            };\n            templater.propWatch = templater2.propWatch;\n            templater.tagJsType = templater2.tagJsType;\n            templater.wrapper = templater2.wrapper;\n            templater = templater2;\n        }\n    }\n    const placeholder = document.createTextNode('');\n    tags.push((templater.wrapper || { original: templater }));\n    const support = runWrapper(templater, placeholder, element, subject, isAppFunction);\n    global.isApp = true;\n    if (isAppFunction) {\n        templater2.tag = support.templater.tag;\n    }\n    if (!element) {\n        throw new Error(`Cannot tagElement, element received is type ${typeof element} and not type Element`);\n    }\n    // enables hmr destroy so it can control entire app\n    ;\n    element.destroy = function () {\n        const events = global.events;\n        for (const eventName in events) {\n            const callback = events[eventName];\n            element.removeEventListener(eventName, callback);\n        }\n        global.events = {};\n        ++painting.locks;\n        const toAwait = destroySupport(support); // never return anything here\n        --painting.locks;\n        paint();\n        return toAwait;\n    };\n    ++painting.locks;\n    const newFragment = registerTagElement(support, element, global, templater, app, placeholder);\n    --painting.locks;\n    paint();\n    element.appendChild(newFragment);\n    return {\n        support,\n        tags,\n        ValueTypes,\n    };\n}\nfunction registerTagElement(support, element, global, templater, app, placeholder) {\n    const result = buildBeforeElement(support, { added: 0, removed: 0 }, element, undefined);\n    global.oldest = support;\n    global.newest = support;\n    let setUse = templater.setUse;\n    if (templater.tagJsType !== ValueTypes.stateRender) {\n        const wrap = app;\n        const original = wrap.original;\n        setUse = original.setUse;\n        original.isApp = true;\n    }\n    ;\n    element.setUse = setUse;\n    element.ValueTypes = ValueTypes;\n    appElements.push({ element, support });\n    const newFragment = document.createDocumentFragment();\n    newFragment.appendChild(placeholder);\n    for (const domItem of result.dom) {\n        putOneDomDown(domItem, newFragment);\n    }\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    return newFragment;\n}\nfunction getNewSubject(templater, appElement) {\n    const subject = {\n        value: templater,\n        checkValueChange: checkTagValueChange,\n        withinOwnerElement: false, // i am the highest owner\n        renderCount: 0,\n        global: undefined, // gets set below in getNewGlobal()\n    };\n    const global = getNewGlobal(subject);\n    global.events = {};\n    loadNewBaseSupport(templater, subject, appElement);\n    return subject;\n}\nfunction loadNewBaseSupport(templater, subject, appElement) {\n    const global = subject.global;\n    const newSupport = getBaseSupport(templater, subject);\n    upgradeBaseToSupport(templater, newSupport, newSupport);\n    newSupport.appElement = appElement;\n    global.oldest = global.oldest || newSupport;\n    global.newest = newSupport;\n    return newSupport;\n}\nexport function runWrapper(templater, placeholder, appElement, subject, isAppFunction) {\n    subject.placeholder = placeholder;\n    const global = subject.global;\n    const useSupport = global.newest;\n    const oldest = global.oldest;\n    const isFirstRender = useSupport === oldest;\n    if (!isFirstRender) {\n        reState(useSupport, setUseMemory.stateConfig, oldest.state, oldest.states);\n    }\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = (templater.wrapper || { original: templater });\n        if (!isAppFunction) {\n            const newSupport = loadNewBaseSupport(templater, subject, appElement);\n            runAfterRender(newSupport);\n            return newSupport;\n        }\n        const nowSupport = executeWrap(templater, result, useSupport);\n        runAfterRender(nowSupport);\n        return nowSupport;\n    }\n    // Call the apps function for our tag templater\n    const wrapper = templater.wrapper;\n    const nowSupport = wrapper(useSupport, subject);\n    runAfterRender(nowSupport);\n    return nowSupport;\n}\nfunction putOneDomDown(dom, newFragment) {\n    if (dom.domElement) {\n        newFragment.appendChild(dom.domElement);\n    }\n    if (dom.marker) {\n        newFragment.appendChild(dom.marker);\n    }\n}\n","export * from './tag/index.js';\nexport * from './errors.js';\nexport * from './isInstance.js';\nexport * from './state/index.js';\nexport { states } from './state/states.function.js';\nexport * from './subject/index.js';\nexport * from './interpolations/index.js';\nexport * from './tag/getSupport.function.js';\nexport * from './interpolations/attributes/howToSetInputValue.function.js';\nexport * from './interpolations/attributes/ElementTargetEvent.interface.js';\nimport { renderTagOnly } from './tag/render/renderTagOnly.function.js';\nimport { renderSupport } from './tag/render/renderSupport.function.js';\nimport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nimport { tagElement } from './tag/tagElement.js';\nimport { paint } from './tag/paint.function.js';\nexport { tagElement, renderWithSupport, renderSupport, renderTagOnly, paint, };\nexport const hmr = {\n    tagElement, renderWithSupport, renderSupport,\n    renderTagOnly, paint,\n};\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNewGlobal","subject","renderCount","global","RouteQuery","_name","empty","ImmutableTypes","BasicTypes","ValueTypes","tag","dom","templater","tagComponent","tagArray","tagJsSubject","renderOnce","stateRender","version","Date","now","signal","initialValue","getSupportInCycle","state","Signal","value","subscribers","Set","newValue","forEach","callback","subscribe","add","unsub","delete","unsubscribe","isSimpleType","string","number","boolean","isStaticTag","tagJsType","isTagComponent","tagType","isSubjectInstance","isObject","function","isPromise","isFunction","then","object","isArray","Array","combineLatest","subjects","output","Subject","subscribeWith","valuesSeen","values","setValue","x","index","length","item","subscription","clones","shift","subscriptions","map","getSubscription","countSubject","globalSubCount$","next","findIndex","sub","splice","removeSubFromArray","valSub","push","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","handler","methodResponse","setHandler","onSubscription","isSubject","constructor","this","orgCallback","lastValue","emit","set","bind","subs","toPromise","Promise","res","toCallback","runtimeSub","tagJsUnsub","setTimeout","pipe","operations","setMethods","all","args","arg","static","Subjective","_value","super","defineValueOn","ValueSubject","ValueSubjective","willCallback","utils","willPromise","willSubscribe","defaultValue","setUseMemory","stateConfig","handlers","firstStatesHandler","setter","config","states","statesIndex","support","reStatesHandler","prevSupport","oldStates","lastValues","stateArray","initState","runFirstState","statesHandler","rearray","reState","prevState","prevStates","runRestate","StateEchoBack","getStateValue","oldState","checkValue","getCallbackValue","restate","initValue","original","syncStates","stateFrom","stateTo","statesFrom","fromValue","oldValues","oldGetCallback","getIndex","newSetCallback","_","watch","currentValues","setupWatch","defaultFinally","init","before","final","previous","pastResult","undefined","previousValues","result","every","defineOnMethod","getWatch","attachTo","setup","oldWatch","firstSupport","method","nowSupport","setTo","newestState","oldest","letProp","propStates2","passes","passedOn","nowValues","passed","newWatch","oldestState","providers","create","constructMethod","stateDiffMemory","stateDiff","provider","oldStateCount","instance","owner","children","cm","compareTo","toString","inject","ownerSupport","ownerProviders","find","msg","name","console","warn","Error","TagError","details","message","errorCode","ArrayNoKeyError","StateMismatchError","SyncCallbackError","deepClone","maxDepth","makeDeepClone","RegExp","clone","getPrototypeOf","i","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","getTime","isArrayDeepEqual","keys1","keys","keys2","includes","isObjectDeepEqual","getTemplaterResult","propWatch","props","arrayValue","tags","castProps","newSupport","depth","checkProp","alterProp","already","mem","wrap","toCall","callWith","newest","noCycle","callbackResult","run","locked","isInline","isInlineHtml","renderInlineHtml","renderExistingReadyTag","safeRenderSupport","tagClosed$","callbackPropOwner","assign","getPropWrap","deepCompareDepth","isSkipPropValue","subValue","afterCheckProp","checkArrayProp","getset","getOwnPropertyDescriptor","checkObjectProp","originalValue","newProp","destroy$","executeWrap","useSupport","castedProps","originalFunction","cloneValueArray","cloneTagJsValue","getBaseSupport","baseSupport","appSupport","blocked","upgradeBaseToSupport","propsConfig","PropWatches","IMMUTABLE","latest","SHALLOW","shallowCompareDepth","clonePropsBy","getHtmlSupport","getSupport","getCastedProps","lastSupport","DEEP","preCastedProps","lastPropsConfig","lastCastProps","syncFunctionProps","tagCount","parentWrap","innerTagWrap","getTagWrap","wrapper","setUse","tagIndex","tagUseFn","hasPropChanges","pastCloneProps","hasPropLengthsChanged","NONE","shallowPropMatch","immutablePropMatch","castedPastProps","compare","subCastedProps","subCompareProps","matched","entries","compareProps","onePropCompare","deepPropChangeCompare","onDelete","compareOriginal","len","pastProp","obEntries","subItem","objectItemMatches","use","route","_routeProps","app","_routeTag","deepPropWatch","immutableProps","watchProps","oneRenderFunction","renderFunction","pastValue","paintRemoves","paintContent","setContent","paintAppends","paintInsertBefores","paintAfters","painting","locks","paint","toRemove","parentNode","removeChild","content","text","textNode","textContent","relative","appendChild","element","insertBefore","updateBeforeTemplate","lastFirstChild","document","createTextNode","castTextValue","runBeforeDestroy","getChildTagsToDestroy","childTags","child","lastArray","context","iSubs","iSub","getChildTagsToSoftDestroy","subTags","smartRemoveKids","allPromises","destroys","promises","destroy","maybePromise","lastPromise","smartRemoveByContext","destroyClones","processContextDestroys","withinOwnerElement","destroyArray","elm","simpleValueElm","subGlobal","deleted","htmlDomMeta","marker","domElement","destroySupport","compareArrayItems","removed","counts","newLength","at","lessLength","prevContext","destroyArrayItem","oldKey","newValueTag","isDiff","runArrayItemDiff","destroyArrayItemByGlobal","checkArrayValueChange","added","checkSimpleValueChange","contextItem","castedValue","oldClone","processUpdateRegularValue","isLikeTags","support0","support1","templater0","templater1","tag0","tag1","domMeta0","domMeta1","isLikeDomTags","like","strings0","strings","strings1","values0","values1","valuesLengthsMatch","allVarsMatch","isLikeValueSets","isLikeStringTags","howToSetInputValue","howToSetFirstInputValue","setAttribute","removeAttribute","specialAttribute","specialName","stagger","target","focus","select","names","split","style","classList","remove","processSpecialClass","handleProviderChanges","tagsWithProvider","memory","cSubject","getTagsWithProvider","getUpTags","supports","inlineHtml","isComponent","continueUp","selfPropChange","nowProps","latestProps","hasPropsToOwnerChanged","checkRenderUp","proSupports","prosWithChanges","hasChange","providersChangeCheck","renderTagUpdateArray","mapTagUpdate","noData","promiseNoData","bindSubjectCallback","subjectFunction","bindTo","component","apply","eventHandlerSupport","last","checkAfterCallbackPromise","renderCallbackSupport","afterTagCallback","runTagCallback","tagFunction","actions","processNonDynamicAttr","attrName","howToSet","isSpecial","addSupportEventListener","eventName","appElement","replaceEventName","eventReg","events","listener","event","originalStopPropagation","stopPropagation","bubbleEvent","addEventListener","stopped","defaultPrevented","processAttributeFunction","newAttrValue","fun","isSpecialAttr","startsWith","specialAction","isSpecialAction","emptyCounts","processUpdateAttrContext","isNameOnly","attrValue","isNoDisplayValue","processNameOnlyAttrValue","updateNameOnlyAttrValue","processAttributeEmit","processAttribute","nameVar","getTagJsVar","addOneContext","isAttr","newValues","valueVar","checkValueChange","contextValueSubject","blankHandler","processNameValueAttributeAttrSubject","processTagCallbackFun","processDynamicNameValueAttribute","processAttributeSubjectValue","callbackFun","special","prevFun","attrPart","tagJsVar","someDiv","createElement","attachDomElements","nodes","appendTo","node","v","isNaN","attachDynamicDom","newNode","nn","attachDomText","attachDomElement","ch","attr","tc","innerHTML","innerText","placeholder","_newValues","newContextItem","updateExistingValue","processFirstSubjectValue","buildBeforeElement","domMeta","thisTag","getDomMeta","loadDomMeta","attachHtmlDomMeta","processTag","checkTagValueChange","subscribeToTemplate","getFakeTemplater","newSupportByTemplater","processUpdateOneContext","updateSupportBy","olderSupport","newerSupport","tempTag","updateSupportValuesBy","processUpdateContext","processNewTag","processTagArray","noLast","runtimeInsertBefore","filteredLast","newRemoved","reviewArrayItem","array","itemSubject","couldBeSame","processAddTagArrayItem","reviewPreviousArrayItem","subPlaceholder","processNewArrayValue","fooCounts","ignoreOrDestroyed","tryUpdateToTag","processNowRegularValue","prepareUpdateToComponent","processReplacementComponent","oldWrapper","newWrapper","isSameTag","skipComparing","oldestSupport","swapTags","hasChanged","newTemplater","hasSupportChanged","newProps","syncSupports","updateExistingTagComponent","updateContextItemBySupport","valueSupport","handleStillTag","updateToTag","isTag","oneRenderToSupport","checkStateMismatch","newStates","error","hint","throwStateMismatch","runAfterRender","renderTagOnly","oldRenderCount","reSupport","processNewSubjectTag","tagFakeTemplater","processResult","newPropsConfig","renderWithSupport","appendIndex","processFirstTagResult","processFirstSubjectComponent","processFirstTagValue","processFirstRegularValue","processSubUpdate","onValue","syncRun","processReplaceTagResult","syncPriorPropFunction","priorProp","oldProp","updateExistingArray","hasSetter","updateExistingObject","newPropsArray","priorPropsArray","newArray","softDestroySupport","softDestroyOne","lastTemplater","lastTag","isLikeTag","lastDom","lastStrings","oldLength","checkTagSoftDestroy","pIndex","pLen","pcLen","moveProviders","lastOwnerSupport","wasLikeTags","pop","ownGlobal","syncError","createTrigger","oldStateArray","finally","callbackStateUpdate","callbackMaker","onInit","onDestroy","variablePrefix","variableSuffix","getStringTag","html","getDomTag","fragFindAny","ondoubleclick","regexAttr","regexTagOrg","parseHTML","valuePositions","elements","stack","currentElement","valueIndex","position","regexTag","replace","removeCommentRegX","match","preprocessTagsInComments","tagMatch","exec","fullMatch","tagName","attrString","isClosingTag","isSelfClosing","endsWith","slice","trim","splitByTagVar","pushTextTo","attributes","attrMatch","notEmpty","noValue","lowerName","toLowerCase","fixedName","cleanEventName","valueName","search","attrSet","pushTo","postprocessTagsInComments","inputString","filter","part","fragReplacer","safeVar","htmlInterpolationToPlaceholders","results","fragment","diff","balanceArrayByArrays","addPlaceholders","placeholderRegex","replacePlaceholders","valueCount","currentTail","loopTail","attrs","processAttributes","innerLoopTail","examineChild","textChild","secondMatch","wIndex","parseInt","varContent","after","lastIndex","safeReplacer","traverseAndRestore","_match","lastRuns","stringId","Number","join","getStringsId","lastRun","matches","isLastRunMatched","domMetaMap","htmlInterpolationToDomMeta","template","interpolation","stringTag","appElements","tagElement","appElmIndex","appElm","templater2","isApp","loadNewBaseSupport","getNewSubject","isAppFunction","runWrapper","removeEventListener","toAwait","newFragment","createDocumentFragment","domItem","putOneDomDown","registerTagElement","hmr"],"sourceRoot":""}