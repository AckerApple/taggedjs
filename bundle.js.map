{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://taggedjs/webpack/bootstrap","webpack://taggedjs/webpack/runtime/define property getters","webpack://taggedjs/webpack/runtime/hasOwnProperty shorthand","webpack://taggedjs/./ts/tag/update/getNewGlobal.function.ts","webpack://taggedjs/./ts/tag/tag.types.ts","webpack://taggedjs/./ts/tag/ValueTypes.enum.ts","webpack://taggedjs/./ts/subject/signal.function.ts","webpack://taggedjs/./ts/isInstance.ts","webpack://taggedjs/./ts/subject/combineLatest.function.ts","webpack://taggedjs/./ts/subject/subject.utils.ts","webpack://taggedjs/./ts/subject/Subject.class.ts","webpack://taggedjs/./ts/subject/ValueSubject.ts","webpack://taggedjs/./ts/subject/will.functions.ts","webpack://taggedjs/./ts/state/stateHandlers.ts","webpack://taggedjs/./ts/state/state.function.ts","webpack://taggedjs/./ts/state/states.utils.ts","webpack://taggedjs/./ts/state/state.utils.ts","webpack://taggedjs/./ts/state/getStateValue.function.ts","webpack://taggedjs/./ts/state/letState.utils.ts","webpack://taggedjs/./ts/state/setUseMemory.object.ts","webpack://taggedjs/./ts/state/syncStates.function.ts","webpack://taggedjs/./ts/state/watch.function.ts","webpack://taggedjs/./ts/state/subject.function.ts","webpack://taggedjs/./ts/state/letState.function.ts","webpack://taggedjs/./ts/state/letProp.function.ts","webpack://taggedjs/./ts/state/providers.ts","webpack://taggedjs/./ts/errors.ts","webpack://taggedjs/./ts/deepFunctions.ts","webpack://taggedjs/./ts/tag/TemplaterResult.class.ts","webpack://taggedjs/./ts/tag/tag.utils.ts","webpack://taggedjs/./ts/alterProp.function.ts","webpack://taggedjs/./ts/tag/executeWrap.function.ts","webpack://taggedjs/./ts/tag/cloneValueArray.function.ts","webpack://taggedjs/./ts/tag/Support.class.ts","webpack://taggedjs/./ts/tag/clonePropsBy.function.ts","webpack://taggedjs/./ts/tag/getSupport.function.ts","webpack://taggedjs/./ts/tag/getTagWrap.function.ts","webpack://taggedjs/./ts/tag/key.ts","webpack://taggedjs/./ts/tag/tag.ts","webpack://taggedjs/./ts/tag/hasSupportChanged.function.ts","webpack://taggedjs/./ts/tag/paint.function.ts","webpack://taggedjs/./ts/updateBeforeTemplate.function.ts","webpack://taggedjs/./ts/interpolations/attributes/howToSetInputValue.function.ts","webpack://taggedjs/./ts/interpolations/attributes/specialAttribute.ts","webpack://taggedjs/./ts/state/handleProviderChanges.function.ts","webpack://taggedjs/./ts/interpolations/attributes/getUpTags.function.ts","webpack://taggedjs/./ts/tag/render/renderSupport.function.ts","webpack://taggedjs/./ts/state/providersChangeCheck.function.ts","webpack://taggedjs/./ts/interpolations/attributes/renderTagArray.function.ts","webpack://taggedjs/./ts/interpolations/attributes/bindSubjectCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processNameValueAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/addSupportEventListener.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttributeCallback.function.ts","webpack://taggedjs/./ts/interpolations/attributes/isSpecialAttribute.function.ts","webpack://taggedjs/./ts/interpolations/attributes/processAttribute.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/attachDomElements.function.ts","webpack://taggedjs/./ts/tag/buildBeforeElement.function.ts","webpack://taggedjs/./ts/tag/update/processTag.function.ts","webpack://taggedjs/./ts/tag/processUpdateAttrContext.function.ts","webpack://taggedjs/./ts/tag/processUpdateContext.function.ts","webpack://taggedjs/./ts/tag/updateSupportBy.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingValue.function.ts","webpack://taggedjs/./ts/tag/update/updateExistingTagComponent.function.ts","webpack://taggedjs/./ts/tag/update/processRegularValue.function.ts","webpack://taggedjs/./ts/tag/update/processNewValue.function.ts","webpack://taggedjs/./ts/tag/tagRunner.ts","webpack://taggedjs/./ts/tag/getChildTagsToDestroy.function.ts","webpack://taggedjs/./ts/tag/smartRemoveKids.function.ts","webpack://taggedjs/./ts/tag/destroySupport.function.ts","webpack://taggedjs/./ts/tag/update/processTagArray.ts","webpack://taggedjs/./ts/tag/isLikeTags.function.ts","webpack://taggedjs/./ts/tag/checkDestroyPrevious.function.ts","webpack://taggedjs/./ts/tag/update/oneRenderToSupport.function.ts","webpack://taggedjs/./ts/tag/checkStateMismatch.function.ts","webpack://taggedjs/./ts/tag/afterRender.function.ts","webpack://taggedjs/./ts/tag/render/renderTagOnly.function.ts","webpack://taggedjs/./ts/tag/update/processNewSubjectTag.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectValue.function.ts","webpack://taggedjs/./ts/tag/update/processFirstSubjectComponent.function.ts","webpack://taggedjs/./ts/tag/update/processTagResult.function.ts","webpack://taggedjs/./ts/interpolations/processSubscriptionUpdate.function.ts","webpack://taggedjs/./ts/interpolations/subscribeToTemplate.function.ts","webpack://taggedjs/./ts/tag/render/softDestroySupport.function.ts","webpack://taggedjs/./ts/tag/render/renderWithSupport.function.ts","webpack://taggedjs/./ts/tag/render/renderExistingTag.function.ts","webpack://taggedjs/./ts/state/callback.function.ts","webpack://taggedjs/./ts/state/callbackStateUpdate.function.ts","webpack://taggedjs/./ts/state/callbackMaker.function.ts","webpack://taggedjs/./ts/state/onInit.ts","webpack://taggedjs/./ts/state/onDestroy.ts","webpack://taggedjs/./ts/state/states.function.ts","webpack://taggedjs/./ts/tag/getSupportInCycle.function.ts","webpack://taggedjs/./ts/tag/Tag.class.ts","webpack://taggedjs/./ts/interpolations/optimizers/htmlInterpolationToDomMeta.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/replacePlaceholders.function.ts","webpack://taggedjs/./ts/interpolations/optimizers/restorePlaceholders.function.ts","webpack://taggedjs/./ts/tag/domMetaCollector.ts","webpack://taggedjs/./ts/tag/getStringsId.function.ts","webpack://taggedjs/./ts/tag/isLastRunMatched.function.ts","webpack://taggedjs/./ts/tag/html.ts","webpack://taggedjs/./ts/tag/tagElement.ts","webpack://taggedjs/./ts/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export function getNewGlobal(subject) {\n    ;\n    subject.renderCount = 0;\n    return subject.global = {}; // TODO: makeSupportTagGlobal\n}\n","export class RouteQuery {\n    get(_name) {\n        return 'todo';\n    }\n}\n","export const empty = '';\nexport var ImmutableTypes;\n(function (ImmutableTypes) {\n    ImmutableTypes[\"string\"] = \"string\";\n    ImmutableTypes[\"number\"] = \"number\";\n    ImmutableTypes[\"boolean\"] = \"boolean\";\n    ImmutableTypes[\"undefined\"] = \"undefined\";\n})(ImmutableTypes || (ImmutableTypes = {}));\nexport var BasicTypes;\n(function (BasicTypes) {\n    BasicTypes[\"function\"] = \"function\";\n    BasicTypes[\"date\"] = \"date\";\n    BasicTypes[\"unknown\"] = \"unknown\";\n    BasicTypes[\"object\"] = \"object\";\n})(BasicTypes || (BasicTypes = {}));\nconst version = Date.now();\n/** Used as direct memory comparisons, the strings are never compared, just the array */\nexport const ValueTypes = {\n    tag: ['html'], // html'' aka StringTag | DomTag\n    dom: ['dom'], // compiled version of html''\n    templater: ['templater'],\n    tagComponent: ['tagComponent'],\n    tagArray: ['tagArray'],\n    subject: ['subject'],\n    tagJsSubject: ['tagJsSubject'],\n    renderOnce: ['renderOnce'],\n    stateRender: ['stateRender'],\n    version,\n};\n","export function signal(initialValue) {\n    let value = initialValue;\n    const subscribers = new Set();\n    return {\n        get value() {\n            return value;\n        },\n        set value(newValue) {\n            if (value !== newValue) {\n                value = newValue;\n                // Notify all subscribers\n                subscribers.forEach(callback => callback(newValue));\n            }\n        },\n        subscribe(callback) {\n            callback(value);\n            subscribers.add(callback);\n            // Return an unsubscribe function\n            const unsub = () => subscribers.delete(callback);\n            // support traditional unsubscribe\n            unsub.unsubscribe = unsub;\n            return unsub;\n        },\n    };\n}\n","import { BasicTypes, ImmutableTypes, ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isSimpleType(value) {\n    switch (value) {\n        case ImmutableTypes.string:\n        case ImmutableTypes.number:\n        case ImmutableTypes.boolean:\n            return true;\n    }\n    return false;\n}\nexport function isStaticTag(value) {\n    switch (value?.tagJsType) {\n        case ValueTypes.dom:\n        case ValueTypes.tag:\n        case ValueTypes.templater:\n            return true;\n    }\n    return false;\n}\n/** passed in is expected to be a TemplaterResult */\nexport function isTagComponent(value) {\n    const tagType = value?.tagJsType;\n    return tagType === ValueTypes.tagComponent || tagType === ValueTypes.stateRender;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return isObject(subject) && typeof subject.subscribe === BasicTypes.function;\n}\nexport function isPromise(value) {\n    return value && isFunction(value.then);\n}\nexport function isFunction(value) {\n    return typeof value === BasicTypes.function;\n}\nexport function isObject(value) {\n    return typeof (value) === BasicTypes.object && value !== null;\n}\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (const item of valuesSeen) {\n                if (!item) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => {\n            return subject.subscribe(x => setValue(x, index + 1));\n        });\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject.value + 1);\n    const subscription = function () {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = function () {\n        return unsubscribe(subscription, subscribers, callback);\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\nfunction unsubscribe(subscription, subscribers, callback) {\n    removeSubFromArray(subscribers, callback); // each will be called when update comes in\n    const valSub = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(valSub.value - 1);\n    // any double unsubscribes will be ignored\n    subscription.unsubscribe = () => subscription;\n    // unsubscribe from any combined subjects\n    const subscriptions = subscription.subscriptions;\n    for (const sub of subscriptions) {\n        sub.unsubscribe();\n    }\n    return subscription;\n}\n","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    constructor(value, \n    // private? - only used by extending classes\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        // defineValueOn(this)\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this.value = value;\n        this.emit();\n    }\n    set = this.next.bind(this);\n    emit() {\n        const value = this.value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster */\n    toCallback(callback) {\n        const subscription = this.subscribe((x, runtimeSub) => {\n            const tagJsUnsub = runtimeSub?.unsubscribe;\n            if (tagJsUnsub) {\n                tagJsUnsub(); // its from taggedjs\n            }\n            else {\n                setTimeout(() => subscription.unsubscribe(), 0);\n            }\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this.value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging}\n}\nexport class Subjective extends Subject {\n    value;\n    onSubscription;\n    _value;\n    constructor(value, \n    // private?\n    onSubscription) {\n        super(value, onSubscription);\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n}\n","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this.value, subscription);\n        return subscription;\n    }\n}\nexport class ValueSubjective extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        this._value = value;\n        defineValueOn(this); // if you extend this AND have a constructor, you must call this in your extension\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n","export function willCallback(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        });\n        callback(lastValue, utils.next);\n    });\n}\n/** .pipe( promise((x) => Promise.resolve(44)) ) */\nexport function willPromise(callback) {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        result.then(x => utils.next(x));\n    });\n}\n/** .pipe( willSubscribe((x) => new ValueSubject(44)) ) */\nexport const willSubscribe = (callback) => {\n    return ((lastValue, utils) => {\n        utils.setHandler(() => {\n            return undefined;\n        }); // do nothing on initial return\n        const result = callback(lastValue);\n        const subscription = result.subscribe(x => {\n            subscription.unsubscribe();\n            utils.next(x);\n        });\n    });\n};\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nexport function runRestate() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    config.stateArray.push(restate);\n    return restate.defaultValue;\n}\nexport function runFirstState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    let initValue = defaultValue;\n    if (typeof (defaultValue) === BasicTypes.function) {\n        initValue = defaultValue();\n    }\n    // the state is actually intended to be a function\n    if (typeof (initValue) === BasicTypes.function) {\n        const original = initValue;\n        initValue = function initValueFun(...args) {\n            const result = original(...args);\n            return result;\n        };\n        initValue.original = original;\n    }\n    const push = {\n        get: function pushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return initValue;\n}\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    return setUseMemory.stateConfig.handlers.handler(defaultValue);\n}\n","import { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nexport function firstStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    config.states[config.statesIndex] = setter;\n    const support = config.support;\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(state);\n}\nexport function reStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    const support = config.support;\n    const statesIndex = config.statesIndex;\n    const prevSupport = config.prevSupport;\n    const oldStates = prevSupport?.states[statesIndex];\n    const lastValues = [];\n    const regetter = (value) => {\n        lastValues.push(value);\n        return value;\n    };\n    oldStates(regetter);\n    let index = 0;\n    const resetter = (value) => {\n        // state(value) // fake call and do not care about result\n        // fake state() having been called\n        config.stateArray.push({\n            get: () => value,\n            defaultValue: value,\n        });\n        const lastValue = lastValues[index];\n        ++index;\n        return lastValue;\n    };\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(resetter);\n}\n","import { runFirstState, runRestate } from './stateHandlers.js';\nimport { firstLetState, reLetState } from './letState.utils.js';\nimport { firstStatesHandler, reStatesHandler } from './states.utils.js';\nexport function initState(support, config) {\n    config.handlers.handler = runFirstState;\n    config.handlers.letHandler = firstLetState;\n    config.handlers.statesHandler = firstStatesHandler;\n    config.rearray = [];\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.support = support;\n}\nexport function reState(support, config, prevState, prevStates) {\n    // set previous state memory\n    config.rearray = prevState;\n    config.stateArray = [];\n    // config.states = []\n    config.states = prevStates;\n    config.statesIndex = 0;\n    config.handlers.handler = runRestate;\n    config.handlers.letHandler = reLetState;\n    config.handlers.statesHandler = reStatesHandler;\n    config.support = support;\n}\nexport class StateEchoBack {\n}\n// sends a fake value and then sets back to received value\nexport function getCallbackValue(callback) {\n    const oldState = callback(StateEchoBack); // get value and set to undefined\n    const [value] = oldState;\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n","import { getCallbackValue } from './state.utils.js';\n/*\nconst badLetState = 'letState function incorrectly used. Second item in array is not setting expected value.\\n\\n' +\n'For \"let\" state use `let name = state(default)(x => [name, name = x])`\\n\\n' +\n'For \"const\" state use `const name = state(default)()`\\n\\n' +\n'Problem state:\\n'\n*/\nexport function getStateValue(state) {\n    const callback = state.callback;\n    // state()\n    if (!callback) {\n        return state.defaultValue;\n    }\n    // letState()\n    const [value] = getCallbackValue(callback);\n    // TODO: not needed in production, needed in development\n    /*\n    const [value, checkValue] = getCallbackValue(callback)\n    if(checkValue !== StateEchoBack) {\n      const message = badLetState + (callback ? callback.toString() : JSON.stringify(state)) +'\\n'\n      console.error(message, {state, callback, value, checkValue})\n      throw new Error(message)\n    }\n    */\n    return value;\n}\n","import { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nexport function firstLetState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    const initValue = typeof (defaultValue) === BasicTypes.function ? defaultValue() : defaultValue;\n    const push = {\n        get: function getPushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return makeStateResult(initValue, push);\n}\nexport function reLetState() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    const oldValue = getStateValue(restate);\n    const push = {\n        get: function getLetState() {\n            return getStateValue(push);\n        },\n        defaultValue: restate.defaultValue,\n    };\n    config.stateArray.push(push);\n    return makeStateResult(oldValue, push);\n}\nfunction makeStateResult(initValue, push) {\n    return function msr(y) {\n        push.callback = y;\n        return initValue;\n    };\n}\n","import { firstLetState } from './letState.utils.js';\nimport { firstStatesHandler } from './states.utils.js';\nimport { runFirstState } from './stateHandlers.js';\nexport const setUseMemory = {\n    stateConfig: {\n        stateArray: [], // state memory on the first render\n        version: Date.now(),\n        handlers: {\n            handler: runFirstState,\n            letHandler: firstLetState,\n            statesHandler: firstStatesHandler,\n        }\n    },\n};\n","export function syncStates(stateFrom, stateTo, oldStates, statesFrom) {\n    // sync state() and letState()\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const fromValue = stateFrom[index].get();\n        const callback = stateTo[index].callback; // is it a let state?\n        if (!callback) {\n            continue;\n        }\n        callback(fromValue); // set the value\n    }\n    for (let index = statesFrom.length - 1; index >= 0; --index) {\n        const oldValues = [];\n        const oldGetCallback = (oldValue) => {\n            oldValues.push(oldValue);\n            return oldValue;\n        };\n        // trigger getting all old values\n        statesFrom[index](oldGetCallback);\n        let getIndex = 0;\n        const newSetCallback = (_) => {\n            return oldValues[getIndex++];\n        };\n        // trigger setting updated values\n        oldStates[index](newSetCallback);\n    }\n}\n","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered.\n * Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before, final = defaultFinally, } = {}) => {\n    const previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (before && !before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (before && !before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const firstSupport = state(() => getSupportInCycle());\n            const subject = state(() => new ValueSubject(undefined));\n            const oldState = state(() => ({\n                stateArray: setUseMemory.stateConfig.stateArray,\n                states: setUseMemory.stateConfig.states,\n            }));\n            const method = (currentValues, callback) => {\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowSupport !== firstSupport) {\n                        const newestState = oldState.stateArray;\n                        const global = firstSupport.subject.global;\n                        const oldest = global.oldest;\n                        const oldestState = oldest.state;\n                        const newStates = oldState.states;\n                        const oldStates = oldest.states;\n                        syncStates(newestState, oldestState, newStates, oldStates);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(value, onSubscription) {\n    const oldestState = state(function subjectState() {\n        // return setUseMemory.stateConfig.stateArray\n        // return setUseMemory.stateConfig.support as AnySupport\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectState() {\n        const subject = new Subject(value, onSubscription).pipe(x => {\n            syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n}\nsubject._value = (value) => {\n    const oldestState = state(function subjectValue() {\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectValue() {\n        const subject = new ValueSubject(value).pipe(x => {\n            syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => ({\n        stateArray: setUseMemory.stateConfig.stateArray,\n        states: setUseMemory.stateConfig.states,\n    }));\n    const nowSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n        return x;\n    });\n}\nsubject.all = all;\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function letState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.letHandler(defaultValue);\n}\n","import { letState } from './letState.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(prop) {\n    return getSetProp => {\n        let myProp = letState(prop)(getSetProp);\n        watch([prop], () => getSetProp(myProp = prop));\n        getSetProp(myProp); // always reset to my value and right await so that the old prop value never slips through\n        return myProp;\n    };\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nexport const providers = {\n    create: (constructMethod) => {\n        const stateDiffMemory = state(() => ({ stateDiff: 0, provider: undefined }));\n        // mimic how many states were called the first time\n        if (stateDiffMemory.stateDiff) {\n            let x = stateDiffMemory.stateDiff;\n            while (x--) {\n                state(undefined);\n            }\n            const result = state(undefined);\n            return result;\n        }\n        const result = state(() => {\n            const stateConfig = setUseMemory.stateConfig;\n            const oldStateCount = stateConfig.stateArray.length;\n            // Providers with provider requirements just need to use providers.create() and providers.inject()\n            const instance = constructMethod.prototype ? new constructMethod() : constructMethod();\n            const support = stateConfig.support;\n            const stateDiff = stateConfig.stateArray.length - oldStateCount;\n            const provider = {\n                constructMethod,\n                instance,\n                stateDiff,\n                owner: support,\n                children: [],\n            };\n            stateDiffMemory.provider = provider;\n            const global = support.subject.global;\n            const providers = global.providers = global.providers || [];\n            providers.push(provider);\n            stateDiffMemory.stateDiff = stateDiff;\n            return instance;\n        });\n        const cm = constructMethod;\n        const compareTo = cm.compareTo = cm.toString();\n        stateDiffMemory.provider.constructMethod.compareTo = compareTo;\n        return result;\n    },\n    /**\n     * @template T\n     * @param {(new (...args: any[]) => T) | () => T} constructor\n     * @returns {T}\n     */\n    inject: (constructor) => {\n        // find once, return same every time after\n        return state(() => {\n            // const memory = setUse.memory\n            const cm = constructor;\n            const compareTo = cm.compareTo = cm.compareTo || constructor.toString();\n            const support = getSupportInCycle(); // memory.stateConfig.support as AnySupport\n            const providers = [];\n            let owner = {\n                ownerSupport: support.ownerSupport\n            };\n            while (owner.ownerSupport) {\n                const ownGlobal = owner.ownerSupport.subject.global;\n                const ownerProviders = ownGlobal.providers;\n                if (!ownerProviders) {\n                    owner = owner.ownerSupport; // cause reloop checking next parent\n                    continue;\n                }\n                const provider = ownerProviders.find(provider => {\n                    providers.push(provider);\n                    const constructorMatch = provider.constructMethod.compareTo === compareTo;\n                    if (constructorMatch) {\n                        return true;\n                    }\n                });\n                if (provider) {\n                    const global = support.subject.global;\n                    const providers = global.providers = global.providers || [];\n                    providers.push(provider);\n                    provider.children.push(support);\n                    return provider.instance;\n                }\n                owner = owner.ownerSupport; // cause reloop checking next parent\n            }\n            const msg = `Could not inject provider: ${constructor.name} ${constructor}`;\n            console.warn(`${msg}. Available providers`, providers);\n            throw new Error(msg);\n        });\n    }\n};\n","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n","import { isArray, isFunction } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nexport function deepClone(obj, maxDepth) {\n    // return makeDeepClone(obj, new WeakMap())\n    return makeDeepClone(obj, maxDepth);\n}\nfunction makeDeepClone(obj, \n// visited: WeakMap<any, any>\nmaxDepth) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== BasicTypes.object) {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    /*\n    if (visited.has(obj)) {\n      return visited.get(obj)\n    }\n    */\n    if (maxDepth < 0) {\n        return obj;\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Clone each property or element of the object or array\n    if (isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], maxDepth - 1);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                clone[key] = makeDeepClone(obj[key], maxDepth - 1);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2, maxDepth) {\n    return isDeepEqual(obj1, obj2, maxDepth);\n}\nfunction isDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    // if (visited.has(obj1)) {\n    if (maxDepth < 0) {\n        return true;\n    }\n    if (typeof obj1 === BasicTypes.object && typeof obj2 === BasicTypes.object) {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        // visited.set(obj1, 0)\n        // Check if obj1 and obj2 are both arrays\n        if (isArray(obj1) && isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, maxDepth - 1);\n        }\n        else if (isArray(obj1) || isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        // return isObjectDeepEqual(obj1, obj2, visited)\n        return isObjectDeepEqual(obj1, obj2, maxDepth - 1);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, maxDepth) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = isFunction(fn0) && isFunction(fn1);\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nexport function getTemplaterResult(propWatch, props) {\n    const templater = {\n        propWatch,\n        props,\n        tagJsType: ValueTypes.templater,\n        key: function keyTemplate(arrayValue) {\n            templater.arrayValue = arrayValue;\n            return templater;\n        }\n    };\n    return templater;\n}\n","export const tags = [];\n","import { isInlineHtml, renderInlineHtml } from './tag/render/renderSupport.function.js';\nimport { renderExistingReadyTag } from './tag/render/renderExistingTag.function.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nimport { deepCompareDepth } from './tag/hasSupportChanged.function.js';\nimport { isArray, isStaticTag } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nimport { setUseMemory } from './state/index.js';\nexport function castProps(props, newSupport, depth) {\n    return props.map(prop => alterProp(prop, newSupport.ownerSupport, newSupport, depth));\n}\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, newSupport, depth) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, newSupport, depth);\n}\nexport function checkProp(value, ownerSupport, newSupport, depth) {\n    if (!value) {\n        return value;\n    }\n    if (value.tagJsType) {\n        return value;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        return getPropWrap(value, ownerSupport);\n    }\n    if (depth === deepCompareDepth) {\n        return value;\n    }\n    const skip = isSkipPropValue(value);\n    if (skip) {\n        return value; // no children to crawl through\n    }\n    if (isArray(value)) {\n        return checkArrayProp(value, newSupport, ownerSupport, depth);\n    }\n    return checkObjectProp(value, newSupport, ownerSupport, depth);\n}\nfunction checkArrayProp(value, newSupport, ownerSupport, depth) {\n    for (let index = value.length - 1; index >= 0; --index) {\n        const subValue = value[index];\n        value[index] = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        if (typeof (subValue) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, index, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction checkObjectProp(value, newSupport, ownerSupport, depth) {\n    const keys = Object.keys(value);\n    for (const name of keys) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        const newSubValue = value[name];\n        if (newSubValue === result) {\n            continue;\n        }\n        const getset = Object.getOwnPropertyDescriptor(value, name);\n        const hasSetter = getset?.get || getset?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n        if (typeof (result) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, name, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction afterCheckProp(depth, index, originalValue, newProp, newSupport) {\n    // restore object to have original function on destroy\n    if (depth > 0) {\n        const global = newSupport.subject.global;\n        newProp[index].subscription = global.destroy$.toCallback(function alterCheckProcessor() {\n            newProp[index] = originalValue;\n        });\n    }\n}\nexport function getPropWrap(value, ownerSupport) {\n    const already = value.mem;\n    // already previously converted by a parent?\n    if (already) {\n        return value;\n    }\n    const wrap = function wrapRunner(...args) {\n        return wrap.toCall(...args);\n    }; // what gets called can switch over parent state changes\n    wrap.original = value;\n    wrap.mem = value;\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = function toCallRunner(...args) {\n        return callbackPropOwner(wrap.mem, args, ownerSupport);\n    };\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport) {\n    const global = ownerSupport.subject.global;\n    const newest = global?.newest || ownerSupport;\n    const supportInCycle = getSupportInCycle();\n    const noCycle = supportInCycle === undefined;\n    const callbackResult = toCall(...callWith);\n    const run = function propCallbackProcessor() {\n        const global = newest.subject.global;\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            const allMatched = global.locked === true;\n            if (allMatched) {\n                return callbackResult; // owner did not change\n            }\n        }\n        safeRenderSupport(newest, ownerSupport);\n        return callbackResult;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUseMemory.tagClosed$.toCallback(run);\n    return callbackResult;\n}\nexport function isSkipPropValue(value) {\n    return typeof (value) !== BasicTypes.object || !value || value.tagJsType;\n}\nexport function safeRenderSupport(newest, ownerSupport) {\n    const subject = newest.subject;\n    const isInline = isInlineHtml(newest.templater);\n    if (isInline) {\n        const result = renderInlineHtml(ownerSupport, newest);\n        // TODO: below maybe never true\n        /*\n        const global = subject.global as TagGlobal\n        if(global) {\n          delete global.locked\n        }\n        */\n        return result;\n    }\n    const global = subject.global;\n    global.locked = true;\n    renderExistingReadyTag(global.newest, newest, ownerSupport, subject);\n    delete global.locked;\n}\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nexport function executeWrap(templater, result, useSupport, castedProps) {\n    const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n    const stateless = templater.tagJsType === ValueTypes.stateRender;\n    let tag;\n    if (stateless) {\n        tag = templater();\n    }\n    else {\n        tag = originalFunction(...castedProps);\n        // CALL ORIGINAL COMPONENT FUNCTION\n        if (typeof (tag) === BasicTypes.function) {\n            tag = tag();\n        }\n    }\n    tag.templater = templater;\n    templater.tag = tag;\n    const config = setUseMemory.stateConfig;\n    useSupport.state = config.stateArray;\n    useSupport.states = config.states;\n    return useSupport;\n}\n","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isArray } from '../isInstance.js';\nexport function cloneValueArray(values) {\n    return values.map(cloneTagJsValue);\n}\n/** clones only what is needed to compare differences later */\nexport function cloneTagJsValue(value, maxDepth) {\n    const tag = value;\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.stateRender:\n                return undefined;\n            case ValueTypes.dom:\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n        }\n    }\n    if (isArray(value)) {\n        return cloneValueArray(tag);\n    }\n    return deepClone(value, maxDepth);\n}\n","import { clonePropsBy } from './clonePropsBy.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** used only for apps, otherwise use Support */\nexport function getBaseSupport(templater, subject, castedProps) {\n    const baseSupport = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    // baseSupport.appSupport = baseSupport\n    const global = subject.global;\n    global.blocked = [];\n    global.destroy$ = new Subject();\n    return baseSupport;\n}\nexport function upgradeBaseToSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nsupport, appSupport, castedProps) {\n    ;\n    support.state = [];\n    support.states = [];\n    support.appSupport = appSupport;\n    const props = templater.props; // natural props\n    if (props) {\n        support.propsConfig = clonePropsBy(support, props, castedProps);\n    }\n    return support;\n}\nexport function getHtmlSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\n","import { ValueTypes } from './ValueTypes.enum.js';\nimport { cloneTagJsValue } from './cloneValueArray.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { PropWatches } from './tag.js';\nexport function clonePropsBy(support, props, castProps) {\n    const templater = support.templater;\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return support.propsConfig = {\n                latest: props,\n                castProps,\n            };\n        case PropWatches.SHALLOW:\n            return support.propsConfig = {\n                latest: props.map(x => cloneTagJsValue(x, shallowCompareDepth)),\n                castProps,\n            };\n    }\n    return support.propsConfig = {\n        latest: props.map(props => cloneTagJsValue(props, deepCompareDepth)),\n        castProps,\n    };\n}\n","import { getBaseSupport, upgradeBaseToSupport } from './Support.class.js';\nexport function getSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = getBaseSupport(templater, subject, castedProps);\n    support.ownerSupport = ownerSupport;\n    return upgradeBaseToSupport(templater, support, appSupport, castedProps);\n}\n","import { castProps } from '../alterProp.function.js';\nimport { syncFunctionProps } from './update/updateExistingTagComponent.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { PropWatches } from './tag.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { getSupport } from './getSupport.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    // this function gets called by taggedjs\n    const wrapper = function tagFunWrap(newSupport, subject, lastSupport // subject.global.newest\n    ) {\n        // wrap any prop functions that are passed in\n        const castedProps = getCastedProps(templater, newSupport, lastSupport);\n        const ownerSupport = newSupport.ownerSupport;\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject, castedProps);\n        return executeWrap(templater, result, useSupport, castedProps);\n    };\n    return wrapper;\n}\nexport function getCastedProps(templater, newSupport, lastSupport) {\n    const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n    const props = templater.props;\n    const propsConfig = newSupport.propsConfig;\n    // When defined, this must be an update where my new props have already been made for me\n    let preCastedProps = propsConfig.castProps;\n    const lastPropsConfig = lastSupport?.propsConfig;\n    const lastCastProps = lastPropsConfig?.castProps;\n    if (lastCastProps) {\n        propsConfig.castProps = lastCastProps;\n        preCastedProps = syncFunctionProps(newSupport, lastSupport, lastSupport.ownerSupport, props, maxDepth);\n    }\n    const castedProps = preCastedProps || castProps(props, newSupport, 0);\n    return castedProps;\n}\n","/** Used to give unique value to an array of tag content. Should not be an object */\nexport function key(arrayValue) {\n    return {\n        set html(newValue) {\n            newValue.arrayValue = arrayValue;\n        }\n    };\n}\n","// taggedjs-no-compile\nimport { setUseMemory } from '../state/index.js';\nimport { getTemplaterResult } from './TemplaterResult.class.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { key } from './key.js';\nlet tagCount = 0;\nexport var PropWatches;\n(function (PropWatches) {\n    PropWatches[\"DEEP\"] = \"deep\";\n    PropWatches[\"SHALLOW\"] = \"shallow\";\n    PropWatches[\"NONE\"] = \"none\";\n    PropWatches[\"IMMUTABLE\"] = \"immutable\";\n})(PropWatches || (PropWatches = {}));\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent, propWatch = PropWatches.SHALLOW) {\n    /** function developer triggers */\n    const parentWrap = function tagWrapper(...props) {\n        const templater = getTemplaterResult(propWatch, props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        innerTagWrap.original = tagComponent;\n        /*\n            if(!innerTagWrap.parentWrap) {\n              innerTagWrap.parentWrap = parentWrap as TagWrapper<unknown>\n            }\n        */\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }; // we override the function provided and pretend original is what's returned\n    const tag = tagComponent;\n    parentWrap.original = tagComponent;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUseMemory;\n    tag.ValueTypes = ValueTypes;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\ntag.renderOnce = renderOnceFn;\nfunction renderOnceFn() {\n    throw new Error('Do not call tag.renderOnce as a function but instead set it as: `(props) => tag.renderOnce = () => html`` `');\n}\n/** Used to create variable scoping when calling a function that lives within a prop container function */\nfunction tagUseFn() {\n    throw new Error('Do not call tag.use as a function but instead set it as: `(props) => tag.use = (use) => html`` `');\n}\n/** deprecated */\n;\ntag.state = tagUseFn;\ntag.use = tagUseFn;\ntag.route = routeFn;\nfunction routeFn(_routeProps) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n}\n;\ntag.key = key;\ntag.app = function (_routeTag) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\ntag.deepPropWatch = tag;\ntag.immutableProps = function immutableProps(tagComponent) {\n    return tag(tagComponent, PropWatches.IMMUTABLE);\n};\ntag.watchProps = function watchProps(tagComponent) {\n    return tag(tagComponent, PropWatches.SHALLOW);\n};\n/* BELOW: Cast functions into setters with no getters */\nObject.defineProperty(tag, 'renderOnce', {\n    set(oneRenderFunction) {\n        oneRenderFunction.tagJsType = ValueTypes.renderOnce;\n    },\n});\n// TODO: deprecate this\nObject.defineProperty(tag, 'state', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\nObject.defineProperty(tag, 'use', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\n","import { deepEqual } from '../deepFunctions.js';\nimport { isArray } from '../isInstance.js';\nimport { hasPropLengthsChanged } from './render/renderSupport.function.js';\nimport { PropWatches } from './tag.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function hasSupportChanged(lastSupport, newTemplater) {\n    const latestProps = newTemplater.props;\n    const propsConfig = lastSupport.propsConfig;\n    const pastCloneProps = propsConfig.latest;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps, lastSupport.templater.propWatch);\n    return propsChanged;\n}\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nfunction hasPropChanges(props, // natural props\npastCloneProps, // previously cloned props\npropWatch) {\n    const hasLenChanged = hasPropLengthsChanged(props, pastCloneProps);\n    if (hasLenChanged) {\n        return 11;\n    }\n    switch (propWatch) {\n        case PropWatches.NONE:\n            return 1; // always render\n        case PropWatches.SHALLOW: // determining equal is same as immutable, its the previous cloning step thats different\n            return shallowPropMatch(props, pastCloneProps);\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(props, pastCloneProps);\n    }\n    return deepPropChangeCompare(props, pastCloneProps);\n}\nfunction deepPropChangeCompare(props, pastCloneProps) {\n    // DEEP watch\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    castedProps = [...props];\n    castedPastProps = [...(pastCloneProps || [])];\n    const allFunctionsMatch = castedProps.every((value, index) => onePropCompare(value, index, castedProps, castedPastProps));\n    if (!allFunctionsMatch) {\n        return 7; // a change has been detected by function comparisons\n    }\n    return false;\n}\nexport function immutablePropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (prop !== pastProp) {\n            return 2;\n        }\n    }\n    return false; // false means has not changed\n}\nexport function shallowPropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (isArray(prop) && isArray(pastProp)) {\n            if (prop === pastProp) {\n                continue;\n            }\n            return 3.0; // not equal array\n        }\n        if (typeof (prop) === BasicTypes.function && typeof (pastProp) === BasicTypes.function) {\n            continue; // considered good\n        }\n        if (typeof (prop) === BasicTypes.object) {\n            if (typeof (pastCloneProps) === BasicTypes.object) {\n                const obEntries = Object.entries(prop);\n                for (const subItem of obEntries) {\n                    const result = objectItemMatches(subItem, pastProp);\n                    if (!result) {\n                        return 3.1;\n                    }\n                }\n            }\n            continue; // all sub objects matched\n        }\n        if (prop === pastProp) {\n            continue; // matched good\n        }\n        return 3.3; // not equal\n    }\n    return false; // false means has not changed\n}\nfunction onePropCompare(value, index, castedProps, castedPastProps) {\n    const compare = castedPastProps[index];\n    if (typeof (value) === BasicTypes.object) {\n        const subCastedProps = { ...value };\n        const subCompareProps = { ...compare || {} };\n        const matched = Object.entries(subCastedProps).every(([key, value]) => compareProps(value, subCompareProps[key], () => {\n            delete subCastedProps[key]; // its a function and not needed to be compared\n            delete subCompareProps[key]; // its a function and not needed to be compared\n        }));\n        return matched;\n    }\n    return compareProps(value, compare, () => {\n        castedProps.splice(index, 1);\n        castedPastProps.splice(index, 1);\n    });\n}\nexport const shallowCompareDepth = 3;\nexport const deepCompareDepth = 10;\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(typeof (value) === BasicTypes.function)) {\n        return deepEqual(value, compare, deepCompareDepth) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(typeof (compareFn) === BasicTypes.function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 5; // both are function the same\n    }\n    onDelete();\n    return 6;\n}\nfunction objectItemMatches([name, value], pastProp) {\n    const pastValue = pastProp[name];\n    if (typeof (value) === BasicTypes.function && typeof (pastValue) === BasicTypes.function) {\n        return true;\n    }\n    return pastValue === value;\n}\n","export let paintRemoves = [];\nexport let paintContent = [];\nexport let setContent = [];\nexport let paintAppends = [];\nexport let paintInsertBefores = [];\nexport let paintAfters = [];\nexport const painting = {\n    locks: 0\n};\nexport function paint() {\n    if (painting.locks > 0) {\n        return;\n    }\n    ++painting.locks;\n    for (const toRemove of paintRemoves) {\n        const parentNode = toRemove.parentNode;\n        parentNode.removeChild(toRemove);\n    }\n    for (const content of paintContent) {\n        content();\n    }\n    for (const [text, textNode] of setContent) {\n        textNode.textContent = text;\n    }\n    for (const now of paintAppends) {\n        now.relative.appendChild(now.element);\n    }\n    for (const { element, relative } of paintInsertBefores) {\n        relative.parentNode.insertBefore(element, relative);\n    }\n    for (const now of paintAfters) {\n        now();\n    }\n    paintRemoves = [];\n    paintContent = [];\n    paintAppends = [];\n    paintInsertBefores = [];\n    paintAfters = [];\n    setContent = [];\n    --painting.locks;\n}\n","import { paintInsertBefores } from './tag/paint.function.js';\nimport { empty } from './tag/ValueTypes.enum.js';\n// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const textNode = document.createTextNode(value); // never innerHTML\n    paintInsertBefores.push({\n        element: textNode,\n        relative: lastFirstChild,\n    });\n    return textNode;\n}\nexport function castTextValue(value) {\n    switch (value) {\n        case undefined:\n        case false:\n        case null:\n            return empty;\n    }\n    return value;\n}\n","import { paintContent } from \"../../tag/paint.function.js\";\nexport function howToSetInputValue(element, name, value) {\n    paintContent.push(() => {\n        if (value === undefined || value === false || value === null) {\n            element.removeAttribute(name);\n            return;\n        }\n        element.setAttribute(name, value);\n    });\n}\n","import { paintAfters, paintContent } from \"../../tag/paint.function.js\";\nexport function specialAttribute(name, value, element, specialName, support, counts) {\n    switch (specialName) {\n        // case 'oninit' as any:\n        case 'init': {\n            const stagger = counts.added;\n            // run delayed after elements placed down\n            paintAfters.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                value(event); // call init/oninit\n            });\n            return;\n        }\n        // case 'ondestroy' as any:\n        case 'destroy': {\n            const stagger = ++counts.removed;\n            const global = support.subject.global;\n            global.destroys = global.destroys || [];\n            global.destroys.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                return value(event); // call destroy/ondestroy\n            });\n            return;\n        }\n        case 'autofocus':\n            paintAfters.push(() => element.focus());\n            return;\n        case 'autoselect':\n            paintAfters.push(() => element.select());\n            return;\n        case 'style': {\n            const names = name.split('.');\n            // names.shift() // remove 'style'\n            paintContent.push(() => element.style[names[1]] = value); // attribute changes should come first\n            return;\n        }\n        case 'class':\n            processSpecialClass(name, value, element);\n            return;\n    }\n    throw new Error(`Invalid special attribute of ${specialName}. ${name}`);\n}\nfunction processSpecialClass(name, value, element) {\n    const names = name.split('.');\n    names.shift(); // remove class\n    // truthy\n    if (value) {\n        for (const name of names) {\n            paintContent.push(() => element.classList.add(name));\n        }\n        return;\n    }\n    // falsy\n    for (const name of names) {\n        paintContent.push(() => element.classList.remove(name));\n    }\n}\n","export function handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    return tagsWithProvider;\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(support, provider, memory = []) {\n    const subject = support.subject;\n    memory.push({\n        support,\n        renderCount: subject.renderCount,\n        provider,\n    });\n    const childTags = provider.children;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const child = childTags[index];\n        const cSubject = child.subject;\n        memory.push({\n            support: child,\n            renderCount: cSubject.renderCount,\n            provider,\n        });\n    }\n    return memory;\n}\n","import { isTagComponent } from \"../../isInstance.js\";\nimport { providersChangeCheck } from \"../../state/providersChangeCheck.function.js\";\nimport { checkRenderUp, isInlineHtml } from \"../../tag/render/renderSupport.function.js\";\nimport { ValueTypes } from \"../../tag/ValueTypes.enum.js\";\nexport function getUpTags(support, supports = []) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        supports.push(support);\n        return supports;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return getUpTags(ownerSupport, supports);\n    }\n    const newSupport = support; // global.newest as AnySupport\n    const isComponent = isTagComponent(newSupport.templater);\n    const tagJsType = support.templater.tagJsType;\n    const canContinueUp = ownerSupport && tagJsType !== ValueTypes.stateRender;\n    const continueUp = canContinueUp && (!isComponent || checkRenderUp(ownerSupport, newSupport.templater, newSupport));\n    const proSupports = providersChangeCheck(newSupport);\n    supports.push(...proSupports);\n    if (continueUp) {\n        getUpTags(ownerSupport, supports);\n        if (isComponent) {\n            supports.push(newSupport);\n        }\n        return supports; // more to keep going up, do not push this child for review\n    }\n    supports.push(newSupport);\n    return supports;\n}\n","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingReadyTag } from './renderExistingTag.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { PropWatches } from '../index.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from '../hasSupportChanged.function.js';\nexport function isInlineHtml(templater) {\n    return ValueTypes.templater === templater.tagJsType;\n}\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderSupport(support) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        global.blocked.push(support);\n        return support;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return renderInlineHtml(ownerSupport, support);\n    }\n    global.locked = true;\n    const subject = support.subject;\n    if (global.blocked.length) {\n        support = global.blocked.pop();\n        global.blocked = [];\n    }\n    delete global.locked;\n    const tag = renderExistingReadyTag(global.newest, support, ownerSupport, subject);\n    return tag;\n}\nexport function renderInlineHtml(ownerSupport, support) {\n    const ownGlobal = ownerSupport.subject.global;\n    if (!ownGlobal || ownGlobal.deleted === true) {\n        return support;\n    }\n    // ??? new change\n    const newest = ownGlobal.newest || ownerSupport;\n    const result = renderSupport(newest);\n    return result;\n}\nexport function checkRenderUp(ownerSupport, templater, support) {\n    const selfPropChange = hasPropsToOwnerChanged(templater, support);\n    // render owner up first and that will cause me to re-render\n    if (ownerSupport && selfPropChange) {\n        return true;\n    }\n    return false;\n}\nfunction hasPropsToOwnerChanged(templater, support) {\n    const nowProps = templater.props;\n    const propsConfig = support.propsConfig;\n    const latestProps = propsConfig.latest;\n    const compareLen = hasPropLengthsChanged(nowProps, latestProps);\n    if (compareLen) {\n        return true;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(nowProps, latestProps);\n        case PropWatches.SHALLOW:\n            return shallowPropMatch(nowProps, latestProps);\n    }\n    return !deepEqual(nowProps, latestProps, deepCompareDepth);\n}\nexport function hasPropLengthsChanged(nowProps, latestProps) {\n    const nowLen = nowProps.length;\n    const latestLen = latestProps.length;\n    /*\n    const noLength = nowProps && nowLen === 0 && latestLen === 0\n  \n    if(noLength) {\n      return false\n    }\n    */\n    return nowLen !== latestLen;\n}\n","import { handleProviderChanges } from './handleProviderChanges.function.js';\nexport function providersChangeCheck(support) {\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (!providers) {\n        return [];\n    }\n    const prosWithChanges = [];\n    // reset clones\n    for (const provider of providers) {\n        const owner = provider.owner;\n        const hasChange = handleProviderChanges(owner, provider);\n        prosWithChanges.push(...hasChange.map(x => x.support));\n    }\n    return prosWithChanges;\n}\n","import { paint, painting } from '../../tag/paint.function.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nexport function renderTagUpdateArray(supports) {\n    ++painting.locks;\n    supports.forEach(mapTagUpdate);\n    --painting.locks;\n    paint();\n}\nfunction mapTagUpdate(support) {\n    const global = support.subject.global;\n    if (!global) {\n        return; // while rendering a parent, a child may have been deleted (pinbowl)\n    }\n    // renderSupport(support)\n    renderSupport(global.newest);\n}\n","// taggedjs-no-compile\n/** File largely responsible for reacting to element events, such as onclick */\nimport { isPromise, isTagComponent } from '../../isInstance.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nimport { getUpTags } from './getUpTags.function.js';\nimport { renderTagUpdateArray } from './renderTagArray.function.js';\nconst noData = 'no-data-ever';\nconst promiseNoData = 'promise-no-data-ever';\nexport function bindSubjectCallback(value, support) {\n    const global = support.subject.global;\n    // MAIN EVENT CALLBACK PROCESSOR\n    const subjectFunction = function (element, args) {\n        if (global.deleted === true) {\n            return;\n        }\n        // const newest = global.newest as AnySupport // || subjectFunction.support\n        return runTagCallback(subjectFunction.tagFunction, subjectFunction.support, // newest\n        element, args);\n    };\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    subjectFunction.support = support;\n    return subjectFunction;\n}\nexport function runTagCallback(value, support, bindTo, args) {\n    // get actual component owner not just the html`` support\n    let component = support;\n    while (component.ownerSupport && !isTagComponent(component.templater)) {\n        component = component.ownerSupport;\n    }\n    const global = component.subject.global; // tag.subject.global as TagGlobal\n    global.locked = true; // prevent another render from re-rendering this tag\n    // ACTUAL CALLBACK TO ORIGINAL FUNCTION\n    const callbackResult = value.apply(bindTo, args);\n    return afterTagCallback(callbackResult, component);\n}\nexport function afterTagCallback(callbackResult, eventHandlerSupport) {\n    const global = eventHandlerSupport.subject.global; // tag.subject.global as SupportTagGlobal\n    delete global.locked;\n    return renderCallbackSupport(eventHandlerSupport, callbackResult, global);\n}\nfunction renderCallbackSupport(last, callbackResult, global) {\n    const tagsToUpdate = getUpTags(last);\n    renderTagUpdateArray(tagsToUpdate);\n    return checkAfterCallbackPromise(callbackResult, last, global);\n}\nexport function checkAfterCallbackPromise(callbackResult, last, global) {\n    if (isPromise(callbackResult)) {\n        const global0 = last.subject.global;\n        global0.locked = true;\n        return callbackResult.then(() => {\n            if (global.deleted === true) {\n                return promiseNoData; // tag was deleted during event processing\n            }\n            const global1 = last.subject.global;\n            delete global1.locked;\n            const tagsToUpdate = getUpTags(last);\n            renderTagUpdateArray(tagsToUpdate);\n            return promiseNoData;\n        });\n    }\n    return noData;\n}\nexport function runBlocked(tag) {\n    const global = tag.subject.global;\n    const blocked = global.blocked;\n    for (const block of blocked) {\n        const lastResult = renderSupport(block);\n        global.newest = lastResult;\n    }\n    global.blocked = [];\n    return global.newest;\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { processTagCallbackFun } from './processAttribute.function.js';\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nconst actions = ['init', 'destroy']; // oninit ondestroy\nexport function processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial) {\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    if (typeof (value) === BasicTypes.function) {\n        if (isSpecial && actions.includes(attrName)) {\n            specialAttribute(attrName, value, element, attrName, support, counts);\n            return;\n        }\n        return processTagCallbackFun(contextItem, value, support, attrName, element);\n    }\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    contextItem.isSpecial = isSpecial;\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial) {\n    if (isSpecial) {\n        return specialAttribute(attrName, value, element, isSpecial, support, counts);\n    }\n    howToSet(element, attrName, value);\n}\n","export function addSupportEventListener(support, eventName, element, callback) {\n    const elm = support.appElement;\n    // cast events that do not bubble up into ones that do\n    if (eventName === 'blur') {\n        eventName = 'focusout';\n    }\n    const replaceEventName = '_' + eventName;\n    // const replaceEventName = eventName\n    const global = support.subject.global;\n    const eventReg = global.events;\n    if (!eventReg[eventName]) {\n        const listener = function eventCallback(event) {\n            event.originalStopPropagation = event.stopPropagation;\n            bubbleEvent(event, replaceEventName, event.target);\n        };\n        eventReg[eventName] = listener;\n        elm.addEventListener(eventName, listener);\n    }\n    // attach to element but not as \"_click\" and \"_keyup\"\n    ;\n    element[replaceEventName] = callback;\n    element[eventName] = callback;\n}\nfunction bubbleEvent(event, replaceEventName, target) {\n    const callback = target[replaceEventName];\n    if (callback) {\n        let stopped = false;\n        event.stopPropagation = function () {\n            stopped = true;\n            event.originalStopPropagation.call(event);\n        };\n        callback(event);\n        if (event.defaultPrevented || stopped) {\n            return;\n        }\n    }\n    const parentNode = target.parentNode;\n    if (parentNode) {\n        bubbleEvent(event, replaceEventName, parentNode);\n    }\n}\n","import { addSupportEventListener } from './addSupportEventListener.function.js';\nexport function processAttributeFunction(element, newAttrValue, support, attrName) {\n    const fun = function (...args) {\n        return fun.tagFunction(element, args);\n    };\n    // access to original function\n    fun.tagFunction = newAttrValue;\n    fun.support = support;\n    addSupportEventListener(support.appSupport, attrName, element, // support.appSupport.appElement as Element,\n    fun);\n}\n","/** Looking for (class | style) followed by a period */\nexport function isSpecialAttr(attrName) {\n    if (attrName.startsWith('class.')) {\n        return 'class';\n    }\n    const specialAction = isSpecialAction(attrName);\n    if (specialAction !== false) {\n        return true;\n    }\n    if (attrName.startsWith('style.')) {\n        return 'style';\n    }\n    return false;\n}\nexport function isSpecialAction(attrName) {\n    switch (attrName) {\n        case 'autoselect':\n            return 'autoselect';\n        case 'autofocus':\n            return 'autofocus';\n        case 'oninit': // when read in compile process\n        case 'init': // when read in realtime\n            return 'oninit';\n        case 'ondestroy': // when read in compile process\n        case 'destroy': // when read in realtime\n            return 'destroy';\n    }\n    return false;\n}\n","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { isFunction, isObject, isSubjectInstance } from '../../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nimport { BasicTypes, ValueTypes, empty } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { processDynamicNameValueAttribute, processNonDynamicAttr } from './processNameValueAttribute.function.js';\nimport { addOneContext, checkSimpleValueChange } from '../../tag/index.js';\nimport { processAttributeFunction } from './processAttributeCallback.function.js';\nimport { isSpecialAttr } from './isSpecialAttribute.function.js';\n/** Sets attribute value, subscribes to value updates  */\nexport function processAttribute(values, attrName, element, support, howToSet, //  = howToSetInputValue\ncontext, isSpecial, counts, value) {\n    const nameVar = getTagJsVar(attrName);\n    const isNameVar = nameVar >= 0;\n    if (isNameVar) {\n        const value = values[nameVar];\n        const contextItem = addOneContext(value, context, true);\n        contextItem.isAttr = true;\n        contextItem.element = element;\n        contextItem.howToSet = howToSet;\n        contextItem.isNameOnly = true;\n        processNameOnlyAttrValue(values, value, element, support, howToSet, context, counts);\n        return;\n    }\n    const valueVar = getTagJsVar(value);\n    if (valueVar >= 0) {\n        const value = values[valueVar];\n        const contextItem = {\n            isAttr: true,\n            element,\n            attrName: attrName,\n            checkValueChange: checkSimpleValueChange,\n            withinOwnerElement: true,\n        };\n        context.push(contextItem);\n        const isSubject = isSubjectInstance(contextItem.value);\n        if (isSubject) {\n            return processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        }\n        processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial);\n        contextItem.value = value;\n        return;\n    }\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function updateNameOnlyAttrValue(values, attrValue, lastValue, element, ownerSupport, howToSet, context, counts) {\n    // check to remove previous attribute(s)\n    if (lastValue) {\n        if (isNoDisplayValue(attrValue)) {\n            element.removeAttribute(lastValue);\n            return;\n        }\n        if (typeof (lastValue) === BasicTypes.object) {\n            const isObStill = typeof (attrValue) === BasicTypes.object;\n            if (isObStill) {\n                for (const name in lastValue) {\n                    // if((attrValue as any)[name]) {\n                    if (name in attrValue) {\n                        continue;\n                    }\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n            else {\n                for (const name in lastValue) {\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n        }\n    }\n    processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts);\n}\nexport function processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts) {\n    if (isNoDisplayValue(attrValue)) {\n        return;\n    }\n    // process an object of attributes ${{class:'something, checked:true}}\n    if (typeof attrValue === BasicTypes.object) {\n        for (const name in attrValue) {\n            const value = attrValue[name];\n            processAttribute(values, name, element, ownerSupport, howToSet, context, isSpecialAttr(name), // only object variables are evaluated for is special attr\n            counts, value);\n        }\n        return;\n    }\n    // regular attributes\n    if (attrValue.length === 0) {\n        return; // ignore, do not set at this time\n    }\n    howToSet(element, attrValue, empty);\n}\n/** Processor for flat attributes and object attributes */\nfunction processNameValueAttributeAttrSubject(attrName, result, element, support, howToSet, isSpecial, counts) {\n    if (isSpecial) {\n        paintContent.push(function paintContent() {\n            element.removeAttribute(attrName);\n        });\n    }\n    const contextValueSubject = result.value;\n    if (isSubjectInstance(contextValueSubject)) {\n        const callback = function processAttrCallback(newAttrValue) {\n            processAttributeEmit(newAttrValue, attrName, result, element, support, howToSet, isSpecial, counts);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        const global = result.global;\n        const subs = global.subscriptions = global.subscriptions || [];\n        subs.push(sub);\n    }\n    processAttributeEmit(result.value, attrName, result, element, support, howToSet, isSpecial, counts);\n    return;\n}\nexport function processAttributeEmit(newAttrValue, attrName, subject, element, support, howToSet, isSpecial, counts) {\n    // should the function be wrapped so every time its called we re-render?\n    if (isFunction(newAttrValue)) {\n        return callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processAttributeSubjectValue(newAttrValue, element, attrName, special, howToSet, support, counts) {\n    switch (newAttrValue) {\n        case undefined:\n        case false:\n        case null:\n            paintContent.push(function paintContentPush() {\n                element.removeAttribute(attrName);\n            });\n            return;\n    }\n    if (special !== false) {\n        specialAttribute(attrName, newAttrValue, element, special, // name\n        support, counts);\n        return;\n    }\n    if (isFunction(newAttrValue)) {\n        return processAttributeFunction(element, newAttrValue, support, attrName);\n    }\n    // value is 0\n    howToSet(element, attrName, newAttrValue);\n}\nfunction callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts) {\n    const wrapper = support.templater.wrapper;\n    const tagJsType = wrapper?.tagJsType || wrapper?.original?.tagJsType;\n    const oneRender = tagJsType === ValueTypes.renderOnce;\n    if (!oneRender) {\n        return processTagCallbackFun(subject, newAttrValue, support, attrName, element);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processTagCallbackFun(subject, newAttrValue, support, attrName, element) {\n    const prevFun = subject.value;\n    if (prevFun && prevFun.tagFunction && prevFun.support) {\n        prevFun.tagFunction = newAttrValue;\n        prevFun.support = support;\n        return prevFun;\n    }\n    // tag has state and will need all functions wrapped to cause re-renders\n    newAttrValue = bindSubjectCallback(newAttrValue, support);\n    return processAttributeFunction(element, newAttrValue, support, attrName);\n}\nfunction getTagJsVar(attrPart) {\n    if (isObject(attrPart) && 'tagJsVar' in attrPart)\n        return attrPart.tagJsVar;\n    return -1;\n    // return (attrPart as TagVarIdNum)?.tagJsVar || -1\n}\nexport function isNoDisplayValue(attrValue) {\n    return undefined === attrValue || null === attrValue || false === attrValue;\n}\n","// taggedjs-no-compile\nimport { processFirstSubjectValue } from \"../../tag/update/processFirstSubjectValue.function.js\";\nimport { howToSetInputValue } from \"../attributes/howToSetInputValue.function.js\";\nimport { paintAppends, paintInsertBefores } from \"../../tag/paint.function.js\";\nimport { processAttribute } from \"../attributes/processAttribute.function.js\";\nimport { addOneContext } from \"../../tag/index.js\";\nimport { isSubjectInstance } from \"../../isInstance.js\";\nimport { empty } from \"../../tag/ValueTypes.enum.js\";\nconst someDiv = (typeof document === 'object' && document.createElement('div')); // used for content cleaning\nexport function attachDomElements(nodes, values, support, counts, // used for animation stagger computing\ncontext, depth, // used to know if dynamic variables live within parent owner tag/support\nowner, insertBefore, subs = []) {\n    const dom = [];\n    for (const node of nodes) {\n        const newNode = {}; // DomObjectText\n        dom.push(newNode);\n        const value = node.v;\n        const isNum = !isNaN(value);\n        if (isNum) {\n            attachDynamicDom(values, context, owner, support, subs, counts, depth);\n            continue;\n        }\n        if (node.nn === 'text') {\n            const textNode = newNode;\n            const string = textNode.tc = node.tc;\n            someDiv.innerHTML = string;\n            const domElement = textNode.domElement = document.createTextNode(someDiv.innerText);\n            domElement.id = `tp_${context.length}_${values.length}`;\n            if (owner) {\n                paintAppends.push({\n                    element: domElement,\n                    relative: owner,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: domElement,\n                    relative: insertBefore,\n                });\n            }\n            continue;\n        }\n        const domElement = newNode.domElement = document.createElement(node.nn);\n        // attributes that may effect style, come first\n        if (node.at) {\n            node.at.map(attr => {\n                const name = attr[0];\n                const value = attr[1];\n                const isSpecial = attr[2] || false;\n                processAttribute(values, name, domElement, support, howToSetInputValue, context, isSpecial, counts, value);\n            });\n        }\n        if (owner) {\n            paintAppends.push({\n                element: domElement,\n                relative: owner,\n            });\n        }\n        else {\n            paintInsertBefores.push({\n                element: domElement,\n                relative: insertBefore,\n            });\n        }\n        if (node.ch) {\n            newNode.ch = attachDomElements(node.ch, values, support, counts, context, depth + 1, domElement, insertBefore, subs).dom;\n        }\n    }\n    return { subs, dom, context };\n}\nfunction attachDynamicDom(values, context, owner, support, subs, counts, // used for animation stagger computing\ndepth) {\n    const subVal = values[context.length];\n    const marker = document.createTextNode(empty);\n    marker.id = `dvp_${context.length}_${values.length}`;\n    const contextItem = addOneContext(subVal, context, depth > 0);\n    contextItem.placeholder = marker;\n    if (owner) {\n        paintAppends.push({\n            relative: owner,\n            element: marker,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: marker,\n            relative: support.subject.placeholder,\n        });\n    }\n    if (isSubjectInstance(subVal)) {\n        subs.push({\n            insertBefore: marker,\n            appendTo: owner,\n            subject: subVal,\n            support, // ownerSupport,\n            counts,\n            contextItem,\n        });\n        return;\n    }\n    const global = support.subject.global;\n    global.locked = true;\n    processFirstSubjectValue(subVal, contextItem, support, counts, `rvp_${context.length}_${values.length}`, owner);\n    const global2 = support.subject.global;\n    delete global2.locked;\n    contextItem.value = subVal;\n    return;\n}\n","import { attachDomElements } from '../interpolations/optimizers/attachDomElements.function.js';\nimport { checkSimpleValueChange } from './index.js';\nimport { getDomMeta } from './domMetaCollector.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { painting } from './paint.function.js';\n/** Function that kicks off actually putting tags down as HTML elements */\nexport function buildBeforeElement(support, counts, element, insertBefore) {\n    const global = support.subject.global;\n    global.oldest = support;\n    global.newest = support;\n    ++painting.locks;\n    const result = getHtmlDomMeta(support, counts, element, insertBefore);\n    global.htmlDomMeta = result.dom;\n    --painting.locks;\n    // return fragment\n    return result;\n}\nfunction getHtmlDomMeta(support, counts, appendTo, insertBefore) {\n    const domMeta = loadDomMeta(support);\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    const context = [];\n    const global = support.subject.global;\n    global.context = context;\n    const result = attachDomElements(domMeta, values, support, counts, context, 0, appendTo, insertBefore);\n    return result;\n}\nfunction loadDomMeta(support) {\n    const templater = support.templater;\n    const thisTag = templater.tag; // || templater\n    if (thisTag.tagJsType === ValueTypes.dom) {\n        return thisTag.dom;\n    }\n    return getDomMeta(thisTag.strings, thisTag.values);\n}\nexport function addOneContext(value, context, withinOwnerElement) {\n    const contextItem = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement,\n    };\n    context.push(contextItem);\n    return contextItem;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { getHtmlSupport } from '../Support.class.js';\nimport { checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** When first time render, adds to owner childTags\n * Used for BOTH inserts & updates to values that were something else\n * Intended use only for updates\n*/\nexport function processTag(ownerSupport, // owner\nsubject, // could be tag via result.tag\ncounts) {\n    const global = subject.global;\n    const support = global.newest;\n    support.ownerSupport = ownerSupport;\n    subject.checkValueChange = checkTagValueChange;\n    const ph = subject.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, ph);\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        tagJsType: ValueTypes.templater,\n    };\n    return fake;\n}\n/** Create support for a tag component */\nexport function newSupportByTemplater(templater, ownerSupport, subject) {\n    const support = getHtmlSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const global = subject.global;\n    global.context = [];\n    return support;\n}\n","import { processAttributeEmit, updateNameOnlyAttrValue } from '../interpolations/attributes/processAttribute.function.js';\nconst emptyCounts = { added: 0, removed: 0 };\nexport function processUpdateAttrContext(values, value, contextItem, ownerSupport) {\n    if (contextItem.isNameOnly) {\n        updateNameOnlyAttrValue(values, value, contextItem.value, contextItem.element, // global.element as Element,\n        ownerSupport, contextItem.howToSet, [], // Context, but we dont want to alter current\n        emptyCounts);\n        contextItem.value = value;\n        return;\n    }\n    const element = contextItem.element;\n    processAttributeEmit(value, contextItem.attrName, contextItem, element, ownerSupport, contextItem.howToSet, contextItem.isSpecial, emptyCounts);\n    contextItem.value = value;\n    return;\n}\n","import { processUpdateAttrContext } from './processUpdateAttrContext.function.js';\nimport { updateExistingValue } from './update/updateExistingValue.function.js';\nimport { isSubjectInstance } from '../isInstance.js';\nexport function processUpdateContext(support, context) {\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    let index = 0;\n    const len = values.length;\n    while (index < len) {\n        processUpdateOneContext(values, index, context, support);\n        ++index;\n    }\n    return context;\n}\n/** returns boolean of did render */\nexport function processUpdateOneContext(values, index, context, ownerSupport) {\n    const value = values[index];\n    // is something already there?\n    const contextItem = context[index];\n    if (isSubjectInstance(value)) {\n        return; // emits on its own\n    }\n    if (contextItem.isAttr) {\n        // Do not continue if the value is just the same\n        if (value === contextItem.value) {\n            return;\n        }\n        processUpdateAttrContext(values, value, contextItem, ownerSupport);\n        contextItem.value = value;\n    }\n    // listeners will evaluate updated values to possibly update display(s)\n    updateExistingValue(contextItem, value, ownerSupport);\n    contextItem.value = value;\n}\n","import { paint, painting } from './paint.function.js';\nimport { processUpdateContext } from './processUpdateContext.function.js';\nexport function updateSupportBy(olderSupport, newerSupport) {\n    const global = olderSupport.subject.global;\n    const context = global.context;\n    updateSupportValuesBy(olderSupport, newerSupport);\n    ++painting.locks;\n    processUpdateContext(olderSupport, context);\n    --painting.locks;\n    paint();\n}\nexport function updateSupportValuesBy(olderSupport, newerSupport) {\n    const tempTag = (newerSupport.templater.tag || newerSupport.templater);\n    const values = newerSupport.templater.values || tempTag.values;\n    const tag = olderSupport.templater.tag;\n    tag.values = values;\n}\n","import { getFakeTemplater, newSupportByTemplater, processTag } from './processTag.function.js';\nimport { processNowRegularValue } from './processRegularValue.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nimport { isArray, isTagComponent } from '../../isInstance.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { getSupport } from '../getSupport.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n/** Used for all tag value updates. Determines if value changed since last render */\nexport function updateExistingValue(contextItem, value, ownerSupport) {\n    // Do not continue if the value is just the same\n    if (value === contextItem.value) {\n        return;\n    }\n    const wasDestroyed = contextItem.checkValueChange(value, contextItem);\n    if (wasDestroyed === -1) {\n        return; // do nothing\n    }\n    // handle already seen tag components\n    const tagJsType = value && value.tagJsType;\n    if (tagJsType) {\n        if (tagJsType === ValueTypes.renderOnce) {\n            return;\n        }\n        const isComp = isTagComponent(value);\n        if (isComp) {\n            if (!contextItem.global) {\n                getNewGlobal(contextItem);\n            }\n            prepareUpdateToComponent(value, contextItem, ownerSupport);\n            return;\n        }\n    }\n    const global = contextItem.global;\n    if (global) {\n        // its html/dom based tag\n        const support = global.newest;\n        if (support) {\n            updateContextItemBySupport(support, contextItem, value, ownerSupport);\n            return;\n        }\n    }\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater:\n                processTag(ownerSupport, contextItem, fooCounts);\n                return;\n            case ValueTypes.tag:\n            case ValueTypes.dom: {\n                const tag = value;\n                let templater = tag.templater;\n                if (!templater) {\n                    templater = getFakeTemplater();\n                    tag.templater = templater;\n                    templater.tag = tag;\n                }\n                const nowGlobal = (contextItem.global ? contextItem.global : getNewGlobal(contextItem));\n                nowGlobal.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n                processTag(ownerSupport, contextItem, fooCounts);\n                return;\n            }\n        }\n    }\n    if (isArray(value)) {\n        processTagArray(contextItem, value, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        contextItem.value = value; // do not render functions that are not explicity defined as tag html processing\n        return;\n    }\n    if (wasDestroyed) {\n        processNowRegularValue(value, contextItem);\n    }\n}\nfunction handleStillTag(lastSupport, subject, value, ownerSupport) {\n    const templater = value.templater || value;\n    const valueSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const lastSubject = lastSupport.subject;\n    const newGlobal = lastSubject.global;\n    const oldest = newGlobal.oldest;\n    updateSupportBy(oldest, valueSupport);\n}\nfunction prepareUpdateToComponent(templater, contextItem, ownerSupport) {\n    const global = contextItem.global;\n    // When last value was not a component\n    if (!global.newest) {\n        processReplacementComponent(templater, contextItem, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    const support = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    updateExistingTagComponent(ownerSupport, support, // latest value\n    contextItem);\n}\n/** Used to destro */\nfunction updateContextItemBySupport(support, contextItem, value, ownerSupport) {\n    if (typeof (value) === BasicTypes.function) {\n        return;\n    }\n    handleStillTag(support, contextItem, value, ownerSupport);\n    return;\n}\n","import { deepCompareDepth, hasSupportChanged, shallowCompareDepth } from '../hasSupportChanged.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { castProps, isSkipPropValue } from '../../alterProp.function.js';\nimport { renderSupport } from '../render/renderSupport.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { destroySupport } from '../destroySupport.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { isArray } from '../../isInstance.js';\nimport { PropWatches } from '../tag.js';\nexport function updateExistingTagComponent(ownerSupport, support, // lastest\nsubject) {\n    const global = subject.global;\n    const lastSupport = global.newest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = support.templater.wrapper;\n    let isSameTag = false;\n    const tagJsType = support.templater.tagJsType;\n    const skipComparing = ValueTypes.stateRender === tagJsType || ValueTypes.renderOnce === tagJsType;\n    if (skipComparing) {\n        isSameTag = support.templater.tagJsType === ValueTypes.renderOnce || isLikeTags(lastSupport, support);\n    }\n    else if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.original;\n        const newFunction = newWrapper.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = support.templater;\n    if (!isSameTag) {\n        swapTags(subject, templater, ownerSupport);\n        return;\n    }\n    const hasChanged = skipComparing || hasSupportChanged(lastSupport, templater);\n    // everyhing has matched, no display needs updating.\n    if (!hasChanged) {\n        const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n        syncSupports(templater, support, lastSupport, ownerSupport, maxDepth);\n        return;\n    }\n    if (global.locked) {\n        global.blocked.push(support);\n        return;\n    }\n    renderSupport(support);\n    return;\n}\nexport function syncFunctionProps(newSupport, lastSupport, ownerSupport, newPropsArray, // templater.props\nmaxDepth, depth = -1) {\n    const global = lastSupport.subject.global;\n    const newest = global.newest;\n    if (!newest) {\n        const castedProps = castProps(newPropsArray, newSupport, depth);\n        newPropsArray.push(...castedProps);\n        const propsConfig = newSupport.propsConfig;\n        propsConfig.castProps = castedProps;\n        return newPropsArray;\n    }\n    lastSupport = newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.castProps;\n    const newArray = [];\n    for (let index = 0; index < newPropsArray.length; ++index) {\n        const prop = newPropsArray[index];\n        const priorProp = priorPropsArray[index];\n        const newValue = syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, depth + 1, maxDepth);\n        newArray.push(newValue);\n    }\n    const newPropsConfig = newSupport.propsConfig;\n    newPropsConfig.castProps = newArray;\n    return newArray;\n}\nfunction syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth) {\n    if (typeof (priorProp) === BasicTypes.function) {\n        // the prop i am receiving, is already being monitored/controlled by another parent\n        if (prop.mem) {\n            priorProp.mem = prop.mem;\n            return prop;\n        }\n        priorProp.mem = prop;\n        return priorProp;\n    }\n    // prevent infinite recursion\n    if (depth === maxDepth) {\n        return prop;\n    }\n    if (isSkipPropValue(prop)) {\n        return prop; // no children to crawl through\n    }\n    if (isArray(prop)) {\n        return updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth);\n    }\n    if (priorProp === undefined) {\n        return prop;\n    }\n    return updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n}\nfunction updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    const keys = Object.keys(prop);\n    for (const name of keys) {\n        const subValue = prop[name];\n        const result = syncPriorPropFunction(priorProp[name], subValue, newSupport, ownerSupport, maxDepth, depth + 1);\n        if (prop[name] === result) {\n            continue;\n        }\n        const hasSetter = Object.getOwnPropertyDescriptor(prop, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        ;\n        prop[name] = result;\n    }\n    return prop;\n}\nfunction updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth) {\n    for (let index = prop.length - 1; index >= 0; --index) {\n        const x = prop[index];\n        prop[index] = syncPriorPropFunction(priorProp[index], x, newSupport, ownerSupport, depth + 1, index);\n    }\n    return prop;\n}\nexport function moveProviders(lastSupport, newSupport) {\n    const global = lastSupport.subject.global;\n    let pIndex = -1;\n    const providers = global.providers = global.providers || [];\n    const pLen = providers.length - 1;\n    while (pIndex++ < pLen) {\n        const provider = providers[pIndex];\n        let index = -1;\n        const pcLen = provider.children.length - 1;\n        while (index++ < pcLen) {\n            const child = provider.children[index];\n            const wasSameGlobals = global === child.subject.global;\n            if (wasSameGlobals) {\n                provider.children.splice(index, 1);\n                provider.children.push(newSupport);\n                return;\n            }\n        }\n    }\n}\nfunction syncSupports(templater, support, lastSupport, ownerSupport, maxDepth) {\n    // update function refs to use latest references\n    const newProps = templater.props;\n    const castedProps = syncFunctionProps(support, lastSupport, ownerSupport, newProps, maxDepth);\n    const propsConfig = support.propsConfig;\n    // When new support actually makes call to real function, use these pre casted props\n    propsConfig.castProps = castedProps;\n    const lastPropsConfig = lastSupport.propsConfig;\n    // update support to think it has different cloned props\n    lastPropsConfig.latest = propsConfig.latest;\n    return lastSupport; // its the same tag component  \n}\n/** Was tag, will be tag */\nfunction swapTags(subject, templater, // new tag\nownerSupport) {\n    const global = subject.global;\n    const oldestSupport = global.oldest;\n    destroySupport(oldestSupport);\n    getNewGlobal(subject);\n    const newSupport = processReplacementComponent(templater, subject, ownerSupport, { added: 0, removed: 0 });\n    return newSupport;\n}\n","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { setContent } from '../paint.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nexport function processUpdateRegularValue(value, contextItem) {\n    const castedValue = castTextValue(value);\n    const oldClone = contextItem.simpleValueElm; // placeholder\n    setContent.push([castedValue, oldClone]);\n}\n/** Used during updates that were another value/tag first but now simple string */\nexport function processNowRegularValue(value, subject) {\n    subject.checkValueChange = checkSimpleValueChange;\n    const before = subject.placeholder;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    subject.simpleValueElm = updateBeforeTemplate(castedValue, before);\n}\n","import { getTemplaterResult } from '../TemplaterResult.class.js';\nimport { checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { PropWatches } from '../tag.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processNewArrayValue(value, ownerSupport, contextItem) {\n    const tagJsType = value.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater: {\n                const templater = value;\n                const tag = templater.tag;\n                processNewTag(tag, ownerSupport, contextItem);\n                break;\n            }\n            case ValueTypes.tag:\n            case ValueTypes.dom:\n                processNewTag(value, ownerSupport, contextItem);\n                break;\n        }\n    }\n    return contextItem;\n}\nfunction processNewTag(value, ownerSupport, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const tag = value;\n    let templater = tag.templater;\n    // TODO: Can this ever happen?\n    if (!templater) {\n        templater = getTemplaterResult(PropWatches.DEEP);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const global = contextItem.global = getNewGlobal(contextItem); // contextItem.global as SupportTagGlobal\n    const newest = global.newest = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    global.oldest = newest;\n    return contextItem;\n}\n","import { getSupportInCycle } from './getSupportInCycle.function.js';\nimport { setUseMemory } from '../state/index.js';\nimport { Subject } from '../subject/index.js';\n// Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering\nsetUseMemory.tagClosed$ = new Subject(undefined, function tagCloser(subscription) {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(support) {\n    // TODO: We don't need to remove from parents if parent is being destroyed\n    // remove me from my parents\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (providers) {\n        for (const provider of providers) {\n            for (let index = provider.children.length - 1; index >= 0; --index) {\n                const child = provider.children[index];\n                if (child.subject.global === global) {\n                    provider.children.splice(index, 1);\n                }\n            }\n        }\n    }\n    if (global.destroy$) {\n        global.destroy$.next();\n    }\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n}\n","import { isTagComponent } from '../isInstance.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function getChildTagsToDestroy(childTags) {\n    for (const child of childTags) {\n        const lastArray = child.lastArray;\n        if (lastArray) {\n            getChildTagsToDestroy(lastArray);\n            continue;\n        }\n        const global = child.global;\n        if (!global) {\n            continue; // not a support contextItem\n        }\n        const support = global.newest;\n        const iSubs = global.subscriptions;\n        if (iSubs) {\n            iSubs.forEach(iSub => iSub.unsubscribe());\n        }\n        if (isTagComponent(support.templater)) {\n            runBeforeDestroy(support);\n        }\n        const subTags = global.context;\n        getChildTagsToDestroy(subTags);\n    }\n}\nexport function getChildTagsToSoftDestroy(childTags, tags = [], subs = []) {\n    for (const child of childTags) {\n        const global = child.global;\n        if (!global) {\n            continue;\n        }\n        const support = global.newest;\n        if (support) {\n            tags.push(support);\n            const iSubs = global.subscriptions;\n            if (iSubs) {\n                subs.push(...iSubs);\n            }\n        }\n        const subTags = global.context;\n        if (subTags) {\n            getChildTagsToSoftDestroy(subTags, tags, subs);\n        }\n    }\n    return { tags, subs };\n}\n","import { destroyArray } from './checkDestroyPrevious.function.js';\nimport { paint, paintRemoves } from './paint.function.js';\n/** sets global.deleted on support and all children */\nexport function smartRemoveKids(support, allPromises) {\n    const subject = support.subject;\n    const global = subject.global;\n    const htmlDomMeta = global.htmlDomMeta;\n    const context = global.context;\n    global.deleted = true;\n    const destroys = global.destroys;\n    if (destroys) {\n        return processContextDestroys(destroys, context, allPromises, htmlDomMeta);\n    }\n    smartRemoveByContext(context, allPromises);\n    destroyClones(htmlDomMeta);\n}\n// Elements that have a destroy or ondestroy attribute\nfunction processContextDestroys(destroys, context, allPromises, htmlDomMeta) {\n    const promises = [];\n    destroys.forEach(destroy => {\n        const maybePromise = destroy();\n        const isPromise = maybePromise instanceof Promise;\n        if (isPromise) {\n            promises.push(maybePromise);\n        }\n    });\n    if (promises.length) {\n        const lastPromise = Promise.all(promises)\n            .then(() => {\n            // continue to remove\n            smartRemoveByContext(context, allPromises);\n            destroyClones(htmlDomMeta);\n            paint();\n        });\n        // run destroy animations\n        allPromises.push(lastPromise);\n        return;\n    }\n    smartRemoveByContext(context, allPromises);\n    destroyClones(htmlDomMeta);\n    paint();\n}\nfunction smartRemoveByContext(context, allPromises) {\n    for (const subject of context) {\n        if (subject.withinOwnerElement) {\n            continue; // i live within my owner variable. I will be deleted with owner\n        }\n        const lastArray = subject.lastArray;\n        if (lastArray) {\n            destroyArray(subject, lastArray);\n            continue;\n        }\n        // regular values, no placeholders\n        const elm = subject.simpleValueElm;\n        if (elm) {\n            delete subject.simpleValueElm;\n            paintRemoves.push(elm);\n            continue;\n        }\n        const subGlobal = subject.global;\n        if (subGlobal === undefined) {\n            continue; // subject\n        }\n        if (subGlobal.deleted === true) {\n            continue; // already deleted\n        }\n        subGlobal.deleted = true;\n        const oldest = subGlobal.oldest;\n        if (oldest) {\n            smartRemoveKids(oldest, allPromises);\n            continue;\n        }\n    }\n}\nfunction destroyClones(oldClones) {\n    // check subjects that may have clones attached to them\n    oldClones.forEach(clone => {\n        const marker = clone.marker;\n        if (marker) {\n            paintRemoves.push(marker);\n        }\n        const dom = clone.domElement;\n        if (!dom) {\n            return;\n        }\n        paintRemoves.push(dom);\n    });\n}\n","import { getChildTagsToDestroy } from './getChildTagsToDestroy.function.js';\nimport { smartRemoveKids } from './smartRemoveKids.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function destroySupport(support) {\n    const global = support.subject.global;\n    global.deleted = true;\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n    const promises = [];\n    const context = global.context;\n    getChildTagsToDestroy(context);\n    if (global.destroy$) {\n        runBeforeDestroy(support);\n    }\n    smartRemoveKids(support, promises);\n    return promises;\n}\n","// taggedjs-no-compile\nimport { paintAppends, paintInsertBefores, paintRemoves } from '../paint.function.js';\nimport { processFirstSubjectValue } from './processFirstSubjectValue.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { updateExistingValue } from './updateExistingValue.function.js';\nimport { processNewArrayValue } from './processNewValue.function.js';\nimport { destroySupport } from '../destroySupport.function.js';\nexport function processTagArray(subject, value, // arry of Tag classes\nownerSupport, counts, appendTo) {\n    if (!subject.lastArray) {\n        subject.lastArray = [];\n    }\n    const lastArray = subject.lastArray;\n    let runtimeInsertBefore = subject.placeholder;\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    const filteredLast = [];\n    for (let index = 0; index < lastArray.length; ++index) {\n        const item = lastArray[index];\n        const newRemoved = reviewLastArrayItem(item, value, index, lastArray, removed, counts);\n        if (newRemoved === 0) {\n            filteredLast.push(item);\n            continue;\n        }\n        removed = removed + newRemoved;\n        // do the same number again because it was a mid delete\n        if (newRemoved === 2) {\n            index = index - 1;\n        }\n    }\n    subject.lastArray = filteredLast;\n    // const eAppendTo = existed ? undefined : appendTo\n    const eAppendTo = appendTo; // existed ? undefined : appendTo\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const newSubject = reviewArrayItem(value, index, filteredLast, ownerSupport, runtimeInsertBefore, counts, eAppendTo);\n        runtimeInsertBefore = newSubject.placeholder;\n    }\n}\nfunction reviewArrayItem(array, index, lastArray, ownerSupport, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const item = array[index];\n    const previous = lastArray[index];\n    if (previous) {\n        return reviewPreviousArrayItem(item, previous, lastArray, ownerSupport, index, runtimeInsertBefore, counts, appendTo);\n    }\n    return processAddTagArrayItem(item, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n}\nfunction reviewPreviousArrayItem(value, itemSubject, lastArray, ownerSupport, index, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const couldBeSame = lastArray.length > index;\n    if (couldBeSame) {\n        updateExistingValue(itemSubject, value, ownerSupport);\n        return itemSubject;\n    }\n    const result = processAddTagArrayItem(value, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n    return result;\n}\nfunction processAddTagArrayItem(value, before, // used during updates\nownerSupport, counts, lastArray, appendTo) {\n    const itemSubject = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement: false, // TODO: we need to pass down depth so we can answer this truthfully\n    };\n    counts.added = counts.added + 1; // index\n    const subPlaceholder = document.createTextNode('');\n    itemSubject.placeholder = subPlaceholder;\n    if (!appendTo) {\n        paintInsertBefores.push({\n            element: subPlaceholder,\n            relative: before,\n        });\n    }\n    processNewArrayValue(value, ownerSupport, itemSubject);\n    processFirstSubjectValue(value, itemSubject, ownerSupport, counts, `rvp_${lastArray.length}_array`, appendTo);\n    // after processing\n    itemSubject.value = value;\n    // Added to previous array\n    lastArray.push(itemSubject);\n    if (appendTo) {\n        paintAppends.push({\n            element: subPlaceholder,\n            relative: appendTo,\n        });\n    }\n    return itemSubject;\n}\nexport function destroyArrayItem(item, counts) {\n    const global = item.global;\n    if (global) {\n        const support = global.oldest;\n        global.deleted = true;\n        destroySupport(support);\n        global.deleted = true;\n    }\n    else {\n        const element = item.simpleValueElm;\n        delete item.simpleValueElm;\n        paintRemoves.push(element);\n    }\n    ++counts.removed;\n}\nfunction reviewLastArrayItem(_subTag, // used to compare arrays\nvalue, index, lastArray, removed, counts) {\n    const newLength = value.length - 1;\n    const at = index - removed;\n    const lessLength = at < 0 || newLength < at;\n    const prev = lastArray[index];\n    if (lessLength) {\n        destroyArrayItem(prev, counts);\n        ++removed;\n        return 1;\n    }\n    if (lastArray[index].value.arrayValue !== value[index].arrayValue) {\n        destroyArrayItem(prev, counts);\n        lastArray.splice(index, 1);\n        ++removed;\n        return 2;\n    }\n    /*\n    const nowValue = getArrayValueByItem(subTag)\n    const lastArrayValue = lastArray.array[index].arrayValue\n    */\n    // check for html``.key()\n    /*\n    const keySet = 'arrayValue' in tag\n    if (!keySet) {\n      const details = {\n        array: value.map(item => item.values || item),\n        vdom: (tag as any)?.support.templater.tag.dom,\n        tag,\n        lastArray: lastArray.array[index]\n      }\n      const message = 'Found Tag in array without key value, during array update. Be sure to use \"html`...`.key(unique)\" OR import TaggedJs \"key\" \"key(unique).html = CustomTag(props)\"'\n      console.error(message, details)\n      const err = new ArrayNoKeyError(message, details)\n      throw err\n    }\n    */\n    /*\n    const destroyItem = nowValue !== lastArrayValue\n    if(destroyItem) {\n      destroyArrayItem(lastArray.array, index, counts)\n      ++removed\n      return 1\n    }\n    */\n    return 0;\n}\n/*\nfunction getArrayValueByItem(item: any) {\n  return item?.arrayValue || item\n}\n*/\n","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nexport function isLikeTags(support0, // new\nsupport1) {\n    const templater0 = support0.templater;\n    const templater1 = support1.templater;\n    const tag0 = templater0?.tag || support0;\n    const tag1 = templater1.tag; // || (support1 as any)\n    if (templater0?.tagJsType === ValueTypes.stateRender) {\n        return templater0.dom === templater1.dom;\n    }\n    switch (tag0.tagJsType) {\n        case ValueTypes.dom: {\n            if (tag1?.tagJsType !== ValueTypes.dom) {\n                return false; // tag0 is not even same type\n            }\n            return isLikeDomTags(tag0, tag1);\n        }\n        case ValueTypes.tag: {\n            const like = isLikeStringTags(tag0, tag1, support0, support1);\n            return like;\n        }\n    }\n    throw new Error(`unknown tagJsType of ${tag0.tagJsType}`);\n}\n// used when compiler was used\nexport function isLikeDomTags(tag0, tag1) {\n    const domMeta0 = tag0.dom;\n    const domMeta1 = tag1.dom;\n    return domMeta0 === domMeta1;\n}\n// used for no compiling\nfunction isLikeStringTags(tag0, tag1, support0, // new\nsupport1) {\n    const strings0 = tag0.strings;\n    const strings1 = tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index].length === string.length // performance, just compare length of strings // TODO: Document this\n    // strings1[index] === string // slower\n    );\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = support0.templater.values || tag0.values;\n    const values1 = support1.templater.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = typeof (value) === BasicTypes.function && typeof (compareTo) === BasicTypes.function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n","// Functions in here are attached as ContextItem.checkValueChange\nimport { processUpdateRegularValue } from './update/processRegularValue.function.js';\nimport { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { destroyArrayItem } from './update/processTagArray.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { isArray, isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { paintRemoves } from './paint.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function checkArrayValueChange(newValue, subject) {\n    // no longer an array?\n    if (!isArray(newValue)) {\n        const lastArray = subject.lastArray;\n        destroyArray(subject, lastArray);\n        return 9; // 'array'\n    }\n    return false;\n}\nexport function destroyArray(subject, lastArray) {\n    const counts = { added: 0, removed: 0 };\n    for (let index = 0; index < lastArray.length; ++index) {\n        destroyArrayItem(lastArray[index], counts);\n    }\n    delete subject.lastArray;\n}\nexport function checkSimpleValueChange(newValue, subject) {\n    const isBadValue = newValue === null || newValue === undefined;\n    if (isBadValue || !(typeof (newValue) === BasicTypes.object)) {\n        // This will cause all other values to render\n        processUpdateRegularValue(newValue, subject);\n        return -1; // no need to destroy, just update display\n    }\n    const elm = subject.simpleValueElm;\n    delete subject.simpleValueElm;\n    paintRemoves.push(elm);\n    return 6; // 'changed-simple-value'\n}\nexport function checkTagValueChange(newValue, subject) {\n    const global = subject.global;\n    const lastSupport = global?.newest;\n    const isValueTag = isStaticTag(newValue);\n    const newTag = newValue;\n    if (isValueTag) {\n        // its a different tag now\n        const likeTags = isLikeTags(newTag, lastSupport);\n        if (!likeTags) {\n            destroySupport(lastSupport);\n            getNewGlobal(subject);\n            return 7; // 'tag-swap'\n        }\n        return false;\n    }\n    const isTag = newValue?.tagJsType;\n    if (isTag) {\n        return false; // its still a tag component\n    }\n    // destroy old component, value is not a component\n    destroySupport(lastSupport);\n    delete subject.global;\n    subject.renderCount = 0;\n    return 8; // 'no-longer-tag'\n}\n","import { getTemplaterResult } from '../TemplaterResult.class.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nimport { PropWatches } from '../tag.js';\nexport function oneRenderToSupport(wrapper, subject, ownerSupport) {\n    const templater = getTemplaterResult(PropWatches.DEEP);\n    templater.tagJsType = wrapper.tagJsType;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    function wrap() {\n        templater.tag = tag || (wrapper());\n        return support;\n    }\n    templater.wrapper = wrap;\n    wrap.tagJsType = wrapper.tagJsType;\n    wrap.original = wrapper.original || wrapper;\n    return support;\n}\n","import { StateMismatchError } from '../errors.js';\nexport function checkStateMismatch(config, support) {\n    const rearray = config.rearray;\n    if (rearray.length && rearray.length !== config.stateArray.length) {\n        throwStateMismatch(rearray, support, config);\n    }\n}\nconst hint = 'State tracking requires same number of state calls on every render. This error typically occurs when a state call is only reachable behind a condition. Also, wrapping tags that have state, with tag(), often helps when tag is only reachable by a condition.';\nfunction throwStateMismatch(rearray, support, config) {\n    const message = `Saved states between renders are inconsistent. Expected ${rearray.length} states got ${config.stateArray.length}.`;\n    const wrapper = support.templater?.wrapper;\n    let tagFunction = wrapper;\n    if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    else if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    const details = {\n        oldStates: config.stateArray,\n        newStates: config.rearray,\n        tagFunction,\n        templater: support.templater,\n    };\n    const error = new StateMismatchError(message, details);\n    console.error(hint, details);\n    throw error;\n}\n","import { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkStateMismatch } from './checkStateMismatch.function.js';\n/** Compares states of previous renders\n * @property support - The workflow that supports a single tag\n * @property ownerSupport - undefined when \"support\" is the app element\n */\nexport function runAfterRender(support, ownerSupport) {\n    const subject = support.subject;\n    ++subject.renderCount;\n    const config = setUseMemory.stateConfig;\n    delete config.support;\n    support.state = config.stateArray;\n    // support.states = config.states\n    setUseMemory.tagClosed$.next(ownerSupport);\n    checkStateMismatch(config, support);\n    subject.global.newest = support;\n}\n","import { executeWrap } from '../executeWrap.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { runAfterRender } from '../afterRender.function.js';\nimport { initState, reState } from '../../state/state.utils.js';\nimport { setUseMemory } from '../../state/setUseMemory.object.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function renderTagOnly(newSupport, prevSupport, // causes restate\nsubject, ownerSupport) {\n    const global = subject.global;\n    const oldRenderCount = subject.renderCount;\n    const prevState = prevSupport?.state;\n    const config = setUseMemory.stateConfig;\n    if (prevState) {\n        const prevStates = prevSupport.states;\n        config.prevSupport = prevSupport;\n        reState(newSupport, setUseMemory.stateConfig, prevState, prevStates);\n    }\n    else {\n        initState(newSupport, config);\n    }\n    const templater = newSupport.templater;\n    let reSupport;\n    // NEW TAG CREATED HERE\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = templater; // .wrapper as any// || {original: templater} as any\n        // TODO: Not sure if useSupport could be replaced by just using \"newSupport\"\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject);\n        reSupport = executeWrap(templater, result, useSupport);\n        reSupport.states = newSupport.states;\n    }\n    else {\n        // functions wrapped in tag()\n        const wrapper = templater.wrapper;\n        // calls the function returned from getTagWrap()\n        reSupport = wrapper(newSupport, subject, prevSupport);\n        reSupport.states = newSupport.states;\n    }\n    runAfterRender(reSupport, ownerSupport);\n    // When we rendered, only 1 render should have taken place OTHERWISE rendering caused another render and that is the latest instead\n    // TODO: below most likely not needed\n    if (subject.renderCount > oldRenderCount + 1) {\n        return global.newest;\n    }\n    return reSupport;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nexport function processNewSubjectTag(templater, ownerSupport, // owner\nsubject, // could be tag via result.tag\nappendTo, counts) {\n    subject.checkValueChange = checkTagValueChange;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    support.ownerSupport = ownerSupport;\n    const result = buildBeforeElement(support, counts, appendTo, undefined);\n    for (const dom of result.dom) {\n        if (dom.marker) {\n            paintAppends.push({\n                element: dom.marker,\n                relative: appendTo, // ph.parentNode as Element,\n            });\n        }\n        if (dom.domElement) {\n            paintAppends.push({\n                element: dom.domElement,\n                relative: appendTo, // ph.parentNode as Element,\n            });\n        }\n    }\n    let index = -1;\n    const length = result.subs.length - 1;\n    //++painting.locks\n    while (index++ < length) {\n        const sub = result.subs[index];\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","import { checkArrayValueChange, checkSimpleValueChange, checkTagValueChange } from '../checkDestroyPrevious.function.js';\nimport { processFirstSubjectComponent, processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { newSupportByTemplater, processTag, tagFakeTemplater } from './processTag.function.js';\nimport { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { oneRenderToSupport } from './oneRenderToSupport.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { isArray, isSubjectInstance } from '../../isInstance.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processFirstSubjectValue(value, subject, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nvalueId, appendTo) {\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            // TODO: Do we ever get in here? because dom, tag, and component are covered below\n            case ValueTypes.templater:\n                subject.checkValueChange = checkTagValueChange;\n                if (appendTo) {\n                    return processNewSubjectTag(value, ownerSupport, subject, appendTo, counts);\n                }\n                return processTag(ownerSupport, subject, counts);\n            case ValueTypes.dom:\n            case ValueTypes.tag: {\n                subject.checkValueChange = checkTagValueChange;\n                const tag = value;\n                let templater = tag.templater;\n                if (!templater) {\n                    templater = tagFakeTemplater(tag); // TODO: most likely a not needed performance hit\n                }\n                const global = getNewGlobal(subject);\n                if (appendTo) {\n                    return processNewSubjectTag(templater, ownerSupport, subject, appendTo, counts);\n                }\n                global.newest = newSupportByTemplater(templater, ownerSupport, subject);\n                subject.checkValueChange = checkTagValueChange;\n                return processTag(ownerSupport, subject, counts);\n            }\n            case ValueTypes.stateRender:\n            case ValueTypes.tagComponent: {\n                getNewGlobal(subject);\n                subject.checkValueChange = checkTagValueChange;\n                if (appendTo) {\n                    const processResult = processFirstSubjectComponent(value, subject, ownerSupport, counts, appendTo);\n                    // ++subject.global.renderCount\n                    return processResult;\n                }\n                const processResult = processReplacementComponent(value, subject, ownerSupport, counts);\n                // ++subject.global.renderCount\n                return processResult;\n            }\n            case ValueTypes.renderOnce: {\n                getNewGlobal(subject);\n                const support = oneRenderToSupport(value, subject, ownerSupport);\n                renderTagOnly(support, undefined, subject, ownerSupport);\n                const result = processNewSubjectTag(support.templater, ownerSupport, subject, appendTo, counts);\n                // ++subject.global.renderCount\n                subject.checkValueChange = checkTagValueChange;\n                return result;\n            }\n        }\n    }\n    if (isArray(value)) {\n        processTagArray(subject, value, ownerSupport, counts, appendTo);\n        subject.checkValueChange = checkArrayValueChange;\n        return;\n    }\n    if (isSubjectInstance(value)) {\n        return; // will be subscribed to for value\n    }\n    processFirstRegularValue(value, subject, subject.placeholder, valueId);\n}\nfunction processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore, // <template end interpolate /> (will be removed)\nvalueId) {\n    const castedValue = castTextValue(value);\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    clone.id = valueId;\n    subject.simpleValueElm = clone;\n    subject.checkValueChange = checkSimpleValueChange;\n}\n","import { processFirstTagResult, processReplaceTagResult } from './processTagResult.function.js';\nimport { renderWithSupport } from '../render/renderWithSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getCastedProps } from '../getTagWrap.function.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processReplacementComponent(templater, subject, ownerSupport, counts) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag\n    subject, ownerSupport);\n    processReplaceTagResult(support, counts, subject);\n    return support;\n}\nexport function processFirstSubjectComponent(templater, subject, ownerSupport, counts, appendTo) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag   \n    subject, ownerSupport);\n    processFirstTagResult(support, counts, appendTo);\n    return support;\n}\n","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { checkTagValueChange } from '../index.js';\nexport function processReplaceTagResult(support, counts, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const ph = contextItem.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, // element for append child\n    ph);\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function processFirstTagResult(support, counts, appendTo) {\n    let appendIndex = paintAppends.length;\n    const result = buildBeforeElement(support, counts, appendTo, undefined);\n    for (const dom of result.dom) {\n        if (dom.domElement) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.domElement,\n                relative: appendTo,\n            });\n        }\n        if (dom.marker) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.marker,\n                relative: appendTo,\n            });\n        }\n    }\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n","import { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\nexport function processSubUpdate(value, contextItem, support) {\n    if (value === contextItem.value) {\n        return; // same value emitted\n    }\n    updateExistingValue(contextItem, value, support);\n    if (!setUseMemory.stateConfig.support) {\n        paint();\n    }\n    return;\n}\n","import { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { processSubUpdate } from './processSubscriptionUpdate.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\nexport function subscribeToTemplate({ subject, support, counts, contextItem, appendTo, }) {\n    let onValue = function onSubValue(value) {\n        processFirstSubjectValue(value, contextItem, support, { ...counts }, `rvp_-1_${support.templater.tag?.values.length}`, syncRun ? appendTo : undefined);\n        if (!syncRun && !setUseMemory.stateConfig.support) {\n            paint();\n        }\n        // from now on just run update\n        onValue = function subscriptionUpdate(value) {\n            processSubUpdate(value, contextItem, support);\n        };\n    };\n    const callback = function subValueProcessor(value) {\n        onValue(value);\n    };\n    let syncRun = true;\n    const sub = subject.subscribe(callback);\n    contextItem.subject = subject;\n    syncRun = false;\n    const global = support.subject.global;\n    const subs = global.subscriptions = global.subscriptions || [];\n    subs.push(sub);\n}\n","import { getChildTagsToSoftDestroy } from '../getChildTagsToDestroy.function.js';\nimport { getNewGlobal } from '../update/getNewGlobal.function.js';\nimport { smartRemoveKids } from '../smartRemoveKids.function.js';\n/** used when a tag swaps content returned */\nexport function softDestroySupport(lastSupport) {\n    const global = lastSupport.subject.global;\n    const { subs, tags } = getChildTagsToSoftDestroy(global.context);\n    softDestroyOne(lastSupport);\n    for (const child of tags) {\n        softDestroyOne(child);\n    }\n    const mySubs = global.subscriptions;\n    if (mySubs) {\n        subs.forEach(sub => sub.unsubscribe());\n    }\n    getNewGlobal(lastSupport.subject);\n}\nfunction softDestroyOne(child) {\n    const subject = child.subject;\n    const global = subject.global;\n    if (global.deleted === true) {\n        return;\n    }\n    global.deleted = true; // the children are truly destroyed but the main support will be swapped\n    subject.renderCount = 0; // TODO: most likely can be removed\n    smartRemoveKids(child, []);\n}\n","import { moveProviders } from '../update/updateExistingTagComponent.function.js';\nimport { softDestroySupport } from './softDestroySupport.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** TODO: This seems to support both new and updates and should be separated? */\nexport function renderWithSupport(newSupport, lastSupport, // previous\nsubject, // events & memory\nownerSupport) {\n    const lastTemplater = lastSupport?.templater;\n    const lastTag = lastTemplater?.tag;\n    const reSupport = renderTagOnly(newSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        moveProviders(lastSupport, reSupport);\n        softDestroySupport(lastSupport);\n        const global = reSupport.subject.global;\n        global.oldest = reSupport;\n        global.newest = reSupport;\n    }\n    else if (lastSupport) {\n        const tag = lastSupport.templater.tag;\n        if (tag && subject.renderCount > 0) {\n            checkTagSoftDestroy(tag, lastSupport, lastTag);\n        }\n    }\n    const lastOwnerSupport = lastSupport?.ownerSupport;\n    reSupport.ownerSupport = (ownerSupport || lastOwnerSupport);\n    return { support: reSupport, wasLikeTags: isLikeTag };\n}\nfunction checkTagSoftDestroy(tag, lastSupport, lastTag) {\n    if (tag.tagJsType === ValueTypes.dom) {\n        const lastDom = lastTag?.dom;\n        const newDom = tag.dom;\n        if (lastDom !== newDom) {\n            softDestroySupport(lastSupport);\n        }\n        return;\n    }\n    if (lastTag) {\n        const lastStrings = lastTag.strings;\n        if (lastStrings) {\n            const oldLength = lastStrings?.length;\n            const newLength = tag.strings.length;\n            if (oldLength !== newLength) {\n                softDestroySupport(lastSupport);\n            }\n        }\n    }\n}\n","import { renderWithSupport } from './renderWithSupport.function.js';\nimport { processTag } from '../update/processTag.function.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n// TODO: This function is being called for 1st time renders WHEN renderCount === 1\nexport function renderExistingReadyTag(lastSupport, newSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const global = subject.global;\n    const { support, wasLikeTags } = renderWithSupport(newSupport, lastSupport, // renderCount <= 0 ? undefined : lastSupport\n    subject, ownerSupport);\n    if (wasLikeTags) {\n        updateSupportBy(global.oldest, support);\n        return support;\n    }\n    processTag(ownerSupport, subject, fooCounts);\n    return support;\n}\n","import callbackStateUpdate from './callbackStateUpdate.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { syncError } from './callbackMaker.function.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\n/** Wrap a function that will be called back. After the wrapper and function are called, a rendering cycle will update display */\nexport function callback(callback) {\n    const support = getSupportInCycle();\n    if (!support) {\n        throw syncError;\n    }\n    return createTrigger(support, setUseMemory.stateConfig, // setUseMemory.stateConfig.stateArray\n    callback);\n}\nexport function createTrigger(support, oldState, toCallback) {\n    const oldStateArray = oldState.stateArray;\n    const oldStates = oldState.states;\n    return function trigger(...args) {\n        const callbackMaker = support.subject.renderCount > 0;\n        if (callbackMaker) {\n            return callbackStateUpdate(support, toCallback, {\n                stateArray: oldStateArray,\n                states: oldStates,\n            }, ...args);\n        }\n        // we are in sync with rendering, just run callback naturally\n        return toCallback(...args);\n    };\n}\n","import { renderSupport } from '../tag/render/renderSupport.function.js';\nimport { syncStates } from './syncStates.function.js';\nimport { isPromise } from '../isInstance.js';\nexport default function callbackStateUpdate(support, callback, oldState, // State,\n...args) {\n    const global = support.subject.global;\n    support = global.newest;\n    const state = support.state;\n    // ensure that the oldest has the latest values first\n    syncStates(state, oldState.stateArray, support.states, oldState.states);\n    // run the callback\n    const maybePromise = callback(...args);\n    // send the oldest state changes into the newest\n    syncStates(oldState.stateArray, state, oldState.states, support.states);\n    renderSupport(support);\n    if (isPromise(maybePromise)) {\n        maybePromise.finally(() => {\n            // send the oldest state changes into the newest\n            syncStates(oldState.stateArray, state, oldState.states, support.states);\n            renderSupport(support);\n        });\n    }\n    // return undefined as T\n    return maybePromise;\n}\n","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { createTrigger } from './callback.function.js';\nexport const callbackMaker = () => {\n    const support = getSupportInCycle();\n    // callback as typeof innerCallback\n    if (!support) {\n        throw syncError;\n    }\n    const oldState = setUseMemory.stateConfig; // .stateArray\n    // oldState.support = support // TODO: should not be need and already set\n    return function triggerMaker(callback) {\n        return createTrigger(support, oldState, callback);\n    };\n};\nexport const syncError = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n","import { getSupportInCycle } from \"../tag/getSupportInCycle.function.js\";\nimport { state } from \"./state.function.js\";\nexport function onDestroy(callback) {\n    state(function stateDestroy() {\n        const support = getSupportInCycle();\n        const global = support.subject.global;\n        global.destroy$.toCallback(callback);\n    });\n}\n","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function states(setter) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.statesHandler(setter);\n}\n","import { setUseMemory } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUseMemory.stateConfig.support;\n}\n","// taggedjs-no-compile\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\nexport const variablePrefix = ':tagvar';\nexport const variableSuffix = ':';\nexport function getStringTag(strings, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        tagJsType: ValueTypes.tag,\n        strings,\n        key(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: function html(strings, values) {\n            tag.children = { strings, values };\n            return tag;\n        }\n    };\n    return tag;\n}\nexport function getDomTag(dom, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        dom,\n        tagJsType: ValueTypes.dom,\n        key: function keyFun(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: {\n            dom: function dom(dom, // ObjectChildren\n            values) {\n                tag.children = { dom: dom, values };\n                return tag;\n            }\n        }\n    };\n    return tag;\n}\n","import { variablePrefix, variableSuffix } from \"../../tag/Tag.class.js\";\nimport { isSpecialAttr } from \"../attributes/isSpecialAttribute.function.js\";\nconst ondoubleclick = 'ondoubleclick';\nconst fragFindAny = /(:tagvar\\d+:)/;\nconst fragReplacer = /(^:tagvar\\d+:|:tagvar\\d+:$)/g;\nconst safeVar = '__safeTagVar';\nconst regexAttr = /([:_a-zA-Z0-9\\-.]+)\\s*(?:=\\s*\"([^\"]*)\"|=\\s*(\\S+))?/g;\nconst regexTagOrg = /<\\/?([a-zA-Z0-9-]+)((?:\\s+[a-zA-Z_:][\\w:.-]*(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+))?)+\\s*|\\s*)\\/?>/g;\n/** Run only during compile step OR when no compile step occurred at runtime */\nexport function htmlInterpolationToDomMeta(strings, values) {\n    htmlInterpolationToPlaceholders(strings, values);\n    // Parse the modified fragments\n    const htmlString = htmlInterpolationToPlaceholders(strings, values).join('');\n    const domMeta = parseHTML(htmlString);\n    return domMeta;\n}\nexport function htmlInterpolationToPlaceholders(strings, values) {\n    // Sanitize placeholders in the fragments\n    const sanitizedFragments = sanitizePlaceholders(strings);\n    // Add placeholders to the fragments\n    return addPlaceholders(sanitizedFragments, values);\n}\nfunction sanitizePlaceholders(fragments) {\n    return fragments.map(fragment => fragment.replace(fragReplacer, (match, index) => safeVar + index));\n}\nfunction addPlaceholders(strings, values) {\n    const results = strings.map((fragment, index) => {\n        if (index < values.length) {\n            return fragment + variablePrefix + index + variableSuffix;\n        }\n        return fragment;\n    });\n    balanceArrayByArrays(results, strings, values);\n    return results;\n}\nexport function parseHTML(html) {\n    const valuePositions = [];\n    const elements = [];\n    const stack = [];\n    let currentElement = null;\n    let valueIndex = -1;\n    let position = 0;\n    const regexTag = new RegExp(regexTagOrg, 'g');\n    html = preprocessTagsInComments(html);\n    while (position < html.length) {\n        const tagMatch = regexTag.exec(html);\n        if (!tagMatch) {\n            break;\n        }\n        const [fullMatch, tagName, attrString] = tagMatch;\n        const isClosingTag = fullMatch.startsWith('</');\n        const isSelfClosing = fullMatch.endsWith('/>');\n        if (position < tagMatch.index) {\n            const textContent = html.slice(position, tagMatch.index);\n            if (textContent.trim()) {\n                const textVarMatches = splitByTagVar(textContent);\n                textVarMatches.forEach(textContent => {\n                    if (textContent.startsWith(variablePrefix)) {\n                        textContent = variablePrefix + (++valueIndex) + variableSuffix;\n                    }\n                    pushTextTo(currentElement, elements, textContent);\n                });\n            }\n        }\n        position = tagMatch.index + fullMatch.length;\n        if (isClosingTag) {\n            currentElement = stack.pop() || null;\n            continue;\n        }\n        const attributes = [];\n        let attrMatch;\n        while ((attrMatch = regexAttr.exec(attrString)) !== null) {\n            const attrName = attrMatch[1] || attrMatch[3] || attrMatch[5];\n            const attrChoice = attrMatch[2] || attrMatch[4] || attrMatch[6];\n            let attrValue = attrChoice;\n            if (attrName === undefined) {\n                continue;\n            }\n            const notEmpty = attrMatch[2] !== '';\n            const noValue = attrValue === undefined && notEmpty;\n            const lowerName = attrName.toLowerCase();\n            const fixedName = lowerName.startsWith('on') ? cleanEventName(lowerName) : lowerName;\n            if (noValue) {\n                const standAloneVar = attrName.slice(0, variablePrefix.length) === variablePrefix;\n                if (standAloneVar) {\n                    const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                    valuePositions.push(['at', valueName]);\n                    attributes.push([valueName]); // the name itself is dynamic\n                    continue;\n                }\n                const startMatched = attrMatch[0].startsWith(attrName);\n                const standAloneAttr = startMatched && attrMatch[0].slice(attrName.length, attrMatch[0].length).search(/\\s+$/) >= 0;\n                if (standAloneAttr) {\n                    attributes.push([fixedName]);\n                    continue;\n                }\n                const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                attrValue = valueName;\n            }\n            if (!notEmpty) {\n                attrValue = attrMatch[2];\n            }\n            const attrSet = [fixedName, attrValue];\n            const isSpecial = isSpecialAttr(lowerName); // check original name for \"oninit\" or \"autofocus\"\n            if (isSpecial) {\n                attrSet.push(isSpecial);\n            }\n            attributes.push(attrSet);\n        }\n        const element = {\n            nn: tagName, // nodeName\n        };\n        if (attributes.length) {\n            element.at = attributes;\n        }\n        if (currentElement) {\n            if (!currentElement.ch) {\n                currentElement.ch = [];\n            }\n            currentElement.ch.push(element);\n        }\n        else {\n            elements.push(element);\n        }\n        if (!isSelfClosing) {\n            stack.push(currentElement);\n            currentElement = element;\n        }\n    }\n    if (position < html.length) {\n        const textContent = html.slice(position);\n        if (textContent.trim()) {\n            const textVarMatches = splitByTagVar(textContent);\n            textVarMatches.forEach(textContent => {\n                if (textContent.startsWith(variablePrefix)) {\n                    ++valueIndex;\n                }\n                return pushTextTo(currentElement, elements, textContent);\n            });\n        }\n    }\n    return elements;\n}\nexport function balanceArrayByArrays(results, strings, values) {\n    const diff = values.length - strings.length;\n    if (diff > 0) {\n        for (let x = diff; x > 0; --x) {\n            results.push(variablePrefix + (strings.length + x - 1) + variableSuffix);\n        }\n    }\n}\nfunction splitByTagVar(inputString) {\n    // Split the string using the regular expression, keep delimiters in the output\n    const parts = inputString.split(fragFindAny);\n    // Filter out any empty strings from the results\n    const filteredParts = parts.filter(part => part !== '');\n    return filteredParts;\n}\nfunction pushTo(currentElement, elements, textNode) {\n    if (currentElement) {\n        if (!currentElement.ch) {\n            currentElement.ch = [];\n        }\n        currentElement.ch.push(textNode);\n    }\n    else {\n        elements.push(textNode);\n    }\n}\nfunction pushTextTo(currentElement, elements, textContent) {\n    const textNode = {\n        nn: 'text', // nodeName\n        tc: postprocessTagsInComments(textContent), // textContent\n    };\n    pushTo(currentElement, elements, textNode);\n}\nconst removeCommentRegX = new RegExp('(<!--[\\\\s\\\\S]*?-->)', 'g');\nfunction preprocessTagsInComments(html) {\n    // Use a regex to find all HTML comments\n    return html.replace(removeCommentRegX, function (match) {\n        // For each comment found, replace < and > inside it\n        return match.replace(/\\[l t\\]/g, '[l&nbsp;t]').replace(/\\[g t\\]/g, '[g&nbsp;t]').replace(/</g, '[l t]').replace(/>/g, '[g t]');\n    });\n}\nfunction postprocessTagsInComments(html) {\n    // Use a regex to find all segments that look like processed comments\n    return html.replace(/(\\[l t\\]!--[\\s\\S]*?--\\[g t\\])/g, function (match) {\n        // For each processed comment found, replace *lt* and *gt* back to < and >\n        return match.replace(/\\[l t\\]/g, '<').replace(/\\[g t\\]/g, '>').replace(/\\[l&nbsp;t\\]/g, '[l t]').replace(/\\[g&nbsp;t\\]/g, '[g t]');\n    });\n}\nfunction cleanEventName(eventName) {\n    if (eventName.startsWith('on')) {\n        const couldByDblClick = eventName.length === ondoubleclick.length && eventName === ondoubleclick;\n        if (couldByDblClick) {\n            return 'dblclick';\n        }\n        return eventName.slice(2, eventName.length);\n    }\n    return eventName;\n}\n","// taggedjs-no-compile\nimport { variableSuffix, variablePrefix } from \"../../tag/Tag.class.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nconst placeholderRegex = new RegExp(variablePrefix + '(\\\\d+)' + variableSuffix, 'g');\nconst ch = 'ch'; // short for children\nexport function replacePlaceholders(dom, valueCount, valuePositions = [], currentTail = []) {\n    const elements = dom;\n    for (let i = 0; i < elements.length; i++) {\n        const loopTail = [...currentTail, i];\n        const element = elements[i];\n        if (element.at) {\n            const attrs = element.at;\n            element.at = processAttributes(attrs, valueCount);\n        }\n        if (element.ch) {\n            const children = element.ch;\n            const innerLoopTail = [...loopTail, ch];\n            element.ch = replacePlaceholders(children, valueCount, valuePositions, innerLoopTail);\n        }\n        i = examineChild(element, valueCount, elements, i);\n    }\n    return elements;\n}\nfunction examineChild(child, valueCount, children, index) {\n    if (child.nn !== 'text') {\n        return index;\n    }\n    const textChild = child;\n    let textContent = textChild.tc;\n    if (typeof textContent !== ImmutableTypes.string) {\n        return index;\n    }\n    let match;\n    while ((match = placeholderRegex.exec(textContent)) !== null) {\n        const secondMatch = match[1];\n        const wIndex = parseInt(secondMatch, 10);\n        const examine = !isNaN(wIndex) && wIndex < valueCount;\n        if (examine) {\n            const varContent = variablePrefix + wIndex + variableSuffix;\n            const after = textContent.slice(match.index + varContent.length);\n            children.splice(index, 1, ...[{\n                    nn: 'text',\n                    v: wIndex\n                }]);\n            textContent = after;\n            placeholderRegex.lastIndex = 0; // Reset regex index due to split\n        }\n    }\n    textChild.tc = textContent;\n    return index;\n}\nfunction processAttributes(attributes, valueCount) {\n    return attributes.map(attrSet => {\n        const [key, value, isSpecial] = attrSet;\n        if (key.startsWith(variablePrefix)) {\n            const index = parseInt(key.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [{ tagJsVar: index }];\n            }\n        }\n        if (typeof value === ImmutableTypes.string && value.startsWith(variablePrefix)) {\n            const index = parseInt(value.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [key, { tagJsVar: index }, isSpecial];\n            }\n        }\n        return attrSet;\n    });\n}\n","import { variableSuffix, variablePrefix } from \"../../tag/Tag.class.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nexport const safeVar = '__safeTagVar';\nexport function restorePlaceholders(elements) {\n    elements.forEach(traverseAndRestore);\n}\nconst safeReplacer = /__safeTagVar(\\d+)/g;\nfunction traverseAndRestore(element) {\n    if (element.at) {\n        element.at = element.at ? element.at.map(attr => {\n            if (attr.length === 1) {\n                return attr;\n            }\n            const [, value] = attr;\n            if (typeof value === ImmutableTypes.string && value.startsWith(safeVar)) {\n                const index = parseInt(value.replace(safeVar, ''), 10);\n                attr[1] = variablePrefix + index + variableSuffix;\n            }\n            return attr;\n        }) : [];\n    }\n    if (element.ch) {\n        const children = element.ch;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child.nn === 'text') {\n                if (typeof child.tc !== ImmutableTypes.string) {\n                    return;\n                }\n                child.tc = child.tc.replace(safeReplacer, (_match, index) => variablePrefix + index + variableSuffix);\n            }\n            traverseAndRestore(child);\n        }\n        // Remove empty children array\n        if (children.length === 0) {\n            delete element.ch;\n        }\n    }\n}\n","// taggedjs-no-compile\nimport { htmlInterpolationToDomMeta } from '../interpolations/optimizers/htmlInterpolationToDomMeta.function.js';\nimport { replacePlaceholders } from '../interpolations/optimizers/replacePlaceholders.function.js';\nimport { restorePlaceholders } from '../interpolations/optimizers/restorePlaceholders.function.js';\nimport { isLastRunMatched } from './isLastRunMatched.function.js';\nimport { getStringsId } from './getStringsId.function.js';\nconst lastRuns = {};\n/** Converts strings & values into dom meta */\nexport function getDomMeta(strings, values) {\n    const stringId = getStringsId(strings);\n    const lastRun = lastRuns[stringId];\n    const matches = lastRun && isLastRunMatched(strings, values, lastRun);\n    if (matches) {\n        return lastRun.domMetaMap;\n    }\n    const domMeta = htmlInterpolationToDomMeta(strings, values);\n    const map = replacePlaceholders(domMeta, values.length);\n    // Restore any sanitized placeholders in text nodes\n    restorePlaceholders(map);\n    const template = {\n        interpolation: undefined,\n        string: undefined,\n        strings,\n        values,\n        domMetaMap: map,\n    };\n    lastRuns[stringId] = template;\n    return map;\n}\n","export function getStringsId(strings) {\n    const array = strings.map(x => x.length);\n    array.push(strings.length);\n    return Number(array.join(''));\n}\n","export function isLastRunMatched(strings, values, lastRun) {\n    if (lastRun) {\n        if (lastRun.strings.length === strings.length) {\n            const stringsMatch = lastRun.strings.every((string, index) => \n            // string.length === strings[index].length\n            string === strings[index]);\n            if (stringsMatch && lastRun.values.length === values.length) {\n                return true; // performance savings using the last time this component was rendered\n            }\n        }\n    }\n    return false;\n}\n","import { getStringTag, getDomTag } from './Tag.class.js';\nimport { PropWatches } from './tag.js';\nimport { getTemplaterResult } from './TemplaterResult.class.js';\nexport function html(strings, ...values) {\n    const stringTag = getStringTag(strings, values);\n    const templater = getTemplaterResult(PropWatches.NONE);\n    templater.tag = stringTag;\n    stringTag.templater = templater;\n    return stringTag;\n}\nhtml.dom = function (dom, ...values) {\n    return getDomTag(dom, values);\n};\n","import { getBaseSupport, upgradeBaseToSupport } from './Support.class.js';\nimport { subscribeToTemplate } from '../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from './buildBeforeElement.function.js';\nimport { tags } from './tag.utils.js';\nimport { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { checkTagValueChange, PropWatches } from './index.js';\nimport { runAfterRender } from './afterRender.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { paint, painting } from './paint.function.js';\nimport { initState, reState } from '../state/state.utils.js';\nimport { isTagComponent } from '../isInstance.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nconst appElements = [];\n/**\n *\n * @param app taggedjs tag\n * @param element HTMLElement\n * @param props object\n * @returns\n */\nexport function tagElement(app, element, props) {\n    const appElmIndex = appElements.findIndex(appElm => appElm.element === element);\n    if (appElmIndex >= 0) {\n        destroySupport(appElements[appElmIndex].support);\n        appElements.splice(appElmIndex, 1);\n        // an element already had an app on it\n        console.warn('Found and destroyed app element already rendered to element', { element });\n    }\n    // Create the app which returns [props, runOneTimeFunction]\n    let templater = (() => templater2(props));\n    templater.propWatch = PropWatches.NONE;\n    templater.tagJsType = ValueTypes.stateRender;\n    // todo: props should be an array\n    templater.props = [props];\n    templater.isApp = true;\n    // create observable the app lives on\n    const subject = getNewSubject(templater, element);\n    const global = subject.global;\n    initState(global.newest, setUseMemory.stateConfig);\n    let templater2 = app(props);\n    const isAppFunction = typeof templater2 == BasicTypes.function;\n    if (!isAppFunction) {\n        if (!isTagComponent(templater2)) {\n            templater.tag = templater2;\n            templater2 = app;\n        }\n        else {\n            global.newest.propsConfig = {\n                latest: [props],\n                castProps: [props],\n            };\n            templater.propWatch = templater2.propWatch;\n            templater.tagJsType = templater2.tagJsType;\n            templater.wrapper = templater2.wrapper;\n            templater = templater2;\n        }\n    }\n    const placeholder = document.createTextNode('');\n    tags.push((templater.wrapper || { original: templater }));\n    const support = runWrapper(templater, placeholder, element, subject, isAppFunction);\n    global.isApp = true;\n    if (isAppFunction) {\n        templater2.tag = support.templater.tag;\n    }\n    // enables hmr destroy so it can control entire app\n    ;\n    element.destroy = function () {\n        const events = global.events;\n        for (const eventName in events) {\n            const callback = events[eventName];\n            element.removeEventListener(eventName, callback);\n        }\n        global.events = {};\n        const toAwait = destroySupport(support); // never return anything here\n        paint();\n        return toAwait;\n    };\n    ++painting.locks;\n    const result = buildBeforeElement(support, { added: 0, removed: 0 }, element, undefined);\n    global.oldest = support;\n    global.newest = support;\n    let setUse = templater.setUse;\n    if (templater.tagJsType !== ValueTypes.stateRender) {\n        const wrap = app;\n        const original = wrap.original;\n        setUse = original.setUse;\n        original.isApp = true;\n    }\n    ;\n    element.setUse = setUse;\n    element.ValueTypes = ValueTypes;\n    appElements.push({ element, support });\n    const newFragment = document.createDocumentFragment();\n    newFragment.appendChild(placeholder);\n    for (const domItem of result.dom) {\n        putOneDomDown(domItem, newFragment);\n    }\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    --painting.locks;\n    paint();\n    element.appendChild(newFragment);\n    return {\n        support,\n        tags,\n        ValueTypes,\n    };\n}\nfunction getNewSubject(templater, appElement) {\n    const subject = {\n        value: templater,\n        checkValueChange: checkTagValueChange,\n        withinOwnerElement: false, // i am the highest owner\n        renderCount: 0,\n        global: undefined, // gets set below in getNewGlobal()\n    };\n    const global = getNewGlobal(subject);\n    global.events = {};\n    loadNewBaseSupport(templater, subject, appElement);\n    return subject;\n}\nfunction loadNewBaseSupport(templater, subject, appElement) {\n    const global = subject.global;\n    const newSupport = getBaseSupport(templater, subject);\n    upgradeBaseToSupport(templater, newSupport, newSupport);\n    newSupport.appElement = appElement;\n    global.oldest = global.oldest || newSupport;\n    global.newest = newSupport;\n    return newSupport;\n}\nexport function runWrapper(templater, placeholder, appElement, subject, isAppFunction) {\n    subject.placeholder = placeholder;\n    const global = subject.global;\n    const useSupport = global.newest;\n    const oldest = global.oldest;\n    const isFirstRender = useSupport === oldest;\n    if (!isFirstRender) {\n        reState(useSupport, setUseMemory.stateConfig, oldest.state, oldest.states);\n    }\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = (templater.wrapper || { original: templater });\n        if (!isAppFunction) {\n            const newSupport = loadNewBaseSupport(templater, subject, appElement);\n            runAfterRender(newSupport);\n            return newSupport;\n        }\n        const nowSupport = executeWrap(templater, result, useSupport);\n        runAfterRender(nowSupport);\n        return nowSupport;\n    }\n    // Call the apps function for our tag templater\n    const wrapper = templater.wrapper;\n    const nowSupport = wrapper(useSupport, subject);\n    runAfterRender(nowSupport);\n    return nowSupport;\n}\nfunction putOneDomDown(dom, newFragment) {\n    if (dom.domElement) {\n        newFragment.appendChild(dom.domElement);\n    }\n    if (dom.marker) {\n        newFragment.appendChild(dom.marker);\n    }\n}\n","export * from './tag/index.js';\nexport * from './errors.js';\nexport * from './isInstance.js';\nexport * from './state/index.js';\nexport { states } from './state/states.function.js';\nexport * from './subject/index.js';\nexport * from './interpolations/index.js';\nexport * from './tag/Support.class.js';\nexport * from './interpolations/attributes/howToSetInputValue.function.js';\nexport * from './interpolations/attributes/ElementTargetEvent.interface.js';\nimport { renderTagOnly } from './tag/render/renderTagOnly.function.js';\nimport { renderSupport } from './tag/render/renderSupport.function.js';\nimport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nexport { key } from './tag/key.js';\nimport { tagElement } from './tag/tagElement.js';\nimport { paint } from './tag/paint.function.js';\nexport const hmr = {\n    tagElement, renderWithSupport, renderSupport,\n    renderTagOnly, paint,\n};\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getNewGlobal","subject","renderCount","global","RouteQuery","_name","empty","ImmutableTypes","BasicTypes","ValueTypes","tag","dom","templater","tagComponent","tagArray","tagJsSubject","renderOnce","stateRender","version","Date","now","signal","initialValue","value","subscribers","Set","newValue","forEach","callback","subscribe","add","unsub","delete","unsubscribe","isSimpleType","string","number","boolean","isStaticTag","tagJsType","isTagComponent","tagType","isSubjectInstance","isObject","function","isPromise","isFunction","then","object","isArray","Array","combineLatest","subjects","output","Subject","subscribeWith","valuesSeen","values","setValue","x","index","length","item","subscription","clones","shift","subscriptions","map","getSubscription","countSubject","globalSubCount$","next","findIndex","sub","splice","removeSubFromArray","valSub","push","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","handler","methodResponse","setHandler","onSubscription","isSubject","constructor","this","orgCallback","lastValue","emit","set","bind","subs","toPromise","Promise","res","toCallback","runtimeSub","tagJsUnsub","setTimeout","pipe","operations","setMethods","all","args","arg","static","Subjective","_value","super","defineValueOn","ValueSubject","ValueSubjective","willCallback","utils","willPromise","willSubscribe","runRestate","config","setUseMemory","stateConfig","restate","rearray","stateArray","defaultValue","runFirstState","initValue","original","getStateValue","state","handlers","firstStatesHandler","setter","states","statesIndex","support","reStatesHandler","prevSupport","oldStates","lastValues","initState","letHandler","firstLetState","statesHandler","reState","prevState","prevStates","reLetState","StateEchoBack","oldState","checkValue","getCallbackValue","makeStateResult","oldValue","y","syncStates","stateFrom","stateTo","statesFrom","fromValue","oldValues","oldGetCallback","getIndex","newSetCallback","_","watch","currentValues","setupWatch","defaultFinally","init","before","final","previous","pastResult","undefined","previousValues","result","every","defineOnMethod","getWatch","attachTo","setup","oldWatch","firstSupport","getSupportInCycle","method","nowSupport","setTo","newestState","oldest","oldestState","letState","letProp","getSetProp","myProp","newWatch","providers","create","constructMethod","stateDiffMemory","stateDiff","provider","oldStateCount","instance","owner","children","cm","compareTo","toString","inject","ownerSupport","ownerProviders","find","msg","name","console","warn","Error","TagError","details","message","errorCode","ArrayNoKeyError","StateMismatchError","SyncCallbackError","deepClone","maxDepth","makeDeepClone","RegExp","clone","getPrototypeOf","i","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","getTime","isArrayDeepEqual","keys1","keys","keys2","includes","isObjectDeepEqual","getTemplaterResult","propWatch","props","arrayValue","tags","castProps","newSupport","depth","checkProp","alterProp","already","mem","wrap","toCall","callWith","newest","noCycle","callbackResult","run","locked","isInline","isInlineHtml","renderInlineHtml","renderExistingReadyTag","safeRenderSupport","tagClosed$","callbackPropOwner","assign","getPropWrap","deepCompareDepth","isSkipPropValue","subValue","afterCheckProp","checkArrayProp","getset","getOwnPropertyDescriptor","checkObjectProp","originalValue","newProp","destroy$","executeWrap","useSupport","castedProps","originalFunction","cloneValueArray","cloneTagJsValue","getBaseSupport","baseSupport","appSupport","blocked","upgradeBaseToSupport","propsConfig","PropWatches","IMMUTABLE","latest","SHALLOW","shallowCompareDepth","clonePropsBy","getHtmlSupport","getSupport","getCastedProps","lastSupport","DEEP","preCastedProps","lastPropsConfig","lastCastProps","syncFunctionProps","html","tagCount","parentWrap","innerTagWrap","getTagWrap","wrapper","setUse","tagIndex","tagUseFn","hasSupportChanged","newTemplater","propsChanged","pastCloneProps","hasLenChanged","hasPropLengthsChanged","NONE","shallowPropMatch","immutablePropMatch","castedPastProps","compare","subCastedProps","subCompareProps","matched","entries","compareProps","onePropCompare","deepPropChangeCompare","hasPropChanges","len","pastProp","obEntries","subItem","objectItemMatches","use","route","_routeProps","app","_routeTag","deepPropWatch","immutableProps","watchProps","oneRenderFunction","renderFunction","onDelete","compareOriginal","pastValue","paintRemoves","paintContent","setContent","paintAppends","paintInsertBefores","paintAfters","painting","locks","paint","toRemove","parentNode","removeChild","content","text","textNode","textContent","relative","appendChild","element","insertBefore","updateBeforeTemplate","lastFirstChild","document","createTextNode","castTextValue","howToSetInputValue","setAttribute","removeAttribute","specialAttribute","specialName","counts","stagger","added","target","removed","destroys","focus","select","names","split","style","classList","remove","processSpecialClass","handleProviderChanges","tagsWithProvider","memory","childTags","child","cSubject","getTagsWithProvider","getUpTags","supports","inlineHtml","isComponent","continueUp","selfPropChange","nowProps","latestProps","hasPropsToOwnerChanged","checkRenderUp","proSupports","prosWithChanges","hasChange","providersChangeCheck","renderTagUpdateArray","mapTagUpdate","noData","promiseNoData","bindSubjectCallback","subjectFunction","deleted","bindTo","component","apply","eventHandlerSupport","last","checkAfterCallbackPromise","renderCallbackSupport","afterTagCallback","runTagCallback","tagFunction","actions","processNonDynamicAttr","attrName","howToSet","isSpecial","addSupportEventListener","eventName","elm","appElement","replaceEventName","eventReg","events","listener","event","originalStopPropagation","stopPropagation","bubbleEvent","addEventListener","stopped","defaultPrevented","processAttributeFunction","newAttrValue","fun","isSpecialAttr","startsWith","specialAction","isSpecialAction","processAttribute","context","nameVar","getTagJsVar","contextItem","addOneContext","isAttr","isNameOnly","processNameOnlyAttrValue","valueVar","checkValueChange","checkSimpleValueChange","withinOwnerElement","contextValueSubject","processAttributeEmit","processNameValueAttributeAttrSubject","processTagCallbackFun","processDynamicNameValueAttribute","attrValue","isNoDisplayValue","processAttributeSubjectValue","callbackFun","special","prevFun","attrPart","tagJsVar","someDiv","createElement","attachDomElements","nodes","node","newNode","v","isNaN","attachDynamicDom","nn","tc","innerHTML","domElement","innerText","id","at","attr","ch","subVal","marker","placeholder","appendTo","processFirstSubjectValue","buildBeforeElement","domMeta","thisTag","getDomMeta","strings","loadDomMeta","getHtmlDomMeta","htmlDomMeta","processTag","checkTagValueChange","subscribeToTemplate","getFakeTemplater","newSupportByTemplater","emptyCounts","processUpdateAttrContext","updateNameOnlyAttrValue","processUpdateOneContext","updateExistingValue","updateSupportBy","olderSupport","newerSupport","tempTag","updateSupportValuesBy","processUpdateContext","fooCounts","wasDestroyed","processReplacementComponent","oldWrapper","newWrapper","isSameTag","skipComparing","isLikeTags","oldestSupport","destroySupport","swapTags","hasChanged","newProps","syncSupports","updateExistingTagComponent","prepareUpdateToComponent","valueSupport","newGlobal","handleStillTag","updateContextItemBySupport","processTagArray","castedValue","simpleValueElm","processNowRegularValue","processNewTag","runBeforeDestroy","getChildTagsToDestroy","lastArray","iSubs","iSub","getChildTagsToSoftDestroy","subTags","smartRemoveKids","allPromises","promises","destroy","maybePromise","lastPromise","smartRemoveByContext","destroyClones","processContextDestroys","destroyArray","subGlobal","oldClones","runtimeInsertBefore","filteredLast","newRemoved","reviewLastArrayItem","eAppendTo","reviewArrayItem","array","itemSubject","couldBeSame","processAddTagArrayItem","reviewPreviousArrayItem","subPlaceholder","processNewArrayValue","destroyArrayItem","_subTag","newLength","lessLength","prev","support0","support1","templater0","templater1","tag0","tag1","domMeta0","domMeta1","isLikeDomTags","like","strings0","strings1","values0","values1","valuesLengthsMatch","allVarsMatch","isLikeValueSets","isLikeStringTags","checkArrayValueChange","oldClone","processUpdateRegularValue","isTag","oneRenderToSupport","checkStateMismatch","newStates","error","hint","throwStateMismatch","runAfterRender","renderTagOnly","oldRenderCount","reSupport","processNewSubjectTag","valueId","tagFakeTemplater","processResult","newPropsConfig","renderWithSupport","appendIndex","processFirstTagResult","processFirstSubjectComponent","processFirstRegularValue","processSubUpdate","onValue","syncRun","processReplaceTagResult","newPropsArray","priorPropsArray","newArray","syncPriorPropFunction","priorProp","updateExistingArray","hasSetter","updateExistingObject","softDestroySupport","softDestroyOne","lastTemplater","lastTag","isLikeTag","lastDom","lastStrings","oldLength","checkTagSoftDestroy","pIndex","pLen","pcLen","moveProviders","lastOwnerSupport","wasLikeTags","pop","ownGlobal","syncError","createTrigger","oldStateArray","finally","callbackStateUpdate","callbackMaker","onInit","onDestroy","variablePrefix","variableSuffix","getStringTag","getDomTag","ondoubleclick","fragFindAny","fragReplacer","safeVar","regexAttr","regexTagOrg","htmlInterpolationToDomMeta","htmlInterpolationToPlaceholders","valuePositions","elements","stack","currentElement","valueIndex","position","regexTag","replace","removeCommentRegX","match","preprocessTagsInComments","tagMatch","exec","fullMatch","tagName","attrString","isClosingTag","isSelfClosing","endsWith","slice","trim","splitByTagVar","pushTextTo","attributes","attrMatch","notEmpty","noValue","lowerName","toLowerCase","fixedName","cleanEventName","valueName","search","attrSet","parseHTML","join","results","fragment","diff","balanceArrayByArrays","addPlaceholders","inputString","filter","part","pushTo","postprocessTagsInComments","placeholderRegex","replacePlaceholders","valueCount","currentTail","loopTail","attrs","processAttributes","innerLoopTail","examineChild","textChild","secondMatch","wIndex","parseInt","varContent","after","lastIndex","safeReplacer","traverseAndRestore","_match","lastRuns","stringId","Number","getStringsId","lastRun","matches","isLastRunMatched","domMetaMap","template","interpolation","stringTag","appElements","tagElement","appElmIndex","appElm","templater2","isApp","loadNewBaseSupport","getNewSubject","isAppFunction","runWrapper","removeEventListener","toAwait","newFragment","createDocumentFragment","domItem","putOneDomDown","hmr"],"sourceRoot":""}